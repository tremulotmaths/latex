%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: Z:/BAC blanc Angel/BAC_blanc_2012_STI_GE.dvi
%%CreationDate: Thu Feb 23 20:28:10 2012
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Bold Utopia-Regular Fourier-Math-BlackBoard
%%+ Fourier-Math-Letters-Italic Utopia-Italic Fourier-Math-Symbols
%%+ Fourier-Math-Extension MSAM10 Fourier-Math-Cal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "Z:/BAC blanc Angel/BAC_blanc_2012_STI_GE.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2012.02.23:2028
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 642 2012-02-09 15:00:52Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.10, 2012/02/09
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep div cvi def
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  XA Shift sub YA Shift sub moveto 
  gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
  Symbol show grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 5 moveto 0 -5 lineto stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 5 moveto 0 -5 lineto stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 5 moveto 0 -5 lineto stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
  curveticks 
   { gsave 
     x y translate rotAngle rotate 
     0 5 moveto 0 -5 lineto stroke grestore
   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
%%%%%%%%%%%%%%%%% tools %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 594 2011-10-31 18:13:18Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 622 2012-01-01 15:36:14Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.02, 2012/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 130 2009-08-27 08:55:03Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: Fourier-Math-Cal
%!PS-AdobeFont-1.0: Fourier-Math-Cal 001.004
%%CreationDate: Sat Oct 30 17:08:49 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Cal) readonly def
/FamilyName (Fourier-Math-Cal) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Cal def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 68 /D put
dup 84 /T put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {17 -274 1252 724} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F78AE14C
71FFD7441F153F65EC489AED623132F7F0AA967C97A2E6C705F58130577D30FE
722A0CE1882455CFC9882D1055821847FF648509DA92A3EE12F984224F7F1904
F3395261ABA61816ECEF5BAB29D1AB8C21A8F46620894FC69C70DAB3226A0DD9
9CE0FBDF78469648F29A99C677B9FDDC8B90082BB7C984DC5C42930D1315FD26
EA08F21054360D1981E79A6EEEF345CC1B9D85A6983CB5E833C9F3CA972A2C88
B6220FBB013192E7B2F79DC214DD0964F4DA52469E9500ED2ADABDB0D259FDAA
648EE5A0339A6EFFDFBFEB97BAC430C00291576483521C8D406E8FA4DC48C7D9
6830DF6FBF39E9153229816D94F6BDDABA2B4759E1FB3DEB54C47D66E283E45F
3BC1B675DA1D8DDC10F24EAB54445658EDD0AC1ECEA12CBA6DA205698F18056D
DB1CCC0A8D93AA9EACBE2B5093275823AB48AD9B7B1A217505522EB1C2F09074
1D7EC269452BD0896C0B1F30769BD683103F7FB568F80576476B511F5ED74F46
E2F35F191BAEAE8C91D87401A8C28DCF476FF0CB9661DE7B93284BC8E2429CEC
A964C815F35C33B2B6E795088998E0EF2CD048D1D54FEC5014B1AD8A46618748
6D1446CEACDF027D1B238173F8FB6C828F10C8FFAEA574888C851EEDF4629C38
4D71F7D93FD74FE5402D7D788D76E28ECE97DCEA9FEDC5985599B679C052E445
3E16B23D20A619B501A088D5A6578CD0F56CCED1F2039876D4FC648DB69CE3CE
9EA0C3B37F27CFD4AB23D96B5BA02308081972E9E62A93B2DC9A37AC4A63E626
F1488017A209F97B3217B85127A8AAB35BD704F9614733E2C55D3004A753ACF4
CBFC509E71BEB3AA1179EC2955F527022F86711D2DDE84BDEC96A1A8A00304CB
F09A3BCBD5965F4CD8C6953A6D7F4237F9DC2673C051FFD5023A821A00F5DB82
78A0A9111F16CA917354FCEC33A2433C53EADFC4EEDE462668675983A0B0905B
9A03CE280CB8D885849CDDFCD7CDAE6896C7ADE0A0080CF4DFCAFF9B906C93F2
0CAB7938D921D33FBC2E528D01FBDECE4E501F11155006032DF550E511645F9E
76EFE6A5838391D7BA0AA3D35B278235FFF9A707E8DA8346B2767533FF7F98ED
693455F82F098F49FF487629CFB851E1C22E111F6DB9A7F8D9F240B8532A912B
E7401ED978AD4C9E1AEC73F39A94EF9F26DBD3F5F7CEFC601FEA3FC202C8478B
0E1C44B0D90C20DAD5965B1F179889636786080986379827EEF74296B71C60A5
3BAE828D3411D613F0CCAC20A2E48B37F8BF6BCA40335B8AD99FC662E413BBF4
07B05A43A3F25581C28DAFEF81FE769A51E58F50F7274D3BF5B5F17ED9987078
628ED96F219D4D5B7DB3CE20F0E5BADA0CDFB3D519CF960E950F562929CCBD7F
566AFFCE893E241639E5BF3A097E343302429B2B1FDFAAE7D550CBC87EB9D1C2
DBC354C98A90E979852E9F23A1C271676C03C9C51F26C79F918F4FF41E77CC82
89F860368847B033D5A12CAD1DBC41219321E41EA5FA846C05226796D86CF441
5C5B7139314077FAFF599A6162779C3F18AD0908F75EE8A610A48AD0D72F5E8A
10EE7679FBD1612A97ECE636E564B6C6D9888690D7D2C56568F77049927852E3
D98614FE4F0FE7CF85FFA8B3E42F7CBEC366E60C18416D74D67B96DEF8498BCC
17589A700E889B5EDFA8FF2CD0CE83E9D540C5C7F066FEF89D9F1096586FA88B
7523BDDF5FC2AF9A36305E36C2A2DDC690256D2085B29D1D1B7997302B451F10
650B9C1473622C6324425D507ADB7CAA32BF9D5C2979D409E4D68BB6DFCA0136
83013313A6E11C75D16022627B875E2A5A006C333B078B89BFFBB595EE95F8BE
4F058CCF35A29367992DAF0D00CFC5CF8008EFBE21C38F9927527A4AAC3ACAE1
1ADA526F99362C7693B01E7ECF132C62BDF74FFF67CDF6788877A3104070C223
170140A7516D83EA6D23AD7280AED8771C6EE2F7E2D86C5661CDBEBB354AD682
F72F8BAFF44F6397A65272902A535CC1368458741B130F6E136712C538944F5C
60E652EF743F21C0C2B70A9ACDB172BAB4BC144943B3D3FE06E95C6B6F967F06
1B9FA20CF2EFB32200703EF58C425B9A7D25554C4E5EA79D4611AAEEA72B791C
22A1822E686F3F392388C1E140DA4004919027257F2186CF716C6853E839B8F4
BCC31426317D3E07E724EE34CB4317FA4F2132087F332C0BFCF3D479E5F6E9C2
3CD986609ABE036C14A9B524F6026F3551AB2242E0BA2FA4BC0C1C8020CB0D57
7C091CD1691364CA9FE2ACDB0909B1CE28E4FF92303EB0195C677A52F87F9469
502241D4200BD714CD36C3883222A1F8DFC0ED6671C6079BB21DC331041A8FDB
670BB1FFC2E7639F0F137B55B5F032F85BF385A20E91A67898560EE920663D1D
A0FD03DD181FC6D191E9ACB45B7302F77E37AFE2F6B91AB82116F3A7AE15170F
A203F839C92D8EA8B4DDB940A0BF5BBECE82994B1227B725B03120411AD1F736
B35C2924C6E664218280496883E0F68B5D730BEDD789D8168D9DCD584531553B
743426AD96076E3AE0246CC5F45A44DF59E3CC0BC04316FC1E704919F64A2C04
41B34FB4B782108D051330E917AE6C12FB3EFABCDC45334E978382B207CC288D
4D4DC12B7F45DB29DA3F121D209D015D52D55C741805DEFE0453D1FD4FF44B6E
2360AAC92FC77F3BF902039FD3F2C6343CF5AE42CD7A354200618DF2C553BFCA
79E10EDEF7AECFC6784FBB63D0DB303FEF54921063F9D5061FCF817B61527A92
D9D6D6E77888882DAF1E087E329A9912801AC5E86D6B0F6710FB1E7D55489F2E
62DA114FF1231F27082F68BBC11A60CC46B2783E2E6E9A425082B0E17F7362C9
38BBAD410419253A8CF73228275C5719A693C55E878EC5C0A52DF47659EC247D
2F434DB262FF7672A739E100AF3BEC471FC3EC0B66C968802134477655683093
B5DE6168098A0726B0E2D755C67E0DD387EBC9103A883F0E9D9BEA942192C336
E18F503553FADAF3C105C959AE6AF30DDED50FB6DD6D926850733FB251AD4BC1
E13DD245A14D14E44562F0371EE7A06D105A9A361BB83AAFEA0DBE65EA8D0D26
857BE2C4443D61CF5E33DE9664C892691D151A94B09284D2705F2D5996DF36FA
9FAE677A1DCC02A5D2925756A6590E248A70B883530F8DA8B90748E8C517F76B
6E586FEC7BA60E899F3761415A0D6293121AA29F9D14D71A83B43011CE7A35C4
20B345A09162ADA79A40EC3EA9E35D029C7FE4990CDA63BEB41DE2D28C736B6A
E6AB9FCC8E2A0F983BB3F46372C38CBDBB4D35859B0C42FD5FC2B6ABF9AEFEDD
8E60536D62E3E8466F68756F14D646F1559B4586157006F77E4388C8975266E1
D305BC63BB89A243A8E9CCB949E6EA95223CA26F649042AC1CBBA78CAF0A48AD
6760B2CEF94ABBC68BBA20DE02ADF8EBFC2BC314FCB2598B6F22FAD236FF246E
906358649BEF07F2DBE21C0C73ABDC6E0849B0D6E5D670259C4010AD77B9A567
AE141892C2C5E7EEFA7D750A0A2D685FA920FB83D8810CA61CCA2251B038CF23
1FAC0259109AA5F3589B8FD201A9AAD7E310BD6DC1A25584ECAE54B44BCB7A8C
0863B6626C07B62633367237CC29BADF538016B25684694F01356174B2ECE327
EB299D168A25943FDC383F94CC6C2A66D9523C6B129EA7B4EA68ED022349F210
D42674D1D3C31CF48300C9178E2FF8808B29694267E45EF8C4C13A36C6BB3132
B6552DB14ECFE36AA0AE14E392994F1DD4379716CAAC143CC8E17EAE15B75C3A
0DF3CC23E1B037B7E958FD06E9A562819B8B323F537862BCA7DB440524B6C902
F6198156156642BD9DFD32CC8F803CB61781A9C7C5524B93FCCD606B62E3DB95

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Symbols
%!PS-AdobeFont-1.0: Fourier-Math-Symbols 001.004
%%CreationDate: Fri Jan 7 18:46:05 2005
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice (Copyright 2003-2004, GUTenberg) readonly def
/FullName (Fourier-Math-Symbols) readonly def
/FamilyName (Fourier-Math-Symbols) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Regular) readonly def
end readonly def
/FontName /Fourier-Math-Symbols def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
dup 112 /radicallow put
dup 161 /minus put
dup 197 /plus put
dup 198 /equal put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-34 -960 1001 847} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D441AB
0467A1BF50AD0DE4F98225ADD1F93634005664EC4D3A79AAE931F7496D4AD122
EAEBCBFB4D4AC1B8D85E9CBE4ABB2225405A9DA5AB44E12A710451885D4FADD8
C3F48A838573A733544D6AD3B5C7B3E16F8F777F1DD842F33638F7D57C0C9212
0C6560A06445FFE43730EC1895E85874440C56BF079DCF6C249978AEC565369E
E2DE0A62595334A70543753553A4D58895F84C9627524042C4B480C4654D6578
67B2C0CC4A43523BABBF2E8BB693003339A7DD77148E4C146BF5A7AA602A3908
5300B7C1798206E16AAEC1262E3B1DD7325659679A19229F75B0A7BF816E1594
68BE15C3F762C51595E7902AAB117057F4EB1316DC1C507B857AC1B1BE38123E
4AB0CC69F0C42D92081FEAC1259E24E696131A9170053DED6CE28A4D407AE241
675620191E5953CB96967BF04CE1DCB7B9089849FE477F73ADDA94B72632B5C3
E4B12701C044D3B666DB24E45DF8FB89C5DA53188D7C588C1F9DCE353F3D357C
212D5E0CE43B242313912CB809EA23E8158049754D5A9129419949A7C79BB1C5
17FD49A1E5FC3A4095D91E472B31D7A788DB3D0D0778C6D96F68C849FD58496A
9F820DA8C2E98BA0DB5D0EDD60D0A5EF062D122D5B440DEEF97172CA0DA38AC6
D8AE16E16E62C3A99D3B1DF9F1BEA90163879CEA5BA341CB947DFB0C41B08B06
946F9C8A754B9FD193F9EB60CF81B8343A759E5D9641BCE58C2D8C0BF5CBB461
88E32829BBBEEF6E1C8A713A3A614565A4A9AFDD566D081CE2954D486E275D41
3BB9DCEF1E66E7EC178E370757EC626E6E82D294BF3E83ECC0782DC63E319DD4
CF867F340449A0A245430C101F3E5DB92CD828ECD21A2B602F26E72FEB38368F
DC03123FA421EEA747607B26A3030C048BD160A39735F731DA07EF3D6E818628
AF05166460DA5B83052A083336C23DE3F4916E3E60E10509910166E063832CE3
29E5DF2FDFD0AA1DC9F1C99A95FC477BF7F113B2CF4626600B1B5DFF712EB302
AFCB86EEF4DD29EA456833CF29BC0C5CC42C0BB09735A0A83143A0560B03DF25
B27B0B383BD641B85E8F6790F6ACFA6A03C77D60425F8B515C48893EE05FFD60
CB40D1B9185FCF7D27FAE0616B15007FBA17D23DBE9347515CC3A932A96246E1
85C477A9D6665D4F5D8F374CF4C0F4CDE76C57C8F7BD4A66071AF94604FBA047
80C65D0357949E03600E099BFE0ECAEBC6E6A636BCFEFC0A9035532476354B49
DFC61218068C10E8103BFF464394C6A73A86807D46452EFE438C9A865EBF1F6A
F412E16E04A38F173D7F596912C590B6B890C82E749CC95DA27708E0D3F0D979
C3C56C05CED8F49999FD1209FEB3FA3AE2C1E48DFDC6FE0329406853E9894643
81C0903F2E16AD9B0091111CB1F19117AE6B4B29A26E4EFB7E7BF03207B120C9
97D581EBC6C4D6732982DB8357E64F5CCFD48B3DDFBD1A859E7EFD5445CBC3FE
82FFCF5FADB5CFEC3FFB8DE9A2DA8F5C38BD99E1B5C513FECFF696E6FC57B511
A6BF31FB74592B8567252F4B7339D84BE7AA804CD8D5549294D7E98738B8CFEF
483D8479F0BAD89EC005027B1E37E2C200A11895D1C3B8F7F643E62A21B15AD6
BDD3A7403938D2E42A12230DE14239BF40D99F45A2DAA9A1E20250D431005D3D
0995242261B252C8DC60FC0501AD5F99358109604359D10A3980BDA32E144637
8CE91963B9E8A840C7EEAD340F46B72C5B679B1F29A0522468CA05A35F9EB1D8
6F06E987DC26C1DAD2938026C14A231A17283716FE409F05F06BD5A5A482B22B
29C2EE3EB6780E26BE05333CCF7E9E406198FDF2BB413E6A9F589D3A35C26C04
097A70582DBEB8C2352A4F868A6186CBD684E7AEFAB63BD508712A1DE050FE1F
2C1568E955DE7D4550E7BAE54F263E5B255D49D91E908F6885DE994D41051BC0
6D472FAB034B0674EE176D7780974FEC3E65DFF90D16B3971BE384E8F599D557
6B45806F2282C29F7BF0FF9B6F4B3A9740031FE1A4B76034999AF9BD2CBD85F5
EBD554985D1DDCA7FBCD7E2A4E2F1C7651A115D24753B8BEED5F517BF5CEF673
C1AA54BBF8606DF55B61C909509D7BB728F06752105F6268FEEA2382A12D313C
FC7C62C515B12AD3ACD2E606A60AF9A1D6081B85BEB8EB6708C8D053394DE7BE
D30E11B00FF1039D518B8044B2DE0B5CF3689A10CDDABC3BDF0F4B445210CF85
A13C8115DBDDCE4F3214261437BBC5F62F9D9DA8C7A902AE894869E0962382B4
5C92134B4C205A541A2B81DEA630E359D32B0D1FB41A29D76EDC90EB4947E639
525D8DDFB314DD50526687E7F74BAE2C543F3EF85AD0E40F0E2484CEAF8D3F52
4E2B8C1D37292BDA08DA48246737B09F0E6CEA0D539D79D4DD49ED0AFC3E5D00
F4527C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/UniqueID 5031981 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 54 /lessorequalslant put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEBE3247D8C84A67F
B0FA852538DC05B30BC3423FD37E586D4149D96E33BE469F3A7E8240826BF920
C8FEAE3B22740DA19BD70782CA4698465EA758AAC7B107212B363F9AC8947BE5
1D621C2E0B050F5EDC2BF39C72B62704A385C873648146E8E615D349ED779B78
7232605BEB38346E306018BE598AA09E444D0F77F63C7B91B8989130CC44074C
3B78058725777666DE7703EAC3383DC1036243002C75ABD706FF6272EC8B127F
512CD94B4EB72169496F57C21467F2E268E3F2AB0C62F99D6FBC035327144B15
3EA7313133DF49A031282BFAE803713C525D6B12C8BC41BF641A35D16CD267DE
5453EC212BB664805A6ABBD010D85C3565B2ED2E163B021D319558F8B12EC74A
D23D8D3D60FB98D39D08136666DDA4031A8E608B103688D2E860B9BDBCD50DEE
D3BE745BCA2104F0A28816B184277891B9231F28346A46BC83E8E043427C28A2
401F5ED30A4C2578F06DEF1FF3C98550BCDC5427F0D3CCD9AA1189F6A2A8844F
5EC219D9C8CA25E69488DF641E3A087A0EBC9657354AE68381B4DD8789E1D35D
4AE06A051107EA4D9375EE74AD0BC6BFFBE163DE6DD491740660FFF722FC1F30
238DBF05300C35CAA9F686616449FE094A5F972669F8749826284B5DB8E20690
CAB98FCB242CB73DF0BD147086881CD9C9335856F5F195FCAFBC3813528BCF58
6586654038EC562FB8C340A7A231DE2D065BDD828B097E7E7844246A646D34D0
D7356F6E3655663F9EACCC45B962A67731C76AC98678B54E6E3A103EBC0F25C4
4B4AE7D581455520DA75F0AA2AD71C12CA19CC7D1D0E4A13B262BEA658AA67B8
FC1B1350787F40DB00FE7A2187D2562E08382F94973EE4F7F6CB90329F80DF0D
FDFCD73F99971EE31684D721083208D4C964A75B5060C9B13CA0FE1281472A94
526D946AACF92F55944DA04E57D5DE2CDD0313C03A48023936FDD7893AB0AFDE
4ACECB1D0F6AC4F152E8EFDE5A98FD8D8DB7DA1A8F632686E80B86BAF16006E2
685F68747E2FC24D58A6084E6869B736BDEEF2FCFB7C80718007107308492C7A
4E34AC812F000A9C83D05109B77034631B51DFB15C4C89B040AA303BE66D798C
C48E69F0C4871773AF79651FAE06ECE5EF51AC4F1FAA67E8333CBF1A9BD32DA8
283D0A69160AB012D764A61F9BE78233444C2EA2FC699CC7114FAFECBD9C9D3E
7A501794A067B9F5F40C2221D5039DC3E47854B1CA363C39EEBDB915B861B5E6
5C147E49F8D0B68ADC9DC650C16A3C7C18CA10B5AB785D58B93CA7CB782D0677
7E41A6EE41FDA5DB6CEA711EFEBE680FF785FDAC2EF9D03F79002ACDA6AE470B
713FF970FD5ED9911E0DCC2A254F0C717F14A949355F4218FD43C6C80B7631B9
6E85CE364A1B50BA7521E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Fourier-Math-Extension
%!PS-AdobeFont-1.0: Fourier-Math-Extension 001.004
%%CreationDate: Thu Nov 11 14:57:39 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-Extension) readonly def
/FamilyName (Fourier-Math-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -17 def
/UnderlineThickness 3 def
/Weight (Medium) readonly def
end readonly def
/FontName /Fourier-Math-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 179 /parenleftBig put
dup 180 /parenrightBig put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-32 -2960 6882 774} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DD8F6FC13F6
FEDF4B792B4382E1B8DD4D6B66F7698F4BD76CD673F74E2FFCF34A3EACBD4F3C
C6A935F0007CEC07779EB225FD87A32485FCE17DCF5D3B7363F4BADDDE608D74
12F1DE5225D1BC9EF64A528CBEAEBAB7C5CA75B68EE58CD3BCF098C552B2A1FB
75BF21F58BCCBC9B908C31E373408147528CAD183940FA19AF923D72ADC1836E
428B74A5B3EBB55F5B6E33E8FFA3025EABB8E4A824D430EC40A31F0D72A210DD
75759CE62844F0F7D49BA3D4BD6BCF66449B9AFB9BE875F751E394E0A4FCA52C
D8C522586A8B3F3C5C7804B68E3155F94CC622FBDDBFAD41C583E43FDFD10651
DD5434E0FFB349BDD07170A0FFCF4250E226F07D9C2CB416DDB63CF486B33CC2
389BF90C05271234DD30D97680F6B41F2F0B28FE0C84893AC64BF925683F8DC5
3DF4B96610E5CED82A6C57C1FB68FDBC3B4B88424038E1CFDC34157B77F9B99C
F81577EDF8A82CE0C6DC7397945E5E5C192725215EEEF3F0D0C2221C24A174AE
4D6E8C782CA8C003D204EF2DDEA75F563DD5FB33095F872BC457CA43C979BB8B
2E1C6DB52A659C726EF3BE8A44E2B2B189665BAD3029377EF989951855031A46
35A0F75CBE72536243DDC09E4D3B70D9EC465BA6941D05D1D74BFF1C090C9996
15ED42A15A4C030CD533FCF76E5546E83980D04F8DD9962B460B3C60A99CD0FE
7B537712FE685EE1FE724EEA199D4838F94802526E95371E4CF3286C1E798B32
A642F4291525C954A6B2BDAEFE1DAD4CE1FB64C375A74D82F10CD0CF9F83475B
A369D5E80CAC68B65C1FBA3BBF19FD3F7506F865DED7E3C2BFCDCA8223A756E7
A64DBAE9A000A5B1A7BFDAD6C3B8499D996F3AFAFA8B8FD730689EB5A2F9863A
C37F150635D4704407F0211A155FCB44F71B3987A2536531AE0C9664D6B142C0
06BB67D226D4263EECC79DD1C5CD4851F5752F651EECAF9454709210949AED5B
D427C6498ABF42B20E46F937A0D0044901657C70C528F59DB4946F9F6F054F98
419225F9EF40664CFAF55C538677F458823C8D8AF1E9D27E6327FD830A1AB2C7
2FEEF0E20A80FD1EA76354D188561D139AC836086F8BA8A2DD4ACC5A2C1003D8
7085E9664DF6DFF54E9F80F2D6003B185D8BF5054050875D7AA43EF4EFD74437
33FF30FFF011C5C83881C684CBD0B1ADCB4A2B7A9AE9DFE2739B14ABB687C307
F42CFEBE4F5D9D17A80C89A733A1D96761D7D7130D5ECC3D3AA6E4C5A20CD9AD
E8156112D3E6A97F89F063CAC02303745BF83E30BE1904BAB4912D35F9710F94
E195FED46AC7F014631A8C0EE71B3D34E3B248FC5A17DC1FC69BBE3C5E8A3A16
F851051D3B3957492239811508FD687881759BEDD71C8E221291BB4A3DA511C1
948E8B154BEB8DA556AA6716D7ACA910AB8A84755635ECFAE6C481EB4EE2B274
ED5D96E0203184558424AAB92AD562FCC38A0C965DF1072F10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
%% Utopia is a registered trademark of Adobe Systems Incorporated.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved.Utopia is a registered trademark of Adobe Systems Incorporated.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7C8BE8F7D3062E20E83FA6AF45A0C932B5E6EFB4DBB928
E4511768F708A03FA8BEA26BEBE94936A426DB77A8E800BF093CF53914B71382
019AC58ACA79B9DF64946EA241C84569F2A13CE8AEC335F6B5DE8C00317AC6EE
983987246EB7659537AD0F945CEB9EAC541E02AE257377258E81CFE33CB66A9B
EB514F04CA9AB516CCAFE56EB0324AB192EBDDA61E0792EC1857BCC062666338
0089C3A9FDEB405DCF235A497AC316B132B3476551DCEBA0560C18F1BF84F1E0
1467DE59252B169861541BD6774161EA8F9035787CA842050E2089AAEED6F37B
2D12BCF5E67293A1F71DF87589FD22D5F72B9C91CCF4019F97356DEBC9B82C93
BD0040BBCEB10CF8F607E0F7863C43D7F6A91917EBD66730DBD642DAB8769849
47384FFFB4994ECF216FFA8140397695EE5AD63F1156720A01BBFB15AA24FDB8
2F2A8F541C7FC860E03F5E4DE80BCF6891263C142159D5879CA0A1883A9B6C50
CBDA9CF0C97E761E354C39527F070E680B42E6732896B10E6A7600184B156ACF
57BD9A98F613FC166F47C3D1C4E5E02BAB648D74B078EE3F0D8598C8572FE7FD
3294F166AC491EB93BA365B2C535890A74C6B35EE6EEB142BFCDD1896E3E2D83
55E7A2EE6A02827AE1A95760158E090398D309E96DFBBB7A792B8AAEDA2BCAC9
4D6D01F341CFE1B53E9E3D8A22E7E602AB4A3172F035216756F13E7E122DB663
5F470062A836D1071EBC6837AFBF91C913AD0955F862954D1094BDA972E8D90E
4D1C04DACBAA39A5B3F7FB2A27389C4B8C3E34B413BBFDE4395759EACE7DFF74
10739A054F9B235C9B73A87509ECF7989421490042113C9B602A2AB3B80C5889
DED01E3FA939E83188686A75C5E03F8668AFB4B3DC83402B8F9F05B2E5E5B3FF
97E3037A5D442E9A04F788DBC7BADDF572BE099875EB2CE7ABE21790437E0E1C
0B1038A23AB4956EA38660DABCB1CB80502E7915257568CF031A7FDE227C2B2D
9B605A1452523DF750247C933DCC6C7A1892E5C577F455A2A4C91EDBE55E3893
FDA211564478D08E2269332AA1D65A8E5C43C096B443EFE6E5BBBB2B606EC207
0B33D372E2977A8372FF75183B7689BD4A88DAEFB7D5D82C11A26FD1DE3F8965
369209A894FC8D243B4330A982C30AA85D99D7A6089D1EFA64DE2D495DEB12FB
203D3CC2FAA7E46630B38678BC7F77BA6B50B72452DEE39D060B34E9CE97EBD6
17EE1282D59AC1F3136E522876168F0A6EB20B5FBE5A10515612302582A89608
5FCE14FC3E80841DDA37547FFBF0F90853ACE50382C91C2C7AF4D24EBE27636B
CDD15465BB91CACA2BD2ED4EBC1CB87E5D51D713CC65684FF170D741B15BB4ED
3D1CA94F6E363F63AD1C1AADD7402F1106BE2075944B3476E011C30FCE87C55B
7F4287BC64AE406A071F7A77D60A3BC6B30E77000BF6AFE644F01AF58E87D794
C1E7CFB8AB3B5EFC7EC5B24761D37AD7EE811B229B9A468F1A596FBE32214DCC
5D1B8D1647CD9AFE7B883C093D1D307B57E84C427176D702F25124AD740EF6AD
AFBA2ED6CAA27046DC8605B91E567F87DE84A349C65612728454CE9DBFE1AE36
DA1033855334A74681125E1B0189F605EA7351D2FE3C1C0B5D35785305A5D8E4
EB987E070F4C578071A46971A02588E529108C25F0B0912E20BF09446D13BA93
9FAF7008D9A88184149F12EB304D422A5EF7D346DE3E01DD5B477ED9E7EF7DBE
024A4503BCDBC24A2EA6BB6934D82B330A7E41C25DADA30CFBB64ADA464F1E42
6BF34F88AB93F712227A27947EDC45C7C85FE33E0222323DD8A266D4832A877B
E5A4D777525F8747E1BAA9419DD2F5FA9B75329E4A9BC269629BF0417FFD79E7
936A451692BFB630F262D7DC3453566BAA0BCE19FDE98307B5637E8DF926E4B4
EF5D8F2E5A0578D4D365A0A3FD4C754303CD33928391AAC571EEB9FA21936BEB
281B4E3242840B685E44DF20DC7A6C18D0F7EA0091CA4567EF7BB3C3E816FFE8
E04B28ADAAB4EAD37E00221A00C1D8554303854C0FCBF51E1ED725885B918F62
A502C8C432B1AC54001D373F368AA90056ABE9A7A2258F3DFD644E2F647696B1
49463735EA71ABF731B340CCEC2DDA278E6AB037B9277FB11742E94728C619CA
1163681E9CE63413646C254AF6531B56186BA95CDD17E51BDB9388A644C41188
F4A54CA642B0BD9F6BC3BF48EB64BF3DCEFAF9DAD18BE665B5CF9B3F5D3BAF9D
84DD2AB94875B1D3A3976652F0E9A685B091EE0EE9B4750889B7792E8CF7A046
2B9F568BE1E098C9CCA5105A6849D97DC2E35A7452DCC8E59C7BCC7B89003CB1
AC4C0ECA534EB410006AAB7D8F021575114BA484D83B38E56924DCE03FBD0B65
E2AF9EFF1CFD8B807A7D1C9A9711146DA95FF56295DF2FBD00E100DF09B64FC5
4720886AB0009F5BA0CEC0EE542E280B99A9869B8E6527567AB45C6EA676E3B3
24291816487C4B96934E724F616B55F212F19C2A53C6C9DE35508E5CFB15D184
DE32E5A2805325F9314DB085BCA63E78B2DDF4D86574AB55DA353C3D43CA18BA
5A2B6D26DC576B74E5DFAF40155DD84A21FD67C452C6F2F21DBE9F5C8B1D41B3
4658F6CC5981EDF67B2A317D182F3B71EF0386A643B906FB39B5CCDA8D1CDB77
E656695FEC5DBB9DC1861B7B6E8039E66E7BA194097E28908B95F1B879C556D3
223A45878B613687CAD5FFF17B038673A106CA51600EB28D713D11B09DF937AD
C8C60DE9FEB1C1C720CC6DDC0FCF00C407653E3D6B0266B2185A9C59B4861C99
00C092C5A72B382DD6C055A65DB311F55A03F3729AF2D777DA399B4EB538A5A2
6374D02AF5ED528CB5A8717162AAE49CD92841D149A193FF8E50C11AECDD9681
A52D8A254C9D2AD4A77C36FD39091A6FDEE35A03E13B34A97D1B5C6BDC65E9CB
0E33C2541594BD44A0A2C7AED0E0775A3C3997D059BCA5C8F0209EA62225DD88
3D396D6F430B6FC2819FF641B5FC72398CDDA1A8D65DA0B139BFF835B8BF32C2
1EC338610183673442C47967133A4F500E2A4EF035830648A419330BD231E6F5
471119C703BC186693873CE97AE2F4DDD961C4DDC9BBC87E8404F41256813479
BAFFB68201E68EA02A8C47E771E49A30AA4D33EEE1F0F6D2CB76A9B3E0F058FE
624EDE68CF7EF463382245C6FD9A383AB1B15BC1E6BF3770A1B49C00A4814BEF
A3F6F23AC1D5B5832CA3AEBF409E0D4DBF49E0F219BCE29C5D0A6F1E63A25EAD
38AE7E57B93F97B7A0389E0F5B76FA1D968C589587ED9306B45C6EA676E3B32A
C65058A52555AC73C8A8784473A862B79EEC6A772E2EE5993549CEED472286FC
17724D0D0323B1C273D9B9F7AA37AFA9D69A39E3232FB657882FE43D8D0B8D1E
0D1845A66F6FC4CF80D05C7CC75776554C615FC9C26C307E69BBFC786E220543
D47E2A9B5DA8594A09E4EFD80AD24605A3842379B07523189E5EFC007B0F1EBF
3E266C7E7A0547A4DF86D866EDFD837C54B7AA834F5C97E080D19A1F19B12FE9
76B3DE3BC15B9702EEA5CAF476C1D3A3A410E1722595E7497392F1A188EE1CA3
3563CC9BAEBA37A80AF97AD02A5D08E46AF38254CC3E494F03F23A7C14AC36A1
2C82A64066B89E2AC43C5C887C5DCBA5F2234928D5D4A048F81EA6D179E4ED59
41C18D86867A2799F1C342CC956DE27A4192F99DFF130FBE31CFB6EEE2C8B5D2
81F230D98D83551CBD5759F5F6D3EE8BD4C45925531D207E4E8A65E6B705A3FB
597D445967ABD7922E56CD8FF613BA9A9092B9DD2A5C5FD30C48B5BF4B42E100
E6C0CD41294D7C38ACB93D89F6154F2FC6BEE6DE3CB926AB34AF2F2A8C3E8248
BAA97EB497CFB959DA5B7CFFA82F233736792B3CF8C5E8A0F09E2A95E30EA51E
86D4A1655EDC31C207614085AE1C1D6F9B2548D5B2489C046DA0661E91A16B44
FAC0B16CCE07D1305BF4DFF450CF263B6E5A0AA572498E54DF70C6725DE065DA
DBF514DA3B1F8128ACF24EE216EB09E58CAC9674C34768F001B04DE27B681970
40A8C9F1CDB984B1EB9C376E87B374B9118A1924AA62AF2B8D5A84357FAEFAF0
2DC8E4F0E096C8A45D7EC62071A1514FDFA513EFB425B3A0CBAC7559D8CEC6C0
69D14A6FF0E45D82872E30CA63EE9B7A881D2F241E98016CCC87B7529A5C2BFE
6B272CF24C20A0D1CA9A4F001A3FBB43911B96C587E65FE2D318B5FA421EF4F5
F9E64E51949541D2F6715901D3F861E8489073646730E1544306F485F0DDC387
E4DFAC62D4E943C5581FD062C33449E1F963484EC4795CA2DD5DEDD4BA12C40E
F2E07D9180AB10E8846DE9C007398D55AF7FCB8E00C5FF3739205AB948F478C0
9EF892AC6D96B11815F8EB280289D57818ECC518E1D2B45FEAA607E10EFB9987
2782FEEADCBE041FC4B01447D3B015482F46B84E908CAEF8412493E0CDB7DC0C
EDFCC2549B2E601B41F9CBFD7177607237A69D634C85D1E6D4C266A75E01A687
58CFBA2DEC2A0C9A141BBDDA66E5498C98D58C9B03172E84955B590C7CC8AF34
AEC7130A5A2DEC8E697513B6D7FC50473C92632F8CE52A8633FCE7C040D10575
3A66DCE85044D5A2491C635C268663C49E665E9E9B108773848FB910287D3C78
43F158E7DF52207A6354CD764C0FDDB04B1ED50201E58B63E94706322FD88119
54AF92E3AC3584C15208EF6255887F5514996D9290B436FC95D850CA7301BE9E
5F27D89F2F8CEEB870F6A0B678076B45E2D363F9F9AD1B0D34376F353D1C60A2
DFD883DC4BC8731C747A148E329B63394AFD15061F26283F54A8A8AF1E0B594E
B37370527464C55750321156CF52EE7844482CC6D0C1FA50290A4953D578D018
78C314A6C7995E8DD6E7D8DDDDC9CE4C7493DA726A7305389267029FF2AE678A
95BE2561978B197F45B2970824C7FB4E0179B5023C1B3A9BD557773493752ED1
0FD2616FAEA4DED6A13A5900986B6A71578B3B5B9E4E99E0C9BAF28D9B1EC7F8
AC8683DD62ED40DACA3BC49CAF4683EFFFB93FED4471DC77362E32AE61FE9546
C44F9EF36C9CB1C8BA5ED1A3B5B8A045C21E270FC43E320112958A6F64AD2F25
B26C6557DD5004CB50FED0456F30CA9B4F1F58AC283786C0E4C0C6FC7B4DADA7
74C77B4B336C3F075D9D90235EB33B9C082FEDFD718FAFBBE9110EF82E3FED61
FE86A8C75984BAB2DA260C081F0A22A0850556905A5D7794907EA7BC8B7A60ED
0545E9FCC4D30A2D9AAE2D559ABF48276F7A1C6D7D1B7EC02DB2E06F8234BDC4
61D8F7BC5ED468E6CDB30508C2CDA5E5DE1B5BA1369DB20EFAA7CA92FD473565
0F9FF029C90FF9AED0A35B7DDC87454C6CB74F0B3C24489300A2D03E4546F035
1CDD45086905342281289A92C6DF37883FC9FB783595BF9DFEE2E0E999C6047E
8BF61AC87FA93FAEC7563535BA9AA1317F148C181AB6A079CE8AB6C459CD74B7
549AFCE597C3F22D5E7F2255335E9070D65EBDF301B5C453C2DEA7E42967F5B5
6199F62A367732A1DC87E90769F00B60AC1D44F16419EFD8A9FF300ACDD78D71
CA2116ECCD47279CE0711D115F5934C235D3B273A66B8851762DBCD7BF053C90
708617AA0C0BFDAD40BD086CE183BCFF43FF15BCED0783AE6ADC9AC306D01B5C
FAE10E9B626D908FE7844435A1F74645C0D9B4DBAF779D3937CFC14BE565C0D6
152EADA33296FC68702E9C34D543F6CFD5C7B3B6E31ACDE0E7C56C93EAFBAEA1
6CE307F175BBD8205240696B370647B615E569B4BA30854D6D0AE46EE0B4BFC1
9BAB701369C9C627F64ED0C8166673B0F8D00297B38306E726DBE53834CD5393
9897702795B4028AEF0A1089E553C9881260A4DDCB10080AEF87E8578B353173
5060C666801C18182FBEDA5E099B6D19848614BA6AE1221C072B8C9809828976
85656AABFE75D2941BAA470E3AD7F1CD947CD3FAD238103CB154F1DD7625ED98
3E04DAB96A637ED5C6424C6D0A29025C601047B43879CA50A4F2CE6442680535
3EB5F13756338A12454E8BCF6DC82DF9529B9BA37245CA106102CB9F27E5DB8D
941425DE146F79D67EC0B65AB04788BC2ED224FB2CB3BC136D0A98AC16005CC7
434EC01AC1EB54A166AB23C9930A585380AB3606D02E108734352979EC47A5DF
73FC46E99BDC94AAEDADFD1CF151F791CE17B65F4066B638055DBF8A0A732BB8
C14AEAD0D76B01BDA71BBA7E79A893F17AB9A8B582A84288BC2ED224FB2CB3BC
136D0A98AC16005CC7434FF5B1DF01E5FE653CB85BF452AB8DB6351BF489CCF0
9895A1FEB5EABECA6BBD5518ABCEAACCC8CBB70375FC7E493AA5CECFAF2AA7EA
2DF42B89DA53D2DF628BF1E15F75E868BCDC5427F0D3CCEB740F766D9195D860
B48A6BF6AAD3F1CABDC48E91648652BEEC391240A1D262C1CC39F5FF971324F7
245ABAA2635F3632B31A2683F2379C229F8358FDC6855929CA619E3143B6C900
609DBB6117AA672E6D9215E556EB8CD2CCF2546D27BADEF347A3BE68C541EE8D
976CD5E7C8C132FAAE9B1969099DEA146A5F40DEA246FE2DC3A9870FBB3450F7
DF96EFF848C2A7E0DC4D5B9650D7C2DC3F08E8F3AE5B21430B982EBF82D0917D
49BC5AD0083A6D1B8E6B50AB6BF0A83D7BC91AD4D4A2E9F96F4F81D177DFD6D5
EEEFA6D4D54B096463D3532265F8D3295CA6CA07D45D4E2A90DBF8A81AD81F1A
705CE078FA5DAD31C87F8A03D61CDEB4C0F49EEB1408FD1E8FD65AC54DF1E421
2574405DEF39A01EAEC6585E084B8715235EED4FB9AC2BD75F3D83947786AD80
01ACFC1F49B377301B40CA11E57F18329A7816A38973CF4CDD80A6B7FBF5EEA0
D75C70732886EFC69175F47280A3B03AFD9FEADAD60B1A53321F0C147F95578D
C1859363E456C0740329E1B064A2B59B90D84901AA672AF7586EFD44DF6F4C52
BA7EA1CA9EACDEC6B96F17F4B8D174C290B27C30E97B5BD3466C68A5AA693B55
069B933A35D1B2933ED4095CAC5179C138B3134711BCD2A392C4CF9BB3D33A87
5061DCE8B6A7E786BEA67E1724B0AEE932AD0840FE2E9D8D012D1F116FC143C2
7BBF15D786DAA4518E4F95DAE539B5D6035DCE5B14F18942B72D599D55377F09
A17FB2C3C6F9A8B5216B3CEB0EFBB6FDF841BABBFE2E4AF46518DA76DED556A1
E765D9CEB2EA7B3A1D8E062D5207E73DE2C6BB2CD4DB983C2BEF669D0FC31262
340443B4607BC14EDA3CF76AD74427B6822D017D1F18B0F4F8BE97BFC28D2B03
5181FBA2E854996A30D6DCB88D3384251854E2CA53C9AE3FC2CB3A80ED092373
C4BB6F9B211312359B33BC93990B7B00AF5E895BE7D9C1A861FCDDB4714CF26A
E1DB5A9BD41BEAFBCFDD9C8B01B6B1E19224F729625867D0959A407BAB1E8BB5
639B44D01CD4CF27D2F78F9C91058668E8D50AA7BFA326E365DDE57671A1D29A
4E6798512FB8A31F5ABE3593759930EA2C100171FEE4C6CF860C2A552670B49F
5C7053FBAFA30920E0840EEE18ABF176B819E13BEFA453CDCB028B1A0BD8CE26
5B15A052F5B47B4FBF81643B9171450E4F1DFE76671BA9AE157A282D8BC65279
145D67DF6389051AB094A3E0CB9D7AD4B5AE946C4C14F8F9B826709C5EDA479E
47362D3916FE46C254F028076CF4C4A6C9BB70C2F9B8627366BEC1FB76203FC3
7D2D549777437F47A688C1FB34A9655AF35728FBD33122525D735E72773F31BB
6A5F5577F2A90196F37DA8411FC86271E6BB56E04014DBF74203216D492B5133
73D6B3C9C7174C61FC03773531E3B6CCE19BD270E54FAEBB601A71B286533313
5739CB850F90AE18FAB54219E8A531E6ABEB73589416381FC8746704E1675EC9
0CFC11A1FC5749DE1B93158AC9429F07B5F731203D655060F29C06B65121A70F
51894CEE40405F1860688B5DB0F2B594087A0AF3051EEAA586F7CAAB68A887F6
5A3F380C95748CA3456DDBE1788C87312510716BE9C7ED88E393AD8E69B6EB0F
DAA655154D6E22E848689BAD6D4CC3629147A7CEB9DF5977503BE095871BD5C9
34C3679CE9A713562ED657BD8F60C531F2B9B86145C424F9FC4D8053E07907CF
E3117875E5A6C6A681D308E8BB07817149F8BF88E964BD424402F6112B6D44A0
63EF100597819CB6E86D58F698B562336A99FA6AACF9940AFEDC511F8B196692
D926C778C037207289D94BB0F5DC4A7DA096D35C039348A07B7FB01864690BC5
9B3DC53F0BC227ACA0EC48D3680385333115AD895B929CE09C6623FEFC3FB633
9A971BF3F96FFF06403B9D17C01C390C313FA7633120C4E56F856CAFE844AF35
DA69348DDDDC54380BC60A39A401CB626FFE05E2B46FEECCAF1E56E6A9440F33
E9AB2CF1E1045F339511CA2712783D2FF88B64DD77C7A98DC72D32EFD45A82A7
EE28C347F6AA7A8FDDC34697311DE67AE4204732B5003F5D1EA469EA1FFC9816
31FB382AB12A6B7B52D4B8266D79C68173F54302E80072A32F39689384B4A553
E7E294871A0150F1C580BFBE16C344CC14510589D91D425476102083CD062E01
96F287AD82F1AC283103EE90B6F34E773650240BA2868608934FDEA706F9E9EB
CBC8F6699DAC1AAEF295CD8F97EA851757DC3E7CC6F7C36CC64E016D4478FEE9
D07CFE5FFE827ADA77833D02CB2C28930703DD99A134E2C53FBE31DA95F306CE
5D892B83A3FD36DC1039D5E0F17EB472A8B7B8F14EF70BDD9C6C2B55A50BDF57
2C18A2302292266C612031E79A2868439B6A06E90B84B848AAC8FBC77D6F93BB
CF40628311B8D1FD9A2784744ADD0B869EB497024BCC97D09E8AF23301E2B1C9
12447BE10C54BFEF92A9BD894C08D042E4A101B4FB9344144D865837D342BDD5
9F28D337C02B03A002C919864F253A7ACB08F73B2210974E2A9D626DEC7B4197
469D0E213BD6018BC3E5F9119E2451F5186A1312D7F2C6250C461D6734992E87
F5BFFCA8CAD6BD29E5C18B351915C293A71128B87293D4363E5D0A84FA747E5F
372F6BA8AB1704B75AF3C6DD2E488A3F223DA359D04289C2E21C2CF280A8EDD1
CCC11482B7465D748AA23A40B276222E9DA99EA8D5CC00521FFFDB6197BCF6E2
96C956BBF7CE19F51229838DEABC6746F7F04F876BDFB63CC891982BDAD461ED
C638D0DEAC90B6B1D5F3A30D277A2DC8A598BF95060CAB281DE92DD0AB74C264
C8DF0785E4584ED41C24B3AC14D356001A0830659D9F9EC03404DD0545942E5E
4E824DF28B904DCD665D0C34EE74D88734FBD10DE306D217AA2977F20542073D
C3093BC347A06BB971BCB027C072EB5AF530BBACF11A6E7071A142F69C67423F
AF7D2E29FA204B234E2F6F7AFFCE7592C029085E0EE1D089BB7F68089AAA6A1E
AB2FE02E4BD5401721B9948263BB36E301EC7E67FC339009D10788A7AAD8B486
3AA681CD1BE8D8DA12A492201BFBF7818E5524545CAFBA0E7A9826525156CA82
36C30C0EAD5F4268604A4EF9D157587E3CD1836ABBCB4A590A67CE4C7781047D
0E15C309E1619AB8551EDCC95C7FD734F2C668D4D0759AC9CA50B2FBCD9B1D83
E6A4790467B6CB8C3A97D0FB25D3AB668BFFB7762C4445988697D8FB134A2153
4910A165025C2ACEEAB5E059B2545EC497B4599F155D65340F00CD72610A7BEB
AF2770DF811B3986EF4BFEA71A426B6D092105B7502E2F91B1DB01B4A80281D1
EF53654E2DF27746B6F9F2B0AF7FE7E883FA2DCACC9A6CB632D6E628633EC7F3
187D5779DC878FADCF68196BB3729F7F9F80FFA4743D56DBA5D1AC29BDFEDAE1
F184748F0354B792A05B2EA606E06B86F75FE172D9B1B915D9DA029A12E8850A
62492D77494BBB0FFB14C94DE2D01E0E382F837F4A4FDDA37674D20494BEF46B
03F1B176F076A657AD24250A5D7D6F04B4F74FD037431FC241C9265EF59FC9CD
80CAB18E2FBD7788FCB6F16B6048BE196F9D6AF0E13BAEA65B7A2BB3F17D520F
52BA6F2502B6C94CC8D9EE79652B19CE9AE571F4B9CFDAB86191335F011C9DE1
5EED3EF657D2E23FDCA67535374B21337CBC4B8C3B58984E86A0448E3456EEB0
A3F35D93746516352F9C6547A1B580CB3BC380F8A05D9D97BC6265F462A15DB5
07613183C0F18DB47943F8957F955E06F03626CC1C0ADE83437B8AD4F2F2056D
44645485A0829013FEA39BC656F892E03794B853FF977F622DDA627133EC6CC3
3C0A85272500E639321304FA1B12E6C99E7B22C3F42701E2F2AF421C84BB4008
7E37EF92F6BD7B6E74B5EE29D96853F4CADFC9A4BCE6FCEDECCCE2F1A067B30C
1712F7C1518253B5926BFF84518AE91266FE04D05931620EF22588597214CCB1
598B00D221BF5BE93560818A21BB7A2850B823E640F7768EAA14EEEDB424D767
E2103BADA0E9733923FE41E9E3A55597FE88BCDAD2A05C02204EA9DF6D758FB2
7B948428EEAA31DBBDFA273CF2F71EAAEDDE8EE4755833D9EA983FC6DB808882
40B6513CE623D35264DBA6587BF1239CBC424ADC76DC82343A5B0A1B2565D8E6
8AF2CB784BCB80439A54CCE9CA943877B7627B15813F788E17315D8AC83C588F
185D30F104813CDE156A45B22449ED05FBC9B1627D4F59D4BC48F12CB50593F2
0A35CD7DFD539033F1204E4055105E5F54205B94223849126143B038DFEF1463
6A028F504DEEB76EF376D12CF3448E3873FBC7A725D25E45EA2EEEE736476777
99046799B34CDDDAE3DE1FB2AD269F7FBB61505DF75C3BAF4423C676B83BDDB2
CEF6D2B765E1344910952F0BB0974AAF6BF76149CEE298C8CF6B4CC492907B3B
1D97181EEC09168347A23A33130399C8393D815172CEDD6FCA18686600BD73EC
4B0A086BEA089366E5751C01819712AD1A4B7155EE044395DEE5F2D47356440E
EF2F8CDA08365E52796975CCAB3E77EB581BA7E380E69522004DA4FCAC4BDB17
F94D15F05D7E0F324AF1DB07528689DF8CBCD5C424CD51314311F6AC99820761
F7E3C4B9457FC4FB8C992D9508D197E78B026EFDCFD80C82C47A23A016F50D70
7C7FF89CD673C4AE5F14FEC608C7A374D14F640B897E16BF344C378039EDC41D
966CC90C4EA2908FD4A2AA107669EEA5C46E3589902E3147AD9725193497F417
AC4AEE6F87B7F453F3C1FAEB987FABCDD5199784058AB4751AED4A3638B12025
93B8EAF1F006334BFFE578018B818770BEFA49B570829447A8285BB5D65461B6
84A3DBB420D61D8FE7F54C49E538041D50FAB2CD259C1F24FE19D643CC8F1342
F97440224799BF59EA31ACA64FA46D8D08C2925DEC611BFF05FB86EEB6311BF3
DB0D2F8131A6B14C860141D1A55A9459AE34B0B84B43A537A519AF0D965A0FDF
D07FB09A257C4D685D2BD424966A1369DA531C5F82332524C7D68C828D472FC9
116BEDDF59319269D09ED7B3EAA3D3E099A59B7F942913D7C906E28496DEBFCF
1404ABE21B76658882338B83053419AFBC99B106C67DD1CF609CEC6E8D6BBE99
009F25ED97EAC536DB8B2BBB153BDF15E7928151633D41FA53F3E9D5D12E3A21
A472B3F3091ABFF5D31C9C6C0FC72DFE00FF01930E352BEDD3CDAFE35C7F91AC
C59815BA55BB19D350716DF1BF25825E5DEB1AF1AF11892B0A50ADDF43ACE734
069E3D4FF2003DE34E935F70FB2C9F6FC1E7BD5856E1A00C47B6BD5997D5CB4B
058DD4430CADFB2E2B8E3C493A2D14308DF1F5F4C9813853F8A3F81B0989DAFF
4CA303AA939D7E43973C66145627FB0D9491D24DCEA030ACF7D3E5EB29C178C0
A3B942DE04125016C41ABBCFF5324AA4E614D9CB325E024EF253A186061A99D5
0B8A711887A0101AA9AB42C4F6CB06BFEEC6CB2F55DEE274A819B97A3F23DF6B
9D30ECB1BAF4B7F1AAE558E536C1D29166CDC5948EF041AC4F7602CF203A427B
4855928AEA69C33195F6F05E814C95B7243147082FE5A6B3D997D87309CAEA94
6726610CCBF3D30995DCE506472E61A47FF6574E4971648FD3241C59C9CBDAB2
3C8CE16868F1FF2F3D62EACF21E35EB65D45E4EDD6D16084556C0476BF0C8D66
314113DDBADB6E56F7B4B38BE0A5C8B360F3211A04E7280888EB3C625259C36B
CBEFF9437D80C36AE1FE31A7DB10B501857F85BF073C36873DF6BAA8B69321AB
7A6A74D7DD8D36F755DE6F80801045538AE5FC4214F72FFCD144C07BBF9FC7D1
6568322B10C298ED78B67C66111F5A21A0FD2FED9DA16E6EC6D1476FCC9B14A9
10FFBC85EE701DFE15085FE04754B10ACA0CB54F4D9AF5920443A934588F6026
91A7A9D6555B4C101EB52AB11DFE899B0D7F7A03270608CA3D0FA05C14186D30
0837F93F3A3E8FECB42CBDBA9A8A1F7E83B782C48E88781619A1B403BC30E3DA
D39CFA5FA7FA825352B542990B715777A265B617A5A5FD507A45096F0284D187
16893B56AD5DAEABF95E2F97AE4E7FCC4C523B38FFADECF5A0A2B393862BB240
3D37AB94F5048EF2707CB034E6BBBE64951B61206C2FA8516620B20F3A378727
FA4811184ED24538C0CFE1917D00A79352C299A97A1FD24BBCEAB085368ED4D0
F07943ABF6A815B4CD644343AE644DFEA186AEC7ED9F5ABC363599360086A518
E8357808EFFB3FBE6480904A586C8014AF664F300370F4D7EAEF4896604FAC5E
BF1352AACFFF5E59A2A95979100B155464F2A56C3370E8F502E4EB602391096A
AA197BB277DE906FCA5E8AFD2513BA4DC263E7F7A38AE6C387C216614C86FC81
2284DCCA5D16F29FCD5E1877E2689525BD879F6F2DBC031BB172032A0ABE4A79
8F732C07506112E05E4C2E64664E2F6A8883C8435C20F5CC9590B7D68F239473
A6D77629111C174A42B4A38E8367991AABCAA2A04DC69C20040DE8D48B5205E9
FB0729EEEB975D0F608883A010CA86D02024A585372BAFFBB583280B6A91E70F
D9B0F78E9288039822E1A037DD0B5F83E043BA67F91ECD23C3D6A258168F83F6
29AA7C0FE58CC8520F980C66CC1AC68230A01D81B3A7B577155FF718BA44EE04
5EACE556F3F6262B5A6D19165BB2FC6CA784B47D81EED29F7F795959777A0E7B
8B2CA8495D4B112FC4E8F07D147AE4210964FA212F48A1DE85FF22FF8EB14C79
66F46E553AFBCC4206DA8FCA17AB7839CF0013798E38DB46DCCB0C6BE099AC20
DC2E55EAD7309FFACBE40AF2EE31FB1205F87671678C8F5914F645BFA00ACAA3
6BD32255D3E3794CE9D7737DAE0E85EEFFADCDE49CB7710BE5A47692A30A74E8
E51C7B2C220BA41066A4386AD08342F278060DFA44839DE99A15099EFDE916E7
C1717AAEE8224FB3C8A0A3D3093085EB06DFE5EEAD1711F1884E7C4B71590791
C0E426E31764CDECA513F511E4CF2028445A67C739C9D154742081E1787F6C19
79B1528FD23E6210962A8D3123FFDEC9D9DE12171317114DA2BDAA4EBD37CF80
B641558E2B5CC65790533D2E1314A1D7196233752E613DA6161C219811618139
571C1E400086B8725FD3E05185E6FF7A3C088CD1E451200B30C2AE53C97322A2
D9931B8A93AC3DCC1FA14D10AB03AF0A4B6DE0CEF2F4B6E2F6BA803BF44860A6
97343AA4E2DCECFD566DD7E815AD92E2D23AB124FA56C09F774231CDD506F205
51EEAE04EB142AED22845E842A7F812510FF99378FC7323439955981B4D06230
D7F334EF4C1735E8930680CCBE789A0AD8B3AB65B3F8DEE176DD4910CD97515C
002B512F27158E4CC0D892D08791EA6B42D8A85D837E7738A6EC0CE590DA40A1
7188686F17F707A9C70A2A26C15B61C06E635BC700A75C08136A3D355E482EE6
B8259E06325A65DD27EAAA02144F8FB0E8D2D1AB598EB934278C6A16A9C18A74
684167F75E43A5739A1D7B9DA631105EF6B0BE831A0891FDF3645E1A2308F144
59A4AA1A34E7E99E0B2048B60C64A62FF7FDC6ABEDC0A150592EAA068C9D27AF
FD17E55473111E80BDDA98C529CA479E4B48CD28542E66F4D60EC9CD9B66997E
E989E311381ACC86D0B78478BDE1715D8E0BA42BE932FB78F60887D6EDE1C96F
F8847E8F10E61C73FA17900EFBA2B9BDB9DFCEA3BCFE3F170F935D7B9F8764F0
BF65BEDC81966B67B545B1E93F2DA7DE6411D39E1743DD76514B8653AB34DC0F
A7B2CF80D2E133389BB0DEDC36C7B4AF2340AD41026067A5BE08B738DB14AE47
7FFAE9AAC7ED3F1088699B1BC7BB2821BF2456636248EEB15216A900EF6EC0BB
E0D475F3E0D7656038D954E0F67F0A279CC605CEE23BC336F799A67217EB14D6
0A86CDCBF452978956BEBAA492E8E0C264271B4F07ADC6F21E6D1DD8BAF999F0
158ECB7062B9DF6F39D245EBF948B2A5C1B29CF87FF7F363B07C17CB5ECE08BF
BE01C1CD911346E14860A8F94E4F9F33F08003055A2F3CD69DDC976F67411A9A
03EBB84F6413199B68FCBAADEC878F78EF1EF156B80B85908643AC55916DAC76
78873D366F7452C6BE48BAAF9B26F5CD9D360DB84D20BF831054CA0A83A7B9A5
9858193BC1069443622A9652257E051909CC4C87D9901F274415E9DD3166022B
CB5379F475EEA22D43E0C83D704899448091BBB713EC85A3DFA43921986FA832
D6E9D53AD8642D8B86C242B9C8AC2B28B098DBA230CEA0F5B50929A907C78F90
F3AE9BBA72E82EF9A3ABBC214C731D7909A5043BF43CE30A519843CF023464D0
18EFB6235165DA5435EFBED22588B7298ACA1A772C4E553B41CEDE0F26377CCD
8374C264561AAE83C19E45C3C94DF4301F14CED255BFF1CC807C8775C5C34C99
67ACDF2A63A62C53D2713A32BE10557A4166435AE1CD275F9B98ED3FB860EC4D
D45BD3DFF4AC49424CE917D5A914F44DB2C55A9E1CB009BF0686C5687E73FD32
3CF445F21D28571DD80B729FEF2F0E3F73F03CE02819DE430F9892C4B273E6E4
1D1D8F148E26BEF18D9885CA0E57A3C2F86E779D55D40DA6B3DD9D6BA9D4F23C
D62EED3AA10975A3D0773F46963D303F20FEB7EA42CC2F2F9EC4CDD56D0991F1
DF5ED9F7AA7B179D09CF999931A0EB3E53502E39DE24C683CAAD778BEF1EBCA3
B047F2C81EFDC4A92A636C54EF9AD9931C92216824BB00E263627D144E6E6350
0A7D757967DD2C8ACA0BE6AD40165567EC3524F498AAF99EEBD7B4C7BE6022AB
5CFDFEAB8FC6D8F9C3D0958E532BF26B18D2885729939A9C7F2EB027B06C91F6
A67BB50074C2EC323E396FD37D30D0EF770A9238A958F1B28983746C2250746A
7B7BFE78D58F58D0915AF11AF9DA7A305449D6E50F57D3372B4A193FD8D08921
007C96C18B9C3B820B6DABC2B70149183ED2CD4FB97EB5E37C1BB72D1133DA85
013C8788BD6E75BB77932F614F897DFAFD8032FC1115A0592E36F65D37C02603
F62A2D9587EDEE8665D53752E76CCC7E9D3BB84E1D8350633A65814610B15193
1A8895D142DAB9F3F45F576C9A1634A22C13C08DE9917119F68DAE0C6F6567D0
DD4CEBC1642D466BD360B9DD076E005FC4A339AE30E87795871E39119612311C
3628C393A87E2BD2CE67FFA402424E7852A8A51EA5C4A9D132654000682DEBDB
8517821D461F43091EA2D01461EDE8A11CE469D3880C9960DDCA3DD6CFF3179E
8E164015010F56BD7CDBD3F69384A5D6CC342AA33EF526AA633CBFF6CF669182
80E6B345B9E6F6FAF13A94E541E10AABD03725AB50BA3173E4772CE8BADAFA59
2D5B079C9121CB3F330EB6E081E3D33E4E65674C2B1C535DC7E980B1C5ED286A
245CC6A0E7F9B67B52F93719E47D18DC846C46A6597BC2297502A1C715B1078A
CF26B4ED7D4B0772B8944D16C30BB29D8DD8E8861606D958A235BD5095D0BE02
D40056858A3C9FA889B99117E139029F5D2AB12E0FFE9E39E44C961A4CFB1E1E
74C77C6F7CA25561BA237C656C17DA0D3DF5459502EAFD62C704C73CCB1B04C7
2833D860EE51BF205B496297F46803DD57F70857B449A15D1B57DA3E7F0B3E59
18BBAC5BB6A415706BB0406E315A641019C053F5147AD1A63465405DB89164CD
8466FACF5937AE0E9DB8493736F303B29066BE89094684112BCCB1CE761BAAA5
FAD79C6AF70A6EB3D3296FE7B63A4C007BBE94C24E1D210E57C4BFF2203570C7
10CEBF0A3F3A6A99C3BE6DD4EF3D58A714EFF7D98B0294934AD87FED168E5ECF
684EC5A54A6C004C59DE59217F1E46544FE82E7DB3D72FC6E1C9562E8095BB82
05EA5569B3BD1ACDA966DC827801F8DFA8214534CF068107505F53C81344DE1C
5B8D55069609A7576076823DBD8B76ED2986F1F3658235CE69F4E9DC33871D8C
BDC52B8054711EEBF49EEB653A368F87ADDF1E533DEC93BD6984866C56AFA500
4A3C225AEC273A3E05A4C8BB19316B9CA0090A71DADCBDAD7537A03DAE9FC048
44167C70D65E303EE5C0BBAA03EF6EC79B1FDA5C506D4BB61F71268FD82A64A2
072F5B83946AA37A5487CDF16F7BD85370871485BFA2261C373A25A9CBB37A02
2988F500336A3206F8F2F5699AD305D4425C06723D4D501FD9A7E74FCBFB408A
BC868362DDBEABBD9721DE336C39600310EFF21AB6C5E35E5859EA3ACECE1029
E928AA9E8F42F6A0AC00004E2354EEE7535DBE351C7E2AC8A8170F4E4F05B861
FA0EF9EFE03418FBC52C0DD81CA9A87E4878852A6FA2287F185E3831F618EC8A
4B5B6D684505072BE5D71CD20F4578CC077B8A42DC8FEADD28663BCB65FE8E27
6C0319F248DDF5630985DA26F6261099684D88C5E047DBC57326B3CD679BC26C
FFE15C40AB76DA98D10743A87E6BF35A9189037B8E81AAEF2087E34FC6997657
56C23123C33707806B76124C708458A3B68323AD1BE0FD377E78C0F954162426
9F763D8B21F36C586461DBD7612D93B88CF45D3AC946E7486B2F6B597A217131
EBCD0A567F4C689E1409188D9965FB240CA8957AFECDE89F98C6299188BCD7C3
D397FE2C5431E0D70F8888697A672A5AC51B3267059601DE63FA221F772F4C3F
868F183D436D9906A4C027A85D37B0F028A13BBB04617D7BF995199A8F6CA157
3C7ED6FE06ED94DFD7EB5EF6B29FE13C61E621AD8629B0006AD9AA6FC993018B
045F770F76635DC2FC0BA2B96CB075E8A26EF5E55A80ED6530D4A5C65357FF80
5C606B7AC5B5AEC5E032BF9E60DB493EFEBA36C28EE735A2A6AB5FED4E61264A
E03A51B2B3731B35E78610436C2FA7B26704FE335788E7A1780F663E63C0AF32
979B490E6E3E4202002DDB299F6DEB64AE5D4A9FC0E8233EBADA14AFE5800C3B
E4D83A42B3E1E762133C5C5EAD82FF44797DF1D90B5413E5FF5CE932DA62F7E7
AB9C0BE4BA8FBF89DB402D20BBD35413B118CBB26816C9350775428F370F7C85
FC81D4DBEEB04487C21259C0481038CB594187AC74942449383D7C6505C074B4
DD0370C72763EEC9D664DB2942F9F627F1895279C63DFDF7F4C58CEEC59B6E2E
764FDB53E38EBB0424179B74D9D2994679ABE184FA31AD91AA71642C003BC423
42E4D9B39171FFD45B0ED070521A92953D27CF50C602E0FC60F0A5C913DD4E2C
74E05322159C1ABBBEF437E5E3B1EA746FB24490254580EFDDBBFA482ED11CFC
4FC9C8FCFCF85745D7DC092DA87E4DE9B735F3949226C96E65E2254B9A27340E
8CC84B583D38AF2F3DE4F6613B03A900D8DB2B14E7CF9F8D6F3741362CE4FDC6
BAD8778D4879DBBF12059E9750685E21BA1FEB02BFD92BB65C4951E4B3CDBABA
3CBD1F6235151469BB28B5C8C1BE683646B818C8B700FDE2FD46B625B61447C6
D6D46F13656F06DED3172AC8CEFDF77E5518F58862689CD17B7B7FCF0C7E5459
B5187366B29930718F695B82BE8C12801E7CE0C1B9A8998B1D12731F98EA2BA8
48883E0E2C40ADEE8D75092D44B5A18E75A45B4F01243251F371914BC8F3DFCC
DDEC4601D79C7390041143BCFFF5BACB14FB2FA841F2A9368D02EAE5B7FB335B
3AA7213955120FCCDB0AF3D5ADA7884A0B79DA8EC543F7C242D3B4EDCC9913C0
B817BD56E1251F966C8F8663F09CCB2B51BBEAF646AAF622DC0EA16191E4C641
73D874C9E16329502CDB8579ADDE94F0DCC92793C79FC752EF2D67938BFCB876
D23B044C3466D778F9E4B3C7487E0ECAD459A934E2B83A4E2379959D6F9D1ABA
B46A5A24A6EC600EABCDC855D12EE2E8ABCEF5D81F429B2844DD7C5E133EF945
1EEFEBA21836569685D5F6C7E86DF445A88080DBA4643D4C6585FF900F3AF910
E5B7B209460C49370C5B5951E94C5A7681DAC9C88675EFB6A0193D8B6B564D27
FCC1A926E5B01842B43DCBB56DE8AD3E6F4131815B859A8787B61476FB8BBD8B
043F2B282D67AF83C36E8D9CCADDF5DCFBD9E7800A7C714A3874BF2B39F38876
DF92D4DFD529C6FF697FAF2A9A221B2828F304040E422C5D4796381F6EDBB294
236610FEC3B55CECC15F4957171569ABA4C20DFC28BAD3620BA4B7A8FF006192
FC6AAB8A527D493AB7CC5BAA5F75870DF7D275521432D37F79EA6C276717691C
EA1C0448215CA65E0D20596AA0920C7355D671EBF50F4496ACB2B775E04A4C26
FAE816F73A8CEADD7A5D0BFBC44FCF0A3077FEC7FEE683E43CF2C4D268152F12
B2EBE5D51E42E7E0A16B35A4C615100C4B8478707C7534877C5403DF5FFF586D
77FCBEF0A07822FB1FF422C645841FAF9CCF72BF70B6A1E1F35E34179BEE0562
27DA5BADDC8CE0792F7D1D05B0CF52B0F29158363C9F64A6095591DC3526E539
037BB388F1AB31C517A7F19E4F2339FAFDC434B356B9DA7708AFD2F44C0C385B
F41F79D8E3875E02DC5F20D970A4BD0F28A77CCE8DBB8EEB07913EE26A5630C5
28E61DB92BF15108A736099D428E1728C8ECFAC189DE3298B59695463A99CD90
3AA95FF94AF831C71F2E32F3AFE82D0E98C223C4628074BDAE99B4939E028F24
EB74517E91319B5AD10CAEDFE386B28EC9BECB8CC306346AE68AEBEFAD46B757
B7AAE0BE0ACA51F24C7BB98514E682B4F1B1728EDEEDFC1435738EE2600F5E17
7351FB6ACFA3A497EA3373ECCACFAB76ED7D260709EEF4B8924836292CB95F2A
5F0B670B9CBA7FD7C30E1F17CF21DA9775DC70E1253FB0A3269E7420CA74A27F
A90BE1AFCF3316E5BA3F6326F2A64AFACF0C82B53ADACDB3E99F2788375B7938
FF142EBDC51918C1E9618B7F14DDCA863EEA54BC934104EBD550A671F597A120
A011C24B7BDE08828216DBD83F5B3C01965B6C0D39243BCB787AEA5C2E7BB155
4D357750415CC49A1690E65CD919C6D8703EF1E8A44C52D21CAC00CAC27B223C
E54B59F84C5353C7AEA5DDD829B3CC95397EE32CB65D32D52E26F2825F1BD954
D0450D5519C0709834240E6758795A680ADB9774AFB90AFBE9701D2702A6B2E2
938456A43FC51209A9EEAB2418507262B2F699F88563951B0F43FEE244D27913
2697B9A8C6E344033B202FC28BD01EDF68AC688A25324330568C8DCB06801950
3FDFE29EAB8938B4E325F08217A39BB51121F8E9B1DB3FC1CBFE6DD7A5DA3B65
01C89A9CB0A2E0417BE38868C914AC5A5E74D6700E677FE10E9132A6CFA79807
511D5E3BFC74B9DC10A91E7B90ECE6D981C82051C24E5DE13FC123AEE13D1342
DC1A823CB855D6338064129B9A7AC03E13EE261B6E8FE2C6A9AF256540D197F5
DD5A948C35F8E491799A64A61E843D5BBAC00D8929A7CDCC5F092849905A6806
A5573129CA2A8C152BCD736E1888CDD91DFF3D6443379CABB462EA8A9EA03CF8
64EA104D0A7EC406EEFDB5271A450E4870B06C5130D98170E5F81FA43AA15EA6
BC9E3896F9FE43EC2F9DEA058A35257D3CE09A6D7C71469F1D8A24A14FA95746
AB19882E1812EFAC92E9FD7B097C706451E76C14FB7A7A779C5F8F01B7BE6C92
6E5370024313AA5FF50693EF867C389EE7222B7506C4B96B44F4069AE5999446
74CBEBB13A19003C70DC3D4481D3A52565C6C684310625E410F11FA6123ECD59
964C535630701E884E91051A9103E577828DD473D7A707DAE963782FAACC8F99
D6E4A20FAE1C784CB5FA12A53DDD560582199490A6D75F6558CACAA00F727B31
529A9B10C5CE94F167A031FD5AF210362BB9A54683F9F29837F35EA286563A57
A13FC020D63FF193851E1F0B016FD46A533D1629C9F6E906121F65311C311188
89B109BF3AF25710FD2B16BC8C122076966A2102114C678B168FD7A36D945234
1321357D49E2BE7E22CEF45B5C44438F9167F10A017652BDDE93B6AE14FE0567
85ADFEB7D30BED6050289B19BF262CD57FEABA75573ED7088011D4DAF6DAF253
7111DC39A7C82378DED9C9B527AF20B83D7A9A507E420FAD49D03DF5915B2D80
9A8F4BBD2264A470AF514BEA38A7CC96E6A400BE9ECDCCA81D5D12F3210349B3
99EC1E82A867E3C0597751CD3F47C2C0AC15609FE391F0101BE268C2F7675560
6C58E7ADE0DD9D97186106845398212B71C068901FE3407C435354943E28A107
76FF2752AA234EE70CF6630949A1D3176D786AD677C18C9C9A66A84B1F416967
02DD75CB02EAFE92306CABFF4864C46B9D59F0A70D1B6BC91D19F50ED12F8113
B27AF506A3B2AB8AE87433E09AF2EBAC587D86BC6377FA6C4D07555159700ED3
6FC5687CB2AACD6CF23D848D05AC718223C567FAB6B287256EEFADCBE8A5598D
A819A2871A005F5DFB35A174818D6752CEC36F429F9B61F49561BA49E90DE4D3
E82C25340C918AFE8BB4B133AF0BF452A4DA36D527B1A4D6D6F827DCE33FC1B1
7345DE636069509A7CE1E75574BB898BA7EE53DC78A70CF42357681450BAAF12
1DC07879C4FF7905267A3E1211F79A3264886203F7B1E0A0242F9ACA206C2F76
0DC53B5FE7AFFCFA6E24CFABFD04FD01E89C18F3D099BA771548FADDE2B62C55
B25300FC06E86F59E2DBF800FF0530E29B9DF45677B6F17623335E785AF4CDBB
BB10D9D9EE96A9CF1CDC2237167089ED695D80AD4F7A16C7DA9CA0AC0BA2D180
87AE6D534F14B2F51C3314A6F555CE39AD3C4C7F74DC124C966F68FAEA93C558
9BDB04B34799F617BD8615AC1A6D6020D402B965614A75BED0BE8F2BF4D0655C
8699E6309CA4D081459802CD9D19A1CDAEF489CF081A148C7B9EE895CC183CF4
7B3D8BF892D54ECD8734885E2C2FCA215DE74DEF13C9F7EE5EB96D13B8374771
2EE04360901D45C30D069EE2CAC65F8024049E42B101443B7CE45A8040247B49
99E08C4C791498D559D6525AD2CE9A0D72162BBBF1909C9A91123163CEE45AA5
7047C78EA52C64D13F8EDD6B51F418739221EAAE5036FFA4D9BF6C174701673A
3ECEDA8DEF594528906F5B965B5D3A7940EB340C089F0D361BD4CBFD3230552F
A3E34401817FE0E77B72D256A20C70536733AA28EAE7F393A4D5CA5C8E30B898
2E69F438274D073997314A9C87A5D725FE4AFC1E5B46C3E113F1DA126A8B6A89
F78DD00BACE5628964A5F479FBFCA4EA26B7CA7FF69499E1415DF29534D67039
14627B2AAA1686BCB21CD55CD54D78AC2B447E510F606F47EA1AD07B8B73606E
449D38C51B9487DDFA1CE0E43B5EA7836AE9F176F9AC1FDEF975EE775C2156C9
F0D1E1733988F499B99FE457F2DC4EB21313E18372AF510418A7D4E459E51A4C
86189FB7EB77B90F464E23B6EBDB7F7E31A34B3EC244F8EDE69B15E932E28DDF
9A3A794C653BB0AC56887B770FD88206A0096CC97E93004290EDBE99303B3184
CD45C78196E6495F77575E15D927799199F30934C60E9C55035F6E130D4340BD
5315826D98FEB7BB82DF3F4698FF2E930532161D850B96F4394C2565C8B7813A
41273914E754076F14184CD3E106D7B561CE35B3DF0B71B5510DBE906164356C
5ACE047324C8FEB5AEC892B190257F58CBC0DED525F34B1A9BC5340A87B3BCC0
FBE29ABAB91F607EEE76E8DB70ED7437D0D4CBA32C464B50944051054953AE7C
896D59FDDF8CA6389B847BDC66052D84B3A95F88FC008B55AB2EB8D8D4BC6B43
011134EF3714CD9AA64734642D31724537FDDA30A8669BD2F919D568003FD147
71954D00685BB3C9C637AF41030F30CE8D55C11F8035E8411DEADE09B92BCB51
B1E50CAC6ECBF7D400F32BE780C79AE780265E80E53B83FF9F94A5D71640840B
C7F0AEC396E0ADD8F600932ECA6F9043BC1DA9AD366C345FF1F2A0E0217A3D13
70B7F93957645042DACD0E165E8E9CEC41FBE447231BAFA9CB38515481AA18D9
3602CED7A48BA761AC7016AC919223F3397FADA62E7E370EEBB071CAEDD572B9
C5A9F153CC75F6244AA180962A4BDFD1555DDB3EC52820E4C980F8D21171D4E6
1284F962D5028AA8F186FE1BBE1AF713E3808DBDFCF149B15D6DA4B5E92B0AE3
C674516B6287234BF330E70FEF6219957C2412335252306335453F8B3FA91919
7A0D2BB7C36F53A0EC178C3DEAB34EA33D8F221F30C746ED036CC23C76E56960
4FCF62A858334FCD20D18EC7C531A5FD92B9221FCAFE99C83133EB626D47DE73
325713CC4CC6620FD45A1DD9DB2E46AA6C032D2C9A4B4CB0F86F61835AAA6C57
9B57961F1313C3B35D688E763D5D887D4B273CBF17F2130D78345FF66B93D52A
9F6E0FBB0DC8963B36FF07061CF3C08884E98B2DC54D933E5F962F50D472A474
64452A9E1CFC574B58EED27B78D3F133BE69862517F973F4EAD9BFCB143A9B37
01C49262319ECC87ACEFB5B4A8DEE8F867A6A7B379BF2011F7845891B633ED4B
51E5B422CD8CDC36DD2CB0C40F7F7BF6FF5504F81F18B081AC8C886D9A76C501
52D9BA34079CD46F83606506C4D3E2DD0286C7D38C27F22D575F7C93B0967DD6
5A95F7C234B980339563B57DB84D4DC50129E6119F8F7A033CEE083A07989805
D18D557716838C87765557C3B7E6B6F51BD3463D472A6A01055AD2E3AFE46449
6ABE3543F9BF86C0E15DD4E3D791BA0566DA2498CB136E70EAF0FE9F48DE5096
6D9E4E137F88D504DB1786AA45345DFF22A869C5C837F84C267145B4E2058FA3
2A5036B2E5510713476A416746266A80CCA143FC8CA5202B675013906D98F857
65D99721E699D4203CFB2688C6B3551B145479BFF68D98AD752E6BFB7BB1B190
872586E1E7136BDA0C302238DF70D3823D5D35DB52601F6C42FE2B6C94C24128
E2D864D852A9A05BB2FD24B209023E3659D3E75C18CF03E6B2E5E6EAED4FC188
61A80F32423A8854372F8AF2EA0F007AAA0614B085944F16B1494032B521266A
F9B531325C003AF49BAF43D88D5BD6F7331090CCF18BC2E9D8B67AE8154FB299
D6D96A6773C5B7D9FEF178B0FF6D36BCE0774B603994D40C96A2B89588D7DC5B
8AECD9FFCF04522F17324184B9DB6320CAB82E9F564F38D903CD74DFCFC191E9
A7F4C813B790B5D515F855EC360E5413D15314F52055604FBF5CE6E6F9686B9B
E20F36B95F9779AC06A6D30DD0C5741447AD95A98BB3E9CA877FB811CEDA0DB3
1CEB12354E2B4615EC4927FAFD494C09D37E34B27BC04840E66C16FF728C415E
2B8A7A68FEEBF3B844F7A165C111AE49A96CE641193CB7554AD45AF0E8252E53
6C1DF48B0D9212122166B256F4C85A50D4B222A7D3BE4C601446F34C1304B9F2
CE6A4E320575AC29F5F793248AC53F13A6E19118EF60706AA23F548CA00A8B74
1F6B49997E9D38AC72F6CB99CB5B2C627655675DDBF61C2DD2CE213A102AD54A
C5E31402FB57B09237E178A654DDABC940B098C9F4AEEAD82FB22265AB14
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
%% Utopia is a registered trademark of Adobe Systems Incorporated.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved.Utopia is a registered trademark of Adobe Systems Incorporated.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
51E19B88B09B6E2EF395887CE66DE9F4DAD788554CA9860D4450843A3A99A450
1FBC143AF860335273A94E4960625B7F804FEEEEFD49975A9D257F6F1B1674F9
86C6A4D5957D856EF3BCD1EC5799E12F4A64FB3A48BD39E1555F059C0C5E88C1
66361E9194511B8E0AAA0718A31AE012073B21680FF93E48E0EC1669970C454E
7E5D796A23BE1943531AC5C12CD1C5CA1FEE46039799BAB1D6B99AD2569B43E9
F2743DB4167E9D2581295BECA7EE17A90E601FF5B7FDDFFDECBB1E882AE82292
F6F46FAD4C8C1E1272EECD29ED810B0A7214FAF236D4E749563B3AD1A5C09010
BF60478E29A022446205121176E2E0A3A7504E4A745A6BCBE22DA1E36F966E58
11ADAB0817E30355417DE7352BF4EFDE2411CCB1F57928C67AFBFA64E0EFF383
57C8EE45C93A494C40709E55EDCFAFBB672882A031A270BD9E46EDF5D762E049
E6D9BC986A7D7A83DE016901A45C0E13EEB46CDFB5424CADA9CB6DC92F990B17
BB383C6DCEA8EF8D69FEF91E21A654779148D42747E98EBA3C78134FACBCE4B9
A493AF229268DE3071DD10B188D697A6CC355BE2AFB4F3E713B1FB9D975E5597
3D08F7C936125DDF795F8CA81A98F8AE230AA8AED8C2040DE5F9ABF2868EC52E
DE61B67B4A0FB2AFAD3A5C3B4BF27BA891C938B5A37FA3B081B2485C50A9830D
9F9BA8A98439583F9FCDC51005A534C052C9E51AF57A7B2F10AA5BC2885F08CC
0CBCC5720C4266B025DF0C804A6913C95B13957C8098BE1CB7DA81FA9C149F6A
812016384F6546C62F0C4609E63EEB17C167E1570443FCD3BDC6D40FF41F60BE
57B6F2A10673088A9B15F981EE2189F18AB76E5FA1B840F337BE8B11F7055F9B
7AC5B4EDBBC352C1A8E92FED0EFAC5D1B502B12AC9CE61763D524536EE0D954F
44AB46FFB5A573D3844968562D1AE63F8E8D965BD8D79124E788685B93211723
15105BBF1646253CC398E248DF3EA93C1AA74F92AEAD7C19A0E280A2C3B8DF12
F300700FD189302DB469D81D0FD19C6E5B45D33D8C69D30F3E6D4DF600B8DDCD
7931E5CF3898713B9FDAC597D21376AE5CA85D6C30DEB1309E94C9653245D5AC
0CC86C3E3CF3C85984F5C1CB17A460F1B899B4CCE6FB7C7698197014C9E2F188
9D108C5FFAB9EFDD50E0E9404E76C96441163AB3E15F04BA9EFE8C5A61EE11B0
7CB681B9F2C64AC365C451EC5628776CA6FC00F6B83D33E8496E88651E5C48E2
88078579FF2180F0DEEAEC30F880F99229A929036813952D6B1E15A51D08E7BC
F36B8FF289CAF6BA4B7AD8D4876A8BFF9E5178A89DF5158A61A838A12D0269D5
F9DB348304CE2D61690B31E8F6E58F6021A6C767CBC3309933A1313D95C608C4
3B84B94DC34055ED160922AAF2C11B00DF5B0D0FB1E4B5364E9B5A0ED07E8911
0A0E44FD03B20F96993A86CF5F95040A4F63A51207ACEA4F93E8614966D59EE4
33E09161BC69D21AC4F115560090F0342D4FBF162E2D3AA859552685785AF2BD
CBD49F4CA39B609FE544E244A68E74F04288B9E2EADAED78CA6B1FDA345FCADF
7B66101DA8FF6AA60DA42C5E456862B42523907B4E9BF13F872380522A90FBB1
D6436170A3D6383A203AD8FEB9231F68CD19BA8FC48BD79DF97106F10453F042
B71ABE8E3840473DFBA5CDD3A16CB8E6C84AAFBD92F03381173924E6DC3D1D93
0D5586AD5E7C8A927D947E2A31951C63F5EA09B8FCF487BEE654F8A53B3C4935
AF0785E90C2D93FAD770FEAE66DE76D23948895DF21B54E015DA3C6DDF3540E1
232B745027B7CE70628A2B39A958570039D9BCC886420228E27557554BDA1BFE
1969E63E0992F628716D0E106521186B2BFC4121E617C28EED4F757C354DCABD
B4284A40D1BB93F53CE98D067538090AF3A183115B917320F990D611B923D549
EA4C8B8939DAD3FDCAC7416E4ECCE839C7B0F3377F3BFF75DDC0D4B99B9F9E0B
4E3601720E788035873AFF284D7A6B90CF6D5078F1AFC0BAC4BF214AEE0300C9
965CF866E58E39BA27C9B6ED31CA6895FD72B7B4177C9745B866A2DB1B877D34
2197311EB2A7F3EB20F738F371ACDB08D469FAA3AAD8D28FA0A9162C61C69641
C061DF17BFBDBE1D6E4A85FA5462104255A34C38B35AC89644588F8ADF789662
C3CB5800E1EF1CA0E3E91032C3718543066F7E02555E1082F8E859643E33AFFC
F2B17C1063AF30F93DB299117F0C2F5FA41ED7A40F6F47CD1410C601C40B29BB
687ED659BAB212A112D3C8A0A3D3093085EF4470A916E86C7426FB8DCA85CEEA
1EBBCD7164DCDA0732400C5D255E0FA56B578B999033F31B7D0BA2EFF1C61455
BE4BADE6118F4D92D3277F15D4FA146DD528AF830015D7D80E0A7974FC52EE48
924EC6E72EADD997A172887001E098C81841E2DE908476CD59E828384EE987DE
DDF0727E311D760A1F9C26C4F261A123DAD45965CB3E4CE68FFD0BB013E1C537
6ECFB824073D3C5BF40830A73EED605171E0B5E6C27BB2D72D9659D413EAFCDB
9B7E80D6ECD24833C0CBA76D4A032C7CC25E5E14652991B0C2B5DC722444A9C5
89ED35F9B7A7F932ABA4C26B235B61F7CB8B58F45C3F7C67BF5AD328803190D7
BDEF2382E1EF671DC8EE85B12DCA3E96CADA5BAEB49A070D3419710D6A753AF8
F5CE2D9EA08C852E8692FFA585A6936BEE383A0BF9851D7E4B1168F27ED11765
85ADDA49515EA2748E06F37AF756A920D13D3DBEFB4D78150FA934D6AB6D4407
F048BA5E9871A0C9E3CA780928C4821BCF3698AF55D76EA0130CC7B2F7DD8B78
E17BDDF81CDB07AAD9A5E0C996C79498E7F611F7D337D1BD52F0E2E6AC6157BF
F02A7192C299EF3764468F1B1ADCECA168F6BA822D6591CF47AFAEA662CA9BFB
AB81334C1109434BC4D8B8E5E05084343FDE7CEEF020DED8D22B4C3D861FDAFD
9348548B9ABC7684724C6E8AE1F561F38842EF3F56B0D0816E2F77FEDF4EF172
302C0372A27B24032854B34F6DF3B26B7144D97EC358BA240694791D463971F6
0A56BFAD8971B5ECC516124F728A9FBFA792EB06CA917A0BCFD7E25AF82CCB89
FFA040283ABD911BAD30F02FFB2F1959FBA558F708484A68EC5B7E9A7BA56DFA
7C81EFB6EBBD8583F6B41D08BD11B4DC62CC969C433F1C4EF5763F158E04B45F
C6DE20C001B5DA2BAA96BBE2EA64C3BEF13160B567D13798A99FF88A7780EB22
CC9C10590C070D154F46BCE2BF9DF236337E4F15691576AE45DBE124AA91B559
4D91EF6B99B9FB629FE7653658A771984262486365ECCD1BBDB210218AD7DAEF
6A8A8FE7596CF7FD054EA84D7E62C82153843C6F7805A450898925DB5392F3E8
DB2AF78D77D02D39EC1165C5D9572A20B23954D2ACDBB0186538F39266CAFFED
5E34F70561F69089D312B3BF0ED76D228AB453594C75D28B255581D5CE71B934
DD045459E883149A2D4DC7AC66134A73098A1EC72511D668F3CE739731BF2934
F620EE513CC33F3A38D6A2800A127E623F3ECC56A87B0624F57ACD481C96626F
328476187101E35067CB41F763FC0A65022950A81B08B5F05769588A51854C19
82EEDF647019BC113A3E9521C32584A34DBDB826155ABFD0D16D07D3673A0832
CCEFBA3D2977043F25D69BF3460DEEBA104C1D40C8DA988C6FF06B7DDD5B6868
26B5EA7382E0C1801B01628048029307D8168FEC0119ED1DBEAA79BAE5340278
6166B52D3B2DDEAE6DC31CAB06E0148C4910E255EECA5A1D957F45AE3BE83120
9ACB2EE54FAD85B7213FB92D21BB87ED4ACEA814469DA370DCA4663A09B3C5D8
293EE067250BDDE99E77670B95FA59DEB7BC164741E851ED4A04D40DD47373B2
F29909FA5C8440F9DF5D27D2ED7271C32F9B2355F42F922CF97DC4F57EE34F8B
F633F656CC1B2283621D7F3E735A493F80627C1A431486EF03D2823A4E3F9E32
3C47912F989950D4D12950FA0B17D93EAFF0911FF35524F5D7E665024AEC6437
7457822E051A73839EA18E9546C08C3686CB0DFF2F1F05660FF19267358C0127
793E05EC29BF7645B9308173B84121236C0E25F0C33F49539190F177A144002C
186B3FEB02AC3AE5CCFFD948D0F6CA1AC24947C31261DFDA9A6A7A1BC4BCCD4E
0EDD5B0E230A34361A1DDB236A85FAFB8E2FA7F7CE98CE06D7E62809825F71D5
DD289E60651AE837C49B6A5D8440AE0BAB2954367738D6EB53D9EDEB877C2BE2
7882CFED250933CAFBC2CBF5655F2B2974614DEC2A328894E437FE94DD3D8880
223DAE6F2B4E61E0F035FE148D62DF3F80F3C4CE59C85D0FEB7FD439A347CF30
4AFD3B91179FD995E5023DF38C6954DA65F6690AE32073D738733C352751550A
30E8840AC5354B3A2412CE321C02BBAA2BEE4DAF716DABA9931AAD2A3219D057
4456EB2AC5F91494F52F828E510FEC2BB78A97F2C06E84EA1E3B3DF163CE32D5
09438C43F93A29263C82E8A20C92EF6EC74EBA5E92AC7023CCCACE72CC66CBBF
49CBCB06166030EECBB62160EDBB0799AFECE4ADA08924C1AB303E1C8AF5BF6F
E01F55893B14175381E2DA5F3508C48A8BB3217BE484BFA3D1BB2F70ED7D9180
ABA8D9B716C0219481E6454A486BE720A5B543C64F6FD65D3A9CD450085992A0
EC3222C1822F4C3B6E6ABC0082A2BECD93124D6ED20F9EAA3E385D1EC21D1A96
ACED0D8107675990FD5A7DEB58BFF9B2CF0AFCAB0DEA3A8BE3B682654E88B0FF
27E007E2CB59BD81AB9EBD1AE555B21A2E2DEFABB5D819036701FFB19A5FC7E5
4D643F7C2A0D75DA3CD780C6C6C96CF09019821E3A978165FE40F07086758AD1
FD1852339A38D7BCAF53C9CC1F0927DB72792BAA7F2B8C2DDCD1A814E0C87841
CC9958B331E3119A774B9835DF08003075C522598853720D35A656DC73CD9710
FB845E4ACFCD0152F3EAC944D9771F88668D17CAF55113471F061C2E0E2A3BF3
69ED27FD4B00EA6A05556323286CEB879B0930E9787D1CB2F364BB2B883DCA9F
E0A023A3DFFDD38D8A182D99B957552917F7EDAB75826B436E6034317CA62858
038A78CDF2BD840E733E664CD26055E8C35A91CE7EB13404A04A63AFC5ED9462
D759009B19DB607861CB7A553C5072F0A95922F60386478A61C1316CB7798708
FFA65E7D0E93CD1A1490784231EA6CC08DFD08CA2F1AA6A1642A918E80A35183
6209123861050BF5D846C19C8CA9FF112DE7F20384F08EE78F62509039E8A40D
A1AE2CE1E366FF190004D7FF66A444643D68501E25F7092049D5DF8423A46914
E13ABBE0518FAAD04033286B7478027FFB0F4FBCD5010D94EF7D22B2B8E48DD7
49255634A0019717A3AE14F384803FCF34FB778353447AC326786CF65A2BDBE8
9B6F59551EA794895FF9130D8F94F85B4CAD38F0B9C8B1C6EA139168F5ED503E
5E1D6546E2EE18FD20F24BBF81ABB89CE842E8994A5B6295301727FC27F1D49D
5FC6DE20C001B5D2A8B1ECFE3AB3AF782599BF53A5E9BA72A14E50D6AAC1E126
AAF3018B39866B13ACEC43612DD8099F6BAE4041D8A2DF8A27987E96279E3AE0
2DF243B335B5B03358BE427F33D14F226220DFBA0F887D0DA522E23A0162924B
43C08B7ECC2018FD2B60AC4D52164DEA4952C9998C5F523AEFEC13B4B98D2601
E9462DF4721D8427E5A944EDD522925148956431D639413858E8AADBEC62353B
E5AEBFA325CE8096FDB5F74EFCF2FD1282BD3EAAFC925A66C585B6F3B17B2CB7
F48287F12C0FA1490D2E152719E996ABF6B8678B159CCBF80C8C468A05F542C2
009DEB8841CB34E5A98A1B998037520D1EC2A949C8694F13F8193B0E25908E20
988FBC45AF91DB7DC67117E1E7C6EF098916187EAA6B23D4426BFE9A47719A6D
33BBD35EAF8677292E71E8E353D74C6381417A645359AAFB74F9E40E5A19DADD
5A529F46651B1A062483D5D9B2BF18926E15EBA812C50D0BA5CAC1F456B7822D
4FF21F4A9096EF22C1454CBE853DBE80228DC1ED910F0675F6848BFADC1BC569
109C634ACBC3A760ABF9CEBF736CFAE5E870D6CC1CA8D5C33CE74DCECBDF7BD4
B7FAED7B610DCDC65AE2ABD80B48CAEED3F3A1399FF91F4FB98EC46B603B08F3
4A2F1C860DEA566A9BB4585865A00F835168BF1DDF74197CEC38C04D96132B0C
35181C92CF64E7E6A79BDBC4F6ECB3DD383DBCCF12CF0E044EA3D8E295AEC158
2394D1AF21272D31F0AED1621CCE1A9BDAF603292F96FC2E89E08E24484FB10F
D11493B6BC3D4252EA41022B6DED7E081795398C0BE9BC7DF5E6D6F66533698F
A5322D83107A59B3AC5E1A129D069623E3941AA9A28F28F8C84723B2255BE5E9
8ACF79F069B732646524C9B19956A25F28FD0CDF7BF8C688577A9B225AB8F282
EAC62792F4D2BFCD831C74E514FBD81B239C4EA3178AC2BAA2F5DCBAF905C19B
77E034C891A8CB5A258BD3EDCA61063E835CF60B12EA18AC2F079A5A8BC6D47E
B1DA5AA35F2254D8267FC356487B252B5C89C212DA33A144AA56E1D1E4EDD740
F95E97DD9B83EE1612ACD2E10DB8241D991BBD44DE8D33B021FCEC45EDA913F2
2A9C56C52D6B9FEFF83777207F8A833037F49CD0192AFF72CED9E02D9E46CB1D
250EA7F973776141E31E912D08A7667D7C591B61E85C282783F6763D26A09F78
FF583B3E95EB856A85E17AB46DA2993172AA53A0D27431B1D0E6185370CF2071
6B559A93F96682383BDDB19F5A1ABE13802EBC6CFB22842FE64316C3D766B66B
27B6E4C8D2975DF56F5A09C1257CFBA79110050625FC5B156302AD722B21E084
E363C8B4E3C76F6F25216F2FFEC24BA30EF9E9ABDA5E209186EF0E9DA75B722F
2EE2D3E6538CD98393191A1534BE51950B6301CE4BC9B32EA493E607B51D6C62
169A63B53BB4922061F80D39E071788CD2DF0CF38F782C90F22E341622801A05
BDF49DE4C1B474B943DF0EA5ACCFB566C25A38177991F7FEB5E6028E03377F7D
1E885B1306985427FC5AF9CB8A6362CD4D1C6EE919C34119A179D6492D71C594
D33B30DE0A6B1A98DEEB675EC57F4DEF6C9D6AE9BA886A31F31DDC75509F64E9
9E0F04BCB650C6ECB7C09587B00B65D71A4A5E6C8CFF28FCB40FD446F5695949
7D1C45303A5BFCD4BBDF5B0E94D70F364C0B6A48445E64140F02A59BAEC0A477
50290D9BFAC96F8B14A1DDD2B86E7A8CF2C21EE1C496F1BBDFA06AAC62451248
5C1D5632B9F43E42D7228A68B48BED8E7F3E09F9302D1232A122DAC6FA98B289
913520D13A676C0CF80185A1DA69CD4B58AF33A822D20DAE1DF953DD424F82B5
E00FEE32F01C9EA88EC0BCAC6D1C6304C67E36721E6AF09D0F40A4179A625F47
A8A79A49B13B7A62E15F0374508ED53F194AC3A1852CE89A5003B433359862DC
B33906DDE3119DC6CB752B7DF46A5C09006A48B3BEAFCC759D6C6BE328F637C3
7DF6F458C0A1276C4E92391932A5B6DA8AC901602D8A1B1CBB7B1508B6B83923
682C1E06404C734313EB35E7400245567365759BC9BE452DF93FB51A7CD255B0
2DADA6DC5D899AF34C0CCAA78A8232F8419D057A413F75BE85DB64E221269D56
6EA091134AB6974E13D88C631828CCA57555EB23811A94600874033ACFE7CCBD
4092CE203A533DD48FB482C3BC183690D454B0495D13F867CA40D28ECAD1E455
CA8C5C8B44D97378E31F995713E44B9D8102AA651AAF1C7B119AD3F245E38634
E3AA776F7538DFD17B36DE7B024B4DFD53C8ED6354CE63D696EB2088641D9AEA
E65576A3EF379AD753E4894D8151AD30B4C9700C1367B3D81AF0A941719B3953
0E5DFF5859A52F7867C683D88C88E88583CD601C2603DE25EDABB3D6C5F070ED
3015D4AA9D2CD443C38E27ECB7B4365A79FB98C9ADA1FE9BFB1EF98E57D3C180
FB8955443960EEF27F040B8543D09A5C554E2D45941E7AE510201DB064107324
16858F171F70BA23CC8DBA0BB850ED8A80EE69D30A1AF4D0D2B2A19D10C7014F
4E4921EAF36025C7FAC97933BF00D8B9CC10F1B313EB20F689CF10307F36C4A2
AFCECB12414ADCA967488B6F6CABA635C8AF220EE0F08D0DCB8549235BF93F16
7BF93D4385BF75184BF74986F66F5CA2A9BBC98C1603680EDBB451B551150081
7D3875461FD95E2CBCC645BA13BD6BE266BF0E4D4CE0F7A2AE433577F2FC043C
8DC5C07884D5DC9332752922B0B294F7122BD82D3575DA03DEDBC7B67257BC90
24F8E326AF1777FD5318E97E0E6CE2CF0F2B202E6C47FCBDA5A093F493F52946
522A5801B10BD2FCE87B1820C42150008FFFDCAF76BA18203DF55EE145DE1F0C
108DA1003B76C9A1B705CC49DC251202FBC4843DC4EF185F637ADC98CF840F4A
F54C461091B35DBC8C60420E3AC55C7435401F2429C9661A9986D6B0BD19202F
6742032FE888980B0781DAAA348B10645255B1E1E96311DF9993D2AD7DD73CF5
EEA5662CBB1FCD40EE8FFFDC6A1BA2808F11553C721735E52522C63279F6A858
B71FD856AAB0E942F9A3D467F9A6AD2AB3BF6C3781E3FDE5948A4684240FC960
DEFE53DE7E2D63CE912E3574C796978475560B86D1E5F3015FD31FDC369BA92F
7ADC38D7A95DFFEC1B38194F8C6D9AC793E559A889A49C0596C56E9D39EBD099
0F4B2FB6482BCB5DEBB1C6A6BDDA4087701AABBA560C42565AF4470ADECA7EA0
728C6471CD778818084659F8BE220653130A29BA1E2EDA229D7F83A685EAB8DF
B98B00A96D2ED1E4D257C32349D02A8D23F1B4D5CBDD3F53719BB571F3B4FBA0
420E81B0A20068482D2F1884F2A76430699ED457328D157D2F2A766FE35B2A7E
CCCA93F008D43125DC89D151D76CE56ADED3AAE0AC37D81E41970A6CF10EE29D
EB37DDF54594BCD74EBFFCA81A0A239464DF5DE0BE2B368F469CC7D0E5423277
D245E92870FA4294BDC068A61B0DE739AD3BCADC892FFCDAD36B37AF27259ED8
31BE86127E8E0E89C4B65B12644422CE6E3698CC1DD8CD7EF2F844E83CC13031
1CCC48F8B90152680AE689856334A22DBF825096CF283D0FEE36BBF246A0AE0C
75FD9AE9CB8FAA0F5B7C486B029E6E10C2B6E3617F3209E38B8F6AC540B5685B
FB1C9C0D8E8DAD6C5590CC7ED503B802CC27FD50C90AC96A355E377424BA8958
6711C657F37670DD1195DC88F8D49D3A4BB280D18F70784AFD9A3904F54210E6
5384AEF8B6C7C5E83AD1B8F73F39EDBE1D421D4311FF5FD9870C55B7ABAF82D8
258EF1D4AACAA208257AEAC42A29E993DFF35D453DF8B636D6459466BE8169C0
8D09A1447829804E13FA1203B9141BBF4788F99BE2CC16BD6EF10D99E1000D0B
FB6159E44C0E285293B8513792948BBDF2721951FCD94FF35AB6A2D55AF55353
B3A92A72DC916AA6F4F5FEB841C929EE3F26EE8992650A57748B498751964899
31087C8982D6B5A0D218237EBE4CA7AE163171A6374C1B444111BCA4EB6A47C6
C79E8591E07D49C82244079A9E06D1DBA55F602C826D4803AB80E1A3A054FA99
A6D30EDE8AFB68608D62E65B2DC0D9BC826EFCDB17584AE22BB73D3678CA2AE1
F424446502CCEED2DB1F9082DE9307F5E97779B9D31763438324DA1C65BDD909
7F2F1E3800507460B4F9331D6A7D3FF9055B5BCAD72482FC3DEAAEF6E4748E3A
E7FD3EC597A009DFD80C9AB10FB85924792EC263EDBD1BC5AAF7594E102A6194
9A20045A2C5527F1BF2C21962690F98D5B4E8220CDAAB261C4668A7EAC8CFEE8
3FE96580EA52D024DACEB1816005F13A46336CD2259395F9FCF7BCD74A707393
131BE205DA4BBACB69AF99B1453DFBEF750BA8B0FBB152028BE7C67D1CD17A6B
7ED658ABFE71104E7703EF0839AF47F5F3FD6EEBAAC514A42B45A0EF5971B202
3D84ABB18035737D8FEBFB0508A870BD024AEBC3C0ACA09D60E190C54825CDFD
42FEB8083998D286DD04EC72C7A3BF07DDC7B84C0B4A8233C656C3FCB0804739
8980AA50C18C5CBE6C2A91C528120C0D96040C65E1DD0E0ACD84D43E072D4A41
7B3CBD4D9E33BFB5C70BF0395339E53E263F7D1B4A8F90B14A7E5B702FD3A5A7
582A583FE7567791416861A6DE78F9FAAE56199825F0D9061BB173A54669FF44
C8BAA9591DF4C905C5D570C4C889FF6E34DA6FE918E7082B3606C74842A9F8CC
C83A9BCFDD7E622FC76939163EAA1B892BE5F05BAB96F90855602A07D8012180
1615D6C37B6C475AB50B0F60655A2DC8B06B30E7F816D65619DB735A7367DAE1
B68796938650074DFF5210C19E93CCB0B3CBAE29E46BF13398462C3171D757DE
1530DB80FE65AA4FD6DACBDC40EB2EF6F0FC69B0F51A44EC15D67BAF577C3981
DD4CC1B3F589CC8BB4956A4931927AD437A4043E202D0273F33AB5B329346A5F
DC1B695AB120B53011C921CB164D3E7F42656C12DD51F382B98FA1B38D365710
2B0F94FBEFD17EBB62ACED051B8B8F6F9832DCE73CCE2696C60129D84B8EE565
93CCC7C6A83E5EA6171D97C1D42F6AB087D6AB8309F02839CBAD948581A19B33
BE34DC8B7C48B7CC48D99DFB4194DD4AB3AD45DB0ACF04EE8EC4718338593F9A
0815B0EFE711C23606DF076B758A317D3C80B1A70B43E8FCA1DCC7AA83E0DE7F
EEBD84C160FB1D79C13013F8FD3EAF38425C6665FF3473CAF698730476BCFD1B
5BF8E9EC27CF66F509BE3EC0F1492C2FC9F5B3B1BE7AE04C0CA35BF7B5CC8C26
A21D3A27FCAE6D9027AF0C1F9EB305170318B20FF1829E20D56498020813D6F8
6B9CF6BF32D2A712DAEE28DF509B2CFCF7AC318CDEAAAD55546EA51EEF540BC5
55BD4B0490A124A76A80BA68F44292B23EC998414F7428B5428C91DE71FD575C
6ADE5FA46BD517933B3223226B760B35CDE282F13D3B3C307DDB55B14B3AEE72
C25CF8CC76003C390E7E8247757063E3AFB985A5BAEDCF8EBB3F8DF5E91EA710
60A8BE062B748EFCAF183E1D732E64CE6AA6E9AB8F00A080E9027FEAF9F5A299
164646EF4F9CFDADABB26CB75AFEDD9337A09ADB385BDB052234B26FE6DB7F1E
19487433D5550821485E3D82A817B45C3F3E02C1DB262A16DBD6A7491E0E9DDE
26CCF1A45224E44592FBF2B7D2CA0CC7DB812AA8D94831944E7EDABFD4E30902
2EE4B2A8AF7F2F908CBA2280F1BFAB65FA1227558117D46EA86FA3C6B5AD8D21
5ADDEC750FF3254BD4411E982E4613915B5A2C7C5002F4436C5A449EDF27632A
B6FEE6109A1C8A1B2EEDD21A48D20EA8C2497AF6333A23292B40A94279AA582D
D42B0C297B98A8C47A163D998310E3357B171C927C2DD2FC75CE2F3C446A3930
2D93C505B7E1AE35675D9A99BC69011D7653D2B340869DA9B056402EB93D5D45
5F105815653513ADE6EDE9D7EC467D0897398FA9EFF44967EC287D693B7F3A55
01A564BAA67C916509E8764239EA5AE31C4A75BD8C4C853C1F9A390A1BBE99A8
61C70B8A6EFF03E8262B36090222A83104B597E60F58D052ACCEF94660F884A5
889A540A1F0D8CAA2F52015D12C8EF960395395CDA0884C368A8B8E21826EC6D
C44A4E69C3062C855A17DA056BA830995CF657CB29C9ADC56945370ADBEC7392
08D42EDFB9B35C8E53829F3C158C53A7C564104A12E66EE2C2157AFC8FD8B220
798EB3E9CA87C72B119BE5F1ACCD776CCC521D3005B841408C83F71B31D84195
677038482909B8036A92E52D7272ECB27B1D0C46683EA2B07C112AD99193AD94
BC74DBDAEC6AD582CA4194EB2D9084C5F70C51017D8681257FDBB12287DFD0B9
0AC0611A8B3857E071F520C8AEA79C2D53036BD60D4E35AD1093ED106CF5C5BD
2F44C8D37E90F263A412B691550FEDFAD1895D65A9FDB967D8EBEE6D66DD2BED
F3EDA3FBC4EB639C795085B9AC7BE256F5B6CE1FBD5C189AC7FE93539DD469DC
7F3D35098C52B7C24CC9AF4A03DA890E6CB8C80DE32874BEF8686E3F73337E28
72A401DB454BCD412EFFBFA63A7CDAB026162A4997B592374A9BF3C52F562A08
925B3A02B4062B5C8A4F08592741656B618D16344BA5B3DEF8121282D88FA83F
45F45FCE2422844D937EA2C31AB16BF9132830C8C6A90BC4FA26B593E6C18FBB
11A67E3427B1468DA7556DEDAD425BDC1BBDEECCD84037FA663695FB3C03E55A
266E761DC2568849A9D1C18787E309577263E7810F4EF1A383E0BF1C01B6666A
6E91E885DF900D13E7E86FDD3101B8D2F452E8F9A0BC1C7C7682105E2391AA02
55105473C888119269FBC6226FE3D2F9A4105550A2CEB1ECF660B8310EDBB356
9022BCAA6E91269F4FC5928FF7E51CBB67D5D2DA9E68A45022062C81FCB0ACB1
F3FB2131B22203EC716A0C37006C4A8942AB354909B9914AA022EF216122A9D7
47867EB25755EC5A3AB82F035C3C37DD58E6051BAFED3AED486E1E7BF6E43EC6
30C379A1B3015389719435EDA490ABA0A4ED79BFE5E95921B4B4480D2C20AE57
B6AEE6A054ADFB5797CCF5513CBE85261E87664865F9BF3AC3257BDDEFC60D62
3B7DF8033863540D326BBD3A5C3FA6A0DD1B96C7BB3CD569D7B7D23303CD418D
B239E607A7D9923206A24E937AC401524D31EE7E3FB89D09752899086B766E50
64F9E3A59C2DBE0F4EF474CAF03B28867D6378BFECEA68853121A67617E63FFF
EA80B2DE18BC1B30E80CEF2B5BC762338932F7692B3B4BE31253CF5DD2730671
A2C2CFAD4FF1B5D2480B4447247A72A4747EFBBDB45319031FD47CB89F279F97
4414A5B477D1E62D4D1BF319A4B7F90BEF62033E8255019E30F36664FA91CF93
CAD5D160A70C087492FB349202F7C828E32747BE49ED18B1FAE3223F7FEF637F
6E8F8ACA7B621292AF469527C90574232EAC31DB596BA25014A0E4B33EA6889B
0F9E51756635B7C82C042EB77AF802A9B933DDE7BDD7C3BB9F493A209C54D534
9754D619B4CD5140C2E81560D1921A0DD4586AB9D29B54C3A1332E16E94A86F6
F524092AB510E30BD4BFCF0FCC411D7324C4CB625E35659054DCC878797D65B6
A8B685C099FA9656690F9D2B527DD613A14379ADE265CBE051D7DD95CF47A055
0052717B72635B90AF34984A26E19277D0EDDC75584BF965A1E8F13D67DA9B90
A89A82A4D4C164E17DAEE330B30845E2247594361A89F983EA9E9217119AA6AC
D2D6CE7B098DFA6E80337424449777B70E78F6507FC828A4F750B6FE869D0BBF
B23C76B4BB207CAE315FBEEC43F8FACE266A01F32857F0B9335F2238629BBD32
B8D49287AAAAFA76AD2756EC214132115EAE34AA5B49244382A9E729878E829B
3567884E07637D4F12E42573A524E73184ABDAE82CA7FD06061A4DD5DFE807F4
5470B9E348B5DDEFD9FD5055159D1B023A59E4095BE3ACABD7963FD21293FAD7
C2029AC95235B1A047A5F7C65FF2725CE34170F6E1CA94CD9007A817E70BE640
3325D1CB66C19E16D3C7AE1055D23BEEC37B82AE2A7DF817816281EBA5C389A5
56587B96692B8FEB20DFE6E1F957BF544C7638C01B20F68BC1F398DDBD7CBC8D
DFB7D24BC24101330EE70ED9C06FC29D92D67FEBF96722FC12EA1C01A50DB770
C21DADBBBBF819694A7804E072DD9D0F496D713E684CDAEE5A04E8ED1346FF04
9C4D7AF96F59F4C24CDEFA55C2A03AFFE2304F8CB6FE449659ADB49B0FE64C1E
B270557F40AF263DD656ED6007F0A62615141DD99AC897620CA74FDD317BB254
0B583FD1E55CE368719D0F3A205D62FAB7A0CF77F76768C7EB8AF231D8326192
521A20C7C6BF3B2E1475F15E7DDDFC081FC8ACC11C01B5B6478F611167A47E13
25B17B02182D4D2D8764D99D5F4BC521DF97B39D71CACF5336DDDEDE4CCF22F6
5112E49716BF2E8D5621B30315C130AB4F7AC0E13057F7A4C48DE2F7F20BDB91
1C1DE497AC1C9D0363DF3CAFFB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-Letters-Italic
%!PS-AdobeFont-1.0: Fourier-Math-Letters-Italic 001.004
%%CreationDate: Sat Oct 30 16:49:00 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003-2004 GUTenberg) readonly def
/FullName (Fourier-Math-Letters-Italic) readonly def
/FamilyName (Fourier-Math-Letters) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /Fourier-Math-Letters-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 124 /dotlessj put
dup 174 /alpha put
dup 188 /pi put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/FontBBox {-80 -249 825 751} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB07D440EF
6A6F1325CEC03C3A3F20FBB1DD06C21761D70838D1E83592E85E284B4270E83F
629BC6D3971271C950F0BBBEADF671311AF5411D45ED8085300D8E64F313462F
D04E2C3161217FEF562725FC5DC27438784EC45E8F533487F0B4622BD496D97F
F162ECFD0A3F379AD617BE859FAD42B9260E56747BEDB156FE844C8F7CB9A067
E940C5658DE86647C65CBC0C2C08D79C09F07B00890641C302576D48FCAF0EAE
D328445325AAAFFD80EB6CB76F52E22BF04678BA9FACA7B18B2CD01D95FEDAFC
DDB9720701A17522D74D4DFAF4F00E2534412DA11B60161DC23E13B16B54F7AA
8730C5C0AE9AC9EB6903540CCECAF0312A0E4E4D61402D7A7B1775D9591A2EB5
F284D11E9DE117B588FE6BFCC3C2965579F10F096E83A53FF334587BD24B0D3E
5783469281D7C7514BF9448059616084FBC5B2B797D96E7C7511784C9E290A48
088817AEE321C6C7E1D103680C8B1876C552361F3F6C2AE4090C120A08BAD8E3
5942031F8A3E739BD16DFDD228F01C1A01233D1B633BB37C6F1CCAB278FE8F8D
F6EF0C61C428EDBA1DDC254EF1F6109EEBB032CBC33DE7E1BEF1F4FF672C2D12
F48EE105D9B48C8FBC0C8567FDE51492E87EAB9362A1F3E3670416B0BC64480D
C4BE1681D05E3DD8B659CC8643CBADC4D1D4CF4190F7DE32271EB1DF06C7BEF6
013ECBB9CEC865C2FC9620587044E26D17216D2F99571097694DE10F548890AB
ADEA3D9EC11501D1F492837CF931D1CF1A7EC8388DA83793B661D8057DD36586
43EA5A9CF4C7437416A31C5CDA9FE54518A2EBEF1508E16AB5B944840D233F12
9DC0F470BFFCEA640B6CFBFF6FA5585C8E369D3B09C6A08A8ECA9D2481245BB4
CBD54FF3DCE252AA7F9820491384089BE8305D95BF3D75687FCBE284E3D9AAB3
77DDC34177C640BF66A3387FD8136A7D5EA4E26CAD7951CA8F67F8419D9B495C
1600D9FE3CDF0F0348D3C3EA3B035EE646944BEBBE11144EFC437541B45C36B5
3F1E1FA003F019265D9849EECC501082624FDADEF8C1E0F0CF846CE587DFF9F4
9C4438FACB8F871DAB5DE3FFC53FBD9B984B002F9552A3335FD13263D2876D76
BEC21F981F49B8CAB0F872DDEF7206B15E302C9207A071D513F3D29A2B1CB251
03C64745F23AF2CC8C8B621E9E3271620735C9C7C11C270B1C6BF96D555FF53B
4E8865CA38869A7EB7337CBF4871314D5D009BEC8C5951422C3492BE91886D52
6B94316E56A74DE14A0E8AAD7163D6D9B7823DB527C657944A22B273DEAF5C86
5DEA06501B0FC5300A27EF5A0FA16510FB9F6D14FC983E99D27F9136DDC7067E
DFC2807B3CE00CC05F6CA1D87A1C83530D8B49D266B9B4E40E5BCC6F9D38A98A
EC711A55C6C0D8C3F51330440DBE02AEC0C2EB6B1A43F7270575C6C33DEBB44D
1A29DC16E61D8C3C575ADE001A8A89BBB455F3817CF7182D1FB7AA42B67AF6F4
92D3A67DA40E54206E5062D1C743159BC389C9D5F00B4082705468F167630971
BC01DC641766DC254D9E98EB45DDA85E5DD5C024B24774975B422C912C9FB614
1D6E7B0C5230E9DE6E29C0B90BC60B67486D3657BEB26116420CFAAE8DE28CFE
D91459D645C92FFDC3140A4E780A9B59F3176A5C5AFB83AB20AC92EEBB2361DE
5FBB8B7C18E2A7B55A71827007D54E603D88211DE721FC84C21560E71E1FC313
776DC3717FB397BEC20C35725506113918E5F29C3C662800E45BF5E62E6E506E
8F49CE50FF9DEF3B4A4C1BEB3848EAA347734DEAA6E8C45BA8FB7D7D91AB2AF5
3C297A795976B7AAAA4C02C18C315CD2390E3CE5611FD77CE4D53433883F2E12
BBEEF13F0EA2444B154323E8F7B43A98AE32F159DDB4A16140C85D55AF2AA52C
92EE85C378819907762A2BC22B5323164D1C34DD7EF75A885DDDE88D4927A3FC
408EC625E310DA3E7E84BDA3755FE79336B6ADF15A01B991FD823ADDE9375430
4CF84B48AD9FAF5FF382082B46F42D4E1672B2076DD7714172F78FBE2436448D
F2CF7FED61BCAA295453173D7DF58572B818916CB17260853EB22816380AA171
5821F0967B3A8794EB6A9D27166F7AE3FDF883D75EFA1E85E18BA388EF9BD576
F07A477C94A299374607EA30362048EC241A787EB16C180C17D0BFA848F150E8
FB71A26FAFD551C2DBC81828207E644ACF671287DF458B6B205D823B430A0DDC
B6326798248C8E3AD3B2AC0BDDF596B0785AD4C4CE497DAFB9BED0505E5546D6
66141B03E170B804B362E9CEE1350716D27D1E9E1E135BFF097EF585FD2AFB9A
291430F5AB9F4C0F51531107597EF51CE63F5F37D6FCCEFB76A624EE6B3CF6AF
720AACAC0E83C84845B6C9A0131A1CD535C0E8CE107032734036C053334837C9
A1B5862B34D35A753A1FAF903CDB5B732BA9B9C87C7CE73F845FBF44DA26BD67
B19D8410C6D53C287106ACE4F78E693183D4BC2BE44C4C9D9629B41E0A94ED1E
0216A95229BAE193E40CA4E3E800E3335A11F7811060D45CD43782070E2CE8E5
B44DD566EC02AC4998DFFBBABD53169AC82F7D4B293C5E7E2187827715B5A4C2
0A1BA8AFB55FA1B34CA6607CAA94A0A3E5A993CCB090C29FB47586EBD08145EC
E39A51097986B3C6636D1AC9B47B93F373799B693C7410A01DD86A421A60D3C9
FCDA4233C648ABC728397B9B1C797FEFCD869922C069C19DA23A9CBAB05FFC00
65ED3F0CE1A073A7E65853D60451234513FE22981A6BA8E36E62F598DB8C197A
CEDE4D1EA4683611824F5DDB379B9A0D554427AAD1D85E504167D9208CBFEA5D
035499F90DB0403B42370C084742836D6A2D625B9E6A3039C9F50DDF8111142B
842B04857E76D42E0C538F1DA1BEE157C74357BF551C9A31632A0032E0743FC6
03E82A0A0802244A3E59EE25B06AAE40DAD9D8CE51B63A935746EF4BB0F08C42
C94078B1C0887B0DE7EF250CD750DDD1C97B0E5AC8513E495B560510A5B4087D
E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Fourier-Math-BlackBoard
%!PS-AdobeFont-1.0: Fourier-Math-BlackBoard 001.004
%%CreationDate: Sun Sep 14 11:40:06 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.004) readonly def
/Notice ((C) 2003, GUTenberg) readonly def
/FullName (Fourier-Math-BlackBoard) readonly def
/FamilyName (Fourier-Math-BlackBoard) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Roman) readonly def
end readonly def
/FontName /Fourier-Math-BlackBoard def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {34 -199 886 747} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7CAA00F8
69C9D899C80FDAA551B57BDFD7BFDFE5BE081D0AE6FC30D89B49C43AB5C8F923
13C1E770F0905663D76CA44BE5A154B6635216DAAD7335A6005F18091D4B9B95
DDAE1CB8ABAB2A5536B77F9CBEE2C852776A73154E71F0D89A278B1C6F33B205
B58F19CF4A86085D2EE935963598C2ABF7AA24F32EB3C602C17AE0F725A12F5E
543C62DF2FCE5141270022DB6B95577AB4A0996DB03F7C88A8C74CC94620A29C
D44603A3C7C0254499AC25FFACAA9364881421579473787E5354B94919E85F18
C7487AB9C388263F357F04DFCCDA6C8CF141A109772C7AF5DCA54B87C059F349
AADEF1980DF977C1A6F4C5E151E13CECD5F57D2085586E3D9B2F5D0BB8B8CCDC
6E7E9188CAFE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
%% Utopia is a registered trademark of Adobe Systems Incorporated.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved.Utopia is a registered trademark of Adobe Systems Incorporated.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A56505D616F0F3B2
0F3DBCE8698ABD5DFCCE5B0C401638E89429249EF111164E99A03A35925BA293
6AFB113BA123BC143E5E15BAF95BE6873697845E184DDDB6760709182967543D
7D8C43583DF954ED78EBC44BE29E5C21CB755AECDE8F6111C9CF98D369E4C362
DF1D4AE695E3E7C9A622D1A9230AA8AED8C2040DE5F9ABF2868EC52EDE61B672
08A17B369AA2DED66BF5952BDB007978FF715D335E1E6824CF11E747B22C5E73
818015D417881938A3AE01A79665822529CC05115B59A4FA2CD4B2A389460E5A
893A388E151F477E637490BBE6AE236D550DDF4C8A9317F29E1F82CB1820E8A4
CB01D1754FC84C0D1BA9A40289180EA50515906D244D86D4FFAA1582B8C4D271
84CDBB9FFF2B0CCAE82E137E891246AA1BC80BC534E9EDF70FA8326B80A81C8D
F8261082F63A17F2F388CB001CA2DCC60317A9D364CE97068F7A1CDE183169DA
2D3A10A631D025A4FD53449F05D84934498C838848058B25DACD3BFE10C9A444
6DD56ECEEA0710564B2A5DD9ABB67E39C1E4EFA218954721CABDE2D47D16F4DD
25058439DDB367F346430D60D8F8A7ACA13BCDBD10CE09AD1C25F6634513CBB2
183C51EA2546A25395A8DAB011E699F46600551F452F273EF3B0C59A2644934D
5EE4F6B4E57DCE0DDD2C7625B225FB0AA7D41AEDDD16AA297732D7FC76323D55
B43AF7D09E001DBB4C4F6D2C68A81F5F4D804AA3E68AB1A020224D82855DEC14
BBB3E5A97CD16BEB6551623E65167B009CA72DE7BD3A2DC5954D9220A06AADB8
D1F0C33D4D22E702CD92A8BC437987604BA6E1809CF59070CF6FA67CF238EED5
E3990A3CC15B69B50EDC4D751E10C76409A0FE8336BB6C29E5BAE5D0F05BFB4A
B14A40EFCCFC3656A93BC9BB7224EC8B8568CF41482569F4018ADD65A111A199
723251CBF76878B303ED74517E9966E4B5FFFD3CD8871906374B38C02FC1F84D
EFBF4635779100DF0D9BEB4AB0C94D1D8D0129CC98DC77C52DC3B3C1C0624015
5E09E9DC9AAD90EDAD33A5444851AFFDF4C04A1EFB5144611E46E70C11288DA0
902086FF93E70ADE7737D5065D74984EBC42FC201FE269C39DF0DCF6B595F7A3
19E9EAC623B21EFA106ECFB84349B64064571018DB60D5F83333A794098F3F02
F9B4095F3B64BE760661B9D19B9A06524479ECC18A51EFD8B1D227F5F7FE718F
B348888A053067CD914A9C22771A9F7B949B694BE20C0D4B42162AE9BFD94A9C
644E54EA45BF951A1C199914528A8B1A903D94D9B9EAC9A909AAD94AF95ABF89
EF17F259F9D063F96699A1F715EABF1A10477E4E57A88238BE6CE58A483766BE
14FEFC8A2A294E1C4CCA2A721E3F38F6DA785B9890A305AAE28E1F26A25725C6
7D5D53DA93232A44B2815D1DA2DF332172690C4D6AAEEEB36F7D457600ADAB72
8DF4D9414F1CA618FEFECF0EEFAF9E7F8E86238076FB436BB2AD787C681FC769
0D75726E57B24AB26A462DB6B74E96DD7A42FDBAE41CDFE3F9770BBC2D569F69
CAB806B4697B727E6E7B9E427904FD3EF70B72F702650A226E47141899165B78
AD6038D5AC0C805B803FC104EDA1636E1226A5379F0956F7A1A7F373943FBBF6
B72C8659849AFA0559C274B1AAE3948A42084BD207F5B8E17E5C4E55911EB370
A1DD5C6CB03E43BE4F033FB7135DF28E256AEC396DBE0B44F078E3F2A8DB5B6C
D3310807D777CDD2C09985C84616AA2C0EFCE1313F5A62D87CE12489E9C7090A
5A1A0D41DF239265A61C1174981F88906F7BA743CC0A29941CC00800832AFE79
E6B8C1A4F0ACD74E131FF389EB3B7E8780F050BD95ACC646A3C9A9162CF68708
3157409B88DA26CA18400E0BF4A25D1BEF89697A832B7C6F4D0E8F9ADCDBB511
0EA6562B3E59CFA95CB3A796EDAB7062F7E4CB97C78C4D4B6B7A4D7D2A315A09
B88C3FCE5020373AFDD25EE9D241443FB7E47F3630C698934B2CB6A5A7B1E640
A4C09191C0AD4D82A933A9518084BBC6E0A55606DB127487478C00A4B3868632
DE63D7E2A97946C5BA9C87712272B564F5A2525460360CFE515EB2FEDA549C71
6CBE66F778D5FCEE928597B2FDFB71C20E97E6BF394D59DA9EDC90675A9D923D
BFAC15A8C259EA85E5A5F6DDBED310DD87E3187832FCEE21C6D309D12D739901
728852B77B111B923634AD358B12AEAB4A53AA62D8B63C46DD8FE1B4CB537728
6942C0001A6C4D6317B193EDF045502CA1B1D92C9048EBA03AA3C187C53C8C57
621A876D4272C86F75176EE8319B463715C71505E2E9E11C6EB6ABDA5D3BBA72
10EA0EF86AAE7861973D207886F1BA05E5B0D9BFA0F5CF51A67F5EFF30BBC934
4D583907C13CACB908BDCB8938B001971428F3230FD4D3FE4C329C359F377D0C
7DD2C8164C36B81B0FF1EE0EFEDDD5D8FD0F70476C4D301405160F91C87987E5
BF9EEE2F6D282DD891384741BCA1D9FC9E6645B6E0D993724C09CEEB548EA7BE
264F7E60902C1CC1CE272BC2DF183540CF5F9B9368F1819B7850F858A126AD0B
CF387690664E41A44F72EAB91D2BE0106FB1258EDD73E284115FEB9DB593BE2C
8473128449A20AD130AA6176F0FE34B30BAB5102E489F1B389B670B337A35AD0
37D2A66F6232AFF7EEA4D321D73838BB2FDDFD7C42C24ACE171651FB7AFFDB6B
FB9F66E5BC2C591869D9A633B52E0370DBF09FCCD2A7B446A3B0F0AB5E6B7967
C8D05A5D8DDFB314CAFC59DBECF85D57C23E989EF232AC01F9D9C63BB809AD5E
E4BB26D59397FA043219DE42023C1B1F0BA2879B54E12947EFF6EDBAF744C1DD
C9408C44554E7AEB6A49BA673D3A71F3E9728671212001B91669AEF4736408C2
75EF00278C49317BAF0CF78270FC60AD7CF5D4B67F0538FFC69E291D17BFD015
7A745C6FAA107958F8C49ABA0AD020EC2974CDF80A12C581C4A42DA5255AF8FB
0EF02E74535DE03DAC1F47CFAFE246513B9EFAA04C78F2D27C4A81531ED28650
95A1FF6AB78F95EF6E1C8A670DDDCAAA633D7B450A38D203F16081F576F276D0
CB20F0BF7079D74C31655DE4243984EF5BBD361C954CE298EF71C4CC03B1D133
0D163CF0FF2163E8751B0A47BDE9408FCE7D32DC17C0BC27C6986C59A57CABA5
203F87A51BCE072BC40B483F6BCEF35152BC47860B690A9B4C146E164A789EBA
F208429DC38E81F3C5AA93E06EFA0F579F8281254F561FB742656732153D9F5C
AFC91FD6CF771BF7E94FE4F5722743E02D6E6B547251E71147D59DB0400CFD3F
F0B0634D6CA3E28A4F291E45230A08110BAA225C664D17CB1EE6384ECAF44BE5
60DBF2CA9A2486D5626A01BDC2568BA1FE13F9FD8156CB4E65D9BEBE4139F524
3DA02ED5E566494921697F451A8177E0E8196ECE764FE0BD7ECF7829B31070D1
229D99F82D5667B6726DCAEF19A820F2262ADF186C4ED33D753CDDA3A8CF68D5
6B6C7C9B611C4000E03BA85A8579371B860162D40EAB56E19FEFC768450265BA
65C7CE62526FFC6D24DFDEBD7A0BA4E864DA03B6E384BA8BAC52569FE00B41A0
A1164C54C878B01A151C943E0EB490AE80476A7143D3EF0C793543541B889936
F823D9D19E5B51F342604ACA7958632CECEDF19E342389DC9702C7450DFC7686
23072F9884ED4BEAC4C723068CB3130E10EDEFCC0992ED9BCE277016F12CE393
3E5327CEDD71490FA8F7B9C778248B27E66F6C580A811636AF2CE0627F41E210
D305677B9A758BCD577141BC1951D683577A6E2C5EE145AB39906AC36223A3B1
79A1B8C89AD0F05B39E508D2D18157E746FA0487DC1B89CF52DEC91013732E02
7546FDA559677A3C0E43DCBA1E51A1553083201F11BE07DA0E5EC0F6AC2DA72E
64759212906BFE395850FBCD3F85A518968E48435391DFD9307AA9F5B6A729F0
1524E57CC17D4F3D849B05B1FE04DA49A0727B93AD5841DFA6081DEEE83ADA76
4F990DB2AF7EEEBDD708A6B185F274EE87E5F2F227A02548AB46A067900DD07F
EEE0594095436D84076BD9BAE0000D578CC4B41FAA3A2254B70B98AFF4D46E8B
522B2E2711C964CD396B7266C528CBC6AB15DFE7F940273E6E7D7F21FAD8E095
5D009995011177AA7469F1E9E2EDCCD9A5805C5A9EE068854032A3503922CBD0
ECE6774D03FDA3D4BA26E2B8960CCACF6AA5E16CA7B23C6BC209C7D545967508
B39362FFD310E335A36A38F8EA9A187BA56A6A7C4C82362A23283407962BE0F2
4FD96A27A3A4CDFD13ED7461AE97689244F248F3F92BCB173FC6B579E23B34A5
F986AF0FA336B8CDA36112BB383C6DCEA8EF8D69FEF91E21A654779148D42319
7B7F6149DE483A3AA13B3ECED2CC26324BACBEF2263A8D0311D38BF412CA3035
EFAEF546655238EC625BF235BDA2F4B3A4E8B03832325A0667E1336DD8F67569
1B23EC79C6E2B89D5A96BB5FB94ACC38F871B2E4408B2B40D8F9DE9385F79D59
BB1384DC2E6373B4AD0C2986A081B45BFA74F9361A3F8D450960AE552D879389
6D39F72936E74C53FB87929C4B694FC68156333CD70E9BA2F1057E6EF231EC48
4AE662E06B4ABBC99AB4D0E4400063ED30CCE41E693B9349050643D22C0A5C9A
63E3118EEB9CB0BCE1EE6149F64F24067DC47D275B1427CCB9708565DDE5368A
9E6D98EE5FB59287189DC8A6C8D793363A2041A1FB529EE12528BFA73DB56503
D08FB207ACB01394488ECF22AE7B0588925CE54A359CA9552CACF4F7CDA4EE81
1D27659EFC6843E35E0103FC50713ED2F96A0FF18D626A206F2D71D4F4AFF841
A37EDA8E02320CD6A002F128A3739A4BE30EECBFC3D8E32E2D85ECEFF48C1526
E3672343749242714C69CACF64D93B437901DFDDA522FC2A10A9C2B6D2FEC5EA
D5D21569570DF3DC475FE7E4F8A28C81AF5AA2091F5307B75601F9B3A63092BF
9504F17C4A3FE2B2C6FE483869F05B827A6A84273AF8563C7F2F0E1546611A58
6A9800E873FFB0D7A5A1E4FA13FB422745FDCB6775CEB2BA838D8921E3E68071
D0563B202FE050CDB6C3D4D99DA95806E94A37DCDC2483E367EF568466C9030A
89192F7F56400EB13660839C9204F29B0A4EDAA172F55F01C467020A3E85D72C
6AE0D41BA24544943A9775EF26CB993A735300C759BB0A4FE7949D746B5C3029
4889AA8EF68B719D7280A90EA731FB6604687AE77D292FA95D6F2465DA4E6C2D
E96F222835FB97FF4BC26793DD711CC81D3A6A10A5FE38A99EB84A01485681C6
4235F21E6D1D5F34BBF7FBE76611C0CD33217692815A9E089B5365763C33A249
C20EB527774A74A9526C84F6AC380B12B4ABDCB2CF7747A41D0AF9AEBEF6C85E
F9B65C43DED9057DDFF852E4A562E91B485A45017B9D4E37BC2DB3FA36EEA39B
BDB25258FDA344388ED95F417068EC5BEE2FB95A44C09A02B08A41A3F8382E12
6D1CCBB152BE1F52E47D590307647DCD9F905B4168810CA684FA4DD17E0EB6AF
A088E9C112255360D33EA067E5940F08764DE8371AFE39987766E0494E52F4D7
BFEF550E5E7E677064C370708D8A5054D79AD4D33200987764C5B7017A8DC6EC
1AD70D9CEFD497218D3B4DD457BDAEE01FCBF6CEB3928163793A5195AAEEF065
5635FA02FAF5101E280AAD4A686AD6A7C10A33C09CBA9CE77606FCEA4446E535
0B281CAA68C16ED95A9A084D2D1798BABD82494D322DE3779C46B2F9F3372DE8
CAF340B83A047FDBC524C89B8DE97FB2F7D664CB1487D13F9DD30928A2923A91
B2F77E5348E161ED0C92E1DF4E6B295D729F682C1D7B0CA7442CE0F029BAC87C
2A11C0E1F89B30924FA76B3CACD80894C94DE92D89FE146D0525DF6D27C06741
F0F15B8769CC02A1D4F78540427039372ED22C944CF66F36248D08AD71D6DE88
BB5EB10AE37FDECF6B9C18201B3D3142FC239A04A8F86CA2DA811F901B8625E9
546CB094F3440E2A5E537B0D74451F73DD0BB5AFB31BA27D62E49A32E3F2D3D9
039306570DDE1CBD7460D11C5A258CB7AD35DBC59DE4F648B6C452EE90D2B38A
2E5043DDAA6905762D20ABC42DFCFD3FE4F4BD5FE645697A76B6C68908C0E17D
4C5C38C83FF456B5C431849B6059AEFB06846A3BEB6C1CBA499359F02EFD5E65
760FC608FDA7D8A52CDD6E8F22BCBDADA2B0D53FBB9C23D9427C47DF25DB83B2
808C8E84AA5034CA2A821E24EA63372242DE0CD89406E40056EEE0E6467945E3
59703118EC90A70F55BE1A6C215CE9B0DB507EA34E89AA8EF68B719D7280A90E
A731FB6604687AE77204B76C3995EB4F3811D5DDA7F30F746248EDDF67C3B27F
1FE56A453B960EE375F1DCF93E718D89741E02954203954565AF3D8379BB7312
D34693372BF295E9D7662E488954718EB5816676A5843F9E39E4E85B4D7E2F99
BE1FFF5E45D59FF354E4CAAD1F7D9D6AE0F838670D795CAC842D0A31DBD424A1
C6FE77C016E2435A27A93DF33C5331EF0C76B982F9CABC2D1BDE19298A02FA07
2C120D30732970607C4F10F41FD9582786D12805E27B223E9C1D1AB20BD6F4BB
34D2423CC62C664244F640E90024F331FE72D5328776F8B18AE7F5514E98AE6E
988E55E6319BE143B111BE76EC06E4E1B9950692E7462E27FADCF643C0E5EFFC
A669C4F4721A24D58238FD61613D01155E2030087D62B042DD73F08C6C51895F
33A8523992CBBF5F697AE8307A08A358BEF2F84AF40F4E58304AAC2DA8C65E12
F2561ED97063D8BBD3211FFB83BF0B2692787AC619B715390083EF4C3AFA01F0
C7FB7B8D2ED87AC898E1E40F8918732254FF89DD99B45656E0EA34B97F68A42E
D5DF18609844BA97DB631E0FEA8C168B2DAAE2BADB3C2CACE9766957BBC9599E
25A83C69382026306F91514BEA0438D16283F7CB41C4AC208246F31261252400
FBEBBC6FB9360AA9CF63FFD32B56C48BBBAB805D09980F033BBF6378B076134E
5B5D5D1DB3AA05C9527315100621DFBF2455AC25572C316525B9138695EED594
406198F5B4A2A7606D085A4CA5F141E32C494C6AA9DF86C854F7005A34C1D0AF
2E1C25A308FDD23BF1D1BF5FC1DD05D09EDA58B22B5F7B05BFEF3BEFE5233615
28CB0BB9346C6C4285D0652DDAB0DBCD892E14691647CE5A30AE4434F09F7D2A
AC01F37BCE1FC1CE94C607F9AFB87271B85B3F52856218465A40042A855AFAC3
5A7089C089F87F8A3F3E4E06ECCB5FFF03D1D0DC7C60ADB9740B45341C6AE998
6C02806839E9A755453E7574D949072C7BC9A6D983187E20C849C75290392E7D
96C80F5170E68BDE85271E77C49CFD98988D97F1B48444D38295007E36C920F6
3045DB9A63200E38695E03018B0053F985C44BBECADA2FE6C020F30244DBEDBC
F186A99AD55D64C460FF002541B1D3089145D649ACFDF6993996A2EF0D82EC94
C95C7823FB1F2F60E873C73A4A38E2A0416FA139799FA063AE6E3C3966ACEAC8
386795BC45DA46D42C75BB0DC573B1987910FFB774A333F2F1A2F270DA9F9554
2D5E464A53041B4B2CADD94419E0B9F54A3FB2B32BD48CAF5E29CFFAEB7F957E
F2D6E9C2FEED21A09C2B22244FD50485FE65C3C82AED94F1AA2EC4C0726F13AC
AB2EB62E617EE4542EE04DA8AAC29B548C859696CB27F71B6D6808CDF0384C73
0CAF9D524631B45632FECA6F8A85E2A0FD5AB16724B4EACFFE534EBA456E477E
81B33942849D9FA10FF6847D8ECA7F5DA37E4AB07721E616E2C2B7B7A6423CEA
19FA5F468A35AB2234EC96DDBC5BD0CC27C5DADC52CB229866F14E0C02267823
8A3F0D740EA1273D57C6AEC1F1E0177486F958B03409727C63BF69E178D08D7D
998C3ED886233DAC3ECD629405F0370A98042E52493F0D102D2B79C375310DAF
EFEC8AC1D79EB783FFFC026E84A8BEB5A3C78D62041781F782BA951824DD5A92
E3274B5E8276084D9E6C6ECFCA8801C033AE468C6D877A3D651D3C6D5A1B3BDA
157D238C5BB64154B007C48E6A278D0EDE0AF4839942B8B93D34973BCE2872CF
885EE39B7D286006B1943D09A62B6862F3681C5D3CD23040F639BA12451BA9E1
F38570B878EAB1E823F21A348D8E1439A491CCCB7EC1DF53219A5F43FC71C3A3
95D9F53F6B6DCE39B7882556FEC2DC29A901D09EDA58B22B5F7B057832AF6C26
7ECA13F2F54B52C6D5EF090609B0925B67AF1096A2BD73AA68BA896BA4BBEDA0
4FC694F929FF168325F619D672466318DB4A058B98CC45B5ADF7681C8DB04E6B
181E39D3457E9740BC39C900F543F34784137116F3CFD1DB700A6B78A5047857
6BEDAE4E424EC565BD5A2DFAB27BF3D0E5EE3BAB3F9B1EA24AF254AA2401E1F4
0F50C8DC658D49F8BFCFF80F22F23BED89745D290CBF8F774728E41551BFAD36
2AEB90ACB7F8B72314533E88740C50C125BAD12720C84008A9461CC1BFD8280F
9A0FEA25614F3CEF9A1F66AC13EFC786D15DD2581B13547C18045AB7451D7738
5E2D10E6E00EC71DC62B33C004A12EDB7FAFD977DABA472D5825410893311D45
1A7E137A8AF44E2EE4DF2C17C69A8DED0A6362188774B84227AD5B10A54470C4
B5CFCE0092941BFB7BED0C7EDCF30F14C96D047F0A852B04CB69098900D8576D
1F0A56C4F9CB0EB78AF978144ADDE17E29722F914CD2304DF7881D122AEA6C5A
F567985588A4DA145F78D94B33CA153F69E87C8AA6B19C39B540BD9B9E5B3827
6094E4A568DDD93648ED07D54A9C231240ECDE0080627CAF6CE59EA5CAF7D9E5
CC414147FBDF966E4AE24525DCD8C7DE5F4C97FF3313E61733BFE733EA060D1B
C41DDEC949A4FEE1EBBF156308B59C3886B3DE049589461C277683514493DC5B
C30984EDD2338BCDE52009AB373C1D5C7A7E017215DD8F9156EC3F454EF8987A
62A72969B67FE19C36D914EA4E82B4837F1277DDF2F18C48E446FC6240B49EC7
E9AB2911E967BE39602C603E1E14C9074AD037851B8BE5068022E3B1775ED1C0
B9269C24C600BA4958FDCA1F2EC9AAB547B56FD333CE72701860E1D0FFEF272C
6A9A7B946154D4667514DCAE16C1EB76E335C2A6E8BF96700180D3E603A3FBC7
051BDCE072C4BFA7CB4B1BB6541AF2BA386F4705EDB2BE1599428E23E32DF41D
B94E8B2185E11BDB300D7FA8BEADF73E75DA4B8ACD4845C04D268FEC8EC63D82
66C22904653C0F44129BA667545F2DFE3E97D21C8589C0C16B1420BE50BA70D8
ED3FCE2AAF594FAFA3D4C39EA0B806493A3B3A62A9CC300C8A3CE821ED0072C5
3FCA1615B1A15C850B86AAEEE2F220E285BDD563964EBD37E22E24D68B1A1031
6AAFC52C0D9662010FA6025942E1E724920B76D84C97781DA0FE6BEDB8ED8CD1
B051C5188EB1478C06589D2EB70B9952DC66F4852E4E5378B72827202CD85C8F
0AAB881152322D4177CE7C78A8C644062423D5AB46E58A1015E6176DC0B43AA5
11DE35EC8ABFA2E6854382AA5CA61DA89744BBF863FB6D5C8C66C3D1B67B2952
D41641C43B6B952F6240181427FBFAE5980FE90D43E1C1004915EDB6BC86825E
5FE858E4A26A23CFC1A35BD15F25E7E68B23402B668DA0F73EDA803780C91A1C
9D451ECD64E0FD0679ED46B4031BBF0BA045856FEAC2F1A3E2DCB21C2A3B0EA0
0AC75B70B39DD5D489D543B8A23D630C2D9D32E9A9822421EA3898BC7DB7649E
845B28B641A6EE6B1741289B67A29A9EE4486E675405BF236E36E55EA4E63C06
0780333AB3CB5B3E5A59DE07343CEE434832D2909871863A318D7D0C1266EEFB
86E8F2002268C1DA1C9AA6A9D85A6BB9DCC7A64F176142C2B53B052BEE56EEA7
B2FCD2DF3E7A50E78C449A44E943E37AE8A37D0BA419617E47AFE835E299D3E7
3CEECAF662835D3D96BDB82DBF1749A29C602B5B25C45A4C89A1F1AC23F5F3A4
95E60D2DC40052E16B99FB51044763D9E333E1FA743DBC3E11E2D6A1B705CC49
DC251201CE2027298237B2CDC39081E369B6ED90BA08D8A729C166F5CC492BA5
A2D4E4A422AE2400DFDB0AB8D5B6353DD120EE84BF1A9D4361961FB83831226E
DB4F606E5D2E467ABADDD09D5B2CCBDDFA9F2A174693DC8E6BDA8452B7FD61C8
7E1FE123EE754A421CB69FE6404A9C2F3986CABE023B89FDC8ED544AE1484671
B2D72DD8062C5D9625A18947938D39498707490470973A021BE2701085CD1F97
3538F7A93657786EDC1182996498064C896052BB1814BABBE3ECE1D9ABB53F3B
35DC9B34791DFF720804DD8EF58601A9C1DF6240464A9D906562085EE8606833
D8E3FDF6589A34F86B434C1FA9AFF2F2C3BF8321E9FF9165B5315320DC0FE83E
C18C1D761CDCECABF4E508F5C02D7C2BAA54DC9A39DEB852707866D2622459B7
738E8229E09C84100B7D9AEE182AD0C8F2C19D3BDB81C005BF0200C76F6BFCFE
F09814E200CBAE5C5469E784864E1D4133C6B3F5AF844EF65E223D801008A17E
D68ADD6D65A54424BE32D1A302C98EC783DADDD463072AC3B6250ABAC16F5BD6
5500570E16B426E7EFECD1DA9D264EABE46D2DBA4E938F6ED9A60C05399FDA55
AD38A99BA27B5C92F673797B2C537BCD7EFC7D8274030A820AAE1F746B4F1261
4E0DF155E5C3B91DF9A4D26A20D37C0E9E8644F3ABAEE67F90FEAEFD4A53C45F
75A56EBBBD1341553FD8850C05A873B3EDC9D9DDD7BCCEA29E5D1A18AFED971B
B78C7CA9A7F472BC752D340A21D0653ECEDD1E2A2A2ABAF5B596586CB927522A
9A94DFB33000D7BC329C4234005DF8550F13941B30CDF19748A63F8897505E34
307FBFF040053229AB48DED8C3241F0C7F642F3B84BD5B92A6924828947B5228
5FD72966852C05D3F7DE512E9982B8C5DA624554548260EDBBE8A11FA5BA4F1B
474ACC9B9FBC65647FA5614E89165FA6A6D331A3D272F4C44D6369FBBA1C2AA2
DBB4C3C44A580F7AEFDC98AFE43F8AB1145493258184B4152B78718ED24FB647
A92464C8B7C866C716DC3EECC38209FE535C72F59F6EB540C162DFD1B07F72E2
F5B42B14A31F7053697D44CDE3A7A99BAAFA87BC61F44C2235A7D03E124EF73C
234854FB5E047B9F90C1F0F689A83788729A6D39A1558E1F22FAD61CD3894589
0F67A023E9A0BF2863327CCEB361EF274093AC69FEA68411C58F8FD747E0D396
88A72FB7B04B43900D4799546A894458378BCBDA94196D7D2F57752D2E196FE1
2464F772F3A2FED7555A656EC083A1086E6369A5B8F45EC3BE9154B4F2FD11A3
0D0B8F962B339D320420F84DC9A924CA342B0360DDA666AD9E7C3C3C96C45622
B48BEC7132A2FB97E11ED78C3F8D3C52DA6CD379296457E97A71825CD07EE65C
7F1BF8FE2E9CCB8D61D4FC066E8B1585A8ACB82C1CC37BAD138D360274FD528B
505F8FDE76E5E2EEEFE063B8A8CF76978A1251D31CFC1AAB980B7CF013682C6E
B0C32DF297E219375C4D68FD387FAAAB2F4BD85D8A1C1A3CBD068B764496E877
797DC0037C716F8617E496A46F3BD362C41DD7FF0B41FB7417407A1DE1DD7BC5
D1098769DE5201328195C7A4C8074CAD45FA3A158EB854405679A64DB5E1C501
B3D8427DC0A51B77F4804B3E2E33939F289D7552CB1E6E9D72F332A3AD02899D
446CD2B86E8267890DF3A1E353AC5C6D9831ABE7F86A558776657C2AADDBB4DE
AF6173DF15CCC34FD3572380AE99DBF849CC42A107DB8F60DCD565D40CF71F84
4A3CE321DB29CFC4E2B36E707D2B98701285BE1FC58771D2BF9FEE629D85ABD5
B781F953706FC726574122F3CF4BA20B8A2FCB0DC1D4F6E9E3F9F4094B6F1AFA
EE75C7582F0927DAABC1C8EBDDBE0D0A436F5F6076784DAAA444D147640D0DB4
CC1C808604D05EFEEA152108AB37C126AADC040D922006A7DCD556D3FE929D6D
FAB7A6EC549772D208C78DE94042FADAB41E5B44A2004E417D8169977D295820
A2D5D275EBDE15C327A697E1C3E59334B25CEABF5B9CDBB5E0039FE7704BBF2D
2CDF44BE35C72D47BD61AFB77ABE35A70F09D51DFE3D858AAC7723402D52AB59
FEC4AD36D99ADE0527934A20087300E1D7CEBA399B3FDFC6A6C652186D635C92
5F423F7BBE4E9E6E957DD25DD4EC9911030FD4C611A3369319A4F9188B6D71F5
068CF6B177C8434E605E962A443301E947836D425FD2DDFDA0D2CE81B280E6D1
FD166E096F4B11249D4343287B961030548B4D7B9B7A56CFE933343D13E5D60B
2A5EB00F5359FA109BDE4F85242D52A64EF0F3D1B24735D738BCE72457423F73
5FB9D7E3EF8CA97A8F710803FB703C0B3B1B896042A157D4B542FF41759DD824
9FF32081E773A0CD4248B15B41F91AA6E53F0CC9DED0730C50EBDD73CD027857
6472595062603432B0164EDCC217F43F132A309DFFF53F689331C1AF6B73EDDA
16AD59958E906B592C6015620F517BBB35DC820105BB7CFC939465373204156F
4637FA50B756454299AD1E71968639215B89602DD9ED792652C289EE50A2A22B
9D33DFEC5013655BD03E0C8C88E2994B91E1C7F2A7EC3554366DC356D85B0A89
C5BD4231C97E0F63A9C6D2A08A06B6A4F5706CEB08737ED9957FD88B43936315
03247D99867B2766F60474791E56E71686855E0AB86FFB4ED65BF04F6698920E
7764CE3007282FEC2B8D56F91728FF11A5F5CB07C5A637BB65975F5B4A6E3B7B
A4F4DDE152FB8E0993472077CC72395980DAAB0F1716992FE108FB1EC22482DC
0C70283F00B5EF83444CFCBBDE482516347362FBBE6621A91ADB2DF861165D2C
395B44C509D32FD2944C812A5DDD84EC688C3C4BD9808AD42422075A2B13D0FB
981297E103C9F904508F79B94D2CD99501B467A00064ABF8F7FC1125219C591A
0EE37692E2E22BAD05261C30946D6F25776E9D3C8C08E3AA6BBCDBC423710365
23717C5B5E6123AE3D82F7011607C4D001B7C8D31912D3D6EC462D20F605CFE5
6DA8B99BCE670CFE23D7F39F62C06D0924D3C95DF2F7B67DC1072C12BC3C6A1C
1880CF5898AAC06513895671921CF10368265815BE161BBAEA7BCB4B36F792CE
575EC3FAE1FEB947C50CDAAEDD0DD902F63213D06A0C6E7804672BF74B08D1F6
F8799325BED1A5D4D12EDF6C76A8B97EEB869062D8223CA09450F5B78CBDC0D1
46C7304D34A2B7B1AD316374489752EF6CA73F565B4040E4E8A23D16C897B8EB
2BAEFE8239FD4EE29812B71F7B0671C5333D7322A4EF386F2EF23086E3B533A0
D438B94B7B3C625D0B5019F9E1D4145B2AF841D9A6AD137192EF0B356366B43D
EF20A203DFA54B6BB4D4FB796CA136A14C0675945A3C89DCB80C3B70C05AAC63
4CF625F8AAA5A8F39920F16F4A7C61613307E54C0E9B46848DBC624B9F2E4AF8
420A7A563D4BFF0291CEBBDF54C94AF658330DA51CE7D33CB01A112916866DE5
C070FA7C5328F32A5731B4395734140EBFAD2DD15871546C0A7B151A3E4F2C5A
1564B5EB07F64FBD7B73EB5A20AA65A6DA14FDD94796C90C883A92C4B064F5B4
BEE16D7A7DBA9DD3D0228679CA5ECECEB3A5F62994B66B764804AA8F3DD3F0BA
E02CC803302A304C2DB24571E2384BA60077444D07A3EA617B581191CD6DDE6C
D9FB522E57D9A52FB233F836FB4CBE4318B35E86594FDBC8DD06846D51C9B222
09B36A741C026CB7DBCDEE41E12236D225473095BD2EFE0DB6A45CEC2AFB0B16
F65CC4582CC326829956BBDEF3F488CFB52D075E2DE7775E27EA978CA937337A
CE18A0540C1441477B021DE4FEC39C4746C5EDF3AABD6E303027A723117E8158
83544408EDB331C77AEC1C33CC602026664C25433159BDD10147991E1DB8D8B0
ED9A96DF2AC0316645AA685DA1B6586A63A8189AF76725342D38AEDD314C6804
90FEA4A3AF1579F4889FB0DBAA4BEADF82CC50C130CF5807E146D06559E8BB45
15CABD2B5E5F2FCD039F5A3FE8DF5B24D17390D8486E03036EA5FF44FC25E908
E4505E84517A32AF178C51DFAC4FCB078BB1A76824E0BB5EC0268C97F4C52C95
4C289497E67C07ECDC0A5D775C36A0EE6A41F87FE217EB8062C1EB74DC40860D
133C8309DFDE2086D174EECFD873D837A14B503495F105668B76BFFA7975F100
83F551597F0B1918A01C3F49497AFDE90924C9DB3A6FB3025DA828E62EDF87AD
443D307D28C9FFD6BC99035A5877FD00B4190C4C22BE2F2EA07568EADD071862
259BC077A7685970BB8D8423B5363F0F3E9BC2BF8858196719CF495AB48B167E
B2CAA456EA6CB8F0431962EBD0E9D5EDA8C34A591597F306CE5D0AEA4D0D89C2
495DA05C4C52F2C3081B4CBA87EA55AA79008209873E9ADD54DC1B89961BBB7F
30FAA2B3B5DF5C4C8867FB0E1C78D7D6FC8DDC53E5453F2A0B4D151B113CC36A
F1E4565B1A65C1A7866335376EABCEDA0BFDD59980597AD835EA0E1B6702B788
AC9C87DCE762792AECFED31FDA0B5229B4DC7841E65E07525E13378B5464A235
7F96E8B5B4C52D4999DFE2A9209F69C14E16880F3628BA14D6B22959381569C7
292CDA1FE145DA571FB910D9F0DA0B24B9ADC5F3D4584C474C2116CFCF7BCD91
EA14C3554265F31605A1316D4939407DFA55D056941BEBCA54EFB10CFB024196
E551EDB5737806CBA364EB267D044C0CA3D404B3D9467E8098BF5AC58423A55E
5E2C83D01E1017EDFA8F5CE84871AEB82EE7257DA49EFE83BA627D5808D89752
10EE98084D1FDFA61D2C1FBA0C56322FBA5100910A13865968F2E06DA943C956
E6BDDD8FE65A6F0E4BE6F4BB12358B183CD68CF6D0E3C0B31EA0C8260716FD28
D44D7CD4A03862CC6568B156F47A16DF29734EA6CBA058883927445FB7C37D76
64FF5A7C32E40F1C57C6EACBB76C96E638E616F36D312E45CA9F194E1336606A
58D8F3A213C8DC9AD613AFBDBAE0A41C4D69CDBAB8C6A87AFB256FAF9B1F175E
CF71913C0C792A65D1DF14E53FC7C12DB333F1645E9516D5EEA0C721D65B4EBC
ADD8CEA4FB2D31F8B1AB868045BD2C81CB74678C749A7E7015459E3F8BC3E2DB
33C9E9F77C022A714CF9423E7CFEF079495BB4D8AAD5909F08019BC422A48A36
AB8DE06C1F59E2917F7A4868112D362B6BDF54584D8722A83FFA7F6FDF14F533
BFDE1C0841C304085299CDBC7A3DB0AA6B8A2D25BC784FC199C8C40EA263572B
6330E47A47338B6FACFFDC33D9CC9FA5349989AC3C2358AE2EEC75AC0053DF6D
922447C228A03F3E6E49733B7F760A021C0821A33E1CD88E5899F06A147CEC7E
3A289B90E0A9FD82ED55B6B886C5EAECFA7B59DCB55D50D962D26E39F0E76844
A6280D68BA21FCEF8CE4E5A60B3F7A128FA9F85D62D330267E9F9D4237BF3FC7
F4282212A2CEF0FF9CAF053666D057BAF609B973301F68D732C8D4D5455A659F
2F555CE2F2C7884019CFE9A2F9AC4B6480204D582EDD2C5C85AE39AD05DE3E9B
4F92E9A6303FDB04D19008DBACF4FBAAE8C88214B1B748441939286752167A9E
EAF1446A9CDECB67FA72BAEE5A758ABC24504CB2F08618EC0764C988A8E1A14D
1B3B98C0D4DAD831F10788EA8918E23E08CE4CD1DD726D7C7DED33E23CF9FC81
F095C45200AFCE67364051611A1422499A0267D23614F514F7DB0758A7D256C7
003B923E0C56479638C1D9EA9A244B506092D6BCE9CE64C47FE4C521DBCEFFB4
BE0A1937EA300A51CDBB32BAC1441F3098FBD56E205C14EF2C6E75DC9896551C
E7244085C76D5DEB288CCC5AB459E4D0E053F09E55AAAA3056300882F9E11FDD
F41A1A515BB7E65B8E85B1223BD319BE4C7DDB1209585C150FE044969C304CFC
8238CA80179D1E1F5A508919C68548FDD90B364F51818D5B7DE7085181807032
3147B404C64D8FF484C56832A1B56D3277C011AC0B6E510879658F48FDFD261A
5B80DC1D990C98A5E3DFF6336D797C25BA41BE27BF6AFC9C259BD2D041104237
C02C1CD37EE8FCA4184AD4AD8FA614A2A8B56A92BB007D242DA9B1E6A366984B
9EEFE2BDCE7A0133A61705194CBB7D9042E53355AA0FFBD695BF9601B373B7F2
C0E924779CAF754E4C7802933CD7666B4157830FD191C38C175E6AE4F21B4926
1E06EE636EF45776105589D274398013F19EB980E23D5704837D4912FE79B2D5
B4F1AA5A82C1147580DC6F62E8491D9D085AC3504B1FC05293A75DCCA64AC466
8775ECC62E62769CF23DDD650F8E9FB3E83472BCE993F23FE433B41A1511D4C5
82FA478D68A62B5087E615B863759ABAE47734CD2878A9E04B26284734C6FB6E
E3727CF1DD9EB8C7AAA5BA0F4675D996B63C76D8F14421F81253A306CE039AB2
3AE29B15AF6A28BDF2A33569A513CBB1CDF1381CF8DE6D504E448E4D30E8449E
5FED27F3AFA0EFE6A6957768B049B026DCB6C20148BEE7C91EFDD5ED8C1F4BE2
3370AFF1E173CBC18284CFE8248A99B643D03A88B07DCB1A6916F9A51C993DCC
EBA5F071F3FDB056F314811834671511416A29238619CFF92EBF4D0CC9F4E1BE
098DAFCC29523D10D0AA6C2166F44B06DC025FFC1F96830CE2C7C488A1B4C0B2
C62DFB9ACC377932EC3501A362C7C7B10B2B718D464A024B76B8F2407EB964E6
4F4E0661FF138C4B9412F368A102C3675F7D740C0001886F65C2C1E6E5AE6E4E
E11760B66978055A22B6676A2D78CE3BC9F8E51A182B86CCF555B7746B99787D
6890CA527816CECD450802C0E73624BD681DA856290D76ED36DD0369AD92ED51
D297E71752EA6FCEF8B399459432701ACD27A3939850CC6BD0E832ACE513E3BB
CF10D93E25B8548CF95D71241BA15A5BDB6E8A129DAA41FC2B81225646D1EFE1
94D568D9C9441D945F17CDFE155F03C0EB87888E620DA3617743F4CBE0539CB4
7E07750CDC5C1D5D01F5DFB78F36B83B07A262608ABB23E369BD26C542383FD9
6DF7E26E9E1699CC575EE26F59F4B3A33EAB287A50C4517E9137FEC6C621D6C0
647713D73A9206A3F4C3C8F0BF9FB581C3245A9ECACE00290A227F1B8724010B
4E17E93E194991275C8E272F13B6F7A85E9E41B2AEB5CF131631C585E25E7079
B9442BB8FFE70F2071DD5395925DFA2BD2C1CCAF1AF6DB364DB894F051DBBC25
6AD14E2F74FB077F3FA85CEECA6938ECD75AE1ABCFEF5499CFCBEFB57A78C691
F5A550B78135187985909307DC78942D3C2F427D50BA53E9A80B9DC33D26FA68
B0CE81951FDD3CC494D2FC93870C4355C6E212DBBC4469F5D6316045A2C7D267
7AAE0910CCA08C9BEDC2CB411B862FB099C643C0CE0D7A8DB06E1CD1B3A47309
BC959B847CA24899D8AD0E88C252B98E2FB972FC7D4D6FF5D774640AA4C799FE
9CED25AB890E716236713586390ED8F40428C4057B039BE728B70B2A6C33A5B0
45EB71FB032821A7F96A595A15FEE12346DF281FA4BDC18D65E76D32EB0E473D
FE889318D952BD3251CC6A07B4A9C8C3530C308CC946EF27D0ABD99AB4670671
8CF3961E3C4160EE1EE8FDBE950B8A14E438C75958D74E8FBE2A83480F8595AA
00989DDEA44163519B814F7C4B78604FAE519C8BA0FD71B85E3DA7610B08CB41
904EF928CD490DD5B2AAE6A2EC0D0CD66BF01886419E6E3D7F5D9749569831E6
02A052E71484CD2372CBFD41800232303B86DA1D1F4589902459AD1DBA9D9C99
A0522BFA1F3C72CF29E159CA4F292F6FAD55510CB71B32283961759FC2BC96AF
98CD090571DC5597875AE5CA38C646814CDADF0F5C3FFAE0E44F54621200F480
38A9EB335636CEB94F8B53ACC862E7CC52289F98DF18F617B04E98F0F3C549FF
6090A2517689BFB62009299C8D76FBF5CCD65F43649C8890AA23C6A9490B8995
D797A057BEF5F108718CB72C622BA6E1CC760DD4C59D9BDEFA4BD5ABF975F51A
A0A78AE3AA575477535B1EA87C5F4B7148A055D5A137706883A9D0648F584603
03EAED76047DD7FFD69AF7D13F18F1C6E2F8529CD9866521189AD7E36D84D753
86351C3E8F9E6DEF103C1F86AF5945E69345E7A8F563734A8D9BD450A6CC8712
94D1AF57563CAB82DB06883ECE3B91D69147AD822D47AED0039E7C3178EC392E
438228365D570A66F71A74168D90D8E77FF09ABAEE7E40318940030F773646F9
8CE7668AD8387C15EC9FAFAC937988308A12D97115E79E712F15B330131B1C42
1265C47C329A1C6F63D2842E98E3B17D563961DAAB352CA1BE3241E4506DA355
0BB51A82B300B19C678D9C68DBF9CDB6ACB5AA859BD46308D68BE55793F7BA5A
40288CEC1AE26283E5955A492DDB97E394DD8B983C507FB4B79818B426F38D55
952C6CD980F437EAF3BB87206F5C38E103054BBEFF54E460F4C968E7FC79CFF3
1A4466D1738A68EB6F9D3479C754FFC54D74491CD91D0D2D61826D259E148F67
FE401FE0A545FA5FC5A3CBC5244F52A445A11264AE72D57C6C0B2F6E8C6070BC
8497FBE80A565B929D4EA7F83A4139796BF9770AAA4F613A1A30FAAE416A6E83
AE4F075DB64AE933D80F1DFDDB9C58F7B9BBD4F91192666236DF1DFC56E3B86A
1B15DAFC495AEAF13ED8DCC858AA6C78AA369A17F2F680C8B3A96E1A95506FD0
096206F72F3D477C92601E9F997445ACC70FAFBC47B28A3D351DB69698E5B693
B0A57DCF1B5BBE551724DC1163889783B57FBDB503CE5E729E7BD2D506040B2C
3D349194E234276377190AA9DD8F5AE06D5AB701F1656E265F93630E99D07C4A
C5B1CF957DD5A7BC303D526BD44F8BC9A7D9953BC8185691B40D8A70BEB9CE39
62064F1F886E38A269B7009970504F65987A10D22BFF2A18D55B12E93BD6BADC
2097B8E119FBCA21CC8BA745CF71AA39FF3E5AB8237C8B029CDB57C48E9E42A0
1C913F55FB8CCEEBB7684C336DAD8FA01C9B02F887BA2F8939C94B26BEC4828E
DCAD7958FFAB72596CA24EEAE913137BF166CB6D9591E5C7790B2F5720FBEA03
56A67AAD0C60039D2B5904558CA65823824C0F3BED9FD6B24317E30DC1DE8E73
8F40813DC5BBB8F16B0A1FBA77414EE43B2235A3FC8974E669B94D20C06D0C69
0B2E3057DC717BF4B88A83CCDF25807482E31CF5AE818756E29FD7B63DAEE4FF
3E71343ED8D085EFC5F40DDD1521B488AC3AA4CDB2A22329427A998FA48459E3
787206F053A3339AE68D8F7F38E520226FF274633C90AB64FFD53E96C5A49063
D0FD19670A9539CE435BC2B5444BA5E56C331D8EFEB3B02D3F575E828E75B8C8
506FA33C2791261B4297BD91D87130A3FBA476F2249B1D8A38B47E272D9A2AD6
BBBCFCBCB8A833A518A12F49F53CF3CB2A23D19C1ED88C7D05C55E8743F85F99
8CB5B3BB5D4F707EEC31EBFAF9E7BF2E5DA5719428276F2320669FD68F72DBAE
331865D031DE70A9AC43048DDECFC0CF50ADEAAAFDE38305504D07E5839715FA
5B5D7E2BB028093B35AD1E9395D44F627159BA254D14C2B8ED3A5DA6E092F491
8214FD5FFDB60B12494BA1242DD1C6EE8BBE2A0BC227CA8C4E83E1130ED02690
9B7C493626BD41EBDF6F3CD385E10E1E4C083EBE8E05429F3AAEB6C21D4B3149
F9C54E1F6788B8B5DF21B1BFD8827264ED22522D1B6EF758E709B84C34F28555
861336EDFB23FA360693059D9C66428F18CF518F5D77D1C09FE47C3B460F3ADC
51C9F666619CCF77C254EEB9C6350CD9909FC87488DF055E3E14B5CF1193E4DE
5B93D77C25AFA8A90F48388E51044492AEB5B34127FE3EA8D1C9CBD8E2E85E77
3D3CD0418CE72D122226E0E6F6616CFA79F4B44D6A30034073868319B2E0D5A5
8A15FEB5A87CC24A14776C0043B99D0FD69B9A35EED94AE1B5B5006F87E1D0A4
4A7D785C07F0DE3B1218BF69AE9E4CEDD1747C93DDC859299BF4F743220420E9
32663026B14240EE7CFE149A26CB0835FBCE8A59E7D0AE53FF24CC0D46B1FAD6
07943D1105F405F1529A1E9EBAA0534EBCEBD12FF9DF4437F4B604A403971A82
932EA4BF747723DECC4C9AF220EC8B73D8F3052C3A99E660758E20FAA95D359E
CE4CF64BA16BD3FF5BF97CA3CD0EFDDECC46BDD6539794A628369ED97738568F
B35F8A79D6F98BBFD775CBCF9ECBA307A734969FC23A1E748C164791342E81BA
C5F25AA4185D767C085D329BB4F762ED72DDA86B6B51494E2050E8953B437EA5
950FEE5E8AA17A3B4DF7606FE46696D1BB9985E9B9B00AA83629C1F6D810FD99
2E05C6391C8E3DC53FD8832BE1008F36EC040ED8AECA32548F64D0CE3E347FA5
7A989A49902BDB19D909121DD4C75E252CB4771A435740500289A47FF3ED29EB
8304E68E140F2D2372E0FF5B0FDC6292180CB3D2D51A8626ED669A2642CC21D9
8BFB62DC538C30D7AFA465965038C27D96558792E52196E303871F4594BC5925
67D8FF27C0ED223BDC11DB7AD854BC6B81B7963F7B82A6DC7F2D2DE86DD48B6C
B48338A2C19B2360074D5A89974CB0D4545C6504F1FD4C1339BA2D189F55F787
945EEF80DE10227FB9FD4AFA61036B1F658B1A3A83684661031BEAC7EDE72C7B
CA30F0CB1AC330A9136700D63F011F7D77B837C824B522927FEA8EF106157F62
AFB4316C25D2F25DF1D232B20B8ADDB3FD01440294333CBED83A8769E3E9C359
982FCCF5EF2ED887323C2836C1D99643F4D2DA198E5F86F41924F46EA8D4A16E
53DF162482E027EC45A7C4A99BA0E154B0D2F6E30853A8B553029D678EF59E5C
D60171490AC80DD0D18ACCCDEDC1FB5B329936E2BFC91292E959F19B6F92F60F
A267B4EBC138372052DE9165A6681057F9AAB033844459FFC4014EF07FFA6E58
9A58674B253EB2F95B9F6A42BE434E46646A68EB3AC47EE983A7B6C0FFA5A502
A721B20233CED6857A88337CD54871C00F7A1ED0F16B245ED93134A5789E3828
6465D61A1E522884B03BB0F1F9E9D18782F9D74E636AEC325AAE883D4DEB235F
3DE2ACE9499BCC55F954BE0DAFD97867DE4A921286184971DF6E7CB734DFC2DE
8C3D0513CE2FD78949F8A68BCDDFD4815C9FFC4B57E80611FFB7E636EDF93EA5
FDC865F177DD776054D9F8B3049DCFBE8EB7FE2AC46E2E7BE0249C3620B8294C
337F791937E478F623D7BD7E1233EEF98A82AEA8B5E92E861D3FD8B9F388A184
C20B5F557CBDA434B7349560166EBF4348630C6821929F32727EC4D2DBE9CB2C
483130FD4F4C68F007B634055CC5061E7C3910CE14933DC0BE15E7348E37FA34
FF463D992951217B9EBB0A26E87754C8748D5A52A35EE51BB1A037FBB213E8BB
FE2DFE213157DDD848B5ED4DF5A74468EFA95DDC72C10A9A192DCE5AA467B564
D6F8E70CF76963475BFE517F6368F62767D94B030998AD63D25A90A7E68ADF48
A8E5221B8FA8C7B1214480FC02EE887A5F697F60E384D6CEB5B62AFE6013EAA0
DFFA0AEE84687F5AE88575CB62BB2482A9C70BE3A0315FD4F8B3037AA447554F
C88737707128832A128E9F69EA0D1402BB43235242BD09AD5050DD9AAEC0F699
0DF7062822A06BDF020198B9ED187E83E719B3373527CA5BC91AD529F67C7009
8BFF65605F4177C1FE119FB813A2D3B4349755AB5B221E23CD89DD385F742902
AB6909721613F330AB3B4C7F406568A6CA169D6A8762DAD4F3083280D155EE24
E8CAF15F185FC0A73358D0514790877385E2ADC06E34B1A816DE63E8A769FC46
AEDF9C09041E94F33BB86E1E408E8A0978B725819ECA50F449DCDA08944A517C
BA827DEBC06BEB26C71873C144E8AAA9F67507359B329659C3ACEE86BB52B0BC
79037CE0BA20BB354216C132262FC21799417824D5B59F46F0C7644B2D1FA9AC
90871883D0B12A65516D4EF0DFB1BEEB4D2DA9D413C1DCB0FD5B3B7B59BB7B50
D98A62653EF081C2956CAFBFB25B0F5ECAB5EE905EB07849C293A4BFA5B2F4BC
04E0F9F83B60C851AAEA9568CC188FCC89DC7EBCF603FA91F4B7AA5D6E3BB9E7
F6B40F223380C31F3738BA7DFE669A57B2377D45557ADE28AC28F354908CF046
E74F2B1583A4141D82FE243A7266FFEA7A138BD91B721F5064252F047883BBDA
9DD71F38B057831CB34EB93115827C8F17591F1EEBE6ED51A3C83B59032A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 8000 8000
(Z:/BAC blanc Angel/BAC_blanc_2012_STI_GE.dvi)
@start /Fa 171[1289 15[1284 1206 67[{}3 1629.45 /Fourier-Math-Cal
rf /Fc 94[660 112[270 48[{}2 916.563 /Fourier-Math-Symbols
rf /Fd 201[1033 54[{}1 1328.35 /MSAM10 rf /Fe 75[503
503 179[{}2 1222.08 /Fourier-Math-Extension rf /Ff 57[880
880 35[880 48[1018 62[1248 15[1222 33[{}6 1222.08 /Fourier-Math-Symbols
rf /Fg 201[486 1[486 486 486 486 49[{ TeXBase1Encoding ReEncodeFont }5
916.563 /Utopia-Regular rf /Fh 133[572 572 631 1[623
755 2[491 10[610 385 28[422 3[728 51[387 17[{
 TeXBase1Encoding ReEncodeFont }11 1222.08 /Utopia-Italic
rf /Fi 67[797 13[854 49[411 124[{}3 1222.08 /Fourier-Math-Letters-Italic
rf /Fj 188[1106 67[{}1 1629.44 /Fourier-Math-BlackBoard
rf /Fk 175[1144 10[1107 18[985 985 49[{ TeXBase1Encoding ReEncodeFont }
4 1759.8 /Utopia-Bold rf /Fl 55[886 111[893 5[963 2[1081
1[1292 824 2[541 3[886 1[970 962 66[{ TeXBase1Encoding ReEncodeFont }10
1407.84 /Utopia-Bold rf /Fm 22[573 111[564 3[676 384
486 434 659 678 643 690 1029 311 1[312 325 677 2[573
667 553 667 583 12[693 603 5[1053 633 2[389 1[819 1[676
2[720 708 14[591 591 591 48[{ TeXBase1Encoding ReEncodeFont }32
1115.15 /Utopia-Regular rf /Fn 11[705 9[628 628 628 7[639
22[741 13[540 15[540 49[618 594 1[616 741 420 533 475
722 743 705 756 1128 341 1[342 356 742 635 390 628 731
606 731 639 3[403 1[403 2[763 1[775 967 1[661 787 931
733 931 1[1154 694 5[709 741 952 836 1[776 1[475 3[324
324 3[648 648 648 648 648 648 648 1[324 479 324 2[428
428 340 36[745 2[{ TeXBase1Encoding ReEncodeFont }65
1222.08 /Utopia-Regular rf /Fo 21[634 634 634 7[665 22[769
78[590 1[638 1[635 769 452 545 538 730 752 715 780 1159
378 1[386 386 771 651 418 634 739 604 739 665 16[794
3[715 2[469 1[887 2[950 1[835 787 6[342 3[684 684 684
684 684 684 2[342 479 342 4[308 36[781 2[{
 TeXBase1Encoding ReEncodeFont }47 1222.08 /Utopia-Bold
rf /Fp 54[1329 115[1660 1318 1185 1445 1622 1[1622 1561
1939 1236 2[811 1705 1533 1[1329 1641 1455 1443 1360
14[1183 1183 1183 48[{ TeXBase1Encoding ReEncodeFont }21
2112.17 /Utopia-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black -126 -1701
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -126 -1701 a -126 -1701 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -126 -1701 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 18975 -200 a Fp(SESSION)443
b(2012)4345 5037 y(BA)-39 b(C)-14 b(CAL)64 b(A)-85 b(UR\311A)-122
b(T)438 b(TECHNOL)-25 b(OGIQ)-53 b(UE)445 b(BL)64 b(ANC)2144
10206 y(SCIENCES)444 b(ET)f(TECHNOL)-25 b(OGIES)443 b(INDUSTRIELLES)
20523 14961 y Fo(G\351nie)256 b(\311lectr)-8 b(onique)16711
20422 y Fp(MA)-122 b(TH\311MA)g(TIQ)-53 b(UES)-126 26616
y Fn(D)-15 b(ur\351e)277 b(:)e(4)g(heur)-24 b(es)36343
b(C)-15 b(oef\002cient)275 b(4)121 31371 y(.)190 b(.)g(.)h(.)f(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)g(.)h(.)f(.)p 0 TeXcolorgray 0 TeXcolorgray
10503 34083 a(L)-159 b('usage)276 b(des)e(calculatr)9
b(ices)276 b(est)f(autor)9 b(is\351)276 b(pour)f(cette)g(\351pr)-24
b(euv)-7 b(e)-24 b(.)10551 35688 y(Le)276 b(for)9 b(mulair)-24
b(e)277 b(personnel)f(de)f(math\351matiques)f(est)h(autor)9
b(is\351.)121 38400 y(.)190 b(.)g(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)-126 43155 y Fo(Le)256 b(candidat)f(doit)i(traiter)e(les)g
(deux)i(ex)-15 b(er)-24 b(cices)253 b(et)j(le)f(pr)-8
b(obl\350me.)-126 44760 y(Le)295 b(candidat)h(est)e(invit\351)j(\340)e
(fair)-24 b(e)296 b(\002gur)-24 b(er)295 b(sur)h(la)f(copie)f(toute)h
(trace)f(de)i(r)-24 b(echer)g(che,)296 b(m\352me)e(incompl\350te)-126
46365 y(ou)256 b(non)g(fr)9 b(uctueuse,)255 b(qu)-73
b('il)256 b(aura)f(dev)-19 b(elopp\351e.)-126 49575 y(I)-8
b(l)360 b(est)g(rappel\351)e(que)i(la)g(qualit\351)e(de)k(la)d
(r\351daction,)h(la)g(clar)9 b(t\351)358 b(et)i(la)f(pr\351cision)h
(des)h(raisonnements)c(en-)-126 51180 y(tr)-24 b(er)-8
b(ont)255 b(pour)h(une)g(par)9 b(t)255 b(impor)9 b(tante)254
b(dans)i(l)-29 b('appr\351ciation)252 b(des)k(copies.)-126
54390 y(D\350s)298 b(que)f(le)h(sujet)g(v)-19 b(ous)298
b(est)f(r)-24 b(emis,)299 b(assur)-24 b(e)-5 b(z-v)-19
b(ous)296 b(qu)-73 b('il)298 b(est)g(complet)12 b(,)295
b(que)j(toutes)f(les)g(pages)f(sont)i(im-)-126 55996
y(pr)9 b(im\351es.)-126 57601 y(Le)256 b(sujet)g(compor)9
b(te)253 b(quatr)-24 b(e)254 b(pages.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray -126
-4743 a Fm(B)-13 b(accalaur\351at)250 b(blanc)h(STI)g(G\351nie)f
(\351lectr)-7 b(onique)19021 b(L)-58 b(y)-7 b(c\351e)253
b(E)-7 b(dmont)250 b(M)-13 b(ichelet)p -126 -4247 52252
45 v 0 TeXcolorgray -78 -372 a Fk(E)96 b Fl(X)e(E)i(R)83
b(C)96 b(I)e(C)i(E)461 b Fk(1)38317 b Fo(5)257 b(points)-126
2807 y Fj(C)278 b Fn(est)f(l)-12 b('ensemble)278 b(des)f(nombr)-24
b(es)277 b(complexes)h(et)f(i)h(d\351signe)f(le)h(nombr)-24
b(e)278 b(complexe)f(de)g(module)h(1)g(et)f(d)-29 b('ar)-24
b(-)-126 4723 y(gument)4590 3823 y Fi(\274)p 4590 4414
798 71 v 4664 5634 a Fn(2)5520 4723 y(.)p 0 TeXcolorgray
1449 9168 a Fo(1.)p 0 TeXcolorgray 651 w Fn(R\351soudr)g(e)275
b(dans)f(l)-12 b('ensemble)276 b Fj(C)f Fn(l)-12 b('\351quation)277
b(:)23368 12101 y Fh(z)24025 11553 y Fg(2)24729 12101
y Ff(\241)162 b Fn(4)27 b Fh(z)248 b Ff(\305)162 b Fn(16)227
b Ff(\306)g Fn(0.)p 0 TeXcolorgray 1449 17077 a Fo(2.)p
0 TeXcolorgray 651 w Fn(O)-7 b(n)275 b(consid\350r)-24
b(e)275 b(les)h(nombr)-24 b(es)275 b(complexes)g(:)18761
20011 y Fh(z)19373 20210 y Fg(1)20142 20011 y Ff(\306)227
b Fn(2)162 b Ff(\305)g Fn(2i)24105 18910 y Ff(p)p 25123
18910 649 71 v 1101 x Fn(3)1169 b(et)1196 b Fh(z)29796
20210 y Fg(2)30565 20011 y Ff(\306)226 b Fn(2)162 b Ff(\241)g
Fn(2i)34528 18910 y Ff(p)p 35545 18910 V 35545 20011
a Fn(3.)p 0 TeXcolorgray 4330 22944 a Fo(a.)p 0 TeXcolorgray
650 w Fn(D\351ter)9 b(miner)277 b(le)f(module)f(et)h(un)f(ar)-8
b(gument)275 b(de)302 b Fh(z)29571 23143 y Fg(1)30112
22944 y Fn(.)p 0 TeXcolorgray 4254 25017 a Fo(b.)p 0
TeXcolorgray 652 w Fn(\311)-8 b(cr)9 b(ir)-24 b(e)304
b Fh(z)10161 25216 y Fg(1)10702 25017 y Fn(,)275 b(puis)302
b Fh(z)14588 25216 y Fg(2)15404 25017 y Fn(sous)275 b(for)9
b(me)276 b(exponentielle)-24 b(.)p 0 TeXcolorgray 1449
29121 a Fo(3.)p 0 TeXcolorgray 651 w Fn(Le)276 b(plan)e(est)h(muni)g(d)
-29 b('un)274 b(r)-24 b(ep\350r)g(e)277 b(or)9 b(thonor)g(mal)277
b(dir)-24 b(ect)30061 27726 y Fe(\263)30564 29121 y Fn(O,)32224
28256 y Ff(\241)-910 b(!)32279 29121 y Fh(u)383 b Fn(,)34146
28256 y Ff(\241)-910 b(!)34256 29121 y Fh(v)35338 27726
y Fe(\264)36116 29121 y Fn(d)-29 b('unit\351)275 b(1)g(cm.)3126
31939 y(O)-7 b(n)275 b(consid\350r)-24 b(e)275 b(la)h(r)-8
b(otation)275 b Fh(r)451 b Fn(de)275 b(centr)-24 b(e)275
b(O)h(et)f(d)-29 b('angle)274 b Ff(\241)31222 31040 y
Fn(2)p Fi(\274)p 31222 31630 1446 71 v 31620 32850 a
Fn(3)32800 31939 y(.)p 0 TeXcolorgray 4330 34879 a Fo(a.)p
0 TeXcolorgray 650 w Fn(P)-8 b(lacer)276 b(les)g(points)e(M)16396
35078 y Fg(1)16936 34879 y Fn(,)h(et)g(M)20012 35078
y Fg(2)20828 34879 y Fn(d)-29 b('af\002xes)273 b(r)-24
b(espectiv)-7 b(es)303 b Fh(z)32722 35078 y Fg(1)33538
34879 y Fn(et)f Fh(z)35500 35078 y Fg(2)36317 34879 y
Fn(dans)274 b(le)i(r)-24 b(ep\350r)g(e)44300 33484 y
Fe(\263)44804 34879 y Fn(O,)46464 34014 y Ff(\241)-910
b(!)46519 34879 y Fh(u)382 b Fn(,)48385 34014 y Ff(\241)-910
b(!)48496 34879 y Fh(v)49577 33484 y Fe(\264)50081 34879
y Fn(.)p 0 TeXcolorgray 4254 37131 a Fo(b.)p 0 TeXcolorgray
652 w Fn(M)-37 b(ontr)-24 b(er)275 b(que)h(le)g(point)f(M)18835
37330 y Fg(2)19650 37131 y Fn(est)g(l)-12 b('image)275
b(du)g(point)f(M)31991 37330 y Fg(1)32807 37131 y Fn(par)h(la)g(r)-8
b(otation)276 b Fh(r)175 b Fn(.)p 0 TeXcolorgray 4391
39204 a Fo(c.)p 0 TeXcolorgray 650 w Fn(O)-7 b(n)275
b(appelle)h(M)13435 39403 y Fg(3)14250 39204 y Fn(le)g(point)e(image)h
(du)g(point)g(M)28566 39403 y Fg(2)29381 39204 y Fn(par)g(la)g(r)-8
b(otation)276 b Fh(r)175 b Fn(.)5987 41293 y(C)-15 b(alculer)277
b(l)-12 b('af\002xe)301 b Fh(z)15434 41492 y Fg(3)16251
41293 y Fn(du)275 b(point)f(M)22406 41492 y Fg(3)22947
41293 y Fn(.)h(P)-8 b(lacer)276 b(le)g(point)e(M)32889
41492 y Fg(3)33704 41293 y Fn(dans)g(le)i(r)-24 b(ep\350r)g(e)41688
39898 y Fe(\263)42191 41293 y Fn(O)q(,)43852 40428 y
Ff(\241)-910 b(!)43907 41293 y Fh(u)382 b Fn(,)45773
40428 y Ff(\241)-910 b(!)45883 41293 y Fh(v)46965 39898
y Fe(\264)47469 41293 y Fn(.)p 0 TeXcolorgray 4254 43545
a Fo(d.)p 0 TeXcolorgray 652 w Fn(D\351montr)-24 b(er)277
b(que)f(le)g(tr)9 b(iangle)276 b(M)21708 43744 y Fg(1)22248
43545 y Fn(M)23402 43744 y Fg(2)23943 43545 y Fn(M)25097
43744 y Fg(3)25912 43545 y Fn(est)f(\351quilat\351r)-12
b(al.)p 0 TeXcolorgray 1449 48228 a Fo(4.)p 0 TeXcolorgray
651 w Fn(V\351r)9 b(i\002er)276 b(que)g(les)g(nombr)-24
b(es)275 b(complexes)23026 48239 y(\()23480 48228 y Fh(z)24092
48427 y Fg(1)24634 48239 y Fn(\))25062 47746 y Fg(6)25878
48228 y Fn(et)27334 47340 y(\()27789 47329 y Fh(z)28401
47528 y Fg(1)28942 47340 y Fn(\))29370 46847 y Fg(4)p
27334 47919 2578 71 v 27334 49226 a Fn(\()27789 49215
y Fh(z)28401 49414 y Fg(2)28942 49226 y Fn(\))29370 48746
y Fg(2)30319 48228 y Fn(sont)g(des)f(entiers)i(natur)-24
b(els)g(.)3126 50670 y(O)-7 b(n)275 b(utiliser)-12 b(a)276
b(la)f(for)9 b(me)276 b(de)301 b Fh(z)16972 50869 y Fg(1)17789
50670 y Fn(et)h Fh(z)19751 50869 y Fg(2)20567 50670 y
Fn(la)276 b(plus)e(adapt\351e)-24 b(.)p 0 TeXcolorgray
-126 72267 52252 23 v -126 73872 a Fm(Arpajon)21754 b
Fn(2)20643 b Fm(M)-13 b(ars)250 b(2012)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray -126
-4743 a Fm(B)-13 b(accalaur\351at)250 b(blanc)h(STI)g(G\351nie)f
(\351lectr)-7 b(onique)19021 b(L)-58 b(y)-7 b(c\351e)253
b(E)-7 b(dmont)250 b(M)-13 b(ichelet)p -126 -4247 52252
45 v 0 TeXcolorgray -78 -195 a Fk(E)96 b Fl(X)e(E)i(R)83
b(C)96 b(I)e(C)i(E)461 b Fk(2)38317 b Fo(4)257 b(points)-126
2985 y Fn(U)-49 b(n)356 b(joueur)j(lance)e(successiv)-7
b(ement)356 b(et)g(dans)g(cet)g(or)-24 b(dr)g(e)358 b(tr)-8
b(ois)357 b(pi\350ces)f(de)g(monnaie)h(:)f(une)h(de)g(2)f(eur)-8
b(os)358 b(et)-126 4590 y(deux)275 b(de)g(1)g(eur)-8
b(o)-49 b(.)p 0 TeXcolorgray 1449 8471 a Fo(1.)p 0 TeXcolorgray
651 w Fn(D\351ter)9 b(miner)376 b(les)f(diff)n(\351r)-24
b(ents)374 b(r\351sultats)h(possibles)-12 b(,)373 b(sachant)g(qu)-37
b('un)375 b(r\351sultat)f(peut)g(\352tr)-24 b(e)376 b(consid\351r\351)
3126 10076 y(comme)275 b(un)g(tr)9 b(iplet)275 b(du)g(type)h(\(P)-244
b(,)274 b(F)-221 b(,)276 b(P\))f(par)g(exemple)-24 b(,)276
b(P)f(d\351signant)f(pile)h(et)g(F)g(d\351signant)f(face)-24
b(.)3126 11915 y(Chaque)274 b(pi\350ce)h(est)g(par)9
b(faitement)274 b(\351quilibr\351e)-24 b(.)278 b(O)-7
b(n)275 b(est)g(dans)f(une)h(situation)g(d)-29 b('\351quipr)-8
b(obabilit\351.)p 0 TeXcolorgray 1449 15562 a Fo(2.)p
0 TeXcolorgray 651 w Fn(S)-24 b(i)224 b(les)h(tr)-8 b(ois)224
b(pi\350ces)f(pr\351sentent)h(leur)i(c\364t\351)e(face)-24
b(,)223 b(le)i(joueur)h(per)-24 b(d)224 b(5)h(eur)-8
b(os)225 b(:)f(sinon)g(il)g(gagne)g(la)g(somme)3126 17167
y(des)274 b(eur)-8 b(os)276 b(\002gur)-12 b(ant)276 b(sur)f(les)h
(pi\350ces)e(pr\351sentant)h(leur)h(c\364t\351)f(pile)-24
b(.)3126 19006 y(S)-15 b(oit)249 b(X)e(la)h(v)-8 b(ar)9
b(iable)250 b(al\351atoir)-24 b(e)249 b(qui,)g(\340)f(chaque)g(lancer)h
(des)e(tr)-8 b(ois)249 b(pi\350ces)-12 b(,)247 b(associe)h(la)g(somme)g
(d)-29 b('ar)-8 b(gent)3126 20611 y(gagn\351e)275 b(en)g(eur)-8
b(os)-24 b(.)276 b(Lorsque)i(le)d(joueur)j(per)-24 b(d,)275
b(la)g(v)-8 b(ar)9 b(iable)277 b(X)d(pr)-24 b(end)275
b(alors)h(une)f(v)-8 b(aleur)277 b(n\351gativ)-7 b(e)-24
b(.)p 0 TeXcolorgray 4330 22684 a Fo(a.)p 0 TeXcolorgray
650 w Fn(Q)-8 b(uelles)277 b(v)-8 b(aleurs)276 b(peut)f(pr)-24
b(endr)g(e)276 b(X)195 b(?)p 0 TeXcolorgray 4254 24757
a Fo(b.)p 0 TeXcolorgray 652 w Fn(Donner)276 b(la)g(loi)f(de)g(pr)-8
b(obabilit\351)275 b(de)g(X.)p 0 TeXcolorgray 4391 26829
a Fo(c.)p 0 TeXcolorgray 650 w Fn(C)-15 b(alculer)277
b(la)e(pr)-8 b(obabilit\351)275 b(de)g(l)-12 b('\351v\350nement)276
b(\253)220 b(X)275 b Fd(6)227 b Fn(2)220 b(\273.)p 0
TeXcolorgray 1449 30711 a Fo(3.)p 0 TeXcolorgray 651
w Fn(O)-7 b(n)275 b(dit)f(qu)-37 b('un)276 b(jeu)g(est)f(\351quitable)h
(lorsque)h(l)-12 b('esp\351r)g(ance)276 b(math\351matique)e(du)h(gain)g
(est)g(\351gale)g(\340)g(0.)p 0 TeXcolorgray 4330 32783
a Fo(a.)p 0 TeXcolorgray 650 w Fn(C)-15 b(e)275 b(jeu)i(est-il)e
(\351quitable)195 b(?)p 0 TeXcolorgray 4254 34856 a Fo(b.)p
0 TeXcolorgray 652 w Fn(Q)-8 b(uelle)251 b(somme)e(le)h(joueur)h(devr)
-12 b(ait-il)251 b(per)-24 b(dr)g(e)250 b(lorsque)h(les)e(tr)-8
b(ois)250 b(pi\350ces)e(pr\351sentent)h(leur)i(c\364t\351)5987
36461 y(face)274 b(pour)i(que)g(ce)f(jeu)h(soit)f(\351quitable)195
b(?)-78 41917 y Fk(P)96 b Fl(R)83 b(O)96 b(B)e(L)g(\310)i(M)g(E)38257
b Fo(11)257 b(points)-126 45097 y Fn(D)-8 b(ans)275 b(tout)g(le)h(pr)-8
b(obl\350me)-24 b(,)316 b Fh(I)428 b Fn(d\351signe)274
b(l)-12 b('inter)23 b(v)-8 b(alle)277 b(]0;)130 b Ff(\3051)p
Fn([.)-126 48277 y Fo(P)-44 b(ar)9 b(tie)256 b(A)g(:)-126
51457 y Fn(S)-15 b(oit)303 b Fh(g)431 b Fn(la)275 b(fonction)f
(d\351\002nie)i(sur)f(l)-12 b('inter)23 b(v)-8 b(alle)317
b Fh(I)428 b Fn(par)275 b(:)20258 54667 y Fh(g)157 b
Fn(\()27 b Fh(x)85 b Fn(\))225 b Ff(\306)254 b Fh(x)24699
54118 y Fg(2)25402 54667 y Ff(\305)162 b Fn(3)g Ff(\241)g
Fn(2)130 b(ln\()27 b Fh(x)85 b Fn(\))p 0 TeXcolorgray
1449 56992 a Fo(1.)p 0 TeXcolorgray 0 TeXcolorgray 1855
w(a.)p 0 TeXcolorgray 650 w Fn(O)-7 b(n)437 b(note)463
b Fh(g)11843 56509 y Fc(0)12604 56992 y Fn(la)437 b(d\351r)9
b(iv\351e)438 b(de)e(la)h(fonction)462 b Fh(g)157 b Fn(.)436
b(C)-15 b(alculer)465 b Fh(g)34249 56509 y Fc(0)34573
56992 y Fn(\()27 b Fh(x)85 b Fn(\))436 b(et)g(\351tudier)h(son)f(signe)
g(pour)464 b Fh(x)5987 58597 y Fn(appar)9 b(tenant)274
b(\340)h(l)-12 b('inter)23 b(v)-8 b(alle)317 b Fh(I)154
b Fn(.)p 0 TeXcolorgray 4254 60669 a Fo(b.)p 0 TeXcolorgray
652 w Fn(D)-15 b(r)-24 b(esser)290 b(le)e(tableau)f(de)h(v)-8
b(ar)9 b(iations)288 b(de)f(la)h(fonction)314 b Fh(g)157
b Fn(.)286 b(\(Les)i(limites)f(de)h(la)g(fonction)313
b Fh(g)444 b Fn(en)287 b(0)h(et)5987 62274 y Ff(\3051)274
b Fn(ne)h(sont)f(pas)h(demand\351es\).)p 0 TeXcolorgray
1449 65922 a Fo(2.)p 0 TeXcolorgray 651 w Fn(C)-15 b(alculer)303
b Fh(g)157 b Fn(\(1\),)274 b(en)h(d\351duir)-24 b(e)276
b(le)f(signe)g(de)302 b Fh(g)157 b Fn(\()27 b Fh(x)85
b Fn(\))273 b(pour)303 b Fh(x)359 b Fn(appar)9 b(tenant)274
b(\340)h(l)-12 b('inter)23 b(v)-8 b(alle)317 b Fh(I)154
b Fn(.)p 0 TeXcolorgray -126 72444 52252 23 v -126 74049
a Fm(Arpajon)21754 b Fn(3)20643 b Fm(M)-13 b(ars)250
b(2012)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray -126
-4743 a Fm(B)-13 b(accalaur\351at)250 b(blanc)h(STI)g(G\351nie)f
(\351lectr)-7 b(onique)19021 b(L)-58 b(y)-7 b(c\351e)253
b(E)-7 b(dmont)250 b(M)-13 b(ichelet)p -126 -4247 52252
45 v 0 TeXcolorgray -126 -195 a Fo(P)-44 b(ar)9 b(tie)256
b(B)g(:)-126 2985 y Fn(S)-15 b(oit)409 b Fh(f)573 b Fn(la)275
b(fonction)f(d\351\002nie)h(sur)h(l)-12 b('inter)23 b(v)-8
b(alle)316 b Fh(I)428 b Fn(par)275 b(:)19918 6511 y Fh(f)298
b Fn(\()27 b Fh(x)85 b Fn(\))226 b Ff(\306)23666 5612
y Fn(1)p 23666 6202 649 71 v 23666 7422 a(2)24474 6511
y Fh(x)248 b Ff(\241)26897 5612 y Fn(1)p 26526 6202 1391
71 v 26526 7422 a(2)27 b Fh(x)28212 6511 y Ff(\305)29387
5612 y Fn(ln\()g Fh(x)85 b Fn(\))p 29387 6202 2696 71
v 30390 7422 a Fh(x)-126 9451 y Fn(O)-7 b(n)337 b(note)470
b Fh(f)5553 8969 y Fc(0)6215 9451 y Fn(la)337 b(fonction)f(d\351r)9
b(iv\351e)338 b(de)f(la)g(fonction)469 b Fh(f)634 b Fn(sur)337
b(l)-12 b('inter)23 b(v)-8 b(alle)379 b Fh(I)490 b Fn(et)337
b Fa(C)652 b Fn(la)337 b(courbe)g(r)-24 b(epr\351sentativ)-7
b(e)-126 11306 y(de)408 b Fh(f)572 b Fn(dans)274 b(un)h(r)-24
b(ep\350r)g(e)11109 9911 y Fe(\263)11613 11306 y Fn(O,)13273
10441 y Ff(\241)-910 b(!)13509 11306 y Fh(\021)569 b
Fn(,)15194 10441 y Ff(\241)-910 b(!)15472 11306 y Fi(|)16386
9911 y Fe(\264)17165 11306 y Fn(d)-29 b('unit\351s)274
b(gr)-12 b(aphiques)275 b(2)g(cm.)p 0 TeXcolorgray 1449
14063 a Fo(1.)p 0 TeXcolorgray 0 TeXcolorgray 1855 w(a.)p
0 TeXcolorgray 650 w Fn(\311)-23 b(tudier)276 b(la)f(limite)h(de)408
b Fh(f)572 b Fn(en)275 b(0)g(et)g(en)h(d\351duir)-24
b(e)275 b(l)-12 b('existence)275 b(d)-29 b('une)275 b(asymptote)g(\340)
g(la)g(courbe)h Fa(C)316 b Fn(.)p 0 TeXcolorgray 4254
16135 a Fo(b.)p 0 TeXcolorgray 652 w Fn(\311)-23 b(tudier)276
b(la)f(limite)h(de)408 b Fh(f)572 b Fn(en)275 b Ff(\3051)p
Fn(.)p 0 TeXcolorgray 1449 20353 a Fo(2.)p 0 TeXcolorgray
0 TeXcolorgray 1855 w(a.)p 0 TeXcolorgray 650 w Fn(M)-37
b(ontr)-24 b(er)275 b(que)-24 b(,)277 b(pour)e(tout)g(nombr)-24
b(e)276 b(r\351el)303 b Fh(x)360 b Fn(de)275 b(l)-12
b('inter)23 b(v)-8 b(alle)317 b Fh(I)154 b Fn(,)407 b
Fh(f)36847 19870 y Fc(0)37173 20353 y Fn(\()27 b Fh(x)85
b Fn(\))226 b Ff(\306)40264 19453 y Fh(g)157 b Fn(\()27
b Fh(x)85 b Fn(\))p 40237 20044 2392 71 v 40467 21264
a(2)27 b Fh(x)41858 20880 y Fg(2)42761 20353 y Fn(.)p
0 TeXcolorgray 4254 22853 a Fo(b.)p 0 TeXcolorgray 652
w Fn(D\351duir)-24 b(e)312 b(de)d(la)h(par)9 b(tie)311
b(A)e(le)i(signe)f(de)442 b Fh(f)25392 22371 y Fc(0)25717
22853 y Fn(\()27 b Fh(x)85 b Fn(\))309 b(puis)g(le)i(sens)e(de)h(v)-8
b(ar)9 b(iation)311 b(de)f(la)g(fonction)442 b Fh(f)608
b Fn(sur)5987 24458 y(l)-12 b('inter)23 b(v)-8 b(alle)317
b Fh(I)154 b Fn(.)p 0 TeXcolorgray 4391 26531 a Fo(c.)p
0 TeXcolorgray 650 w Fn(\311)-23 b(tablir)276 b(le)g(tableau)f(de)g(v)
-8 b(ar)9 b(iations)275 b(de)g(la)g(fonction)407 b Fh(f)573
b Fn(sur)275 b(l)-12 b('inter)23 b(v)-8 b(alle)317 b
Fh(I)154 b Fn(.)p 0 TeXcolorgray 1449 30702 a Fo(3.)p
0 TeXcolorgray 651 w Fn(S)-15 b(oit)276 b Fa(D)379 b
Fn(la)275 b(dr)-8 b(oite)276 b(d)-29 b('\351quation)341
b Fh(y)f Ff(\306)20532 29802 y Fn(1)p 20532 30393 649
71 v 20532 31613 a(2)21340 30702 y Fh(x)359 b Fn(dans)274
b(le)i(r)-24 b(ep\350r)g(e)30314 29307 y Fe(\263)30817
30702 y Fn(O,)32477 29837 y Ff(\241)-909 b(!)32714 30702
y Fh(\021)569 b Fn(,)34399 29837 y Ff(\241)-910 b(!)34676
30702 y Fi(|)35591 29307 y Fe(\264)36094 30702 y Fn(.)p
0 TeXcolorgray 4330 33847 a Fo(a.)p 0 TeXcolorgray 650
w Fn(M)-37 b(ontr)-24 b(er)275 b(que)h(la)g(dr)-8 b(oite)275
b Fa(D)380 b Fn(est)275 b(asymptote)g(\340)g(la)g(courbe)h
Fa(C)316 b Fn(.)p 0 TeXcolorgray 4254 35920 a Fo(b.)p
0 TeXcolorgray 652 w Fn(D\351ter)9 b(miner)321 b(par)d(le)h(calcul)g
(les)g(coor)-24 b(donn\351es)319 b(du)f(point)g(d)-29
b('intersection)318 b Fh(E)446 b Fn(de)318 b(la)g(courbe)i
Fa(C)5987 37525 y Fn(et)275 b(de)g(la)g(dr)-8 b(oite)276
b Fa(D)104 b Fn(.)p 0 TeXcolorgray 4391 39597 a Fo(c.)p
0 TeXcolorgray 650 w Fn(S)-29 b(ur)365 b(l)-12 b('inter)23
b(v)-8 b(alle)406 b Fh(I)154 b Fn(,)363 b(d\351ter)9
b(miner)365 b(la)g(position)e(de)h(la)g(courbe)h Fa(C)679
b Fn(par)364 b(r)-12 b(appor)9 b(t)365 b(\340)e(l)-12
b('asymptote)5987 41203 y Fa(D)104 b Fn(.)p 0 TeXcolorgray
1449 45551 a Fo(4.)p 0 TeXcolorgray 651 w Fn(D\351ter)9
b(miner)277 b(une)e(\351quation)h(de)f(la)g(tangente)g
Fa(T)762 b Fn(\340)275 b(la)h(courbe)f Fa(C)591 b Fn(au)275
b(point)f(d)-29 b('abscisse)300 b Fh(x)312 b Ff(\306)227
b Fn(1.)p 0 TeXcolorgray 1449 49199 a Fo(5.)p 0 TeXcolorgray
651 w Fn(M)-37 b(ontr)-24 b(er)343 b(que)h(l)-12 b('\351quation)477
b Fh(f)297 b Fn(\()27 b Fh(x)85 b Fn(\))294 b Ff(\306)f
Fn(2)343 b(admet)f(une)h(unique)h(solution)g Fi(\256)e
Fn(appar)9 b(tenant)342 b(\340)h(l)-12 b('inter)23 b(v)-8
b(alle)3126 50804 y([3;)130 b(4].)277 b(Donner)f(un)f(encadr)-24
b(ement)275 b(de)g(cette)g(solution)g(\340)g(10)31902
50322 y Fc(\241)p Fg(2)33379 50804 y Fn(pr\350s)-24 b(.)p
0 TeXcolorgray 1449 54675 a Fo(6.)p 0 TeXcolorgray 651
w Fn(E)-5 b(n)209 b(utilisant)g(les)g(r\351sultats)g(pr\351c\351dents)
-12 b(,)209 b(tr)-12 b(acer)209 b(av)-7 b(ec)209 b(soin)g(dans)g(le)g
(m\352me)g(r)-24 b(ep\350r)g(e)43112 53280 y Fe(\263)43613
54675 y Fn(O,)45273 53810 y Ff(\241)-910 b(!)45509 54675
y Fh(\021)569 b Fn(,)47194 53810 y Ff(\241)-910 b(!)47472
54675 y Fi(|)48386 53280 y Fe(\264)49098 54675 y Fn(l)-12
b('asymp-)3126 56730 y(tote)275 b Fa(D)104 b Fn(,)275
b(la)h(tangente)e Fa(T)763 b Fn(et)275 b(la)g(courbe)h
Fa(C)316 b Fn(.)p 0 TeXcolorgray -126 72444 52252 23
v -126 74049 a Fm(Arpajon)21754 b Fn(4)20643 b Fm(M)-13
b(ars)250 b(2012)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
