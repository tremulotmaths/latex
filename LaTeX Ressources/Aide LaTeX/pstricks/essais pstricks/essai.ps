%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: essai.dvi
%%CreationDate: Mon Jan 04 21:00:04 2016
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Utopia-Bold Utopia-Regular SFTT1200 CMTT12
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o essai.ps essai.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.01.04:2100
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 856 2013-12-09 10:34:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.21, 2013/11/28
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.06, 2011/09/18
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  mtrx setmatrix TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  pop pop pop pop 
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2010/10/02 $
% Version         : 0.62 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 692 2012-06-04 06:47:40Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: pst-barcode.pro 0 0
%!PS

% Barcode Writer in Pure PostScript - Version 2013-06-03
% http://www.terryburton.co.uk/barcodewriter/
%
% Copyright (c) 2004-2013 Terry Burton
%
% Permission is hereby granted, free of charge, to any
% person obtaining a copy of this software and associated
% documentation files (the "Software"), to deal in the
% Software without restriction, including without
% limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of
% the Software, and to permit persons to whom the Software
% is furnished to do so, subject to the following
% conditions:
%
% The above copyright notice and this permission notice
% shall be included in all copies or substantial portions
% of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
% KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
% THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
% PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
% THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
% DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
% CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
% IN THE SOFTWARE.

% --BEGIN TEMPLATE--

% --BEGIN RESOURCE preamble--
%%BeginResource: Category uk.co.terryburton.bwipp 0.0 0 0 0
%%BeginData:          7 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
P1OerF_-`n01TSk      ATDKp  010/i  AS5q%  H'  6mE      30Ia,!      KmJH23J
i?3%mj@F*(i.@qA        VbE  +L\DA  TVm"@  r#  drB         9Ki         QP'&
Es@:O(aA79M!@<l  s?E+O  HE  04AmA   @<ls  ?E  +OH  \<K_S  [F_  `U>D_  ?-CE
cQG7F`MSBDD#CBB  lJ$S4  tf9  3FC    f*'E  d8  d<A  S,XoAT  D@  'Dfp)1  AWh
2!hZ~>
% Category/uk.co.terryburton.bwipp 0.0 0
%%EndData
%%EndResource
% --END RESOURCE preamble--

% --BEGIN RESOURCE raiseerror--
%%BeginResource: uk.co.terryburton.bwipp raiseerror 0.0 0 0 0
%%BeginData:          9 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3JD%E  a`['A  S#  n&D         fU1         I,\;
":DfV")04f0EDfT  Q0AoE  hr  P'A6`   EcQ)  =P  !1O  1EcQ)  =DI  IBnP!  5%R,
\;":DfRL@Df'?"D  IeoMP  'A6  `Ec    Q)=0  5b  ?FA  TDg0EZ  fI  EF_-_\  BOP
dhCh70uEc5t@EHP  u;I?G  )'1  G<c  W Bld  isE  cQ)  =OuSV8  06  M%_@rE  uAA
TDg:@Wc^5Df.1:G  A2#8+  Co%  qBl 7L  &A  TMd  4Ea  r[DFcn  a<  F(KH4@  :O(
eDJ,-DH]iMmATVm        "@r#  drB 75  qB  ~>
% uk.co.terryburton.bwipp/raiseerror 0.0 0
%%EndData
%%EndResource
% --END RESOURCE raiseerror--

% --BEGIN RENDERER renlinear--
%%BeginResource: uk.co.terryburton.bwipp renlinear 0.0 0 0 0
%%BeginData:         72 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  Ops  'bASu  <uD  Im6sH  \`B!
23JD%@<-"%P!5$b  06:TD  +Bo  soO    u"b#  BQ  G;#  +C1-d0  4J  C3+Bos  oOu
"b5G]Y'4+C1-d04  J@1@r  H1%  EfL  < GDK  BB2  Ou"  b*DI[L  *A  7]joG]  Y'?
@;L!rOu"b5AU&<,  Des?4  NWj  QCF (K  HV  1G<  i]G  ]\1=Ch  [O  "NWjQC  F(K
HV1G<i]G]\4>Ch[        O"NW  jQC F(  KH  V1G  <i]         G][         P9DK
LmD6Z7*fBk;=J1G         <i]G  ]  \"  @H  =_m  >Ou        "b5A        U&<AD
e<U&ATW_.Ou"b5A  U&<BDe  <U&  A  TW_ .O u"b5  AU&  <0@;p:D!0T  ,k@;L%-AU&<
W!0T,k@W-9tATD:  !Ci=?S  "a+  ^ (ATX    (k04  J@"  CM.[+F`(`"  Des?4NWjQCF
(KHV1G<H[CNFH8A  RT,,4r  KcW    Ou"b    8Bk2  =!L  ]ESo04J@1E  aa'(DhnFW1G
<fg@:Nkh@<?4%L]  NYp06   :fFG   @GK2A   7]d(  Amo  LsAWei&@W-  9tATDTuAorh
9Ou"b#DfTB"EcPl         ,BQT%   ;Ou"b  #DfTB  "Ec  c5=L]NYp04  Jj?A7]djDfg
)>D284U1G<3UEb&       a%GA1T0  BSo"S!  !&0<0  5#E  9Eb'B-Blmp  -E+*6f+D,%u
F(LLj05#E9Eb&utAor!1F,0gZ1G<B`@<,mpAS-%0E,TfR!0T,kB6@X'A9)BsBQS33F,0gZ1G<B
`@<,n!BkM+$H#R\CL]ESo05#E9Eb'B.A9;L@#*LbqB6@X'A8#OgB4uCC#EglOEbBH?Ou%NL8T/
QiH]g15P"@<9@<,jrCi=>:@UX:eDes?4OtDhQ06CcMFCT6*DfQtBAU&<,Des?4OtDhQ06CcMFE
h51BkM<+FCf]=G[YE&B5WkaOu"b5AU&<B@;KXjDBO%4G]\4>Ch[O"OtDhQ06CcMFCoH/F<G[:G
][P9DKM$nOu"b5AU&<<BmO>5FCf]=F(or3OtVtS06CcMFEh_9AohO*+EV1>FEh_9AohO*OtVtS
06CcMFEqe:AohO*+EV1>FEqe:AohO*OtVtS06CcMFD#$$F!,R9G][S,E-%0qOu"b"Cijc1G]Y'
:Cijc1G]]*#Ou"b#DfTB"Eas$(DfQt0DfTB"Eas$(DfV!mOu"b#@:O(cEc6)<A7KOoDfQt0@:O
(cEc6)<A7KOoDfV!mOu"b*DJO<4Eb/Zi+DG_/F)Z/2@:YNSOu"b8Bk2=!+EqO1FD-gjOu"b#@<
-BsFD5Y9@UX:t@<?4%OtVtS06;)@@qB[hFD5Y9F)YPtATD4$BlB.fOu"b#DfTB"Ebo<!F<G%2E
b&a%Ch74#OtVtS04Jj?A7]e%BkM+$+C]80A7]e%BkM+$OtVtS04Jj?A7]e'Df?h.DfTB"Ecc5=
OtVtS04Jj?A7]djDfg)>D'3;+Eb&a%@W-@1Df(XjOu"b#DfTB"Ed)5.FD)e+DfTB"Ed)5.FD-g
jOu"b(F^]<$Ch74#E,Te?B6@X'A8GghFDu/>OtVtS05#E9Eb&utAor<;Df[%6F^]<$Ch74#H#R
\COtVtS05#E9Eb'3)B4uC+Df[%6F^]<$EbT0"FDu/>OtVtS05#E9Eb'3)B4uC4E,Te?B6@X'A9
)BsBQSN=Df_'pOu"b(F^]<$GA1T0BHUr1@<,n&Bk2=!OtVtS05#E9Eb&ipBkM+$+D5h*Eb&ipB
kM+$OtVtS04J@1F!,O5F-:!g!KmJ>!g6HE$'I(tG_uJ$!!&0<05Y-BBSZYO1Pc$e!HV^kP%'4J
Oo^@?P#@);P&,pUP,Wd]Bp(ZC1MMXHP%odQP!+.FA0>r&F!,1[94D=MEaa'(Dj"pG@<-BsFD5Z
VWJCS<!Ko6[@WNZ+P"UT2P&5P!BHUbtF!,1Q!g6HE98H-%Cm$S-@j#<<!g5HdOo^_%06n[L@WN
Z+L]W`;P"UU%P&-:;06\OL+DG_/F)Z/2@:YP#Ou$QUEcW@;L]W`;>9IT%@j$%>G9C1SG\A4FOo
]E.G\E7:HS95EG\A45+F0+NOu%NL<.0+&@<-E3BnuhR;Mb@9G^Y`TI=!VX+EM"5+DI!3F)YPtA
TD4$BlB/NF)YPtATD4$BlB06L]NY>Ou%NL<A/S>GT^O[!Ko6eP":a2OslKqGA1T0BSZYOD0pJ@
A9;L@8<Re6OuA*sP)FaO<%i<(FCB'4@rH1%EdKHJDL#`1Ci=?W5*@^1DL#`1Ci=?W@Yb5O4aW1
p4<Pah+<VdjL^90?Or9EBL]Lq%H"1c/DfV"dOtr1bH\MP#Ou@`O8WoWmP#Pk-H"1c/DfV"ML^9
/,H]AFq+<VdL+<VdL5)9Q/V32^Z3/@TDDL#`1Ci=?WH'0qG5C8+bs,o9gP"Ch#I?IQXOq*X2P&
FfJEb&a%Ch74#P&=`IEb&a%@W-@1Df(YTP&#:b@W-9tATDTuAos1:@W-9tATDg*B4uCM!Jg`=K
no_G@<cH.@W-9tATD6uFEDG<Oo]$1Eb&a%FDl,]!Kr.]+C]80A7]dtAS-%I!FftfA7]e%BkM+$
Oo^_`L]ETlL]D:#G\A4/DfTB"Eais/FDl#Z!FftfA7]e'DfCj?P&?G:OqqM8@r#^tDfor.@rH1
 %EfL<GDKBB2P&5Q/:1@XACM.[+F`(`"Des?4+EM+9@;^@#Des?4P!Y=+I?IQNBQ&*(DfTB"Ed
NsE@W-9tATD:!Ci=?S"a+^(ATX)PHX^o6A7]dkDes?4+EM+9@;^@#Des?4I?IQ=DfTB"Ed)5.F
D-i,P,FI;I?IQm:5An5R:9TF@rH1%EfL<GDKBB2P&5PT@<,jrCi=>:F(KH%DL#`1Ci=?BP#Pn!
EcZSj3/ITtD0qEIP')q+P+.VML]ET%P(f'sI=%-"I?ITYP"Cg2FCf]=@rH1%EfL<GDKBB2P&5P
fAU&<,Des?4+EM+9@;^@#Des?4I?IQDDI[L*A7]joG]\9TFCf]=G[YE&B5W_5F`)83FHSe/AU&
<B@;KXjDN4mCDKBB2P!+s2@;L%-AU&<W!0TL."FDeCL]ESo04o*^!0T-[G]\:ZI?I0X!g4FBP&
6@GAo<cKP&bo*!g4ESF-8_M1G<?XP!5$bP!5$rP!5%fP*LHBP')q1I?ITnCQb?=P"C(KFCf]=A
oDR/P!a>&G]\"@H=`7uP*KHlFED)=FH-?a4aSi(G]Y'4+EVjMH\_Zb97))M8UZan?'6usFE;PE
+EVjMP%'TNOu%moL]MUBFHU*h!KsF/OuRQ.FHShN96>5sEejgR!Kr5$G^Y`GI=!VhF*)FF@;L%
-AU&<[1OYEdFE;PEP%'4IP!+/J!.B3W:6KOO!/LW<CQ8ELAmoLsAWdXgF,0sT!Kr5$Fcpm1Fco
I^+>6Q"Bl8#lH#R>X@!e%Z02Q(kDKJj'E+P2*L]W`&I=#R7Cia09P#[Yf02lt5DeiocBk2=!P$
jFUH]fL);fm%uCLpR]A9;LJ98EY42M_?r5*@$A7W30d9jr-aBm>e6OuJO`P&-:FOuSV@Oo]WDE
cdHFI?IQXP#X/WAU&<*F(8d!FHShN1G<i]G]\.DA9;K-FE;PEP,=CbFE;PEP%'4JP,WP7G][S,
E-%1YOo^_%06CcMFEhbCF!,R9G]\1KAnH*qF<GfNFCf]=GA1T0BTf?N!g5I)!Ko6\AU&<A@;KX
jDN4j9AS-%I4aSi(AU&<AE,Te?FCf]=G].2+F(KHV1OYEcFCf]=G[YE&B5W_5EbT0"FHSe606C
cMFEhbCF!,]MFCf]=G].2+F(KHVWH;]rFE_G0FD-i:Ou%NL<-2\rFEh51BkM=D#B+3dCh74#P!
+.FFCf]=G]7SB+EV1>FE_G0FD)e=AU&<ADe<U&ATX(9P&?F=I?IQOAU&<A@;KXjDN5!@AnH'tB
4uCM4aSi(AU&<AE,Te?GT_*>G]\1KAnH*qFHQZf1OYEcFCf]=G[YE&B5W_7C3=T>BkDXR4`k7[
FE_G0FD)eAP%Kj[HS9JPG]\1LDf^^7Ou"b5AU&<0@;p91GT_*>G]\.DA9;LJWH<3'Efsmf!KsF
F2NfkEP#O)VAU&<BE,Te?FCf]=H#I;,F(KG9FCf]=@<5piDKM$BL]NY>P&?F=FCf]=H!tN'B5W
_5@:F.uAWf3'06CcMFEqhDF!,R9G]\4LAnH*qF<GF/G\E6@L]NY>Ou%NL<-2\rFEq;2BkM=D#%
M4^FCfKU4aSi(AU&<BE,Te?FCf]=H#I;,F(KG9D..[&+EV1>FCB6#ASuUQWJCV=2Ne*(1OYEcF
Cf]=G]7SB+EV1>FEqhDF-:<\AU&<0@;p:D!-E:(EfpcXP#Zpn<+g>^Eb'B-Blmp-E+*6fH\t$Q
!!&1OB6@X'A8GghFDu/>L]ETTH]i;[F^]<$Ch74#E,Tf\DJ+*#Eb'B.A9;LJ!G?O`Eb&utAor<
;Df[%6F^]<$GA1T0BSZ_Q2Ne*(CM.cuEb'B.A9;LJDJ+*#Eb&ipBkM+$M#NPqP(dOk@<,n&Bk2
=!+D5h*Eb&ipBkM+$M#NPqP(f'sI?IQBF^]<$EbT0"FDu/>L]ETTH]i;[F^]<$EbT0"FDu/>+F
'%MB6@X'A9V`uFD-i:B6@X'A9)BsBQSN=Df[%6F^]<$BOtmjBQT%3OuAI(P&"]Q@<,n&Bk2=!+
D5h*Eb&ipBkM+$M#NPqP(dOk@<,n&Bk2=!P&=oT@<,mlASGdjFGTpZ2NicWVgX_-I?IQm9p.Mb
Oq*X2061WACh[cu@<.MjP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2
!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/renlinear 0.0 0
%%EndData
%%EndResource
% --END RENDERER renlinear--

% --BEGIN RENDERER renmatrix--
%%BeginResource: uk.co.terryburton.bwipp renmatrix 0.0 0 0 0
%%BeginData:         24 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  Ops  'bASu  ?nF  E2)?H  \`B!
23JD%@<-"%P!5$b  06_,@  FD-  I2O    u"b)  AS  Gdj  FGKs\1  G<  6VCi=?  S"a
+^(ATX(k04J@"CM  .[+F`  (`"  Des  ? 4NW  jQC  F(K  HV1LY<  :F  *j'+I?  I0?
E--Gi1OYEX06_,@  FD)e@  Bk2  =!O tV  tS  05+  p2B  4uB0BO  tm  jBQTCj  Ou"
b$Des?4+Cf>+DfV        !mOu  "b# @:  O(  cEc  6)<         A7K         OoDf
Qt0@:O(cEc6)<A7         KOoD  f  V!  mO  u"b  1Bm        =k^+        E2%>G
_cWg2NeW7/;ORpC  m$S-E+  sQ<  3  $;E JE +sQA  3$<  0SG^5HgH\_  ZMP(R&'1Pc$
e!H;atH&)KaWI$:  4P!5$b  E+s  Q <3$<    0SG^  )1j  Bp*:OBm=\A  E+sQA+DI!TE
+sQAP"_$aI?I,SE  +sQ<+E  2%>    F#]=    =055  99F  *)FFE+sQ<P  %'4QP#@I>Ou
 %moL]MI/G]T$WL  ]N[<H   S9)r   5*@^9   D.dp  3EZ  f(P#a/)A!g  4Fa98EY*#AJ
u"P%p/ZAU&0W/9#         <JF!,   1[99O  +S!Kq  \UP  "76IATV?uH  "1c/DfU1X@;
^@#Des?4P!5$b@;       ^@#Des?  4P%'4O  P!+/P  #Ws  4P+<VdL5)9  K-V32^Z3/@T
DDL#`1Ci=?WH'0qG5C8+bs,o9gP"Ch-I?IQ<DL#`1Ci=?W@Yb;Q4aW1r4<Pah+<VdL+?kSgP,4
<ZOuS6u@;^@#Des?4P'N3GP!=;J!<83?I?I0bPC8TnI?G)'1QkLr.$C]g89\cYFD-hRLe)2jBk
M+$P&-;>ME'"m(Q(3"[hk3CMEcUdEf)j([hk3;MEcUdEf*)2q/VX.ME'"m(Q(G,q/VX.OqqM8@
r#^tDfor.@rH1%EfL<GDKBB2P&5Q/:1@XACM.[+F`(`"Des?4+EM+9@;^@#Des?4P!Y=+I?IQ>
Des?4NWjQCF(KHVD0oc2Ci=>:F(KH%DL#`1Ci=?BP#QC7G^(?MBm=nGFE2M8+Bot-Bm=lY!/LV
oBm=odDMS:3Bm=nG?$d].D.dp3Eda*PP"h*"I?G)'1G<c[DJ`g(EbTc]30If*F_`U>D_?-CEcQ
G7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?
IP~>
% uk.co.terryburton.bwipp/renmatrix 0.0 0
%%EndData
%%EndResource
% --END RENDERER renmatrix--

% --BEGIN RENDERER renmaximatrix--
%%BeginResource: uk.co.terryburton.bwipp renmaximatrix 0.0 0 0 0
%%BeginData:         16 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  Ops  'bASu  ?nG  \M#'F  E2)?
H\`B!23JD%@<-"%  P!5$b  @<-  "%H    ]g15  P"  BS2  FF00,I  ?I  0b:6I#  gXb
o@cV;m^uP)G2^!!  !"V58  2Cl  P-&  \ ;G]  S4p  3%o  N>5):8  CC  6CA+H'  1@I
*g0Ea1O4cXP%odQ  P!+/:  I=!  )]M E_  (@  !0R  A2P  #[;\H'  5.  a5@(e2  P&-
:sL]E;s'@;/jL5N        _G!!  %nj PL  +`  @Kn  o_d         ^D"         tBP(
ecX!!!"V^6?olP(         ecX!  !  !"  V5  *O?  AP(        e\lM        E_d$I
?K;A^An66ME[6NI  ?K;I(6  V"4  P  "Cg TL ^o;.  ?+@  M(582ClL]E  /1BT`O^(5NH
X6!_"4MEe-?`J+D  ,L]ESB  Oqs  3 IP&H    -dME  tOX  ]8AiX`GLD2  L&ktN"d0XW%
Z3PX\@[V`2c<V0!  GI8hOp  7'b    P!Y=    ML^o  ;.?  +@M(5\Jo?L  ]E/1BT`O^(5
NHX6!_"4MEm+WDM  A1*L]   ESBO   qs3IP   "h*"  I?G  )'1G<c[DJ`  g,Bl.:#EbTc
]30If*F_`U>D_?-         CEcQG   7F`MS  BDD#C  BBl  J#6A7]@eDI  mj"F)Q2A@qC
gGOuY1:ATVm"@r#       drB9KiQ  P'(hWF  DtYuC  M@[  !I?IP~>
% uk.co.terryburton.bwipp/renmaximatrix 0.0 0
%%EndData
%%EndResource
% --END RENDERER renmaximatrix--

% --BEGIN ENCODER ean5--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: EAN-5 (5 digit addon)
% --EXAM: 90200
% --EXOP: includetext guardwhitespace
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp ean5 0.0 0 0 0
%%BeginData:         38 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04eR02  1(  ,nOu8C  305
kfOBl@m1P!5$b04  J@1@r  Gmh  P!5  $ b04  ]!=  FC]  E#G9CL  +C  ia0N1G  <H[
@r-9uATVL.F<G1(  Cia0N  1G<  i]G ][  P9  DKM  #aO  u"b5AU  &<  <BmO?H  %$E
D"FCf]=G].2+F(K        HL!0  T,k FC  f]  =H#  I;,         F(K         HR"a
+^(ATX(k05+p2B4         uCE5  ;  P)  OO  u%#  qFD        5Z2F        -<^[F
*)G:DJ+':E+P1qH  \_]c23  JDe  E  -,f 4D KC/f  X(G  dVF(LLtH]g  XBP#RT(P%'T
NOthst4d(eHEckr  V4aW>D  P!5  % OP!5    $bI=  %,/  FE2M8Ou%NL  <IL$AOrfcH0
5kfOBl@m1P!5$bI  ?IQJE-  ,f4    DKC/    f1OY  EX0  6CcMFCoH/F  <G[:G][P9DK
M$nOu"b5AU&<<Bm  O>5FC   f]=F   (or3O   tVtS  05+  p2B4uB0BOt  mjBQTCjOu"b
5AU&<ADe<U&ATT&         :AU&<   ADe<U  &ATX(  gOu  %2kG]\4LAn  H*qFH-NIDKB
B2P!+.FFCf]=H#I       ;,F(KG9  BOtmjB  QT&$P  &,p  TOo^_%I=!V  hAU&<BDe<U&
ATT&:AU&<BDe<U&ATX(gOu%NL<FTBW@rGmhP%'4NP&5P!@WuO*E%Y^1DDbm3A5$QPB67gI*CW7
h/N"YZA7R91DBNe=F*&O6AKWiQA8,[jFE9)gEa`['AS#n&DfV"*I?IQ=@<,jrA7^+N3/B8OAs,
?63Kd4%EdKHKGA2#8/nJI/2.C!)6YKnK@:OCjEfMG75u'!h+CSek/T5MLD09oA+Cf>-FCAm$+E
).6Gp$X3B5)I/0/%?SBldisEcQ)=P!=AX<.0p$04f$2F!+\I">_ef0ocAl1,:SE">V\e16)Jl1
bg_F">MVe16)Jl1,CYF">MVc1l_\n1GLYF">MYd1QDSo0ekGD"#2McNWLpi?'6us@UX:eBOPq&
NX@Hp1,CaE2E*TUOu"b.Bl\64Ec#6(F!+\I"Yh_c0JJLj0eb=90TH;k0JG48NWh-k0JG5A"Y_Y
c0JJLj0JG490TH;j0JG49NWh*k0JP8A"Y_Yb0JSRk0JG480jTqu04S[,@r$..D281T1Pc$e!Jg
l*056S5Ou"b#@<,jk@<*K"@<,jrA7ZltP"UTbP,XU#BnuhRC5;kQ4aShlBOt[hF*2=B@UX:eBO
Pq;"-RJ1BOt[hF*2>_!Ko6eHS8lBARfLsF_r71@<,jk@<./1P&+WAARfLsF`!9BOu%NL<IL$$0
4S[,@r$..D'3>%ARfLsF_upAP%p.905YEDEc5u8@;m?+Bl\64Ec#6(F!+t+ARfLsF`!:7Ou"b4
@WR>IP,4<t06DG\L]rqJOu%moL]N;7HS9)r5*@^9L]ET$HZNY;L]D"(@rmG5P"Us`I=$$EF!,1
Q!KsF<#*NeY#Ef+!DI[aD$^+/GH$tiU@UX:eDe*E%BnueQ9O_FN@q]:kF-8_MNKSFI@P;G5A9a
8$Ou&8DP'&EhDIXf#DI[`1Bl7I+P"UroD/"$2DfT]'E$/kX98G<c4aShnDI[KoDBNM.A!1;a1G
<c[G%GQ$+D#G#Ch7LIV33Wj!/LYeDI[KoDMS=VWI$:5P!5$b04S[(EZeq2@j#NL99M)OAThX&@
j#?#@r,^o+DR(=L]N[<@q]:kP'DD<82"Ol@j#f'G%GQ$Ou%NL<-)Mi+DHW9P&,pVOo]-3A!2+Z
G]Y'B+Bost@<,jrA7ZltL]NZ4BnueQWJCkDCkrO`!H_mtFEh_9AohO*Oo]Z9G]\4LAnH*qF<G[
:G][P9DKI"CAU&<<BmO>5?'9G\P"7\t061WA0/%?WDJX$)ARTU4F(025>9IurF*i]sP,Wkm8R3
uYBQG;#L_+oHASGdjFFB=)>q]YrF!+\C&:935I?K4g+DG_'Cis9"FCf]=HS9JcF<G[MFFB<O05
kfO+E)4@Bl@m105#E9Eb'3)B4uC+Df^^A05#E9Eb'3)B4uC4E,Te?FCf]=H#I;,F(KHL"Hid=@
W-9tATDm2E/4ib4s4BSDKKE0@<[lR0/%?WDJX$)ARTVB<0B7iOq*X204eR023Kq^A1r(@/n8fP
FCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(
eDJ+B\;u~>
% uk.co.terryburton.bwipp/ean5 0.0 0
%%EndData
%%EndResource
% --END ENCODER ean5--

% --BEGIN ENCODER ean2--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: EAN-2 (2 digit addon)
% --EXAM: 05
% --EXOP: includetext guardwhitespace
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp ean2 0.0 0 0 0
%%BeginData:         34 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04eR01  4+  fkOu8C  305
kfOBl@m1P!5$b04  J@1@r  Gmh  P!5  $ b04  ]!=  FC]  E#G9CL  +C  ia0N1G  <H[
@r-9uATVL.F<G1(  Cia0N  1G<  i]G ][  P9  DKM  #aO  u"b5AU  &<  <BmO?H  %$E
D"FCf]=G].2+F(K        HL!0  T,k FC  f]  =H#  I;,         F(K         HR"a
+^(ATX(k05+p2B4         uCE5  ;  P)  OO  u%#  qFD        5Z2F        -<^[F
*)G:DJ+':E+P1qH  \_]c23  JDe  E  -,f 4D KC/f  X(G  dVF(LLtH]g  XBP#RT(P%'T
NOthst4d(eHEckr  V4aW>D  P!5  % OP!5    $bI=  %,/  FE2M8Ou%NL  <IL$AOrfcH0
5kfOBl@m1P!5$bI  ?IQJE-  ,f4    DKC/    f1OY  EX0  6CcMFCoH/F  <G[:G][P9DK
M$nOu"b5AU&<<Bm  O>5FC   f]=F   (or3O   tVtS  05+  p2B4uB0BOt  mjBQTCjOu"b
5AU&<ADe<U&ATT&         :AU&<   ADe<U  &ATX(  gOu  %2kG]\4LAn  H*qFH-NIDKB
B2P!+.FFCf]=H#I       ;,F(KG9  BOtmjB  QT&$P  &,p  TOo^_%I=!V  hAU&<BDe<U&
ATT&:AU&<BDe<U&ATX(gOu%NL<FTBW@rGmhP%'4KP&5P!@WuO*E%Y^1DDG[0A5$QPB67gI*CW7
h/M\GWA7R91DBNe=F*&O6AKW`NA8,[jFE9)gEa`['AS#n&DfV"*I?IQ=@<,jrA7^+N3/B8OAs,
?63Kd4%EdKHKGA2#8/nJI/11F[&6YKnK@:OCjEfMG75u'!e+CSek/T5MLD09oA+Cf>-FCAm$+E
).6Gp$X3B5)I/0/%?SBldisEcQ)=P!=AX<.0p$04f$2F!+\I">_ef0ocAl1,:SE">V\e16)Jl1
bg_F">MVe16)Jl1,CYF">MVc1l_\n1GLYF">MYd1QDSo0ekGD"#2McNWLpi?'6us@UX:eBOPq&
NX@Hp1,CaE2E*TUOu"b.Bl\64Ec#6(+Bsj-0JJLg0JSRh0eeUh0elrV@UX:eDe*F8!/L]>9Tgr
_"HmM_99M(aF(03H%?dQN1G<ipFGL!]$'I*#!/LZ3!IHJ6P!5$bBnubP4aV6ZF,0g-DI[aD$Be
&FH$t$\@WNZ+L]N[<L^'#YL^0(DASu"!L^TA=P'MJ=<FTBW@rGmh+DHW4P"]=nEarckEc[C-P)
YWIP%$(YDIe!T5*@^bFcpl#ASu!#ASu"!+DG_(G`k^_1MpiHEc5u8@;m?'P"UTcP!+.FASu!oA
SrW%DI\i=Ou"b3AThX&@j#?#@r,^oP,4<tL]E53ASu!oAT!;)P,Wd]C6CcD1G<6O@<*K%DIXf(
P"UroEb0E*DIXf#DI[KoDBN\WWJCS<WFKUMEftZqP"76;DIXf0AThX&A!/WrP#QL3F!,1Q#*Ne
Y"-N[rDI\iTFEhmMBcpV&@UX:eDe*E%BnueQ9PK:`P,X6DP&,p`Oo]Z9G]\1KAnH*qFHQZHAU&
<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?I,`4>1_dDD*Y`ASu<uDIm6s06:TD+Bot0@W
QmP0TrD`P"Aq4@VBg*>DN]7BOtmjBQSZcK3^->@WNYrL^\Wd!.C#_>p*j!@r-9uATVL.FF,Z_G
]Y'MG]\@s<%i0/F<GL@FD5Z2F"_0K@<,n!BkM+$E,TfR$86%7@<,n!BkM+$H#R\C+EV1>FEqe:
AohO*L]ikA04Jj?A7]e'DfCL>5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<<JDDIA
7P%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H
"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/ean2 0.0 0
%%EndData
%%EndResource
% --END ENCODER ean2--

% --BEGIN ENCODER ean13--
% --REQUIRES preamble raiseerror renlinear ean5 ean2--
% --DESC: EAN-13
% --EXAM: 2071473968010
% --EXOP: includetext guardwhitespace
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp ean13 0.0 0 0 0
%%BeginData:         69 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04eR01  6O  UMF_`U  >D_
?-CEcQG7F`MSBDD  #CBBl  J$S  g6-  ] D3%  niO  DDd  S:06M%  _@  rEuAAT  Dg:
@Wc^5Df.1:GA2#8  P1l(D  Ops  'U@ ;[  eU  H\`  B!2  3JD%Df  Bf  4Df0WZ  5*@
]T@UX:eDe*FB5*@        ]TA8  c@- A9  )+  &+D  ,%u         F(L         Lj05
5<6Cis9"FCf]=+D         ,%uF  (  LL  j0  6Cc  MFC        oH/F        HOb01
G<i]G]\"@H=_m@O  u"b5AU  &<A  D  e<U &A TWb%  Ou"  b5AU&<BDe<  U&ATWb+Ou"b
)ASGdjFGKs\1G<0  IA8c?u  @;q  # 2Ou"    b"A7  TUr  FCf]=AoDR/  NWjQCF(KHV1
G<0IA8c@-AU&<<B  mO?N"a  +^(    ATX(    k04A  C%D  f0Z.G]\1KA  nH*qFH-NIDK
BB2Ou"b"A7TUrFC  f]=H#   I;,F   (KHR"   a+^(  ATX  (kDfBf4Df0  WZY:js=EbTE
(FEqh:P!+/J!Ko=         '%<$3   -Bl@m  1H]kF  A@;  L!rP!+/T5^  eepOuSV6P,4
<rNWD;+NHB2`AWf       3'OtDh\  P')pOO  u%N5O  tCc  rF_-^lI?IT  YP%BdtOuY16
E-,f4DKCt)Ou%NL<,Z_tBl@m1H]g15P"@<KAU&</Df0Y>FCf]=AoDR/OtDhQ06CcMFE;/BAKZ)
+G]\"@H=`6mOu"b5AU&<ADe<U&ATT&:AU&<ADe<U&ATX(gOu"b5AU&<BDe<U&ATT&:AU&<BDe<
U&ATX(gOu"b)ASGdjF<G7.BkM+$OtVtS04AC%Df02rE$/S"A8c?u@;qA_Ou$NWA8c@-AU&</Df
0ZW"a+^(ATX)PHS8f<A8c@-AU&</Df0Y>@:WneDKKH7FCoH/FHS5=1OYEc@:WneDKKH7FE;/BA
W?q:DKBB2P&5P!@:WneDKKH7FE;/BAKYDlA8c@-AU&<<BmO?R09S,>P#Pk#A8c@-AU&<ADe<U&
ATWq9F`)83FHUKf04AC%Df0Z.G]\1KAnH*qF<G"&A8c@-AU&<ADe<U&ATX(gOu%NL<+0<JDf0Z
.G]\4LAnH*qFH-NIDKBB2P&5P!@:WneDKKH7FEqe:AohO*+CSekDf0Z.G]\4LAnH*qFHS;?1OY
Ec@UX:eDe*F>!?dPbHS8i:Eas#uAWf6?1Qll6@:WneDN[2H1OXV5FY@06A8c@G!0T-dP#Yt"Ea
s#uAWgMY%$GI:@<,jrA7^p5L^fMaOp$+b@WuO*E%Y^1DD<qV@:W&CDJ+')NZLVT:+\1V+Dl7BF
<G%(+>GVoDfQsT1E^4BB5)I/0/%?SBldisEcQ)=P!=AX<+99V@rGmhH]g@E0Tp%25);4^:m,jG
04K->E,[F@@;[eU@UWe7BOPpi@ru:&NZU\U:+\1V+Dl7BF<G(3DKK<$DBNk8Cj@.6BkM.%F"]1
e@;0doATDg0EfrY8P#Qjm8RZ.?Df1_IL]ETT@:WneDN\Ib!g7D`"CYhODf1_IL]rrYOp$+b@Wu
O*E%Y^1DD<qV@:VZ7A5@):ASu.&BT=H+A7R91DBNP0EZde::+\1V+Dl7BF<G%(+>P'XEZd4^A8
,[jFE9)gEa`['AS#n&DfV"*I?IP_E+*:5%?dQN1G<6OARfLsF_up7Ou%moL]N;>HS9)r5*@]T@
UX:eBOPp(@UX:eDe*E%Bp),F0TrDu1MMXHP%odQP!+.F@q]F`CNFW8+C\c"@q]:k+Cf(r@r$..
D3=p_1OXU'@q]F`CNFW8+C\c"@q]:kL]`fV@q]F`CNFW8Oo^_%I?ITYP"769BOt[hF*2>U$=da
\@r$..D28O^C6GQP$Bf.e1Lad5@rGmhP%'4VP!+/$@<,jrA7^Q*P"T:uARfLsF_upgOo^__HS8
iPBlJ#DARTI21Lad'6YL%@CIDlLBlo@]8T&$VEcP`$F<F"<:+\1V+Cf(r@r!2tBkM.%+E2@>G%
kJuA1oTV@;0doATDg0EfrY8P#Qjm<,c8VL]CmmEas#uAWh=X@:Y0&@q]F`CNFW8LbOtmP'AWh@
<,jrA7Zm&@:YNW04f$2F!+\I">_ef0ocAl1,:SE">V\e16)Jl1bg_F">MVe16)Jl1,CYF">MVc
1l_\n1GLYF">MYd1QDSo0ekGD"#2MbNWh-l0ekDC"#2Mb?'6us@UX:eBOPq&NX@Hp1,CaE2E*T
UOu"b.Bl\64Ec#6(F!+\I"u%_b0JG2@"u%_c0JP;B"u%_c0eb>B"u%_c0ekAB"u%bc0JP;B"u%
bd0JG5A"u%bd0eb;A"u%bc0eb>B"u%bc0ekAB"u%bd0JP7eOu"b4@WR>eP,4<t06DG\L^fLROu
 %/gF,0g-DI[aD$Be&FGqX#KEcQ)=D..B+D/"$2DfT]'E-!.2@<,jrA7^PsP"UTbP,XU;Ou%3)
FGKp$+C\c"@rGmhL]E53P"]t/G]\1KAnH*qF<G[:G]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>
5?'9Gg!Jgc4#(&";P!5$b@UX:eDe*E%BnueQ9O_FN@q]:kF-8_MNKSFI@P;G5A9a8$Ou&8DP'&
EhDIXf#DI[`1Bl7I+P"UroD/"$2DfT]'E$/kN!KsFF98G<c4aShnDI[KoDBNM.A!1;a1G<c[G%
GQ$+D#G#Ch7LIV33Wj!/LYeDI[KoDMS=VWI$:5P!5$b04S[(EZeq2@j#NL99M)OAThX&@j#?#@
r,^o+DR(=L]N[<@q]:kP'DD<82"Ol@j#f'G%GQ$Ou%NL<-)Mi+DHW4P,X6?P&,pVOo]-3A!2+Z
G]Y'B+Bost@<,jrA7ZltL]NZ4BnueQWJCeBCkrRa!H_mtFEh_9AohO*Oo]Z9G]\4LAnH*qF<G[
:G][P9DKI"CAU&<<BmO>5?'9G\P"9Y'F,1'W!KsF<"HmSW"-N[rDI[aD$^+/GH&)]]!Jh/2056
S5Ou$QUEas#uAKY]C!Kp,c@<,jk@<-FP5*CngFcp2eBl7I+P!5$bP')q104f$2+D#G#F!,17A9
a81Ou%/gF!,1Q!KsF<"HmSW#a,4"DI\iTFEhmMBcpV&@UX:eDe*E%BnueQ9PK:`P,X6BP&,peO
o]Z9G]\1KAnH*qFHQZHAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?I-B@WR>bASu"!
L^]G>P'J^%@WNYr+EM"5H\aA=WI9q$?'7!XDI[L*A7]joG]\9c@VBg*>9ITjBkM+$+D>>#B4uC
C%!uZ!BkM+$MERAqRZaXuP(RFZBkM+$+D>>#B4uCC%!uZ!BkM+$MERAqRZaXuP(RFZBkM+$+D>
>#B4uB0?'6us@UaC$>DN98!/M&1MERAqRXL?OL]E52L^\Wf4dh_,I?K5=!/LV\Ou%N504JU9+B
sXCHY?u)B4uC8P(R&'1G<3HF!+\C*d`\CI?K4gOu"b5G]Y'4+C1-dI?IS`B6@X'A9)BsBQSN=D
f^^7Ou$NWA8c@G!0V2G04AC%DfBf>+?Vb>A8c@-A9)+&+EVXHAM7b8@r-9uATVL.F<G[GF_*4>
ASGdjF<G7.BkM+$MEVoGRZaX'FCf]=G].2+F(KG9@:WneDKKH7FEh_9AohO*NWjQCF(KHVD0o]
 %A8c@-AU&<ADe<U&ATW?ILgOS$A8c?u@;qA1I?IT=A7TUrFCf]=H#I;,F(KHR"a+^(ATX)PHS
9JPG]\4LAnH*qF<G"&A8c@-AU&<BDe<U&ATW?`<%i?)G]\"@H=\4-A7TUrFCf]=F(or3NWjQCF
(KHVD0o]%A8c@-AU&<<BmO?=HQ[EAG]\"@H=_Mf<A/H*G][P9DKI"0A7TUrFCf]=AoDR/NWjQC
F(KHVD0o]%A8c@-AU&</Df0ZFHQ[EAG][P9DKL;i<B`U01LXg)Df1_IL]W`&HXUGqDf-\+A7TU
tFE9)gARTI3P!=AX<+0<JDf1_IL]rr)HXUGqDf-\+A7TUtFE9)gARTI6P!=AX<%hZjA7KOgAWf
6?1G<fYF!+[0F(03R!g7\7A7TUrB45a%@:WnYDe*F>"*7pmP"Ur>P'(&n1G<3NF!+[0@VBhG!g
7\7A7T1gA7^c'@VBhG97)OZR@0M,WI9q$?'6us@UaC$>9IBaF-6TfF^\fk@rGmhNWWa"F-91CM
ERAqRZ[]"P"ArB1G<ipF<Fd1FEhnj!g7\7A7T1gA7^c'FEhnj99K@>F^:.d05#E9Eb'3)B4uC4
E,Te?BOtmjBQT&$P&,pYP,XU#I?IPl4>1_dDD*Y`ASu<uDIm6s06:TD+EM"504JU9+C]#*04JC
3+C\f$06DG\+EVjM05kfO+E)4@Bl@m105#E9Eb'3)B4uC+Df^^A05#E9Eb'3)B4uC4E,Te?B6@
X'A9)BsBQSN=Df[R@DfTB"Eais/FDl#P"[5*mA8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou
"b&@;[eUOuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@
:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/ean13 0.0 0
%%EndData
%%EndResource
% --END ENCODER ean13--

% --BEGIN ENCODER ean8--
% --REQUIRES preamble raiseerror renlinear ean5 ean2--
% --DESC: EAN-8
% --EXAM: 01335583
% --EXOP: includetext guardwhitespace height=0.5
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp ean8 0.0 0 0 0
%%BeginData:         63 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04eR01  6O  UMF_`U  >D_
?-CEcQG7F`MSBDD  #CBBl  J$S  g6-  ] D3%  niO  DDd  S:06M%  _@  rEuAAT  Dg:
@Wc^5Df.1:GA2#8  P1l(D  Ops  'U@ ;\  &O  L_Q  "0O  ps'_E-  ,f  4DKCt)  Ou"
b#@<,jrA7^ofOu"        b%Df  0Z- Ea  a/  7Am  oLs         AWe         i&Bl
7EsF_#'*AU&;>Am         oLsA  W  ei  &F  Cf]  =Ao        DR/O        irnD0
6CcMFE;/BAV^bX1  G<i]G]  \1K  A  nH* qF GL'_  1G<  i]G]\4LAnH  *qFGTjX1G<E
QBkM+$L]NYp04AC  %Df02r  E/4  p c1G<    0IA8  c@-  AU&</Df0ZW  "a+^(ATX(k0
4AC%Df0Z.G]\"@H  =`*?F`  )83    FHSF    5@:W  neD  KKH7FEh_9A  ohO*NWjQCF(
KHV1G<0IA8c@-AU  &<BDe   <U&A   TWq9F   `)83  FHS  FuE-,f4DKC  uE06;5UBl7R
*H#R>X4aVtcOu8C         3DfBf   4Df0W  CP,i2  'Ci  a0N4aW>WI?  IQm30Ia6V33
Qn!BlU*FE2M8P!+       /T/Wr;\  FcnqO1  OXV5/  Tc#  UAWeitP#Zp  nAWe*t3A5;i
FD5Z2F-8_M1OYEcDfBf4Df0WCOu%NL8M>0sG][P9DKI"CAU&</Df0Z[/WqnCFCf]=F(or3+EV1
>FE;/BAWe^01G<i]G]\1KAnH*qF<G[:G]\1KAnH*qFHS;?1G<i]G]\4LAnH*qF<G[:G]\4LAnH
*qFHS;?1G<EQBkM+$+D>>#B4uCM09S+E@:WneDJ*Bs+CSekDf02rE0;l;1LXg)Df0Z.G][P9DK
LmBF`)83FHUKf04AC%Df0Z.G][P9DKI"0A7TUrFCf]=AoDR/OtDhQI?IQ<A7TUrFCf]=F(or3N
WjQCF(KHVD0mpEA7TUrFCf]=F(or3+CSekDf0Z.G]\"@H=`6mOu%NL<+0<JDf0Z.G]\1KAnH*q
FH-NIDKBB2P&5P!@:WneDKKH7FEh_9AohO*+CSekDf0Z.G]\1KAnH*qFHS;?1OYEc@:WneDKKH
7FEqe:AohO*NWjQCF(KHVD0mpEA7TUrFCf]=H#I;,F(KG9@:WneDKKH7FEqe:AohO*OtVtSI?I
Q=@<,jrA7^c%+Hh_204J@1@rGmhP!5$bP'&EdA7TUrP!5$bI=%-"04AC%Df1R8Ou%NL<FTBW@r
GmhP%'4PP&4Z:Eas#uAWgMY#a0%f"FDe2GA2#8/nJI/3+?<,9P&*SFD-[R76s[#3$<'\F*&O6A
KWoSDfQs[+Co2!BlnDL061K8F(Jp'Ec5u]5CJ\o@UX:eDe*F+OuS7OP%Kk@LcLVpP&bn&@WuO*
E%Y^1DE)*6A4($=Ea`I"ATEeP76s[#3$<'\F*&O7Df0Z*Bl5&3DJXS@A8,[jFE9)gEa`['AS#n
&DfV"*I?IQXP"B(mA8c@K@Yb#ID.-scDf1_IL]W`VOp#3(A8c@K@Yb2ND3>$K04K->E,[F@@;\
&6@:VZ7A5@):ASu.&BT=E*A7R91DBNP0EZde::+\FJD09oA+C\n)1*CLU+>k9PBkM.%F"]1e@;
0doATDg0EfrY8P#O)R@:Y0"P,4<t04S[,@r$..D281T1Pc$e!Jgr,056S5Ou"b#@<,jk@<*K"@
<,jrA7ZltP"UTbP,XU#BnuhRC5;kQD0mpGBOt[hF*2=B@UX:eBOPp(@q]F`CNFW8Oo^_%I=!VW
BOt[hF*2=B@UX:eBOPq;"-RJ1BOt[hF*2>_!Ko6eP#Zpn82"IdARfLsF_upA@q]F`CNFW8L^K;
[P,X6EP%p.9@UX:eDe*FB@Yb;Q4aUXHEas#uAV^SS94MXH@r$..D29m/!Kq;H04K->E,[F@@;\
&6@:V`=ARfLDBkM.%N[.26@rHC.ARfg)76s[#3$;^EARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS
#n&DfV"*I?IQXP#QC/A;C4p@<,jrA7^pLE+*:5#@hFY@r$..D29m/!Kq[\@UX:eDe*E%E+*:?1
G<<W@ribsNW_-n0en[k1,:U>NW_*l1,=jm0f1U>NW_'k1GXsn0etO>NW_'k0f4mn0f(O>NW_'l
0f+gm1GLU>NWV!j0ocDl0ekC;NWV!j0jTqu04J@1@q]:kF,gS]0etOA2)[BQ3Kc0OF(03H/!?`
l1G<ipFGL3c$'I)c@WR>*ASu"!L^K;<P'Mi`L]N;6HS9)r5*@^2@<,jrA7ZltL]NZ4@UX:eBOP
q&P!5%gP')ps055<7G`k7R1QlmDFY@<D@j#?#@ric,DIe!T99M)P@WNZ+L]ilWL]`e@ASu"@H$
":Q+DDs&+C\c"@rGmh+DHW4P"]SG#EinFAU&<ADe<U&ATX(9FCf]=H#I;,F(KG9FCf]=AoDR/+
EV1>FE;/BAKY9AG^Y`GF(03H"Gd2DCkr1V!G-.YF,13e99ORV"Gd)7#CA+<P!5$b@UX:eDe*E%
BnueQ9O_FN@q]:kF-8_MNKSFI@P;G5A9a8$Ou&8DP'&EhDIXf#DI[`1Bl7I+P"UroF(025Bnun
TCkr@[!G-.YP'M.oF<G9?>9IB`Eas#uAKY]C!Kp,jL^0)ZFCf]=G].2+F(KHV!JglA!H_mtFEq
e:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD<8986]LaZhP@rmG7P"Us`06:TD+Bot0@WQmP0T
rD`P"ArB1ML`:Cis9"FCf]=HS8iAF!+[0BOtmjBQPA1ASGdjFGL3LBOtmjBQT+pR@0M,WI9q^B
OtmjBQPA1ASGdjFGL3LBOtmjBQT+pR@0M,WI9q^BOtmjBQPA1ASGdjF<FkP1G<3HF!+\C!/LW2
#^_FlR@0LlP(SPjL]E5:H\stSR@8PeK89M`!*taDI=!VVBQG;#L_b>NASGdjFFB=)?'6us@UaC
$>DO&AL]DjdK3aWr06DG\+BosoOu%NL<A/!-@<,n!BkM+$H#R\CL]ESo@:WneDN4^[D0mpEA7T
UtFE8Qe4>15`DKKE0@<Wi9EckqHBl7EsF_#'*AU&;>FE2M805+p2B4uB0BOtmjBQT+q)4?qVW@
r@)G]\1KAnH*qF<G"&A8c@-AU&<ADe<U&ATWq9F`)83FHUKf@:WneDKKH7FEh_9AohO*I=$c;@
:WneDJ*BsOo]uo<FKEKDf0Z.G]\4LAnH*qFH-NIDKBB2P&5P!FCf]=H#I;,F(KG9@:WneDKKH7
FEqe:AohO*I?IP_FCf]=F(or3+CSekDf0Z.G]\"@H=`*?F`)83FHUKf@:WneDKKH7FE;/BAUSn
JFCf]=F(or3I?IS`FCf]=AoDR/+CSekDf0Z.G][P9DKLmBF`)83FHUKf@:WneDKKH7FCoH/FFA
KYFCf]=AoDR/I?ISo5*@^1A7TUrP%'4KP!+/#A7TUr+CSekDfBf>0/$mFDDIA>I?IQ<A7TUrP%
'4NP!+/#A7TUr+CSekDfBf>0/$mFDDdSAI?IP_@:WnYDe*FB5*@]TF(025>9IurF-6TfF^\fkD
f02rE$/S"A7KOgAW?k6@WR]*Oogeh?'6us@VBg*>9IBgF-6TfF^\fk@rGmhNWWa(F-91CMERAq
RZaXuP"ArB1G<3HF!+[0@UaDA!g7\7A7T1gA7^c'@UaDA97)OZR@0M,!I^,&?'6usFEhmM>9J$
4FHQ]gF^\fk@rGmhNWXBJFHT:[!g7\3Ou"b(F^]<$EbT0"FEqhDF!,.-BkM+$Le*\FL^'$AOu%
NL<'38rEb0,A061WACh[cu@<+#B@WNZ5@WO23BQG;*BQGh9@WNZ$@WO2EG]Y'MG]YTWE-*4@E-
,f4DK@IDF^]<$Ch74#E,TfR$86%7@<,n!BkM+$E,TfR$86%7@<,n!BkM+$H#R\C+D5h*Eb'3)B
4uC4E,TeN@W-9tATD6uFEDG<L]ot++CoD.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$ARTI9
OuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-
DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/ean8 0.0 0
%%EndData
%%EndResource
% --END ENCODER ean8--

% --BEGIN ENCODER upca--
% --REQUIRES preamble raiseerror renlinear ean5 ean2--
% --DESC: UPC-A
% --EXAM: 488581014973
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp upca 0.0 0 0 0
%%BeginData:         65 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04eR01  6O  UMF_`U  >D_
?-CEcQG7F`MSBDD  #CBBl  J$S  g6-  ] D3%  niO  DDd  S:06M%  _@  rEuAAT  Dg:
@Wc^5Df.1:GA2#8  P1l(D  Ops  'eE +<  ='  L_Q  "0O  ps'_E-  ,f  4DKCt)  Ou"
b#@<,jrA7^ofOu"        b%Df  0Z- Ea  a/  7Am  oLs         AWe         i&Bl
7EsF_#'*AU&;>Am         oLsA  W  ei  &F  Cf]  =Ao        DR/O        irnD0
6CcMFE;/BAV^bX1  G<i]G]  \1K  A  nH* qF GTaU  1G<  i]G]\4LAnH  *qFGTjX1G<E
QBkM+$L]NYp04AC  %Df02r  E/4  p c1G<    0IA8  c@-  AU&</Df0ZW  "a+^(ATX(k0
4AC%Df0Z.G]\"@H  =`*?F`  )83    FHSF    5@:W  neD  KKH7FEh_9A  ohO*NWjQCF(
KHV1G<0IA8c@-AU  &<BDe   <U&A   TWq9F   `)83  FHS  FuE-,f4DKC  uE06;5UBl7R
*H#R>X4aVtcOu8C         3DfBf   4Df0W  CP,i2  'Ci  a0N4aW>WI?  IQm30Ia6V33
Qn!BlU*FE2M8P!+       /T/Wr;\  FcnqO1  OXV5/  Tc#  UAWeitP#Zp  nAWe*t3A5;i
FD5Z2F-8_M1OYEcDfBf4Df0WCOu%NL8M>0sG][P9DKI"CAU&</Df0Z[/WqnCFCf]=F(or3+EV1
>FE;/BAWe^01G<i]G]\1KAnH*qF<G[:G]\1KAnH*qFHS;?1G<i]G]\4LAnH*qF<G[:G]\4LAnH
*qFHS;?1G<EQBkM+$+D>>#B4uCM09S+E@:WneDJ*Bs+CSekDf02rE0;l;1LXg)Df0Z.G][P9DK
LmBF`)83FHUKf04AC%Df0Z.G][P9DKI"0A7TUrFCf]=AoDR/OtDhQI?IQ<A7TUrFCf]=F(or3N
WjQCF(KHVD0mpEA7TUrFCf]=F(or3+CSekDf0Z.G]\"@H=`6mOu%NL<+0<JDf0Z.G]\1KAnH*q
FH-NIDKBB2P&5P!@:WneDKKH7FEh_9AohO*+CSekDf0Z.G]\1KAnH*qFHS;?1OYEc@:WneDKKH
7FEqe:AohO*NWjQCF(KHVD0mpEA7TUrFCf]=H#I;,F(KG9@:WneDKKH7FEqe:AohO*OtVtSI?I
Q=@<,jrA7^c%+Hh_204J@1@rGmhP!5$bP'&EdA7TUrP!5$bI=%-"04AC%Df1R8Ou%NL<FTBW@r
GmhP%'4TP&4Z:Eas#uAWgMY%$GIj"FDe2GA2#8/p2,C6"4859P&*SFD-[T<DZ%75p1#eF*&O6A
KW]^+E)9C0esk^BkM.%F"]1e@;0doATDg0EfrY8P#Pn!Eas#uAUBS"LbP!(P!4[^P#.<^HS8iP
BlJ#DF`:hV@UWe7BOPpi@ru:&NZM1s6S1SHD09oA+Cf>-FCAm$+E).6Gp$X3B5)I/0/%?SBldi
sEcQ)=P!=AX<.0p$@:WneDN\Ib!0V2-A7TUrP%'4KP&6?b@:WneDN\Ib"d3_c"FDe2GA2#8/p2
,C6"4856"FM%DG4VZB67gI-:)0Q/T5MLAoD]4<DZ%75p1#eF*&O6AKW`NDfQsX+Co2!BlnDL06
1K8F(Jp'Ec5u]5CJ\o05t?1L^]HCOu"b$BOt[hF*2>U!0T-o!/LZ3$@=F?P!5$b04J@1@q]:k+
C\c"@rGmh+DI!3LbP!kOu$g.!g7;S!0V2G04S[,@r$..D'3>%ARfLsF_r71@<,jk@<.M3Ou%N5
04S[,@r$..D'3>%ARfLsF_r71@<,jk@<./+P&-9^Ou%NL<IL$$04S[,@r$..D28O/BOt[hF*2>
U$Bf.eWJCnEC6CA^@<,jrA7^p5L^]G0HX^E(@rGmhL^TA=@q]F`CNFW8LbOtmP&5P!@WuO*E%Z
9P@mOR4A4($A@r"JHB5)IJ,Y;l`DfTl0@rrhn:dZg#+Cf(r@r!2tBkM.%+E2@>G%kJuA1oTV@;
0doATDg0EfrY8P#Qjm<,c8VL]CmmEas#uAWh=X@:Y0%@q]F`CNFW8LbOtmP'AWh@<,jrA7Zm&@
:YNW04f$2F!+\I">_ef0ocAl1,:SE">V\e16)Jl1bg_F">MVe16)Jl1,CYF">MVc1l_\n1GLYF
">MYd1QDSo0ekGD"#2MbNWh-l0ekDC"#2Mb?'6us@UX:eBOPq&NX@Hp1,CaE2E*TUOu"b4@WR>
eP,4<t06DG\L^]FQOu%/gF,0g-DI[aD$Be&FH&)HV!Jgo+056S5Ou$QUEas#uAKY]C!Kp,c@<,
jk@<-FP5*CngFcp2eBl7I+P!5$bP')q104f$2+D#G#F!,17A9a81Ou%/gF!,1Q"HmSW"-N[rDI
\iTBnubP4aV9qFGKp$+C\c"@rGmhL]E53P"]t/G]\1KAnH*qF<G[:G]\4LAnH*qF<G[:G][P9D
KI"CAU&<<BmO?H!g9NgP'DD%FEhmMBcpV&@UX:eDe*E%BnueQ9PK:fP&,p^Oo]Z9G]\1KAnH*q
FHQZHAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?ITYP"9Y'F,1$V"HmSW"-N[rDI[a
D$^+/GH&)Z\!Jh,1056S5Ou$QUEas#uAKY]C!Kp,c@<,jk@<-FP5*CngFcp2eBl7I+P!5$bP')
q104f$2+D#G#F!,17A9a81Ou%/gF!,1Q"HmSW#a,4"DI\iTBo!.[4aV9qFGL</+C\c"@rGmhL^
T">P"]t/G]\1KAnH*qFGORm!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=_m6P,V`MG^Xp\G
]Y'B+Bost@<,jrA7ZltL]NZ4Bo!"WCij65FEh_9AohO*Oo^@LOo]Z9G]\4LAnH*qF<G[:G][P9
DKI"CAU&<<BmO>5?'9G\P#Zpn8986]LcAs`@rmG7P"Us`06:TD+Bot0@WQmP0TrD`P"ArB1ML`
:Cis9"FCf]=HS8iAF!+\C"FFfnBkM+$I?K5=$@?GtBkM+$MERAqRZaXuP(RFZBkM+$+D>>#B4u
CC$@?GtBkM+$MERAqRZaXuP(SPnHY?u)B4uC8P(R&'1G<3HF!+\C!/LW2!/LW2$@@XnR@0LlP(
SPjL]E5<H\stSR@8PeK89M`!/LW2!*taDI=!VVBQG;#L`UnVASGdjFFB=)?'6us@UaC$>DO>IL
]DjdK3aWr06DG\+BosoOu%NL<A/!-@<,n!BkM+$H#R\CL]ESo@:WneDN4^[D0mpEA7TUtFE8Qe
4>15`DKKE0@<Wi9EckqHBl7EsF_#'*AU&;>FE2M805+p2B4uB0BOtmjBQT+q)4?qVW@r@)G]\1
KAnH*qF<G"&A8c@-AU&<ADe<U&ATWq9F`)83FHUKf@:WneDKKH7FEh_9AohO*I=$cW@:WneDJ*
BsOo]uo<FKEKDf0Z.G]\4LAnH*qFH-NIDKBB2P&5P!FCf]=H#I;,F(KG9@:WneDKKH7FEqe:Ao
hO*I?IP_FCf]=F(or3+CSekDf0Z.G]\"@H=`*?F`)83FHUKf@:WneDKKH7FE;/BAUSnJFCf]=F
(or3I?IS`FCf]=AoDR/+CSekDf0Z.G][P9DKLmBF`)83FHUKf@:WneDKKH7FCoH/FFAKYFCf]=
AoDR/I?ISo5*@^1A7TUrP%'4KP!+/#A7TUr+CSekDfBf>0/$mFDDIA>I?IQ<A7TUrP%'4NP!+/
#A7TUr+CSekDfBf>0/$mFDDdSAI?IP_@:WnYDe*FB5*@]TF(025>9IurF-6TfF^\fkDf02rE$/
S"A7KOgAW?k6@WR]*Oogeh?'6us@VBg*>9IBgF-6TfF^\fk@rGmhNWWa(F-91CMERAqRZaXuP"
ArB1G<3HF!+[0@UaDA!g7\7A7T1gA7^c'@UaDA97)OZR@0M,!I^,&?'6usFEhmM>9J$4FHQ]gF
^\fk@rGmhNWXBJFHT:[!g7\3Ou"b(F^]<$EbT0"FEqhDF!,.-BkM+$Le*\FL^'$AOu%NL<'38r
Eb0,A061WACh[cu@<+#B@WNZ5@WO23BQG;*BQGh9@WNZ$@WO2EG]Y'MG]YTWE-*4@E-,f4DK@I
DF^]<$EbT0"FDu/>L^GeJF^]<$EbT0"FEqhDF!,+<@<,n!BkM+$H#R\C04Jj?A7]djDfg)>D28
?Z4s4BSDKKE0@<[lR0/%?WDJX$)ARTVB<0B7iOq*X206M5D@?NU5A1r(@/n8fPFCfK5H"(o:FD
l%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/upca 0.0 0
%%EndData
%%EndResource
% --END ENCODER upca--

% --BEGIN ENCODER upce--
% --REQUIRES preamble raiseerror renlinear ean5 ean2--
% --DESC: UPC-E
% --EXAM: 00123457
% --EXOP: includetext height=0.4
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp upce 0.0 0 0 0
%%BeginData:         76 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04eR01  6O  UMF_`U  >D_
?-CEcQG7F`MSBDD  #CBBl  J$S  g6-  ] D3%  niO  DDd  S:06M%  _@  rEuAAT  Dg:
@Wc^5Df.1:GA2#8  P1l(D  Ops  'eE +<  I+  L_Q  "0O  ps'_E-  ,f  4DKCt)  Ou"
b#@<,jrA7^ofOu"        b%Df  0Z- Ea  a/  7Am  oLs         AWe         i&Bl
7EsF_#'*AU&;>Am         oLsA  W  ei  &F  Cf]  =Ao        DR/O        irnD0
6CcMFE;/BAV^bX1  G<i]G]  \1K  A  nH* qF GTaU  1G<  i]G]\4LAnH  *qFGTjX1G<E
QBkM+$L]NYp04AC  %Df02r  E/4  p c1G<    0IA8  c@-  AU&</Df0ZW  "a+^(ATX(k0
4AC%Df0Z.G]\"@H  =`*?F`  )83    FHSF    5@:W  neD  KKH7FEh_9A  ohO*NWjQCF(
KHV1G<0IA8c@-AU  &<BDe   <U&A   TWq9F   `)83  FHS  FuE-,f4DKC  uE06;5UBl7R
*H#R>X4aVtcOu8C         3DfBf   4Df0W  CP,i2  'Ci  a0N4aW>WI?  IQm30Ia6V33
Qn!BlU*FE2M8P!+       /T/Wr;\  FcnqO1  OXV5/  Tc#  UAWeitP#Zp  nAWe*t3A5;i
FD5Z2F-8_M1OYEcDfBf4Df0WCOu%NL8M>0sG][P9DKI"CAU&</Df0Z[/WqnCFCf]=F(or3+EV1
>FE;/BAWe^01G<i]G]\1KAnH*qF<G[:G]\1KAnH*qFHS;?1G<i]G]\4LAnH*qF<G[:G]\4LAnH
*qFHS;?1G<EQBkM+$+D>>#B4uCM09S+E@:WneDJ*Bs+CSekDf02rE0;l;1LXg)Df0Z.G][P9DK
LmBF`)83FHUKf04AC%Df0Z.G][P9DKI"0A7TUrFCf]=AoDR/OtDhQI?IQ<A7TUrFCf]=F(or3N
WjQCF(KHVD0mpEA7TUrFCf]=F(or3+CSekDf0Z.G]\"@H=`6mOu%NL<+0<JDf0Z.G]\1KAnH*q
FH-NIDKBB2P&5P!@:WneDKKH7FEh_9AohO*+CSekDf0Z.G]\1KAnH*qFHS;?1OYEc@:WneDKKH
7FEqe:AohO*NWjQCF(KHVD0mpEA7TUrFCf]=H#I;,F(KG9@:WneDKKH7FEqe:AohO*OtVtSI?I
Q=@<,jrA7^c%+Hh_204J@1@rGmhP!5$bP'&EdA7TUrP!5$bI=%-"04AC%Df1R8Ou%NL<FTBW@r
GmhP%'4PP&4Z:Eas#uAWgMY#a0%f"FDe2GA2#8/p2,C7:K\99P&*SFD-[R<DZ%773HGiF*&O6A
KWoSDfQs[+Co2!BlnDL061K8F(Jp'Ec5u]5CJ\o@UX:eDe*F+OuS7OP%Kk@LcLVpP&bn&@WuO*
E%Z9P@msj8A4($=Ea`I"ATEeP<DZ%773HGiF*&O7Df0Z*Bl5&3DJXS@A8,[jFE9)gEa`['AS#n
&DfV"*I?IQXP"B(mA8c@K@Yb#ID.-scDf1_IL]W`VOp#3(A8c@K@Yb2ND3>$K04K->E,[FPE+;
=G@:VZ7A5@):ASu.&BT=E*A7R91DBNP0EZe@Y6S1_LD09oA+C\n)1*CLU+>k9PBkM.%F"]1e@;
0doATDg0EfrY8P#Pn!Eas#uAV^>L99M8j0Tp:95):qVD3>$K04K->E,[FPE+;=G@:W,UD.7's;
gEG+ASmGQ<DZ%773HGiF*&O<@<Q3)DKTf*ATAo7H#n(=D'1MTDfQsT0/%?SBldisEcQ)=P!=AX
<%hg#@ribsNW_-n0en[k1,:U>NW_*l1,=jm0f1U>NW_'k1GXsn0etO>NW_'k0f4mn0f(O>NW_'
l0f+gm1GLU>NWV!j0ocGm0ekC;0jTqu04J@1@q]:kF,gS]0etOA2)[BQ3Kc0OD/"$2DfT]'E-!
.+NWq0k0JP::NWq0k0eb=:NWq0k0ek@:NWq0k0ekC:NWq0l0JG49NWq0l0eb:9NWq0l0ek@9NW
q0l0JP79NWq0l0JP:9NWq0l0eb=9?'6usF`:i!@rGmhNXINp0JG170JG170Sg+"V32^Z1NdYH@
:O4dAV^=q@<,jrA7^PsP"Us_@UX:eDe*F8#*MW80TrDk!g6u=F`:i!@rGmhL]LsnEas#uAV^AC
!g66?H$+(9@:O4dAV^Ft@<,jrA7^Q$L]NZ4P'M1h@prkcA7^Q&@UX:eDe*F8",I&B9Tj[LP#Pn
!Eas#uAV^PR98G9bWJCY>4aV<j@prkcA7^Pt@UX:eDe*F8!Jgi@9Tj[DE+<<dDe*F8$"@=`@rG
mhL]iM8P"_$aI?IQ=@<,jrA7^Q$P"UTbP,X6?P!+/7E+<<dDe*F8!FfJX@rGmhL]N;7P"_$aF`
:i!@rGmhL^IU"Eas#uAV^MG!Kp->H$tiT@UX:eDe*F8#*MW80TrDk"d2K)F`:i!@rGmhL]LsnE
as#uAV^AC"d2QBH$+(9@:O4dAV^\&@<,jrA7^Q$L]NZ4P'MJ=<%h`pARfLsF_up7Ou%moL]N;=
HS9)r5*@]T@UX:eBOPp(F`:i!@rGmh+DI!3LbP!kOu$g.!g7;S!0V2G04S[,@r$..D'3>%ARfL
sF_r71@<,jk@<.M3Ou%N504S[,@r$..D'3>%ARfLsF_r71@<,jk@<./+P&-9^Ou%NL<IL$$04S
[,@r$..D28O/BOt[hF*2>U$Bf.eWJCnEC6CA^@<,jrA7^p5L^9/,HX^E(@rGmhL^0)9@q]F`CN
FW8LbOtmP&5P!@WuO*E%Z9P@msj8A4($A@r"JHB5)IJ,Y;l`DfTl0@rrhn:dZg'+Cf(r@r!2tB
kM.%+E2@>G%kJuA1oTV@;0doATDg0EfrY8P#Qjm<%i3!A;CMSV33WR@:Y/o@UX:eDe*FBH#R2&
L^.F'ARfLsF_upgOo^_j04J@1@rGmh+E1b"Ou"b5G]\`IOpR:-FEhn`!*^RT@<,jrA7^PsL]NZ
4FCf]=G].2+F(KG9FCf]=H#I;,F(KG9FCf]=AoDR/+EV1>FE;/BAV^DNWEk[305YEDEc5u8@;m
?+Bl\64Ec#6(F!+t+ARfLsF`!:7Ou$QUEas#uAV^>L98G9b4aShrDK^+ED/"$2DfT]'E0=[nV3
3Wj!/LYmBl\64Ec#6(P%'4JP,Wd]Bp(ZC1MpiHEc5u8@;m?'P"UTbP!+/+DK^+EBo"L,G^XpQD
K^+EBo"I+G^Y`TI?I,SD/"$2DfT]'E$/k4G'&m'I?IP_F(03H+d/[b1NR#HL]D"(@rmG5P"Us`
L]N;4L^&2ZBp(ZC1Lad5@rGmh+DHW4P"]=nEarckEc[C-P)YWIP%$(YDIe!T5*@^bFcpl#ASu!
#ASu"!+DG_(G`k^_1MpiHEc5u8@;m?'L]N[<P"UTcP!+.FASu!oASrW%DI\i=Ou"b3AThX&@j#
?#@r,^oP,4<tL]E53ASu!oAT!;)P,Wd]C6CcD1G<6O@<*K%DIXf(P"UroEb0E*DIXf#DI[KoDB
N\WWJCS<WFKUMEftZqP"76;DIXf0AThX&A!/WrP#QL3F!,1Q!KsF<"HmSW"-N[rDI\iTFEhmMB
cpV&@UX:eDe*E%BnueQ9PK:`P,X6BP&,p^Oo]Z9G]\1KAnH*qFHQZHAU&<BDe<U&ATT&:AU&</
Df0Y>FCf]=F(or3+C1.TI?I-CG]\`H>9IB`Eas#uAV^SI!Kp-4#)EMICkr^e!H_mtFEh_9AohO
*Oo]Z9G]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO?H!g9NgP'D%WF,1cHDI[aD$^+/GGqX5JF!+
[0F(03;LbP!kI?I0-Ou$fi@r-9uATVL.FF,ZMBQG;#+D>>#B4uB0BOtmjBQT%=HY?u)B4uCE4d
h_,P,WkmK4nh1B4uB0BOtmjBQPA1ASGdjF<FkP1G<3HF!+\C!/LW2%"!jpR@0LlP(SPjL]E52?
'7!lHS8iAF!+\C&US2&BkM+$I?K4gOu"b#@WNYrL_4ui!.C#_?'6usFEhmM>9I471OYEd05#E9
Eb'3)B4uC4E,TfR!0T-HA7TUrNW>5ZHS8f<A8cF/F!*S-04]!=FC]E#G9D!JF_*4?DI[L*A7]j
oG]Y'MEckqHBOtmjBQPA1ASGdjFG`7"R@9;<06CcMFEh_9AohO*+CSekDf0Z.G]\1KAnH*qFH-
NIDKBB2P&5PSA7TUrFCf]=G].2+F(KHAH\aIdA7TUrB45bB!I^,2@:WneDKKH7FEqe:AohO*NW
jQCF(KHVD0mpXAU&<BDe<U&ATT&'A7TUrFCf]=H#I;,F(KHAP#O)VAU&<<BmO>5@:WneDKKH7F
E;/BAW?q:DKBB2P&5PSA7TUrFCf]=F(or3I=!)YAU&<<BmO?=P#X/WAU&</Df0Y>@:WneDKKH7
FCoH/FH-NIDKBB2P&5PSA7TUrFCf]=AoDR/I=!)YAU&</Df0ZFP#X\0Ou$NWA8c@K@Yb)K4aUU
JA8c?.@:WneE--.S04eR016OkMP#Pk#A8c@K@Yb2N4aUUJA8c?.@:WneE--.S04eR023L1PP#O
)CA7T1gA7^ofOu"b4@WNYr+EM"5Oogeh@:WneDJ*Bs+CSek@rGmhNWX?3F-91Z!g7\3Ou"b#BQ
G;#+C]#*Oogeh@:WnYDe*F>"(GqbP"U.Z4dh_,P,Wkm8R7K804JC3+Bost@WR\6P'(2DA7KOgA
W?k%@WR]*H\stSR@99>I?I0-Ou"b5G]Y'4+EVjMOogeh@:WnYDe*F>"*Ad0P"Ur>P'(&n1G<B`
@<,n!BkM+$H#R\C+D>>#B4uCC8<ReF#*PsK1OYEc4?P9;ASs.SEb0-)Bl7KjE\DKCF!,O5F"_!
9F!+q*F"_!3F!+q$F"_W[F<G[MF>%QOF<GL@FD5Z2F"_0K@<,n!BkM+$E,TfR$86%7@<,n!BkM
+$H#R\C+D5h*Eb'3)B4uC4E,TeN@W-9tATD6uFEDG<L]ot++CoD.FC]E#GEQnu061WACh[cu@<
.N1Ou[rR%[&V$F`:i%OuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DF
cna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/upce 0.0 0
%%EndData
%%EndResource
% --END ENCODER upce--

% --BEGIN ENCODER isbn--
% --REQUIRES preamble raiseerror renlinear ean5 ean2 ean13--
% --DESC: ISBN
% --EXAM: 978-1-56592-479-6 54495
% --EXOP: includetext guardwhitespace
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp isbn 0.0 0 0 0
%%BeginData:         44 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04eR00  f+  tP06M%  _@r
EuAATDg:@Wc^5Df  .1:GA  2#8  P1l  ( DOp  s'Y  F(0  $6L_Q"  0O  ps'_E-  ,f4
DKCt)Ou"b*F(0$/  G]]*4  Ou"  b%D f0  Z-  Eaa  /7A  moLsAW  ei  &Bl7Es  F_#
'*AU&;>AmoLsAWe        i&Bl  da$ FC  f]  =Ao  DR/         OiN         V@05
5K:DKKH7FE;/BAV         ^YU1  G  <H  `@  W$:  !G]        \1KA        nH*qF
H-NIDKBB2Ou"b*F  (0$/AU  &<B  D  e<U &A TWq9  F`)  83FHSF5BOt  mjBQT%2Ou"b
"A7TUrB45b8%$ED  "Ch76f  @sK  2 /@;L    !rOu  %#q  FD5Z2F-<^[  F*)G:DJ+':E
+P1qH\_]c23JDeE  -,f4DK  C/f    X(Gd    VF(L  LtH  ]gXBP#RT(P  %'TNOthst4d
(eHEckrV4aW>DP!  5%OP!   5$bI   =%,/F   E2M8  Ou%  NL<IL$AOrf  cH05kfOBl@m
1P!5$bI?IQJE-,f         4DKC/   f1OYE  X055K  :DK  KH7FCoH/F<  G:=@W$:!G][
P9DKM$nOu"b*F(0       $/AU&<<  BmO>5B  lda$F  Cf]  =F(or3OtVt  SBlda$FCf]=
G].2+F(KHR"a+^(ATX)PHS9)S@W$:!G]\1KAnH*qF<G:=@W$:!G]\1KAnH*qFHS;?1OYEcBlda
$FCf]=H#I;,F(KHR"a+^(ATX)PHS9)S@W$:!G]\4LAnH*qF<G:=@W$:!G]\4LAnH*qFHS;?1OY
Ec05+p2B4uB0BOtmjBQTCjOu"b"A7TUrB45a%@:WneDJ*BsOtVtSBlda$FEhnf!?dPbHS9)S@W
$:4FHShN1Qll6@:WneDN[2H1OXV5FY@06A8c@G!0T-dP#Z=0B45:qP&P,V@W$:4FHU*h%?b._"
FDe@@:UKpF(0$/G]]*XL]ikAP,4<tE+*:5!0.1B2`NCPH#R2&L]hF5@W$:4FHUo&Blda$FEhmM
E+*:?1OYEc055K:DMSabV33Vf@q]F`CNFW80eeC`Ou"b$BOt[hF*2=S1Pc$o1G<Hu!0T,kDMS:
U1OCchF(0#sBOPp(Blda$FEhmMBp),F0TrDu1MLo>DI[?gEes[WD0ou<@W!<++DGn+DI[?gEel
E4!Kq\FL^B5VHS8lBARfLsF_rie+Cf(r@r$..D)!`#$>u$+Blda$@q]:kP&-9^Ou%NL<,RL#P%
K&YL]W`SL]ET$HS8lBARfLsF_rih+DGn+DI[?gEZek*ARfLsF_rihOo^_%I=!VWBOt[hF*2=S1
E^CQ@W#[h@<./+P&+WAARfLsF_rihOo^_%I?ITYP#O)P+Duu9Oo^_%I?IP_Bcq,G!KmJH1MItG
F(0$/G]]*XP!+/T5^eepI?J/ZL^B5-DMSX_4d'i404S[,@r$..D28R0BOt[hF*2=S0Sg+"C6GQ
P$^,7f1G<H`@W!<&F(0$C!/LrE9Th1bE+*:5&sB)S1OXU'@q]F`CNFW8L^IX*ARfLsF_rihL^K
;[P,X6EP%p.9055K:DBNY7@W$u%L^]G?Ou"b1@:Y00P,4<tI?ITL@:Y/oNWi!Q6;AYdH#R2&L]
qL6@W$:4FHUog@:UL"@:YO1L]Wa=Lb4d7@q]F`CNFW8L^K;.HZ3D(+E1b"P%'4JP,Vr)ARfLsF
_uq0Oo^_jI=#pAA0>i"A<LDX!KsElBOt[hF*2>U0TlI"G^Y`T055K:DKL,F+E1b"Ou"b#@<,jr
A7^Q*P,4<tBlda$P%'4RP!+/$@<,jrA7^PsNWV:#30JPr@<,jrA7^Q!Blda$P'MJ&@UX:eDe*F
8!,6L`DN]9nP#Yq$A8c@G!0V2GL^[^&A8c@K@ZgbJ!KmJHV33fo!+KAW@rGmhP'N3ML^]:E+Hh
#53/A#PA7TUrP'J]i@<,jrA7^ofOu%NL<,Z_tBl@m1NX006DKKE0@<Zg6F_-_\DfBf4Df0WV#[
q7SDf02rE+*9fDf02rE0>H!@<-"%+C\c"@rGmh+E)4@Bl@m10/$mFDD<r15E[g:DI[L*A7]joG
]\9TBlda$FCf]=G].2+F(KHR"a+^(ATX(uHS9)S@W$:!G]\1KAnH*qF<G:=@W%?<L^B5-H\h]M
H\h<BP#[Z$I?IQDF(0$/AU&<BDe<U&ATWq9F`)83FHSe6055K:DKKH7FEqe:AohO*+D>>#B4uC
C8<ReF"-N\J1OYEc@<-"%NWXBJFHU$Y06DG\+CT;'F,g?EG]]*AOu"b/ATr6@F<G[MFHU*h!Km
JH$'I)^ATr6@FGKp=G]]*oDIn$6G]Y'GATr6@FHU*h!KsEd+DGn+DKL,F+DGn+DKKH7FEh_9Ao
hO*+DGn+DKKH7FEqe:AohO*+DGn+DKKH7FCoH/F<G:=@W$:!G]\"@H=\4)P'CDUB60(8FEhnFA
Tr6@FHUlsHXUr-F,g?EG][.4>9IX$@W$:4F<G:=@W$:!G]\1KAnH*qF<G:=@W$:!G]\4LAnH*q
F<G:=@W$:!G][P9DKI"8F(0$/AU&<<BmO>5>p*F9G^Y`TI?IQ<EbBHR")i.#DfBf4Df0WZG[YW
*F!,"3DKKE0@<[lR0/%?WDJX$)ARTVB<0B7iOq*X2055K:DNZuBA1r(@/n8fPFCfK5H"(o:FDl
 %L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/isbn 0.0 0
%%EndData
%%EndResource
% --END ENCODER isbn--

% --BEGIN ENCODER ismn--
% --REQUIRES preamble raiseerror renlinear ean5 ean2 ean13--
% --DESC: ISMN
% --EXAM: 979-0-2600-0043
% --EXOP: includetext guardwhitespace
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp ismn 0.0 0 0 0
%%BeginData:         42 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04eR00  f+  tP06M%  _@r
EuAATDg:@Wc^5Df  .1:GA  2#8  P1l  ( DOp  s'Y  F)>  fAL_Q"  0O  ps'_E-  ,f4
DKCt)Ou"b*F)>f:  G]]*4  Ou"  b%D f0  Z-  Eaa  /7A  moLsAW  ei  &Bl7Es  F_#
'*AU&;>AmoLsAWe        i&Bl  e-/ FC  f]  =Ao  DR/         OiN         V@05
5KEDKKH7FE;/BAV         ^YU1  G  <H  `D  /OH  ,G]        \1KA        nH*qF
H-NIDKBB2Ou"b*F  )>f:AU  &<B  D  e<U &A TWq9  F`)  83FHSF5BOt  mjBQT%2Ou"b
"A7TUrB45b8%$ED  "Ch76f  @sK  2 /@;L    !rOu  %#q  FD5Z2F-<^[  F*)G:DJ+':E
+P1qH\_]c23JDeE  -,f4DK  C/f    X(Gd    VF(L  LtH  ]gXBP#RT(P  %'TNOthst4d
(eHEckrV4aW>DP!  5%OP!   5$bI   =%,/F   E2M8  Ou%  NL<IL$AOrf  cH05kfOBl@m
1P!5$bI?IQJE-,f         4DKC/   f1OYE  X055K  EDK  KH7FCoH/F<  G:=D/OH,G][
P9DKM$nOu"b*F)>       f:AU&<<  BmO>5B  le-/F  Cf]  =F(or3OtVt  SBle-/FCf]=
G].2+F(KHR"a+^(ATX)PHS9)SD/OH,G]\1KAnH*qF<G:=D/OH,G]\1KAnH*qFHS;?1OYEcBle-
/FCf]=H#I;,F(KHR"a+^(ATX)PHS9)SD/OH,G]\4LAnH*qF<G:=D/OH,G]\4LAnH*qFHS;?1OY
Ec05+p2B4uB0BOtmjBQTCjOu"b"A7TUrB45a%@:WneDJ*BsOtVtSBle-/FEhnf!?dPbHS9)SD/
OH?FHShN1Qll6@:WneDN[2H1OXV5FY@06A8c@G!0T-dP#X/OAS5F]H$":QNW>4uBle-/FEhn`!
/LZ=9TB-JP!*N#D/OH?FHU*h%?b._"FDe<AS5F]H$":Q+DGn6DKL,FOu"b1@:UKpF)>f:G]]*X
L]ikAP,4<tE+*:5!0.7D2`WHD/WtBu@:Y/uBle-/FEhn`!bl^mDKL,FP%'4KP,XU<P'J]pF)>f
:G]Y'I@:YNWI?IP_Ble-/L^fNDOu"b$BOt[hF*2>U!0T,kBnubP1G<X%!0T-b055KEDI[?gEZf
(;D/OH?F<G:\98G9bWKK&OF)>f)BOPq;rK;#EBle-/+Dr<9F)>f)BOPq;0TlI"G]&<GP%K&YL]
W`SL]ET$HS8lBARfLsF_r78F)>f)BOPp(@q]F`CNFW8Oo^_%I=!VWBOt[hF*2=BBle-/@q]:kL
]`fV@q]F`CNFW8Oo^_%I?ITYP#O)P+Duu9Oo^_%I?IP_Bcq,G!KmJH1MItGF)>f:G]]*XP!+/T
5^eepI?J.p@q]F`CNFW8L^IX*ARfLsF_upAP%p/ZL^K;[Ou$ocB45:q+DbV%@:OS)G]\rGP&6?
bHS9)SD/OH?F<GC2B45:qFEhnj1G<]UA;Ck]V33W_HS9>HA;D"aV33W_P#ZI0A;C5G"\DWe:*>
^FE+*:5"_i$pDKL,FP'M"TA0>i"A<LDX!g9O=/Wt?t@:UL"@:YO1L]N[<@q]F`CNFW8LbOtmP'
AWoF)>f:G]Y'I@:YNW04J@1@rGmh+DGn6DMS:K%$F;I1LXg)Df1R8P&5Q%$t3[WDf1_IOo^@>O
o^`BOuS6t@UX:eDe*FBH'1.C%#t?2P'N3ML^dd'A8c@KGqWW8Eas#uAWf6?1OYEcDfBf4Df0WV
#\7jkFC]E#GB@kJAWh:VE-,f4DKCgD@:WneDJ*Bs@:WneDJ*BsP'AWgEbBG9@UX:eDe*E%DfBf
4Df0VL04eR00f+tWOu$fi@r-9uATVL.FF,-EF)>f:AU&<ADe<U&ATWq9F`)83FHSe6055KEDKK
H7FEh_9AohO*+DGn6DKL,FP%'4[P!+/Js*]6MoR2m&Ou%NL<,$DjDKKH7FEqe:AohO*NWjQCF(
KHV4aShrF)>f:AU&<BDe<U&ATT&.ASGdjFGNJNCkr1V!Ko6eP#Pk1B60(8FEhnj@!aPKG]Y':E
bBHR"*Ad0P"Uro05b?FFEhmMFEhnj@Yb&J!KmbP1N$cJFEhn`!-EI-P'LqVGBA(O+Dtb7FEhnj
@Yb&JWEUKZF)>f:G]Y'BF)>f:AU&<ADe<U&ATT&/F)>f:AU&<BDe<U&ATT&/F)>f:AU&</Df0Y
>Ble-/FCf]=F(or3+C1.T@<-"%NWXBJFDbZ6FEhnjG^XpIEbBHR"*Ad0>9I,mBle-/FEhmMBle
-/FCf]=G].2+F(KG9Ble-/FCf]=H#I;,F(KG9Ble-/FCf]=AoDR/+DGn6DKKH7FE;/BAKY8$?'
9G\P#Zpn<+0f[F,g?@E--#;FD5Z2F-:cVEbBG9A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#O
u"b*F)>fX30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"
@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/ismn 0.0 0
%%EndData
%%EndResource
% --END ENCODER ismn--

% --BEGIN ENCODER issn--
% --REQUIRES preamble raiseerror renlinear ean2 ean5 ean13--
% --DESC: ISSN
% --EXAM: 0317-8471 00 05
% --EXOP: includetext guardwhitespace
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp issn 0.0 0 0 0
%%BeginData:         39 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04eR00  f+  tP06M%  _@r
EuAATDg:@Wc^5Df  .1:GA  2#8  P1l  ( DOp  s'Y  F)u  5GL_Q"  0O  ps'_E-  ,f4
DKCt)Ou"b*F)u5@  G]]*4  Ou"  b%D f0  Z-  Eaa  /7A  moLsAW  ei  &Bl7Es  F_#
'*AU&;>AmoLsAWe        i&Bl  e?5 FC  f]  =Ao  DR/         OiN         V@05
5KKDKKH7FE;/BAV         ^YU1  G  <H  `F  )H)  2G]        \1KA        nH*qF
H-NIDKBB2Ou"b*F  )u5@AU  &<B  D  e<U &A TWq9  F`)  83FHSF5BOt  mjBQT%2Ou"b
"A7TUrB45b8%$ED  bE-,f4  DKC  u E06;    5UBl  7R*  H#R>X4aVtc  Ou8C3DfBf4D
f0WCP,i2'Cia0N4  aW>WI?  IQm    30Ia    6V33  Qn!  BlU*FE2M8P  !+/T/Wr;\Fc
nqO1OXV5/Tc#UAW  eitP#   ZpnA   We*t3   A5;i  FD5  Z2F-8_M1OY  EcDfBf4Df0W
COu%NL8M=e!F)H)         2G][P   9DKI"  8F)u5  @AU  &</Df0Z[/W  qnCBle?5FCf
]=F(or3+DGn<DKK       H7FE;/B  AWe^01  MLoOD  KKH  7FEh_9AohO  *NWjQCF(KHV
D0mpMF)u5@AU&<ADe<U&ATT&/F)u5@AU&<ADe<U&ATX(gOu%NL<,$DpDKKH7FEqe:AohO*NWjQ
CF(KHVD0mpMF)u5@AU&<BDe<U&ATT&/F)u5@AU&<BDe<U&ATX(gOu%NL<%horBkM+$+D>>#B4u
CM09S+E@:WneDJ*Bs+CSekDf02rE0;l;1MLoODKL,FNWC8cNI*<mF)u5@G]]*4Ou&8D06:]EG%
#ES5*@^MP#QL6EHYc2NWC8cNI*="AT;m%EfrVL1Qll6@:WneDN[2H1OXV5FY@06A8c@G!0T-dP
#X/LF)u5T#a2$I1G<6OARfLsF_up7Ou"b*L]ESo05cRGOu%G<Ble?5@q]:k+DGn<DKL,F+DI!3
LbP!kOu$fnF)GK$@<.2&P&5P[F)u4ADBNY7F)GK$@<./XOo^_jDMSO\ApZ1@BOt[hF*2=B@q]F
`CNFW8+DGn<DI[?gEek!=P,XU\Oo^_%I?IP_DBNhQ!KmJH1OYEc052PCL]NY>Ou$epBle?5FEh
nj@Zim$P!FGY<.0p@04S[,@r$..D28R0BOt[hF*2>U$^,7fWJCqFC6CA+E+*:5%[*ZO1N6c5L]
EG=8Q/P_+Hh"h@:Y/tBle?5FEhnjH#R2&L^dj-ARfLsF_upgOo^_*LcU\^H]iN-=FH?3P'AWoF
)u5@G]Y'I@:YNW04J@1@rGmh+DGn<DMS:K#EhcD1G<3GEas#uAV^bXV33WD@<,jrA7^PsNWV:#
2j/Gq@<,jrA7^Q!Ble?5P'LMFEas#uAV^\7AT;m%Eft]VA7TUrNW>5ZH\`)=A7TUrP%'RTL]NY
>P,4=$L]CmmEas#uAWh>%3/A!'!?dPNOuS7,@:WneDN]8u@UX:eDe*FB5*@^MP#Q@=FD5Z2F,g
N:Df0Z-Eaa06EckrVG].PCBl@m1NX0'(A8c?u@;oXcA8c?u@;qBS04Am6F!+q#Eas#uAKYo1FD
5Z2F"]1X@;[eUP!>*cBl7EsF_#'*AU&<D+DGn<DKKH7FEh_9AohO*NWjQCF(KHV4aShrF)u5@A
U&<ADe<U&ATW_8Ou%NL<,$DpDKKH7FEqe:AohO*NWjQCF(KHV4aShrF)u5@AU&<BDe<U&ATT&.
ASGdjFGNJNCkr1V!Ko6eP#Pk1B60(8FEhnj@!aPKG]Y':EbBHR"*Ad0P"Uro05b?FFEhmMFEhn
j@Yb&J!KmbP1N$cJFEhn`!-EI-P'LqVGBA(O+Dtb7FEhnj@Yb&JWEUKZF)u5@G]Y'BF)u5@AU&
<ADe<U&ATT&/F)u5@AU&<BDe<U&ATT&/F)u5@AU&</Df0Y>Ble?5FCf]=F(or3+C1.T@<-"%NW
XBJFDbZ6FEhnjG^XpIEbBHR"*Ad0>9I,mBle?5FEhmMBle?5FCf]=G].2+F(KG9Ble?5FCf]=H
#I;,F(KG9Ble?5FCf]=AoDR/+DGn<DKKH7FE;/BAKY8$?'9G\P#Zpn<+0f[F,g?@E--#;FD5Z2
F-:cVEbBG9A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b*F)u5^30If*F_`U>D_?-CEcQG
7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?I
P~>
% uk.co.terryburton.bwipp/issn 0.0 0
%%EndData
%%EndResource
% --END ENCODER issn--

% --BEGIN ENCODER code128--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Code 128
% --EXAM: Count01234567^FNC2!
% --EXOP: includetext parsefnc
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code128 0.0 0 0 0
%%BeginData:        113 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  MG  r"H\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  A8c  @-A9)+  &+  D,%uF(  LLj
055<6Cis9"FCf]=  +D,%u  F(L  Lj0 6C  cM  FCo  H/F  HOV,1G  <i  ]G]\"@  H=_
m>Ou"b5AU&<ADe<        U&AT  W_. Ou  "b  5AU  &<B         De<         U&AT
Wb(Ou"b)ASGdjFG         Ks\1  G  <<  W@  rGm  lDJ        +t4@        <H[1O
u"b3@<Wi+@;L!rO  u"b1@<  -F#  +  D,% uF (LLj  05t  ??F(Js$@j#  AlCia0N1N.5
SBl@m1P-6N[FE2)  5B68E<  AWf  3 'L]N    YrOp  u>K  FD5Z2F*j(N  AmoLsAWf3'P
!FGY<0B5(@ZmRN0  oc8tP)  XR(    F_-_    !H]f  tD5  *C&O5*@^MH  ]ft&EckrV1O
YEdI?J0)*g/N:Df  Bf4Df   0WZ5   *@^MP   #Q@=  FD5  Z2F*j'+I?I  /TFCf]=AoDR
/+EV1>FCoH/FHS5         =1G<i   ]G]\"  @H=\4  @AU  &<<BmO?R09  S+EFCf]=G].
2+F(KG9FCf]=G].       2+F(KHV  09S+EF  Cf]=H  #I;  ,F(KG9FCf]  =H#I;,F(KHV
09S+EBOtmjBQPA1ASGdjFHS;?1N6cCF(K\OD0'>4@UX:eDe*FB@ZmRN1G<L!!0T-I@<,jrA7^+
J!FCqKH]g@*F(^Y"C6CcDH'2WOOo^@>Oo[4NP!5$bP')pIL]E55P"_#iD0'?Q5&,lSP,XU.P'E
-LP%'4LP,X6>P!5%&I=%,:D0'?Q5&-6EP'N4"C6ATNC6CcD1G<3GEas#uAKYi2B8?P&P"_#pP!
FGY<IL$AI?IP_@UX:nASrW"@<,jrA7^p5Ou"b4FCC"*Ou"b4FCL(*Ou"b4FCU.*Ou"b4G@?=*O
u"b4G@HC*Ou"b4G@QI*Ou"b'DD?tCOu"b'DDI%COu"b'DDR+COu"b'DD[1COu"b4Aork%Ou"b4
FE!'.Ou"b-CLN%jOu"b-CL`1kOu"b$BOPpu@;p91>9I.++G_/#!\c<6+Bsj,+cZRHNWLmh>p*@
3!@!O),)u^Y10l#,NWCAb!@*U+0JcuW>E/_0NWCDc!\cH:+Bsj,-&r!PNWLml>p*@3!@Eg--B8
-]2I.G0NWCMf!@Nm/0K38[>DO\`.#n?_3*dY2Lae-/NWLmp>p*@3!@j*1.ZOQb0O5f*NWCYj!@
s030elrV>E/_8NWC\k!\lH9+Bsj,/WKi`NWLpk>p*@3!A9B5/rfuf1gM5.NWCen!ABH70f<5Z>
E/_<NWCho!\lT=+Bsj,0oc8hNWLpo>p*@3!A]Z916)Dj3*dY2NWCqr!Af`;0f`M^>E/_@NWCts
!\uH8+Bsj,23%\pNWLsj>p*@3!B,r=2N@ho10l#,NWD)!!B6#?1,E2Y>E/_DNWD,"!\uT<+Bsj
,3K=,#NWLsn>p*@3!BQ5A3fX7s2I.G0NWD5%!BZ;C1,iJ]>E/_HNWD8&!\u`@+Bsj,4cTP+NWL
sr>p*@3!BuME5)o\#0O5f*NWDA)!C)SG1GN/X>E/_LNWDD*!])T;+Bsj,6&kt3NWM!m>p*@3!C
DeI6B2+'1gM5.NWDM-!CMkK1GrG\>E/_PNWDP.!])`?+Bsj,7?.C;NWM!q>p*@3!Ci(M7ZIO+3
*dY2NWDY1!Cr.O1HA_`>E/_TNWD\2!]2T:+Bsj,8WEgCNWM$l>p*@3!D8@Q8r`s010l#,NWDe5
!DAFS1c&D[>E/_XNWDh6!]2`>+Bsj,9o]6KNWM$p>p*@3!D\XU:6#B42I.G0NWDq9!De^W1cJ\
_>E/_\NWDt:!]2lB+Bsj,;2tZSNWM$t>p*@3!E+pY;N:f90O5f*NWE(=!E5![2)/AZ>E/_`NWE
+>!];`=+Bsj,<K7)[NWM'o>p*@3!EP3]<fR5=1gM5.NWE4A!EY9_2)SY^>E/_dNWE7B!];lA+B
sj,=cNMcNWM's>p*@3!EtKa>)iYA3*dY2NWE@E!F(Qc2*"qb>DQO?>`JkD0O5f*NWEFG!F:]e2
DJJ[>E/_jNWEIH!]Df>+Bsj,?]G.oNWM*p>p*@-!0.(fNWM*q>p*@-!KI1hNWM*r>p*@-!fd:j
NWM*s>p*@-"-*ClNWM*t>p*@-"HELnNWM*u>p*@-"c`UpNWM+!>p*@-#*&^rNWM-n>p*@-#EAg
tNWM-o>p*@-#`\q!NWM-p>p*@-$'#%#NWM-q>p*@-$B>.%NWM-r>p*@-$]Y7'NWM-s>p*@-%#t
@)NWM-t>p*@-%?:I+NWM-u>p*@-%ZUR-NWM.!>p*@-%up[/NWM.">p*@-&<6d1NWM0o>p*@-&W
Qm3NWM0p>p*@-&rm!5NWM0q>p*@-'93*7NWM0r>p*@-'TN39NWM0s>p*@-'oi<;NWM0t>p*@-(
6/E=NWM0u>p*@-(QJN?NWM1!>p*@-(leWANWM1">p*@-)3+`CNWM1#>p*@-)NFiENWM3p>p*@-
)iarGNWM3q>p*@-*0(&INWM3r>p*@-*KC/KNWM3s>p*@-*f^8MNWM3t>p*@-+,GE,!]`,D+Bot
#DDNDIDDR:S3At.c>9INq1*C1H16)Dr2dIP1+EM.:+EM.:NWM4#>p*>oF*D+:F*D,S!]`8H+Bo
t0G@D\,DDWJWG@D\#+Bot#DDWJWG@;V8G@;V"+Bot#DD<8GDD<8GDD<8>+Bot0FC?;5FC?;5FC
?:t+Bot0FCHA6FCHA6FCH@u+Bot0FCQG7FCQG7FCQG!+Bot0FDr@DFDr@DFDr@.+C1-d04S[(E
ctl-F!+\CD3?c4D3?c4D3?b^Ou%moL]M"!@<-3nE-%1OL]N[<HS9)r5*@]TASu"!+Cf(nEc#6(
F!,1[99M)e!/LZ3!dcS8P!5$bASu"!+DR'4OuSW.06;5UBl7R*H#R>X4aVtbP"U4d<+BTMEctl
-F!,4\99MJQP'DD<8:?Xl06:]H@3B&n@<-O"CibC4P"Uro06:]H@N]/o@<-O"CibC5P"Uro06:
]H@j#8p@<-O"CibC6P"UroF(KH%+Dbh%+EM+9@3BW8@ZjBIG]RG<@3BB%@j#i(FC?;5G@Qe/P'
D%ZFCHA/CLJ?,ATVB(F*D,W99OO@ATVB(ChmN'F(KH&+EMa8P"Us_F(KH'+Dbh%+EM+9@j#i:@
?O9HG]RG<@j#T'@j#i(FCQG7G@H_.P'D"UGC(uSDI[TqBl7RD"*.goOu%NL<+TrWDe*R"B9!(7
@<[ktHS8lQF!+q#Ebo<)OpR:-0564BOu"b+L]ESoHYFU3@<-0qDN[/0P!FGY<%ha*+C\c"@rGm
h+DHW4Oo^@@P"_#iOu$TlF!,3?@s=)\052PCL]ikAOu"b++DQ]5Oo^_%I?J.p@s;u:@s<!M!,@
ZjOu"b5AU&<W!0T-dP#Q"1@rGmlDJ+t4@<H[1P!+.FAo;+%@;L!-4?SW,7SZ<*Ao9>`"@c-R11
kDZNW_gH6Si=l1QDT-:.$jMDD[@V9MS5HChmI>"ADQ`6YpOJ+?huP1G<TdB-:YlEbo<)OpR:-0
6CcMF<G%$Ebo<)P,4<t0564BOu"b+L]ESoHYFU3@<-0qDN[/0P!FGY<%h`p@<*K"@<,jrA7Zlt
P"UroFCf]=+DN$/BOPqEG]7)3F(Js$@j#8p@<.01P!+s2BcpknEbo<)L]im?P%Kj[HX^E(@rGm
h+DHW4Oo^_=LgH6]HS8lB@<*K&DI[iuCi^_.@<,jrA7ZltL]NY>L]il7P"UroFCf]=+DQo;+Hh
"'Bcq,G"HieK1OXU'Bcq,G!KmJH1OYEdI?IQHF(ZV1+Cf(nEftZ#Bcq,G!KmJH1G<JcC5;nR!K
o6eP%?:`F(ZV4F(^:/C6D8R1G<TdB5D-s+Dl14P%'S106CcMF<G[:G]\`AC6D8R1G<WgD0'c.E
dKHWL]ESo06;pLOu"b1P!5$bHZ1*EF(]<#DN[V=P!FGY<,H\h+E3K:OuRMoFCUItP$jGlH]iN7
5^eepAo9>d4aV7+!g7;S!0TKl0687WL]NY>Ou%N5P!FGY<IL$005_nML]NY>Ou"b4+EN>>Oo^_
 %05r%QL]NY>Ou%NLASrW3I?G)'1G<<W@ps^,F(KH%P!5%%@s<!W5&-6EP'AWp+DQ]5Oo^_%I?
G)'1G<<W@q'd-F(KH&P!5%%@s<!W5&-6EP'AWp+DQ]5Oo^_%I?G)'1G<<W@q0kK30LHu@<-BsH
$"=NAWgnWF(KH'P!5%%I=%+YP')R7P,XU.LbP!kL^K;]Oo]uo<F^5oP!3WD5*C.DC*78I!KmJH
1OYDrOu"b"DJsW+H]g@0ATV@D5*B<:5'(:W@Zip<@$5Jl"FZFCOu"b#DJsW*H]g@0ATVCE5*B<
:5'(:W@?Ng;@$5Jl"FZFCOu"b/AU&<*DJsW++Bot*F(^YFH\_ZMP(SK:%pb>S05b?GFCK-+FC?
:r+Dl14P%&co!.C#_L*mL;Ou$rrB9H_[!KsF<s+gZ%056S5Ou$rrB-:oO94;^VFCKS>DIn'7@;
^"*@N]B@!0VSTHZ!D>FCB'*FCHA,+Dtb8FCB'*FCHA,L]NY>P"UT3Oo^_jI?ITIF(ZV0P"T8%D
ffE7+Dtb8FCK-+FC?;+L]ET_I=#jCG][D4DffD1Bcq;)G][D4DffD1BnueQ!Kp*3!KmJHG^Y`T
I?I,S@:Ee[DfTDuH]g@+AU&<*DJsW+P!5%%P!3bpG][D4DffEN5*AR%ApogPOu"b#@V'.iEb/[
+OuR>jG][D4DffEN5*AR%5&OqVFCB'*FCLCsP"UsMI?G)'1G<6^F!+q#Eas#uAWgMY!g7AU"-N
\J$'I(tC5;kQ1Mq2GCh7L?!0U0*L]D=8D0'c.Ed`:js+p]'P#X/QF_u2_5*@]TDI[?gEc[C-Ou
 %H%F(]<#DMS:U4aV6l@N]6"@pq$#F(KHR"ES-r@ZiO15^eepD0'?+AT!;*P!*]*D0(L7P!+s2
HZO:=+D#G#@4u,3ATWq8F(KH'Ou&7dI?IQIF_u2U"HlB(F*(n7ASu!d04T'7FH-KFATVFF1Qk"
OP#R5;@:Ee[DfTDuHQ[BO@3B-!@pq$#F(KHR"ES-r@?NF05^eepF*(k6ASu!d04T'7FH-KFATV
CE1Qk"OP%?:\L]ESoHYFU>F(]<#DN[/0P!FGY<,!ImF_u2@@ra5?F_u2_5*@]TDI[?gEc[C-Ou
 %GpF(KHR"ES-r@?Nc`F(KHR"ES-r@Zim;Ec-#:F,0s^8s0<oF(ZV0P"TD)0p6C:"FG$/D0(L7
P%odQP!+/5G@Mb*F(KHR"ES-r@?Nd#ASu!dI=!)JDI[.(P#X/FF(KHR"ES-rA!/X25^durF(ZV
0P"T;+ATWq8F(KH%P!+/'DI[+'HQZm;@q'kL<A/&/BnueQ!Ko6[G@Mb*F(KHR"ES-r@?Nd#ASu
!dI=!)JDI[.(P#X/FF(KHR"ES-rA!/X25^eeqI?IQ>F(KHR"ES-r@ZilkF(ZV0P"T5$DffHO"F
Fi*D0'?+AT!;)P,XUVHYJ9:Oo]$$AS,k$ARTp.F(TM:ASu!e+Dl14+DI!3ASu!d052PCL]NY>O
u&7dI?IQXP#QLH@3B-!@q%*$F(KHR"ES-r@?NF05^eep@rl4'NWaE7FCC=qD0'>4Bp)+uDJsW*
Op$,G+Dl14Ch7L?!KsFFAp\6J!KmIl@V'.iEb/^,+EM.:+D#G#@3BE.B-:oO94`!N@P;F<Bnue
Q!Ko7%5^eepI?IQNG@D\+DI[*.@rl4'NWaE7FCLChP!FGY<+Bu\FH-KFATVFF4`5CZF,0m\As*
:DBcphnAS,k$AR^!/F*D%8ASu!f04T'7FH-KFATV@D1Qk"OP#QLH@N]6"@q.0%F(KHR"ES-r@Z
iO15^eep@rl4'NWaE7FCC=qHYmh:+DI!3ASu!d052PCL]NY>Ou&7dI?IQ>F(KHR"ES-r@Zim$D
0'>4Bp),#DI[-/Bcq,G!KmJH1Qk"OP#Pq4ATWq8F(KH'P!+//F(ZV0P"TD)0p4\HAo9=GASu!f
052PCL]NY>Ou%N5D0'>4BnuhR9P&*O@kVO=BnuhR!Ko6eP#[Z1I?IQm5^ef,I?J.p@s;u:@s<!
M!,@ZjOu%NL<%ha*F!,4R!g3SI$'I9(!+U4oP'N3H04T'GD'3>4F,0gZ99M)e!JgbkL]N[<HS9
)r5*@]T@rld0+CfJ8D'3>4F!,1[950Q*Oo^_%I?I,S@rld0+CfJ8D2;hfC6CA_GB4mA+CfJ8D3
B-RGB4mAL]NY>F(KH%+EMXDP"Us_04f$2F!+\I"u7ng1,:VF"u7qh0etME"u7qh1,:SE"u.kf1
,:YG"u.kf1GU_G"u.ng1,:VF"u.kg1,1SF"u.kg1GLYF"u.nh1,1PE"u7qg1,1SF"u7qg1GLYF
"u7th1,1PE"u.hf1,C\G"u.kg0f(SF"u.kg1,CYF"u.hg1,:VF"u.kh0etME"u.kh1,:SE"u7q
i1,1MD"u7qg0f(SF"u7qg1,CYF"u7nh1,1PE"u7qi0ekGD"u@th0f(PE"u@tg1,:VF"uA"h0et
ME"uA"h1,:SE"u@th1,1PE"uA"i0ekGD"uA"i1,1MD"u7ng0etPF"u7ng1GU\F"u7ti0etJD"u
.he1GUbH"u.ng0etPF"u.ng1GU\F"u.hf1GL\G"u.nh0ekJE"u.nh1GLVE"u7nf1GL\G"u7th0
ekJE"u7th1GLVE"u.hf0f(VG"u.hf1G^bG"u.nh0f(PE"u.hg0etPF"u.hg1GU\F"u.ni0etJD
"u@ti0etJD"u7nf1G^bG"u7th0f(PE"u7nh0ekJE"u7nh1GLVE"u7nh0f(PE"u@tg0etPF"u@t
g1GU\F"uA%i0etJD"u@th0ekJE"u@th1GLVE"uA%j0ekDC"u@tj0ekDC"u7qg1bg_F"uJ+j0ek
DC"u.he1,:\H"u.he1bphH"u.kf0etSG"u.kf1bpeG"u.qh0etME"u.qh1,:SE"u.hf1,1VG"u
.hf1bgbG"u.kg0ekMF"u.kg1bg_F"u.qi0ekGD"u.qi1,1MD"u8"i1,1MD"u7qg0ekMF"uJ%j0
ekDC"u8"i0ekGD"u.nj0ekDC"u.he1,LbH"u.kf0f1YG"u.kf1,L_G"u.hh1,1PE"u.ki0ekGD
"u.ki1,1MD"uJ%h1,1PE"uJ(i0ekGD"uJ(i1,1MD"u7ng0f1VF"u7ni0etJD"uJ%i0etJD"u.h
e0f1\H"u.he1GghH"u.ng0f1VF"u.hh0ekJE"u.hh1GLVE"uJ%h0ekJE"uJ%h1GLVE"u.hg0f1
VF"u.hh0f(PE"u@tg0f1VF"uJ%h0f(PE"u7nf1bgbG"u7nf1,1VG"u7nf1,C\G#;S(k0ekC<?'
6usF(025@s<!W@Yb5OCkr+T!Ks:B1Pc$e!Fp=pP%'4JP,Wd]Bp(ZC1NR#H+DHW9P&+]I@ric&G
B4m@P"Us2P'MJ=83B!fEb0,A061WACh[cu@<+#B@WNYr+EM"5H\aA=WI9q$>q]Z#F!+[0F(03R
@Yb&J!Jgf?;L<(gBkM+$I?K4g04JC3+Bot0@WR]AL]NY>L]W`;H\_ZMP(R$nFEhmM>9I,mFCf]
=+EV1>FEh_9AohO*+EV1>FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)+C-XBAU&<A@;KXjDN4
p2ASuU$E\D?MF<GL@FD5Z2F!*Y1+CoD.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$@rGmh0e
t_O30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB
9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/code128 0.0 0
%%EndData
%%EndResource
% --END ENCODER code128--

% --BEGIN ENCODER gs1-128--
% --REQUIRES preamble raiseerror renlinear code128--
% --DESC: GS1-128
% --EXAM: (01)95012345678903(3103)000123
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp gs1-128 0.0 0 0 0
%%BeginData:         39 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MG  r"OuP+  ;CG
'+8/p(ZFEd;,:Ec  c5;/n  0$=  E,^  u oP'  E-!  05#  >\/MT"  ?H  \`B!23  JD%
DfBf4Df0WZ5*@]T  @UX:e  De*  FB5 *@  ]T  A8c  @-A  9)+&+D  ,%  uF(LLj  055
<6Cis9"FCf]=+D,        %uF(  LLj 06  Cc  MFC  oH/         FHO         V,1G
<i]G]\"@H=_m>Ou         "b5A  U  &<  AD  e<U  &AT        W_.O        u"b5A
U&<BDe<U&ATWb(O  u"b)AS  Gdj  F  G`9 _! !&0<  05P  ??CLLje@3B  /jCia0N1G<Q
YDJNZnARcip@;L!  rOu%#q  FD5  Z 2F-<    ^[F*  )G:  DJ+':E+P1q  H\_]c23JDeE
-,f4DKC/fX(GdVF  (LLtH]  gXB    P#RT    (P%'  TNO  thst4d(eHE  ckrV4aW>DP!
5%OP!5$bI=%,/FE  2M8Ou   %NL<   IL$AO   rfcH  05k  fOBl@m1P!5  $bI?IQJE-,f
4DKC/f1OYEX06Cc         MFCoH   /F<G[  :G][P  9DK  M$nOu"b5AU  &<<BmO>5FCf
]=F(or3OtVtS06C       cMFEh_9  AohO*+  EV1>F  Eh_  9AohO*OtVt  S06CcMFEqe:
AohO*+EV1>FEqe:AohO*OtVtS05+p2B4uB0BOtmjBQTCjOu"b5AU&;>@UX:eDe*FB1G<<aE+*W
pHS9)NP!5$b05kuT+DG_V@ZmRN1G<L!!0T-PDL7BE?BU:pOuRB&FHSh&P!5%SP%&0h!Jgc>!AA
2N5*@^bFcn_?!/L`?9TgrFF``d1C5;nRWKKH.G`k%L@Yb,LWJCY>5*ATfH]g@,F``d1C6CcDH'
2WOOo[4NP!5$bDfp/X!,@ZjP!FGY<IL$AI?G)'1G<0NF!+[0?'6us@;0mnCkr.U23Kb)@<,jrA
7^o`P%'4JP,X6<P!5%&H]g@K!0TKlP!FGY</pu.P)YWIP!5%OP!4m,.$BR:P!5%OP!4[(L]NZo
I=$tSL]`G6P)"IK<EgSSBlfF=P')p,L]W_?P#u!C@;0eG5*@^1Bm*p$L]`G6P)!UnE+*WpP'DD
<AWh0h@;0=fG\(EA(QpY=1L#Y8L]N;7H[V&J?$hS50JJ:aP,4<ZOuSUaL]N;8M#WWnLbOtmP'C
DLAncL$A;C>D!Kr5$G^Y`H>DNZC!JhG:I?I-W(Pj/h!Ji"JI?I-W.:%:V$A\bHV33Nq3+6N5Bm
=3"L]`G6P)#3FI?I/TAo;*5M#WVo04Q^l3$;EJAo;*5+C1-dL]E53@;0eG@Yb&JWI$:4P!5$b0
4AQ;@;0d*Bp),P1G<o[C`m/#G%#20@;1ltOu$T&1,tG+@;1m6Oo]`7Cm&7j!KmbP3/@QE0et_O
H'1-s0et_O@UWsn>EV0sI?I0-P'N3M@kf_uP%%j6P%'RTG%#20>EV0sI?I0-P'J]j0et_O5*@^
9+CSu*P%'4JP,XU]@;0=fG\(D.@;1MtL]W`5P$jGlOp$,A0et_O@Yb&J!KmbP3/@QE0et_OH'1
-s0et_O@V0Lf0p6c7@kf_uP!5$bI?IQXP"768@<,jrA7Zln0et_O@Yb&J!JgoBCm(WX1G<Hu!0
T,kC5;kQ1OEgY@kf_uP%'S;H]gXBP#PpG1,pCjP"UrtAo;*5P!+/TF^ed"@rGmh+DQo??:I[W0
p6f8C*78I"HieK1OXUZ@<,jrA7^ofC6CcDG^Y`T052PCL]NY>Ou"b++DQ]5Oo^_%I?J/XBl7]p
B4YKoCh[d&@:s.]P&bnY@<,jrA7Zlu+Dbb0CLLje@=+"<?;+*e6%+*?"^Xkt91+,j<K_V\C*78
I"d/nL1OYEc04J@1@rGmh+C\c"@rGmhL]D1Q9Th2ME-,f4DKCgBBOtmjBQRp!BkM+$P'CnaFD5
Z2F,gN:Df0Z-Eaa06EckrVG].PCBl@m1NX0T4EcYf(DI[d/F_-_\04Am6F!+q#Eas#uAKYo1FD
5Z2F"]1VDe*E61,tF]Ou$NeB60(8FEhn3+Bot1AU&;>FCf]=G].2+F(KG9FCf]=H#I;,F(KG9F
Cf]=AoDR/+EV1>FE;/BAKY8$?'9G@EbBHR$?Tj(FEh51BkM=D#%M4^FCfKUG[YW*F,g?@E--#;
FD5Z2F-:cVEbBG9A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b(F"o7$1,tFVP%64gCG'+
8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*
6lBl7R3P#M~>
% uk.co.terryburton.bwipp/gs1-128 0.0 0
%%EndData
%%EndResource
% --END ENCODER gs1-128--

% --BEGIN ENCODER ean14--
% --REQUIRES preamble raiseerror renlinear code128--
% --DESC: GS1-14
% --EXAM: (01)04601234567893
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp ean14 0.0 0 0 0
%%BeginData:         33 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MG  r"OuP+  ;CG
'+8/p(ZFEd;,:Ec  c5;/n  0$=  E,^  u oP'  E-!  04e  R00f46  5'  Tt>:%5  2X=
FD5Z2F-8_M1G<3G  Eas#u  AWf  6?1 G<  9W  DKK  E0@  <Wi+@;  L!  rOu"b*  DI[
L*A7]joG]Y'?@;L        !rOu  "b5 AU  &<  /Df  0ZZ         a-&         53FC
f]=F(or3L^K;$06         CcMF  E  h_  9A  ohO  *L]        ESo0        6CcMF
Eqe:AohO*M#!2i0  5+p2B4  uCC  !  Ko6 WE -,f4  DKC  uE06;5UBl7  R*H#R>X4aVt
cOu8C3DfBf4Df0W  CP,i2'  Cia  0 N4aW    >WI?  IQm  30Ia6V33Qn  !BlU*FE2M8P
!+/T/Wr;\FcnqO1  OXV5/T  c#U    AWei    tP#Z  pnA  We*t3A5;iF  D5Z2F-8_M1O
YEcDfBf4Df0WCOu  %NL8M   >0sG   ][P9D   KI"C  AU&  </Df0Z[/Wq  nCFCf]=F(or
3+EV1>FE;/BAWe^         01G<i   ]G]\1  KAnH*  qF<  G[:G]\1KAn  H*qFHS;?1G<
i]G]\4LAnH*qF<G       [:G]\4L  AnH*qF  HS;?1  G<E  QBkM+$+D>>  #B4uCM09S,#
@<,jrA7^PsL]il7NW^aa0e&9&HS8iPBlJ#DARTI21h'm(5tR(l7oM,o0f1"iF`VXI@V'1dDBO.
;FD)dF0JP"!@;p1%Bk(RnBl@l3Bk1dmFD5?$ATBFWEa`['AS#n&DfV"*I?IQ=@<,jrA7^p5L_5
ee@UX:eDe*FB@YbY[D3>$K04K->E,[F@@;[eV@UWe@ASu.&BT=-(;_]jY1a$XXF*&O6AKW]`+E
)9C0f1"`BkM.%F"]1e@;0doATDg0EfrY8P#Pn!Eas#uAV^Iu@<,jrA7^p5L]im?P"^4c3/B8OA
s,?63Kd4%EdKHKGA2#8/nJI/0f3?JA4($=Ea`I"ATEeQ7oM,o0f1"iF`VXI@rH7,@;0U%Df0B:
+Co2!BlnDL061K8F(Jp'Ec5u]5CJ\oI?I/T@q]F`CNFW8L]ESoL]E53L^\V`Bp(ZC1G<6OARfL
sF_r72BOt[hF*2=B@UX:eDe*E%BnunT!Kp*30TrDLL]W`SL]ET$H\_ceCjhIGOo^_%I?I,S@q]
F`CNFW8L^IX*ARfLsF_upAP%p/ZL^K;[Ou$QUEas#uAWgMY&s>D)@UX:eDe*F8&X#dsBOt[hF*
2>U0TlI"D0mpFGA2#8/nJI/0f3?JA4($A@r"JHB5)IJ,tVuaDfTl0@rrh`;_]jY1a$:AARfKuA
8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV"*I?IQXP#R5MP,4=$L]CmmEas#uAWh>%3/A/VBOt[h
F*2>U0TlI"GV<N7Eas#uAWf6?1G<B_Bl5&&@<,jrA7^Q"L^oSAOu"b5AU&;>@UX:eDe*FB1G<3
GEas#uAV_(aV33WD@<,jrA7^PsNX&l[:.$`i0p6fk@<,jrA7^Q%B67j*P'LtbFD5Z2F,gN:Df0
Z-Eaa06EckrVG].PCBl@m1NX0T4EcYf(DI[d/F_-_\04Am6F!+q#Eas#uAKYo1FD5Z2F"]1VDe
*E61,tF]Ou$NeB60(8FEhn3+Bot1AU&;>FCf]=G].2+F(KG9FCf]=H#I;,F(KG9FCf]=AoDR/+
EV1>FE;/BAKY8$?'9G@EbBHR$?Tj(FEh51BkM=D#%M4^FCfKUG[YW*F,g?@E--#;FD5Z2F-:cV
EbBG9A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b&@;[eVOuSV806M%_@rEuAATDg:@Wc^
5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/ean14 0.0 0
%%EndData
%%EndResource
% --END ENCODER ean14--

% --BEGIN ENCODER sscc18--
% --REQUIRES preamble raiseerror renlinear code128--
% --DESC: SSCC-18
% --EXAM: (00)006141411234567890
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp sscc18 0.0 0 0 0
%%BeginData:         34 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MG  r"OuP+  ;CG
'+8/p(ZFEd;,:Ec  c5;/n  0$=  E,^  u oP'  E-!  06;  2E@kfr  iL  _Q"0Op  s'_
E-,f4DKCt)Ou"b#  @<,jr  A7^  ofO u"  b%  Df0  Z-E  aa/7Am  oL  sAWei&  Bl7
EsF_#'*AU&;>Amo        LsAW  ei& FC  f]  =Ao  DR/         OiN         V@06
CcMFE;/BAV^\V1G         <i]G  ]  \1  KA  nH*  qFG        Kp[1        G<i]G
]\4LAnH*qFGTaU1  G<EQBk  M+$  L  ]NY pD fBf4  Df0  WZY:js=EbT  E(FEqh:P!+/
J!Ko='%<$3-Bl@m  1H]kFA  @;L  ! rP!+    /T5^  eep  OuSV6P,4<r  NWD;+NHB2`A
Wf3'OtDh\P')pOO  u%N5Ot  Ccr    F_-^    lI?I  TYP  %BdtOuY16E  -,f4DKCt)Ou
 %NL<,Z_tBl@m1H  ]g15P   "@<K   AU&</   Df0Y  >FC  f]=AoDR/Ot  DhQ06CcMFE;
/BAKZ)+G]\"@H=`         6mOu"   b5AU&  <ADe<  U&A  TT&:AU&<AD  e<U&ATX(gOu
"b5AU&<BDe<U&AT       T&:AU&<  BDe<U&  ATX(g  Ou"  b)ASGdjF<G  7.BkM+$OtVt
S@UX:eDe*F8!/Lc@9TB6(0JFr=D0mpFGA2#8/ou)D@kfrP@:VYqN\aU46UNF[3$<'\F*&O6AS5
^p+EqOABHS]W0I\,QE,]W-@psInDf-\3A7]Y#BkD'jE\B(d@;0doATDg0EfrY8P#Pn!Eas#uAW
gMY'p<EC@<,jrA7^p5L_c.jOp$+b@WuO*E%Z3Q@q.5Q@UWe@ASu.&BT=05;aWo(0fU:mF`VXI@
V$Z:2^!$Z+>GhuA8,[jFE9)gEa`['AS#n&DfV"*I?IQ=@<,jrA7^Q"@UX:eDe*FB@Yb/MWKKr%
OuS7OP%Kk@LcLVpP&bn&@WuO*E%Z3Q@q.5Q@UWe7BOPpi@ru:&NZ_8!6UNF[3$<'\F*&O7Df0Z
*Bl5&3DJXS@A8,[jFE9)gEa`['AS#n&DfV"*I?IQXP"@<:BOt[hF*2>U!0T-o!/LZ3&:6'EP!5
$b04S[,@r$..D'3>%ARfLsF_r71@<,jrA7ZltL]ikAP"UTbP,W/O!g7;S!0TKlL]`fVI?IQm!K
o6eP"769BOt[hF*2>U$=da\@r$..D28O^C6GQP$Bf.e1Lad5@rGmhP%'4_P!+/$@<,jrA7^Q3P
"T:uARfLsF_upgOo^__HS8iPBlJ#DF)ti$0fWWNA4($A@r"JHB5)IJ-:r)bDfTl0@rrhl;aWo(
0fU:cBOt[h+Co2!BlkJ:Ec6,8A7]:)061K8F(Jp'Ec5u]5CJ\oI?IQc(6YMW3/@QD@<,jrA7^p
LOuS74@q]F`CNFW8LbOtmP'AWh@<,jrA7^ofOu"b4F(8]&@UX:eDe*F8"Gd\R9Th1bFCf]=+C\
c"@rGmhOu"b#@<,jrA7^Q7P,4<t@UX:eDe*F8!0.:j7SZ<*0JJZ8@UX:eDe*F8#BOrrA!2+UE-
,f4DKCgDA8c@-A9)+&FE2M8P'CnaFD5Z2F,gNF@<-F#Ao;+#EckrVGV<KGB6,2)@<,jrA7Zm%E
-,f4DK@Ha@rGmh0et_O5E[g2EbBHR"*Ad0>9I,mFCf]=+EV1>FEh_9AohO*+EV1>FEqe:AohO*
+EV1>FCoH/F<G[:G]\"@H=\4)+C1.T@<-"%NXBl>G]\1=Ch[O"NWs!)DKKH1P'CDUB60(8DfBf
:E-,f4DKCtc@<-"%+CoD.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$F)ti$0fY=UP%64gCG'
+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+
*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/sscc18 0.0 0
%%EndData
%%EndResource
% --END ENCODER sscc18--

% --BEGIN ENCODER code39--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Code 39
% --EXAM: THIS IS CODE 39
% --EXOP: includetext includecheck includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code39 0.0 0 0 0
%%BeginData:         56 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  MZ  >nL_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  ei&
Bl7EsF_#&nBOt[h  +D,%u  F(L  Lj0 6U  c?  Bk1  XoA  RfCb@r  !3  !@;L!r  Ou"
b*DI[L*A7]joG]Y        '?@;  L!r Ou  "b  *DI  [L*         A7]         7aAR
fLiDKKH7F<G1(Ci         a0N1  G  <E  UA  7]h  (@<        -E3A        moLsA
Wei&FCf]=AoDR/O  iNV@06  CcM  F  E;/ BA V^\V  1G<  i]G]\4LAnH  *qFGTaU1G<E
QBkM+$L]NYpDfBf  4Df0WZ  Y:j  s =EbT    E(FE  qh:  P!+/J!Ko='  %<$3-Bl@m1H
]kFA@;L!rP!+/T5  ^eepOu  SV6    P,4<    rNWD  ;+N  HB2`AWf3'O  tDh\P')pOOu
 %N5OtCcrF_-^lI  ?ITYP   %Bdt   OuY16   E-,f  4DK  Ct)Ou%NL<,  Z_tBl@m1H]g
15P"@<KAU&</Df0         Y>FCf   ]=AoD  R/OtD  hQ0  6CcMFE;/BA  KZ)+G]\"@H=
`6mOu"b5AU&<BDe       <U&ATT&  :AU&<B  De<U&  ATX  (gOu"b)ASG  djF<G7.BkM+
$OtVtS04J@1@q]:kF,hb)0etOA2)[BQ3C,u!6q'R884cEH9MJ8X:f1+h<)lt#=BSfZ/g)Dm.j^
?704S[(Ectl-F,2?023KbO!/LZ3.XPZ=@<-O"Cibb'OuQoZEarckEc[C-L]NZ4P!5%RI?I-W!/
LYb@<,jrA7^p5L]N[<HX^E(@rGmhP!4[&P"]A!@<-O"Cibb'P$jGlHS8iPBlJ#D@rGmh1HAoQA
4($=Ea`I"ATEf-6Z6LH+>Z##D09oA+Cf>-FCAm$+E).6Gp$X3B5)I//0JG2E+sE&C`mP*FED)7
F"AGTE+*6fF!+n/A0>u-AKZ&>D.7F"F!*%e,VLYo0/%?SBldisEcQ)=P!=AX<.0p#04J@1Ch7K
,@UX:eDe*FB@Wl0rBk1XoARfCb@r$FI!KsF1P#RT#04S[,@r$..D281T1Pc$e!FfJXCh7L?!Ks
F/@UX:eDe*FB5)96&9OhaEEctl-F-8_M94MXH@r$..D3=oQ@q]F`CNFW8P!5$bI?I,S@q]F`CN
FW8+Cf(r@r$..D29^*C6CAr@;KXg@<?'jBOt[hHQZd+Eas#uAKYGjEbo<)P"T7mEarckEcW@5B
Ot[hF*2>_99O.=04K->E,[F>De*E83FZE-6YL%@CIDlLBlo@^8T&$VEcP`$F<EqhA7Zl>3?VgF
ARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV"*I?IP_@UX:eDe*E%@UX:eDe*F8!+KAWCh7L
I9Th1bBl7EsF_#&nBOt[h+EVXHAWeitP#O)GDI[`1>E0%F0ekI?0f(O=0ocSs0ekI=0ekC=0oc
Sq0f(U?0ekC=0ocSs0f(U?0ekC;0ocSq0ekI?0ekC=0ocSs0ekI?0ekC;0ocSq0f(UA0ekC;0o
cSq0ekI=0f(O?0ocSs0ekI=0f(O=0ocSq0f(U?0f(O=0ocSs0ekC;1GLU?0ocSq0f(O=1GLU?0
ocSs0f(O=1GLU=0ocSq0ekC=1GLU?0ocSs0ekC=1GLU=0ocSq0f(O?1GLU=0ocSq0ekC;1G^aA
0ocSs0ekC;1G^a?0ocSq0f(O=1G^a?0ocSq0ekC=1G^a?0ocSs0ekC;0ekI?0ocSq0f(O=0ekI
?0ocSs0f(O=0ekI=0ocSq0ekC=0ekI?0ocSs0ekC=0ekI=0ocSq0f(O?0ekI=0ocSq0ekC;0f(
UA0ocSs0ekC;0f(U?0ocSq0f(O=0f(U?0ocSq0ekC=0f(U?0ocSs1GLU=0ekC=0ocSq1G^a?0e
kC=0ocSs1G^a?0ekC;0ocSq1GLU?0ekC=0ocSs1GLU?0ekC;0ocSq1G^aA0ekC;0ocSq1GLU=0
f(O?0ocSs1GLU=0f(O=0ocSq1G^a?0f(O=0ocSq1GL[?1GLU=0ocSq1GL[?0ekI=0ocSq1GLU=
1GL[?0ocSq0ekI=1GL[?0ocSq1GLU?0f(O=0jTqu06:TD+C\c"Ch7K,Bl7EsF_#&nBOt[hH\_c
PH\_`OP#[YGL^K;]P,4<t06DG\+C\c"Ch7K,Bl7EsF_#&nBOt[hH\_cPH\_`OP#[YGOpR:-F(0
3H!+g%XF,2?099OR6Bk1drFCB32P&PbiG]\`A>E/_6L]DO.G]\4LAnH*qF<G[:G][P9DKI"CAU
&<<BmO>5?'9G\HZXLSL]CY>!/LVsAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?ITd!
/LYb@<-0qDMS=VWI$:4P!5$b055<7GT^L0@<-O"Ci^_.@<,jrA7ZltL]NZ4P"UroF(025Bo!+Z
CkrF]!G-.YF!,17A9a81P'M.oF<G:R!KmIf+C\c"@rGmh+DHW4P"]SG!KmJ>&<^jOAU&<BDe<U
&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?I-8DI[L*A7]7aARfM&+EM"5+C\c"Ch7L?$Bf4]$Bb
F$DI[`1@q]F`CNFW8P"Us`Bl7EsF_#&nBOt[hBl8$(G]\9TFEhmM@UX:nAT!;)Oo\c0@UX:eBO
Pq&+Cf(r@r$..D284U9O_FNCh7L?!KmJ>&<^jOAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+
C1.TI=$'\F<G%$Ebo<)L]NY>>E/\m@<-0qDMS=V!Jh;MCij65FEqe:AohO*+EV1>FCoH/F<G[:
G]\"@H=\4)P'DD<<HDVj+C\c"Ch7L?$Bf4]'TrK.DI[aD/!<PgH"^o&ATMs%Ec[C_HZXLS+C\c
"Ch7L?!g3RgNWCV=@<-0qDMS@W!Jh;MCij65FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'D
D%FEhmM@UX:nAT!;*Oo\dI!+KAWCh7L?!g3S?&<^jOAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(
or3+C1.TI?ITYHZNY;+C\c"Ch7L?$Bf4]$BbF$DI[aD/!<PgH"^o&ATMs%Ec[C_HZXLS+C\c"C
h7L?!KmIfNWCV=@<-0qDMS=V!Jh;MCij65FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD%
FEhmM@UX:nAT!;)Oo\dI!+KAWCh7L?!KmJ>&<^jOAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or
3+C1.TI?ITYP#XV,061WA0/%?WDJX$)ARTU4F(025>9IurF*i]sP,Wkm8R3uYBQG;#+EM"5P%'
4JOo^@?P#?X?ASGdjFFB=)>q]YrF!+[0F(03R@Yb&J!Jgf?;L=3"I?K4g+DG_'Cis9"FCf]=HS
9JcF<G[MFFB<O05kfO+E)4@Bl@m1+?ht3A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b$D
e*E83Kc@bA1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6l
Bl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/code39 0.0 0
%%EndData
%%EndResource
% --END ENCODER code39--

% --BEGIN ENCODER code39ext--
% --REQUIRES preamble raiseerror renlinear code39--
% --DESC: Code 39 Extended
% --EXAM: Code39 Ext!
% --EXOP: includetext includecheck includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code39ext 0.0 0 0 0
%%BeginData:         37 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MZ  ?03%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  iLh  @rG  mh1HB#  kF  F/fXOu  8C3
05kfOBl@m1P!5$b  04J@1  @rG  mhP !5  $b  04]  !=F  C]E#G9  CL  +Cia0N  1G<
H[@r-9uATVL.F<G        1(Ci  a0N 1G  <]  UEc  Ye7         Amo         LsAW
eifE-,f4DKCuE06         ;5UB  l  7R  *H  #R>  X4a        VtcO        u8C3D
fBf4Df0WCP,i2'C  ia0N4a  W>W  I  ?IQ m3 0Ia6  V33  Qn!BlU*FE2  M8P!+/T/Wr;
\FcnqO1OXV5/Tc#  UAWeit  P#Z  p nAWe    *t3A  5;i  FD5Z2F-8_M  1OYEcDfBf4D
f0WCOu%NL8T8*YF  (K\OD0  '>4    @UX:    eDe*  FB@  ZmRN1G<L!!  0T-I@<,jrA7
^+J!FCqKH]g@*F(  ^Y"C6   CcDH   '2WOO   o^@>  Oo[  4NP!5$bP')  pIL]E55P"_#
iD0'?Q5&,lSP,XU         .P'E-   LP%'4  LP,X6  >P!  5%&I=%,:D0  '?Q5&-6EP'N
4"C6ATNC6CcD1G<       3GEas#u  AKYi2B  8?P&P  "_#  pP!FGY<IL$  AI?IQ=@<,jr
A7^Q"@UX:eDe*FB@Yb/MWKKr%L&cae8p`4#GA2#8/n8g1AMZ>XG]Z8\A4($=Ea`I"ATEee6Z6L
H+>Z##7<iocDId<h+Dl7BF<G(3DKK<$DBNk8Cj@-h;aX,J+Cf(nEa`I"ATDiF061K8F(Jp'Ec5
u]5CJ\oI?I/T@UX:nASrW"@<,jrA7^p5Ou"b&G][M7@ribsNWLM,NWLIlNWLImNWLInNWLIoNW
LIpNWLIqNWLIrNWLIsNWLItNWLIuNWLJ!NWLJ"NWLJ#NWLJ$NWLJ%NWLJ&NWLJ'NWLJ(NWLJ)N
WLJ*NWLJ+NWLJ,NWLJ-NWLJ.NWLJ/NWLJ0NWLLmNWLLnNWLLoNWLLpNWLLqNWC8_!\Zj"!\Zm#
!\Zp$!\Zs%!\[!&!\[$'!\['(!\[*)!\[-*!\[0+!\[3,!\[6-!A0<4/rfud:Q>H0NWCkp!A]Z
91QDJmNWD"t!B,r=2i[nuNWD/#!\[`;![U<r![U?s![UBt![UEu![UI!![Um-!C;_H6B2(6NWD
P.!C`"L7ZIL>NWD\2!D/:P8r`pFNWDh6!DSRT:6#?NNWDt:!E"jX;N:cVNWE+>!EG-\<fR2^NW
E7B!EkE`>)iY199''"9TB0#9o]9$:6#B%:Q>K&=,m>46&l!s6B2*t6]M3u7#h=!7?.F"7ZIO#7
udX$8<*a%8WEj&8r`s'99''(9TB0)9o]9*:6#B+:Q>K,:lYT-;2t].;N:f/;iUo0</q#1<K7,2
<fR53=,m>4=H3G5=cNP6>)iY1:lYT';2t](;N:f);iUo*<*bYC05b?F@rGmh+C\c"Ch7L?!g7A
_V33VfDIn$6AU&;>@UX:nAT!;*P&-;XOu"b+L]ESoL]E53@UX:nAT!;)P,Wd]Bp(ZC1G<<aFCS
umEZeq<FCf?"F!+q#Eas#uAKY]M99Mr21N$cJ@rGmh+DN$1G][G/@<.NVDIn$6AU&;>C*6toEa
s#uAKY]M99OO2G][G/@<.N?L]NZUHZ!D=FCf]=+DQ]5Oo^RD+Hh"uP#O)L+DN$1G][G/@<.N?O
o^_%I?I,SDIn$%De*E%DIn$%De*F8!,@ZjOu"b/ATr6-G]Y'GATr6-G]\`AC6D8R1N.5SBl@m1
NX006DKKE0@<Zg6F_-_\04Am6F!,@3G@PQ%AKYo1FD5Z2F"]1VDe*E83KcUi1ML`:Cis9"FCf]
=HS9JcF<G"4B60(8FEhnj99M)e!/LYnATr6-G]]*XL]N[<HS9)r5*@]TFEhn=DKKoE+EVjM+DH
W4Oo^_=Ou%3)FCf?3Ed<H@DIn$6AU&;>BnueQ9TjXBG]Y'BL]NY>FEhn=DKKoEP'DD<87?OOF,
g?EG]\%PFHUlsP#Pk1B60(8DfBf:E-,f4DKCtc@<-"%+CoD.FC]E#GEQnu061WACh[cu@<.N1O
u[rR%[&V$@rGmh1HB#kFHSVHA1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'
P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/code39ext 0.0 0
%%EndData
%%EndResource
% --END ENCODER code39ext--

% --BEGIN ENCODER code32--
% --REQUIRES preamble raiseerror renlinear code39--
% --DESC: Italian Pharmacode
% --EXAM: 01234567
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code32 0.0 0 0 0
%%BeginData:         33 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MZ  ?03%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  iLh  @rG  mh1GX<  5'  Tt>:%5  2X=
FD5Z2F-8_M1G<3G  Eas#u  AWf  6?1 G<  9W  DKK  E0@  <Wi+@;  L!  rOu"b*  DI[
L*A7]joG]Y'?@;L        !rOu  "b5 AU  &<  /Df  0ZZ         a-&         53FC
f]=F(or3L^K;$06         CcMF  E  qe  :A  ohO  *M#        !2i0        6CcMF
Eh_9AohO*L]ESo0  5+p2B4  uCC  !  Ko6 WE -,f4  DKC  uE06;5UBl7  R*H#R>X4aVt
cOu8C3DfBf4Df0W  CP,i2'  Cia  0 N4aW    >WI?  IQm  30Ia6V33Qn  !BlU*FE2M8P
!+/T/Wr;\FcnqO1  OXV5/T  c#U    AWei    tP#Z  pnA  We*t3A5;iF  D5Z2F-8_M1O
YEcDfBf4Df0WCOu  %NL8M   >0sG   ][P9D   KI"C  AU&  </Df0Z[/Wq  nCFCf]=F(or
3+EV1>FE;/BAWe^         01G<i   ]G]\4  LAnH*  qF<  G[:G]\4LAn  H*qFHS;?1G<
EQBkM+$+D>>#B4u       CM09S,#  @<,jrA  7^p5L  ^9/  \@UX:eDe*F  B@Yb>RD3>$K
04K->E,[F>De*E811F[&9P&*SFD-[_8T\BWBjkm%:hX9XD.-pmA7Zm#F`VXI@V$ZA+E)9C3?Vj
HB5)I/0/%?SBldisEcQ)=P!=AX<+99V@rGmhH]g@E0Tp%25);4^:m,jG04K->E,[F>De*E811F
[&6YKnK@:OCjEfMYAFCB!"@;[2aBOPpu@:O4dAKYi4F*&O7Df0Z*Bl5&3DJXS@A8,[jFE9)gEa
`['AS#n&DfV"*I?IQXP"@<:BOt[hF*2>U!0T-o!/LZ3#CA+<P!5$b@UX:eDe*E%Bp),F0TrDLL
]W`SL]ETTH\_`dCjhIGOuS7(P#-L]$'M99P#Pq)ARfLsF`!9B04S[,@r$..D3@)G1OYEW04S[,
@r$..D'3>%ARfLsF_upAP%p.9@UX:eDe*FB@Yb>R4aUXHEas#uAV^VT94MXH@r$..D29m/!Kq;
H04K->E,[F>De*E811F[&6YL%@CIDlLBlo@i8T&$VEcP`$F<F.s@;KXdDBMbh@<-3n@rGmh+Cf
(r@r!2tBkM.%+E2@>G%kJuA1oTV@;0doATDg0EfrY8P#Qjm</:mEV33fo!+KAW@rGmhP'N3ML^
7L(ARfLsF_upgOo^_j06CcMFHShN1G<o[C`mh2G]]*"L`g/8Eas#uAWea11G<3GEas#uAV^PRV
33Wj!/LZ3"aa]eEas#uAWf650Tp[/P"9%jEas#uAV^P6@;M*9P,WV5Cm'("!/LZ3"acCl@UX:e
De*FB5*AR%30",-77g:%P"L(W!KmJ3P#RT(I?I0bF^ed"@rGmhL]`G6P)#3FI?I-CAU&<Q!H_m
tFGKpQ$'IuFH$!VBFGKpQ6'?J2E-,f4DKCgDA8c@-A9)+&FE2M8P'AWgEbBG9@UX:eDe*E%DfB
f4Df0VL04Sp2AMZ?05E[g2EbBHR"*Ad0>9I,mFCf]=+EV1>FEh_9AohO*+EV1>FEqe:AohO*+E
V1>FCoH/F<G[:G]\"@H=\4)+C1.T@<-"%NXBl>G]\1=Ch[O"NWs!)DKKH1P'CDUB60(8DfBf:E
-,f4DKCtc@<-"%+CoD.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$@rGmh1GY+QP%64gCG'+8
/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6
lBl7R3P#M~>
% uk.co.terryburton.bwipp/code32 0.0 0
%%EndData
%%EndResource
% --END ENCODER code32--

% --BEGIN ENCODER pzn--
% --REQUIRES preamble raiseerror renlinear code39--
% --DESC: Pharmazentralnummer (PZN)
% --EXAM: 123456
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp pzn 0.0 0 0 0
%%BeginData:         35 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MZ  ?03%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  iLh  E-c  DKL_Q"  0O  ps'_E-  ,f4
DKCt)Ou"b#@<,jr  A7^of  Ou"  b%D f0  Z-  Eaa  /7A  moLsAW  ei  &Bl7Es  F_#
'*AU&;>AmoLsAWe        i&FC  f]= Ao  DR  /Oi  NV@         06C         cMFE
;/BAV^\V1G<i]G]         \4LA  n  H*  qF  GTa  U1G        <i]G        ]\1KA
nH*qFGKp[1G<EQB  kM+$L]  NYp  0  5u5 T3 $;gA  Cia  0N1N.5SBl@  m1P-6N[FE2)
5B68E<AWf3'L]NY  rOpu>K  FD5  Z 2F*j    (NAm  oLs  AWf3'P!FGY  <0B5(@ZmRN0
oc8tP)XR(F_-_!H  ]ftD5*  C&O    5*@^    MH]f  t&E  ckrV1OYEdI  ?J0)*g/N:Df
Bf4Df0WZ5*@^MP#  Q@=FD   5Z2F   *j'+I   ?I/T  FCf  ]=AoDR/+EV  1>FCoH/FHS5
=1G<i]G]\"@H=\4         @AU&<   <BmO?  R09S+  EFC  f]=H#I;,F(  KG9FCf]=H#I
;,F(KHV09S+EFCf       ]=G].2+  F(KG9F  Cf]=G  ].2  +F(KHV09S+  EBOtmjBQPA1
ASGdjFHS;?1N7YX3-ucW@<,jrA7^p5L^0)[@UX:eDe*FB@Yb;QD3>$K04K->E,[FKH>Y]O@:W&
CDJ+')NZ(_t:,jA5F`VXI@V$Z@+E)9C3$;aGB5)I/0/%?SBldisEcQ)=P!=AX<.0+&@<,jrA7^
p5L^'#Z@UX:eDe*FB@Yb8PD3>$K04K->E,[FKH>YZN@:W&CDJ+')NZ(_t:,a;4F`VXI@V$Z?+E
)9C2]uXFB5)I/0/%?SBldisEcQ)=P!=AX<.0p0@UX:eDe*F+OuS7OP%Kk@LcLVpP&bn&@WuO*E
 %Z*UDF.cB6YKnK@:OCjEfM,9>#$2WF`VXI@rH7,@;0U%Df0B:+Co2!BlnDL061K8F(Jp'Ec5u
]5CJ\oI?I/TD0'?+ASrW0H>Y]hL^AKVL^8El<K]-k@q]F`CNFW8L]ESoL]E53D0'?+AT!;+P,W
d]Bp(ZC1Lad5@rGmh+DI!3LbP!kBcqA@DE*!!!I]<N!e$53Oo^_^@q]F`CNFW8Oo[4GBOt[hF*
2>_5*@^MP"769BOt[hF*2=B@q]F`CNFW8L^TA\Ou$T]ARfLsF_upAP!+.F@WuO*E%Z*UDF.cB8
T&KiFAlajF_,H#AWA'.DI[U*Eb/a&+Ac6:+DG_4F`\aIAT;j(DI[6#E,ol?Bk1dc0/%?SBldis
EcQ)=P!=AX<+99V@rGmhP%&9LB5D-sL]N[<P!+/$@<,jrA7Zm#F(]<#DMS@WWKKnaBOt[hF*2>
U0TlI"D0mpFGA2#8/oZ,S6=FClBOt[h6tp:JFH.P:DI[U*Eb/a&+Ac6:+Cf(r@r!2tBkM.%+E2
@>G%kJuA1oTV@;0doATDg0EfrY8P#Qjm<,H\hCh7LIV33fo!/N4iG`k%B!FfJX@rGmhP'N3MD0
'?+AT!;)P,Vr)ARfLsF_upgOo^_j05YcCP!5$bDfBf4Df0WV#\7jkFC]E#GB@kJAWh9k@<-"%+
Dl14+E)4@Bl@m10/$gRA7[PWP!>*c06CcMF<GFAB5D-sL]rqBP,4<tFCf]=L]EG>:g-U:/Kg4%
FCf]=L^%^;B8?S*F(]<#DMS=VWKKr<H!t`+F,g?EG][.4>9J$!G]Y'MAU&<ADe<U&ATT&:AU&<
BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C-*qP'CDUB60(?FCf]=G[YE&B5W_6@qBP"ATErY@<-
"%NWX3=FDl,?Bl@m1P'CDUB6,2+Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<]nDNZuBA1
r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F
(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/pzn 0.0 0
%%EndData
%%EndResource
% --END ENCODER pzn--

% --BEGIN ENCODER code93--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Code 93
% --EXAM: THIS IS CODE 93
% --EXOP: includetext includecheck
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code93 0.0 0 0 0
%%BeginData:         45 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  N;  PnL_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  ei&
Bl7EsF_#&nBOt[h  +D,%u  F(L  Lj0 55  <6  Cis  9"F  Cf]=+D  ,%  uF(LLj  06C
cMFCoH/FHOV,1G<        i]G]  \"@ H=  _m  >Ou  "b5         AU&         <BDe
<U&ATWb(Ou"b)AS         GdjF  G  Ks  \1  G<]  UEc        Yf(D        IXf$@
;L!rOu%#qFD5Z2F  -<^[F*  )G:  D  J+' :E +P1q  H\_  ]c23JDeE-,  f4DKC/fX(Gd
VF(LLtH]gXBP#RT  (P%'TN  Oth  s t4d(    eHEc  krV  4aW>DP!5%O  P!5$bI=%,/F
E2M8Ou%NL<IL$AO  rfcH05  kfO    Bl@m    1P!5  $bI  ?IQJE-,f4D  KC/f1OYEX06
CcMFCoH/F<G[:G]  [P9DK   M$nO   u"b5A   U&<<  BmO  >5FCf]=F(o  r3OtVtS06Cc
MFEqe:AohO*+EV1         >FEqe   :AohO  *OtVt  S05  +p2B4uB0BO  tmjBQTCjOu"
b&DI[`1>E/nB1GL       U=16)Pn  0ekF<1  QDYo0  ekI  =16)Pn0ekL  >0ocGm1,1L<
1QDYo1,1O=16)Pn1,1R>0ocGm0ekC;1l_bp1GLX>0ocGm1bg^>0ocGn0ekC;1QDYp0ekF<16)P
o0ekI=0ocGn1,1L<16)Po1,1O=0ocGn1GLU=0ocGm0etI<1QDYo0etL=16)Pn0etO>0ocGm1,:
R=16)Pn1GU[>0ocGm0ekC<1QDYo0ekF=16)Pn0ekI>0ocGm1,1L=16)Pn1GLU>0ocGn0etI<16
)Po0etL=0ocGn0ekC<16)Po0ekF=0ocGn1,1L=0ocGn1,:R=0ocGm0etI=16)Pn0etL>0ocGm1
,:R>0ocGm1,CX>0ocGm1,1L>0ocGo0ekC;16)Pp0ekF<0ocGo1,1L<0ocGm0etI>0ocGm0f(O>
0ocGn0ekC=0ocGm1,1O>0ocGo0etI<0ocGo0ekC<0ocGm1,:U>0ocGm0ekC>0ocJn0ekC>0els
s1G<3GEarckEc[6k0JP==1c70M3&s8k6UX@47n?3D92&&T:Jand;cHat='/U//M8.k0.S?31G<
3GEbo<)+C\c"@rGmhP%'S106:`I0o5jm1G<f]F>A[OOu"b4AoohbrK8riF(TMNM#<Dl04o*3G%
#3.+?VcH"B.ch,]dR>0ocB87T:[TAooeg"B.ch06:`I1QDT:7T:mZAoojP5!G,c05YcC+C\c"C
h7LI$'I(tBnubP1G<L!!0T-bBcpknEbo<)P!+/T5^eep04S[(EZeh"Eas#uAKY]M99M)M@<-F#
Ao;*$@q]:kLgH6-Op#JA@UX:nAT!;,P,XUVOp$,@@<,jrA7ZltL]NY>P"UU;P&5P!@q]:k+D,M
$G%#3.+C\c"@rGmh+DHW4Oo^@AP"_$3Ou"b*+DHW7Oo^_%I=!V]+DHW4Oo^_%I?ITYP#Q:>B-:
q3@q]:kP'AWo+DHW4Oo^_%05;VEL]NY>Ou%NLAM7nAB-;&4B8?P&P"_#p05YcCCh7K,D0'?Q@Z
iN]DI[L*A7]7aARfM&06:TD+Dl14Ch7L?#*NeY)3P#`V33W_HS9GLF!,=@B5D-sL^'#YL^fLJP
,4<tI?IS`FEhmMD0'?+AT!Y;Ou%/gF,0g-DI[aD09StkGqWZ@ARfLsF_rjh!0T,k@q]F`CNFW8
15Gpn1Pc$e!GumjCh7L?!KsF/056S5Ou$rrB-:oO99M8j!0Ur@LanQOP,U*KDIe!T5*@]T@q]:
kNWC8c1OXV+!Ks:B3/@Qj"Gm)@LQZm8@q]:kP!5$b@UX:eBOPq&+Cf(nEfuEFFcp2eBl7I+P!5
$bP')q1I?IS`ASu!#ASu"!+DG_(G`k^_1NR#H+DHW9P&,pYOo]-3A!2+ZG]Y'B+BosuBOPp(Bo
!(YCkrC\!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'AWiBOt[hF*2=S+Cf(r@r$..D
)!/MF(]<#DBNYVWJCS<WJD7OC5;nR!GQF^G`lm+!Ko5l@q]F`CNFW81*C(?ARfLsF_rlVD0'?+
ASrW)P,X6JP%odROo]97A9a8ROo^_%I?I-8DI[L*A7]7aARfM&04S[,@r$..D)!/CBOt[hF*2=
SLbFp+Ou"b$BOt[hF*2=T+Cf(r@r$..D)*5DBOt[hF*2=SOo^@lP%p.9F(025D0'?+AT!;.P&,
pYOo]-3@ric&BOt[hF*2=SP"Us`F(025D0'?+AT!;.P&,p_Oo]-3@ric&BOt[hF*2=TP"Us`F(
025D0'?+AT!;.P&,peOo]-3@rmG[P"Us`I=$$EF!,=@B5D-sL^'#YL^'"CASu"!LbOubP'MJ=<
BNAsEb0,A061WACh[cu@<+#B@WNYr+EM"5H\aA=WI9q$>q]Z#F!+[0F(03R@Yb&J!Jgf?;L<(g
BkM+$I?K4g04JC3+Bot0@WR]AL]NY>L]W`;H\_ZMP(R$_Bl7EsF_#'*AU&<D06DG\+EVjMI?IP
_DfBe@DfBf4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<6VA7[bWOuSV806M
 %_@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmA
TVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/code93 0.0 0
%%EndData
%%EndResource
% --END ENCODER code93--

% --BEGIN ENCODER code93ext--
% --REQUIRES preamble raiseerror renlinear code93--
% --DESC: Code 93 Extended
% --EXAM: Code93 Ext!
% --EXOP: includetext includecheck
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code93ext 0.0 0 0 0
%%BeginData:         42 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  N;  Q03%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  iLh  @rG  mh3AY5  kF  F/fXOu  8C3
05kfOBl@m1P!5$b  04J@1  @rG  mhP !5  $b  04]  !=F  C]E#G9  CL  +Cia0N  1G<
H[@r-9uATVL.F<G        1(Ci  a0N 1G  <]  UEc  Ye7         Amo         LsAW
eifE-,f4DKCuE06         ;5UB  l  7R  *H  #R>  X4a        VtcO        u8C3D
fBf4Df0WCP,i2'C  ia0N4a  W>W  I  ?IQ m3 0Ia6  V33  Qn!BlU*FE2  M8P!+/T/Wr;
\FcnqO1OXV5/Tc#  UAWeit  P#Z  p nAWe    *t3A  5;i  FD5Z2F-8_M  1OYEcDfBf4D
f0WCOu%NL8T8*YF  (K\OD0  '>4    @UX:    eDe*  FB@  ZmRN1G<L!!  0T-I@<,jrA7
^+J!FCqKH]g@*F(  ^Y"C6   CcDH   '2WOO   o^@>  Oo[  4NP!5$bP')  pIL]E55P"_#
iD0'?Q5&,lSP,XU         .P'E-   LP%'4  LP,X6  >P!  5%&I=%,:D0  '?Q5&-6EP'N
4"C6ATNC6CcD1G<       3GEas#u  AKYi2B  8?P&P  "_#  pP!FGY<IL$  AI?IP_@UX:n
ASrW"@<,jrA7^p5Ou"b&G][M7@ribsNWrfg7T:[6NWrfg7T:X!NWrfg7T:X"NWrfg7T:X#NWrf
g7T:X$NWrfg7T:X%NWrfg7T:X&NWrfg7T:X'NWrfg7T:X(NWrfg7T:X)NWrfg7T:X*NWrfg7T:
X+NWrfg7T:X,NWrfg7T:X-NWrfg7T:X.NWrfg7T:X/NWrfg7T:X0NWrfg7T:X1NWrfg7T:X2NW
rfg7T:X3NWrfg7T:X4NWrfg7T:X5NWrfg7T:X6NWrfg7T:X7NWrfg7T:X8NWrfg7T:X9NWrfg7
T:X:NWrfg7T:["NWrfg7T:[#NWrfg7T:[$NWrfg7T:[%NWrfg7T:[&NWC8_#$t4t<%gOt#$t4t
<%gRu#$t4t<%gV!#$t4t<%gY"#$t4t<%g\##$t4t<%g_$#$t4t<%gb%#$t4t<%ge&#$t4t<%gh
'#$t4t<%gk(#$t4t<%gn)#$t4t<%gq*!A0<4/rg-B;as_>:Q>H0NWCkp!A]Z91QDJmNWD"t!B,
r=2i[nuNWD/##$t4t<%hF8#$t4t<$b"o#$t4t<$b%p#$t4t<$b(q#$t4t<$b+r#$t4t<$b.s#$
t4t<$bS*!C;_H6B2(6NWDP.!C`"L7ZIL>NWD\2!D/:P8r`pFNWDh6!DSRT:6#?NNWDt:!E"jX;
N:cVNWE+>!EG-\<fR2^NWE7B!EkE`>)ien;as_499'3_;as_49TB<`;as_49o]Ea;as_4:6#Nb
;as_4:Q>Wc;as_4=,mJk;as_:6&l.U;as_:6B27V;as_:6]M@W;as_:7#hIX;as_:7?.RY;as_
:7ZI[Z;as_:7udd[;as_:8<*m\;as_:8WF!];as_:8ra*^;as_:99'3_;as_:9TB<`;as_:9o]
Ea;as_::6#Nb;as_::Q>Wc;as_::lY`d;as_:;2tie;as_:;N:rf;as_:;iV&g;as_:</q/h;a
s_:<K78i;as_:<fRAj;as_:=,mJk;as_:=H3Sl;as_:=cN\m;as_:>)ien;as_4:lY`d;as_4;
2tie;as_4;N:rf;as_4;iV&g;as_4<*bYC05b?F@rGmh+C\c"Ch7L?#*NecV33VfDIn$6AU&;>
@UX:nAT!;.P&-;XOu"b+L]ESo05H@DOu%moL]LsnEbo<)L]N[<HS9)r5*@]TAU&<,BOPp(AU&<
.DI[`1@UX:eDe*E%Bp),P99M(aAU&<5ASrW%G][G/@<.N?Ou$ueG@PQ%AKY_1AU&<,BOPqEH#@
2;FCf]=+DW*/@<,jrA7ZltP"Us_AU&<5AT!;)P&5P`ATr6-G]Y'DL]NY>NWC8cH$tiT05;VE+D
#e>Ch7LI!Ko5lCERC8AU&<5AT!;)P!+/J!I]<N!e$53Oo^_%I?I,SDIn$%De*E%DIn$%De*F8!
,@ZjOu"b/ATr6-G]Y'GATr6-G]\`ACQ_AS1N.5SBl@m1NX006DKKE0@<Zg6F_-_\DfBf4Df0WV
#]O3mF(Js$@rua6AWh9k@<-"%+Dtb7@rGmh+E)4@Bl@m10/$gRA7[bWP!>*cBl7EsF_#'*AU&<
D06DG\+CT;'F,g?EG]]*AOu%moL]MC)GB@D@FHU*h!KsF/056S5Ou"b5G][M7FE2XLFEhmMBp)
,P1N[k`ASuU1H&)H<ATr6-G]Y'BL]NZ4P'D(nF<G9?FEhn=DKKoEP'DD<87?OOF,g?EG]\%PFH
UlsP#Pk1B60(8DfBf:E-,f4DKCtc@<-"%+CoD.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$@
rGmh3AY5kFHSVHA1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]H
E+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/code93ext 0.0 0
%%EndData
%%EndResource
% --END ENCODER code93ext--

% --BEGIN ENCODER interleaved2of5--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Interleaved 2 of 5 (ITF)
% --EXAM: 2401234567
% --EXOP: height=0.5 includecheck includetext includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp interleaved2of5 0.0 0 0 0
%%BeginData:         43 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  055<GA  TD  Tu@<Q3  m12
gb^H\`B!23JD%Df  Bf4Df  0WZ  5*@  ] T@U  X:e  De*  FB5*@]  TA  8c@-A9  )+&
+D,%uF(LLj055<6  Cis9"  @q]  F`C ER  4t  Cia  0N1  G<H[@r  -9  uATVL.  F<G
1(Cia0N1G<H[@r-        9uAR  fCb @r  #d  rFC  f]=         +D,         %uF(
LLj06CcMFCoH/FH         OV,1  G  <i  ]G  ]\"  @H=        _m>O        u"b5A
U&<BDe<U&ATWb(O  u"b)AS  Gdj  F  GKs \1 N.5S  Bl@  m1P-6N[FE2  )5B68E<AWf3
'L]NYrOpu>KFD5Z  2F*j(N  Amo  L sAWf    3'P!  FGY  <0B5(@ZmRN  0oc8tP)XR(F
_-_!H]ftD5*C&O5  *@^MH]  ft&    Eckr    V1OY  EdI  ?J0)*g/N:D  fBf4Df0WZ5*
@^MP#Q@=FD5Z2F*  j'+I?   I/TF   Cf]=A   oDR/  +EV  1>FCoH/FHS  5=1G<i]G]\"
@H=\4@AU&<<BmO?         R09S+   EFCf]  =H#I;  ,F(  KG9FCf]=H#  I;,F(KHV09S
+EBOtmjBQPA1ASG       djFHS;?  1Lad5@  rGmhH  ]g@  E0Tp%25);4  ^:m,jG04K->
E,[FDDKKH1Ch7$uARmQ7Ai4%+A4($=Ea`I"ATEe]8T&W]Ebo;qG%G2,1*CLI+>k9YF`VXI@rH7
,@;0U%Df0B:+Co2!BlnDL061K8F(Jp'Ec5u]5CJ\oI?I/T@UX:nASrW"@<,jrA7^p5Ou$QUEbo
<)L]W`SL]ET$Bl7EsF_#&nBOt[hOp#6&Ebo<)L]W`SL]ETTBl7EsF_#&nBOt[hP&QQeP&bn&E+
*9"@UX:nAT!;)Oo^`BOu%&cA;C5A0Tp["@:Y/p@UX:eDe*FBGqWW8Eas#uAKYr#A<J`%@UX:nA
SrW"@<-0qDMS=V!Ko6eP#Q.5@r-9uARfCb@r$EE@q]F`CNFW8L]ESoL]E53@UX:nAT!;)P,Wd]
Bp(ZC1MMXHP%odQP!+.F@q]F`CNFW8+Cf(r@r$..D'3:rEas#uAKY]M98G9bWJCY>Cm"g^1OXU
'@q]F`CNFW8+Cf(r@r$..D'3:rEas#uAKY]M98G9bWKI:F1OYEdI?I,S@q]F`CNFW8L^IX*ARf
LsF_upAP%p/ZL^K;[Ou"b1@:UKi@<-0qDMS=V!Ks:B1N6c5L]CmmEas#uAWh=X@:UKi@<-0qDB
NG&ARfLsF_upgOo^_j04J@1@rGmh+E1b"Ou"b#@<-0qDBNCsEbo<)L]NY>Ou%NL<%hg#@ribsN
Wh-l1,:SE"Yqee0f"am0etI<16)Mn1,1L<NWh-l1,1PE"Yqef0en[l0etL=0ocDl0ekF=NWh0m
0etJD"Yhbe1,4dl0ekC;NW_*l0elss1G<3GEarckEc[6J0JP==1c70M3'!-X06:TD+C\c"Ch7L
?"d3\X#a,4OV33VfFEhmM@UX:nAT!Y;Ou%/gF,0g-DI[aD$Be&FH&)HV!b,SYCh7L?!KsF/056
S5Ou$QUEas#uAKY]C!Kp,c@<,jk@<-FP5*CngFcp2eBl7I+P!5$bP')q104f$2@3B-!@ric,DI
e!T99M)?@<,jrA7ZltL]NY>L]NZ4@UX:eBOPq&P!5%gP')ps055<7G`k7R1QlmDFY@<D@q$QlD
I[`1Bl7I+P"Uro055<GC`m;,@ptO0L]W`UP,4<tL]E53ASu!dP%'4JP,Wd]C6CcD1G<0HBOPp(
ASu!d+DR'4Ou"b#@q]:k+D#G#@N]EK99M)FDKK\;C5;qSCggge@<.NUBl8$/+DQ]6P&,pTOo]$
 %BOPqEG^Y`GF(025BnuqUCkr4W!GQFnCm''cG]Y'B+Bost@<,jrA7ZltL]NZ4Bo!(YCkr4W!H
_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'C\Y@r-9uARfCb@r!3$DI[L*A7]7aARfLiD
KKH7FHUU+"Cbe[Ch7L?!g9NsP!+s2HZXLS+DHW4Oo\dI!?c*4!KmJ>$'K+\"Hie-AU&<BDe<U&
ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI=$'\F<G:R!KmIf+C\c"@rGmh+DHW4Oo^@>P"]SG!KmJ
>$'K+\"Hie-AU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?ITYP"9Y'F!+q#Ebo<)L]r
rXL]ikAASu"!L^TA=P'K/P061WA0/%?WDJX$)ARTU4F(025>9IurF*i]sP,Wkm8R3uYBQG;#+E
M"5P%'4JOo^@?P#?X?ASGdjFFB=)>q]YrF!+[0F(03R@Yb&J!Jgf?;L=3"I?K4g+DG_'Cis9"F
Cf]=HS9JcF<G[MFFB<O04J@1Eaa'(DhnHJF)YPtATD4$BlAe/05kfO+E)4@Bl@m1+?ht3A8c@-
A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b*DKKH1Ch7$uARmQ7Ai5`2P%64gCG'+8/p(ZFEd;,
:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M
~>
% uk.co.terryburton.bwipp/interleaved2of5 0.0 0
%%EndData
%%EndResource
% --END ENCODER interleaved2of5--

% --BEGIN ENCODER itf14--
% --REQUIRES preamble raiseerror renlinear interleaved2of5--
% --DESC: ITF-14
% --EXAM: 04601234567893
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp itf14 0.0 0 0 0
%%BeginData:         31 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  055<GA  TD  Tu@<Q3  m12
gb^OuP+;CG'+8/p  (ZFEd  ;,:  Ecc  5 ;/n  0$=  E,^  uoP'E-  !0  55N?0f  465
'Tt>:%52X=FD5Z2  F-8_M  1G<  3GE as  #u  AWf  6?1  G<9WDK  KE  0@<Wi+  @;L
!rOu"b*DI[L*A7]        joG]  Y'? @;  L!  rOu  "b5         AU&         </Df
0ZZa-&53FCf]=F(         or3L  ^  K;  $0  6Cc  MFE        h_9A        ohO*L
]ESo06CcMFEqe:A  ohO*M#  !2i  0  5+p 2B 4uCC  !Ko  6WE-,f4DKC  uE06;5UBl7R
*H#R>X4aVtcOu8C  3DfBf4  Df0  W CP,i    2'Ci  a0N  4aW>WI?IQm  30Ia6V33Qn!
BlU*FE2M8P!+/T/  Wr;\Fc  nqO    1OXV    5/Tc  #UA  WeitP#ZpnA  We*t3A5;iFD
5Z2F-8_M1OYEcDf  Bf4Df   0WCO   u%NL8   M>0s  G][  P9DKI"CAU&  </Df0Z[/Wqn
CFCf]=F(or3+EV1         >FE;/   BAWe^  01G<i  ]G]  \1KAnH*qF<  G[:G]\1KAnH
*qFHS;?1G<i]G]\       4LAnH*q  F<G[:G  ]\4LA  nH*  qFHS;?1G<E  QBkM+$+D>>#
B4uCM09S,#@<,jrA7^p5L^fMa@UX:eDe*FB@YbMWD3>$K04K->E,[FDFCm6a@UWe@ASu.&BT=-
*<(8Go1a$XXF*&O6AKW]`+E)9C0f1"`BkM.%F"]1e@;0doATDg0EfrY8P#Pn!Eas#uAUBS"LbP
!(P!4[^P#.<^HS8iPBlJ#DBlmrA1h'm(6YKnK@:OCjEfM55<(8Go1a$XXF*&O7Df0Z*Bl5&3DJ
XS@A8,[jFE9)gEa`['AS#n&DfV"*I?IQXP"@<:BOt[hF*2>U!0T-o!/LZ3%!sXAP!5$b04S[,@
r$..D'3>%ARfLsF_r71@<,jrA7ZltP"UTbP,W/O!g7;S!0TKlL]`fVI?IQm!Ko6eP"769BOt[h
F*2>U$=da\@r$..D28O^C6GQP$Bf.e1Lad5@rGmhP%'4WP!+/$@<,jrA7^Q+P"T:uARfLsF_up
gOo^__HS8iPBlJ#DBlmrA1h'm(6YL%@CIDlLBlo@]8T&$VEcP`$F<F.S7P->O+Cf(r@r!2tBkM
.%+E2@>G%kJuA1oTV@;0doATDg0EfrY8P#Qjm</;$IV33fo!+KAW@rGmhP'N3ML^dj-ARfLsF_
upgOo^_j04J@1@rGmhP!5$bDfBf4Df0WV#\7jkFC]E#GB@kJAWh:VE-,f4DKCgFF(fK9@W-9tA
TDm5F_-_\DfBf4Df0WV$Y"$pA7]e*Bk2=!L]ilcDfBf4Df0WV$=[poA7]dtAS-%?&!D0UE-,f4
DKCgG@W-9tATDg*B4uCC&!D0UE-,f4DKCgBBOtmjBQT+r!!!"^G].PCBl@m1NY6&D@r-9uARfC
b@r#drFCf]=FE2M8P'CnaFD5Z2F,gWMAU&<BDe<U&ATWb%P'AWgEbBG9@UX:eDe*E%DfBf4Df0
VL055<GATDTu@<Q3m12gb^P!>*c@<-"%NWX3=FDl,?Bl@m1P'CDUB6,2+Df0Z-Eaa0TE%`kbAS
u<uDIm6sP#RT)I?G)'1G<HaAhc-*30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F
)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/itf14 0.0 0
%%EndData
%%EndResource
% --END ENCODER itf14--

% --BEGIN ENCODER identcode--
% --REQUIRES preamble raiseerror renlinear interleaved2of5--
% --DESC: Deutsche Post Identcode
% --EXAM: 563102430313
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp identcode 0.0 0 0 0
%%BeginData:         34 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  055<GA  TD  Tu@<Q3  m12
gb^OuP+;CG'+8/p  (ZFEd  ;,:  Ecc  5 ;/n  0$=  E,^  uoP'E-  !0  54s.DK  KB,
A7^+D'Tt>:%52X=  FD5Z2  F-8  _M1 G<  3G  Eas  #uA  Wf6?1G  <9  WDKKE0  @<W
i+@;L!rOu"b*DI[        L*A7  ]jo G]  Y'  ?@;  L!r         Ou"         b5AU
&</Df0ZZa-&53FC         f]=F  (  or  3L  ^K;  $06        CcMF        Eh_9A
ohO*L]ESo06CcMF  Eqe:Ao  hO*  M  #!2 i0 5+p2  B4u  CC!Ko6WE-,  f4DKCuE06;5
UBl7R*H#R>X4aVt  cOu8C3  DfB  f 4Df0    WCP,  i2'  Cia0N4aW>W  I?IQm30Ia6V
33Qn!BlU*FE2M8P  !+/T/W  r;\    Fcnq    O1OX  V5/  Tc#UAWeitP  #ZpnAWe*t3A
5;iFD5Z2F-8_M1O  YEcDf   Bf4D   f0WCO   u%NL  8M>  0sG][P9DKI  "CAU&</Df0Z
[/WqnCFCf]=F(or         3+EV1   >FE;/  BAWe^  01G  <i]G]\1KAn  H*qF<G[:G]\
1KAnH*qFHS;?1G<       i]G]\4L  AnH*qF  <G[:G  ]\4  LAnH*qFHS;  ?1G<EQBkM+$
+D>>#B4uCM09S,#@<,jrA7^p5L^TA_@UX:eDe*FB@YbGUD3>$K04K->E,[FDA7]Y#@rGmh6=FC
uASu.&BT=`6AT`*9@q]Er:iCDs+A$*TDKKB,A7Zm#F`VXI@V$Z:0d(CT+>GVoA8,[jFE9)gEa`
['AS#n&DfV"*I?IQ=@<,jrA7^+N3/B8OAs,?63Kd4%EdKHKGA2#8/nnj-DKKB,A7\)9A4($=Ea
`I"ATEeb6tLL_F(8lp+AcutF<F.cASuU"De*E%D09oA+Cf>-FCAm$+E).6Gp$X3B5)I/0/%?SB
ldisEcQ)=P!=AX<.0p$04S[,@r$..D281T1Pc$e!Jh)0056S5Ou"b$BOt[hF*2=B@q]F`CNFW8
+C\c"@rGmh+DI!3LbP!kBnuhRC5;kQ4aVtfP&,PnL^B5\I?ITn!Ko6eP"769BOt[hF*2>U$=da
\@r$..D28O^C6GQP$Bf.e1Lad5@rGmhP%'4UP!+/$@<,jrA7^Q)P"T:uARfLsF_upgOo^__HS8
iPBlJ#DBk1dmFCT6"AO9g96YL%@CIDlLBlo@n8T&$VEcP`$F<Et_F`_\7BOr;_Df^"C8RuCMFC
T6"AKYJrARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV"*I?IQXP#R5GP,4=$L]CmmEas#uA
Wh>%3/@rPBOt[hF*2>U0TlI"GV<N7Eas#uAWf6?1G<i]G]\rW+<W9Z+<VdL+<W9Z+<VdLL_,`G
Or9E=FCf]=L]CmmEas#uAV^>B!g66?H$!VBFGL$.@<,jrA7^PuL]`f6P'M.\G]\`H@UX:eDe*F
8"c*8D9Tj[CAU&<Q$Y!Ob@rGmhL^8e=P"_$aFCf]=L_!s'Eas#uAV^_M!Kp->H#IYDBl@m1NX0
06DKKE0@<Zg6F_-_\DfBf4Df0WV$u'ThCis9"@q]F`CM%!kF(LMZ04Am6F!+q#Eas#uAKYo1FD
5Z2F"]1\DKKH1Ch7$uARmQ7Ai5`9Ou$NeB60(8FEhn3+Bot1AU&;>FCf]=G].2+F(KG9FCf]=H
#I;,F(KG9FCf]=AoDR/+EV1>FE;/BAKY8$?'9G@EbBHR$?Tj(FEh51BkM=D#%M4^FCfKUG[YW*
F,g?@E--#;FD5Z2F-:cVEbBG9A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b*A7]Y#@rGm
hOuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,
-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/identcode 0.0 0
%%EndData
%%EndResource
% --END ENCODER identcode--

% --BEGIN ENCODER leitcode--
% --REQUIRES preamble raiseerror renlinear interleaved2of5--
% --DESC: Deutsche Post Leitcode
% --EXAM: 21348075016401
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp leitcode 0.0 0 0 0
%%BeginData:         34 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  055<GA  TD  Tu@<Q3  m12
gb^OuP+;CG'+8/p  (ZFEd  ;,:  Ecc  5 ;/n  0$=  E,^  uoP'E-  !0  5P36FC  T6"
AUB4IOu8C305kfO  Bl@m1  P!5  $b0 4J  @1  @rG  mhP  !5$b04  ]!  =FC]E#  G9C
L+Cia0N1G<H[@r-        9uAT  VL. F<  G1  (Ci  a0N         1G<         i]G]
[P9DKM#]Ou"b5AU         &<<B  m  O?  H$  Bd1  uFC        f]=G        ].2+F
(KHL!0T,kFCf]=H  #I;,F(  KHL  q  3!N eB Otmj  BQT  %2Ou%#qFD5  Z2F-<^[F*)G
:DJ+':E+P1qH\_]  c23JDe  E-,  f 4DKC    /fX(  GdV  F(LLtH]gXB  P#RT(P%'TNO
thst4d(eHEckrV4  aW>DP!  5%O    P!5$    bI=%  ,/F  E2M8Ou%NL<  IL$AOrfcH05
kfOBl@m1P!5$bI?  IQJE-   ,f4D   KC/f1   OYEX  06C  cMFCoH/F<G  [:G][P9DKM$
nOu"b5AU&<<BmO>         5FCf]   =F(or  3OtVt  S06  CcMFEh_9Ao  hO*+EV1>FEh
_9AohO*OtVtS06C       cMFEqe:  AohO*+  EV1>F  Eqe  :AohO*OtVt  S05+p2B4uB0
BOtmjBQTCjOu$QUEas#uAWgMY%?bR;@<,jrA7^p5L^oSbOp$+b@WuO*E%Ys<Blmj'A7\)9A5$Q
PB67gI/js8nFE:r*AKXffF*&NuASH6rDe*E%D09oA+C\n)0f'qjEZd(n+Co2!BlnDL061K8F(J
p'Ec5u]5CJ\o@UX:eDe*F+OuS7OP%Kk@LcLVpP&bn&@WuO*E%Ys<Blmj'A7\)9A4($=Ea`I"AT
Eea6tLL_F(8lp+AcutF<F7gBlmj'A7Zm#F`VXI@rH7,@;0U%Df0B:+Co2!BlnDL061K8F(Jp'E
c5u]5CJ\oI?I/T@q]F`CNFW8L]ESoL]E53L^\V`Bp(ZC1G<6OARfLsF_r72BOt[hF*2=B@UX:e
De*E%Bp),F0TrDLL]W`SL]ET$H\_ffCjgYd$'K+QP#[YGOu%NL82"IdARfLsF_upA@q]F`CNFW
8L^K;[P,X6EP%p.9@UX:eDe*FB@YbMW4aUXHEas#uAV^eY94MXH@r$..D29m/!Kq;H04K->E,[
FGASH6rDe*EG@:V`=ARfLDBkM.%N\sCG@rHC.ARfg)6tLL_F(8lp+AcutF<F7gBlmj'A7ZlnBO
t[h+Co2!BlkJ:Ec6,8A7]:)061K8F(Jp'Ec5u]5CJ\oI?IQc%[*ZO3/@QD@<,jrA7^pLOuS7,@
q]F`CNFW8LbOtmP'AWh@<,jrA7^ofOu"b5AU&<W&g/;>+<W9Z+<W9Z+<W9Z+<Ve_&sB)S)3Qdt
AU&<Q!+KAW@rGmhL]E57P"_$aFCf]=L^%<sEas#uAV^MG"-Q?@H$!VBFGL95@<,jrA7^Q&L]`f
6P'M.\G]\`O@UX:eDe*F8$]"kI9Tj[CAU&<Q&Ro0h@rGmhL^f.@P"_$aDfBf4Df0WV#\7jkFC]
E#GB@kJAWh:VE-,f4DKCgHBl7EsF_#&nBOt[hAmoLsAWh9k@<-"%+C\c"@rGmh+E)4@Bl@m10/
 %$WFCfK/ARTanA28(823L1e1LY<:F,g?EG][.4>9J$!G]Y'MAU&<ADe<U&ATT&:AU&<BDe<U&
ATT&:AU&</Df0Y>FCf]=F(or3+C-*qP'CDUB60(?FCf]=G[YE&B5W_6@qBP"ATErY@<-"%NWX3
=FDl,?Bl@m1P'CDUB6,2+Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<QUBlmj'A7^o`P%6
4gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`
V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/leitcode 0.0 0
%%EndData
%%EndResource
% --END ENCODER leitcode--

% --BEGIN ENCODER databaromni--
% --REQUIRES preamble raiseerror renlinear renmatrix--
% --DESC: GS1 DataBar Omnidirectional
% --EXAM: (01)24012345678905
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databaromni 0.0 0 0 0
%%BeginData:        103 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  061WAD  ..  O,Bm>e  #06
M%_@rEuAATDg:@W  c^5Df  .1:  GA2  # 8P1  l(D  Ops  'T@<>p  e@  <-:'DJ  =HR
'Tt>:%52X=FD5Z2  F-8_M  1G<  3GE as  #u  AWf  6?1  G<9WDK  KE  0@<Wi+  @;L
!rOu"b)ASGdjFGM        )r8<  Plo 1G  <Q  YDJ  NZn         AKY         SnCi
a0N1G<?YEc#6,NW         a9;D  J  >7  iD  fBf  4Df        0WZY        :js=E
bTE(FEqh:P!+/J!  Ko='%<  $3-  B  l@m 1H ]kFA  @;L  !rP!+/T5^e  epOuSV6P,4<
rNWD;+NHB2`AWf3  'OtDh\  P')  p OOu%    N5Ot  Ccr  F_-^lI?ITY  P%BdtOuY16E
-,f4DKCt)Ou%NL<  ,Z_tBl  @m1    H]g1    5P"B  8(E  c#6,NX9fJF  `(\tFCf!G4a
ShqASGdjFGLB^8<  Plo1O   YEc0   5+p2B   4uB0  BOt  mjBQTCjOu$  QUEas#uAV^>
B"HlH="=PrY.?\O         p04K-   >E,[F  ?@<>p  e@<  -:'DJ;FGA3  ieI7n6K4+@K
X[@7"CC+AZilBk1       puARfgr  Df0!"+  Dl7BF  <G%  (B5)6+GA2/  4+=Jou.3N&<
E,95u@<?4%DBNY(ASuU(Anbgs0/%?SBldisEcQ)=P!=AX<+99V@rGmhP%'4ZP&4Z:Eas#uAWgM
Y&s@*p"FDe2GA2#8/nAC4@:EYcDf'B+6=FCuASu.&BT=l=;_]C_@<>pE@<*JdD/O&uBl[cpFD5
Z2@;I''F`VXI@V$Z:1E^UV+>G\qA8,[jFE9)gEa`['AS#n&DfV"*I?IQ=@<,jrA7^Q"@UX:eDe
*FB@Yb/MWKKr%OuS7OP%Kk@LcLVpP&bn&@WuO*E%Y[0FCAWeEc5f4BgQ6=6YKnK@:OCjEfMtH;
_]C_@<>pE@<*JdD/O&uBl[cpFD5Z2@;I''F`VXI@rH7,@;0U%Df0B:+Co2!BlnDL061K8F(Jp'
Ec5u]5CJ\oI?I/T@q]F`CNFW8L]ESoL]E53L^\V`Bp(ZC1G<6OARfLsF_r72BOt[hF*2=B@UX:
eDe*E%BnunT!Kp*30TrDLL]W`SL]ET$H\_ceCjhIGOo^_%I?I,S@q]F`CNFW8L^IX*ARfLsF_u
pAP%p/ZL^K;[Ou$QUEas#uAWgMY&s>D)@UX:eDe*F8&X#dsBOt[hF*2>U0TlI"D0mpFGA2#8/n
AC4@:EYcDf'B+6=FClBOt[h6tp:JFH/CRDI[U*Eb/a&+@f?b+@KX[@7"CC+AZilBk1puARfgrD
f0!"+Cf(r@r!2tBkM.%+E2@>G%kJuA1oTV@;0doATDg0EfrY8P#Qjm</;0MV33fo!+KAW@rGmh
P'N3ML_4-1ARfLsF_upgOo^_j04J@1@rGmhP!5$b06DG\+C\c"@rGmhP%'R\Ou%moL]LsnEas#
uAWgMY!KsF/056S5Ou%3)F<G9?>9IB`Eas#uAKY]C!Kp-4!/LW8!/LV\P'DD<82"jjEdNTDOr9
F^L]W_WP%K'(5(/SnL]N;4L]rS:P)"hoOo^C=P!45UCkr+T=GR'B=H[*>L]NZ@P#@H,L]NY>P!
4;W<.0p#H\_]c=GR'B=HZL-P!FGY</:R<=HZRF5)96&!KoWpP%Be?P')pOP')29%[&V$B4Z0_;
c@mSA9;L+HS9;KP!5$b04es_5*@]TD0M.,Ou"b/D3@)G1G<o[Cm$uF1G<ZhF<G.2OpR:-05Y-=
CPVtR1Pc$e!G-)'!g9O004J@1P!5$b04f?`!Ko5lD..L$+DkP.CPW"#@<.MAP&c^AHS9G`@;I'
(D'3D6P,X6<P,W#/+C\c"P,X6=P,W>/Efr4sAKYhuF)-R3P!+s2DJ^M-GESq:Ckr.UCm(c,@<.
/*P&-9^M#NQ0Op$+bF*:u.+EM^7C`mV4+D#b[WF]n/WFB:VOo]-1+C\c"P,X6=P,W>/Eg!Db1O
YEcAS`Ju@<.O1L]W`9HS92Y@;L`"Ou$um+D#b[WF]n/WFB:VOo^@?Oo^C=D0Ld:Oo]oID3@)GW
F^::WJCS<WF]lg@UX;?WJCY>WGZ3d05Pf?Cm$tuG%#3M!Ko6eP"76IG%#20F*:u.+Dc40C`m;*
+C\c"P,X6<P,XU\P,XU#I=#jK+D#b[WGQjB:jXj:G%#20F*:u.L]N[<Ou%NL<.0p006Uc?+Eh1
0+EM^7Cm(c\1Nm2CL]ETMH]gXBP#O)GG9CI@L]NY>Ou"b.@<63,D..L$L]LsnEfprrE0:?e1OY
Et06Uc?+Eh10+EM^7Cm"g^1G<W_+Du$=ATs<:Ou%$!F<G%$EZeq;P'DD<88iWm+D#AF!KsF"D3
B-^F``%p%[&V$@VK_'@;I&j+Dbb0CLLjeH\_]NH\_ZMP#Yt"Eas#uAV^JF%?aD3LbP!kI?I0-O
u%moL]N;?HS9)r5*@^2Bl8*&C`mGJ!KmJ>!g4Fa94DUQG%#20Bp),B!(AsAP%od[P&-9^P'CGM
DK]H)+DDs-Bl8*&C`mGT98!:63q\Y6P'DD<82#!tB4uB0@VK_'@;L`/P"UH.76:+)C6CA^Bl8*
&CkrOV!g4Fa98!:63q\Y6P'AWrAS-%?!0T,kBcqM<F_-^lL]E53L^e\aC6CcD1Lb'9G%#20C6D
5Q3/@Qt4_^&^H]iN"HS9(UAmoLsAWei&Ch74#+DbV$FGL$Ts,r.n$A].+P,W#;E0;c8Cm"g^1O
YEdI?I,SA2,3CAS-%=#!J,IOu"b%1*CCEAorb34d'QC1G<8p+ED1/BQSt54d&^+1G<8q+ED1/B
QSt54d'QC1G<iY@PKbt+BsR#TSNT(%#>%B#`&M9!252LL',5G!252UL^&Y>L]`H0L^JkAhM)-K
L^8eBL]iM;L`_EsL'jB(#N(=AL^Jq?L^&YBLdm+,(krBeL]iMBL]N;;L]N<\?'6usFCAW52)HF
[L&k)+!/Lf7$A\b>#D`M=</(M`L&k,,#D`YA"Gd5;'Smug"m^mG%#>4G#)EJ>",JXe$AJaIL'?
q"$]"qA#`&M;;2>6YOu"b*L]ESoHXniRFCAW52DcOjP"UsHHZW\*0fCj2BnueQ!JguD9RD2N8M
=U/FCgV!Ou"b%0m%>s5*@]TA2.qFAWf6?1G<8nD0Ko]5*@]TA2.Y3AWf6?1G<8nASc:J5*@]TA
2._<P!5$bP!FGY<%hr.Bo!%X!Ko6eP%?:\L]ESoHXnlSFCAW52)HFiP"UsHHZW\*0f:d1BnueQ
!JguD9RD2N8M=U0FCgV!Ou"b%13@Gt5*@]TA28"GAWf6?1G<8oD0Ko]5*@]TA27_4AWf6?1G<8
oASc:J5*@]TA27e=P!5$bP!FGY<%hr.Bo!%X!Ko6eP%?:\L]ESoHXnoTFCAW52DcOjP"UsHHZW
\*0fCj2BnueQ!JguD9RD2N8M=U1FCgV!Ou"b%1N[Pu5*@]TA2A(HAWf6?1G<8pD0Ko]5*@]TA2
@e5AWf6?1G<8pASc:J5*@]TA2@k>P!5$bP!FGY<%hr.Bo!%X!Ko6eP%?:\L]ESoHXnrUFCAW52
)HFiP"UsHHZW\*0f:d1BnueQ!JguD9RD2N8M=U2FCgV!Ou"b%1j!Z!5*@]TA2J.IAWf6?1G<8q
D0Ko]5*@]TA2Ik6AWf6?1G<8qASc:J5*@]TA2Iq?P!5$bP!FGY<%hr.Bo!%X!Ko6eP%?:W0m@O
YA2,3;0kYQjWFR`*AWfr%0kG0>+Cm3DGAi9?AmoLsAKYVsFAc%9GA1T0BQK=m04Ze]AKYM<+Cm
3>F-<M50m$uiC1K&1Ch4`"0l;,GL]hg?F_)\.ATUgK;g2qdFD,`Y1G<8oGAeU71*C*_B6068A2
87FP%nM_ASc9-A28"GDhnO<Eckq9B4Z0_;c@mSA9;L+Ou"b%13[:PA259<11tZkWFRc+Dj""/1
1b95+Cm6EG@cR5AmoLsAKYVsFAc%9GA1T0BQK=m04Zk_D]iRH+Cm9@F-<M51N[2k;IhRpCi:G,
1Mq>SL]h<uCia/1B4Z0_;c@mSA9;L+Ou"b%1O!CQA2>?=1M:clWFRf,AWge=1M(B6+Cm9FG@cR
5FE2M8+D58-;H$M<Bk2=!F-8=4A2JLK+Cm;OA2Iq?P,VtKFDm=WA2Ik6D]iRID0KoS"E\[,AKY
VsFAc%9GA1T0BQK=m04Zn`AKYM?+Cm<AF-<M51j!Z!;IhUqCh4`"1i7GJL]h<uCia/1B4Z0_;c
@mSA9;L+Ou"b%0mAEZOpR:-L]E53L]_uWBp(ZC1Lr4a+DHW5P&+Y`GAeU<P"Us_A2/9NBnuhRC
kr+T!G!p/AKY]M99OOJP"76:13\N[OpR:-L]E53L]_uWBp(ZC1Lr7bL^.XM!g7A_WFRc.D]ibW
99OO113\NYBnuhRCm(c.13[:PBp),PG^Y`G04Zk_L^9.MOu%moL]N;6HS9)r5*@^41O"W[Bnuh
RCm(c.1O!a[Bp),PG[rUSL^%RL!g7A_WFRf/AKY]M99OOJP"76:1j=`]OpR:-L]E53L]_uWBp(
ZC1Lr=d+DHW5P&+YcGAeU<P"Us_A2JKQBnuhRCkr+T!G"$2AKY]M99OOJP"76MBk2=!F!+[0A2
/:TI?I0413\(nP"B1?GC+b$8RsZ%H[V&K?'6us@q]F`CNj?(B4uC.+BsX&L]`G>L`;-OL^&YJL
c1&MLe*==L^8eWLa7cbL]iN+Lbji!L`hL"Ld?hNL_,A-La%WkLdd+SLd[%OLc\n*1G<6OARfM"
Bk2=!F!+\C",I5=!f-l5!Jgi6"c*><!Jgc4",I&8#D`D:!Jgi6!Jh&<!Jgc4!f.);"Gd)7!Jgf
5"c*A=!Jgc4!f-r7#`&M;!Jgc4"c*D>!Jgc4!Jgi6$&AV<!F:jE04S[,@r$..D281T1Pc$e!Jh
hE056S5Ou"b$BOt[hF*2=B@q]F`CNFW8+EqO1FD,_<Bp),!BOt[hG@bK$BQS;<Bp),PCm"g^1O
YEW04S[,@r$..D'3>%ARfLsF_uq1P%p.9@q]F`CNFW8L^9/9HS8lBARfLsF_r72BOt[hF*2>U!
KmJH1OYEc@q]F`CNFW8Le*\$HS8lBARfLsF_r72BOt[hF*2>U!KmJH1OYEc04S[,@r#n&+Cf(r
@r$:&A9;L++Cf(r@r$..D28L];MYL>Ckr7X9Th1b@q]F`CN=N;ATf2+BOt[hGA1T0BQG;+BOt[
hF*2>U$'K%Z"d3\X"d2QB1G<6OARfLrFGL*`$'I*#!/LZ3"FDe9P!5$b@q]F`CN=M>Bcpo!ARf
LrFE1r9L]hFTWKKo;G^Y`GAoD^,@<@M4Df'B+P!*DqEc#6,NX9fJF`(\tFCf!G4d'i406:TD+B
sX&A2/:TI?I03BOt[hCik#PP"B1>GC+b$8RsZ%H[V&K@q]F`CN=NDI?I041O"1oP"CH1L]LeE1
H[cQEb0,A061WACh[cu@<+#B@WNZ5@WO23BQG;#+EM"5P%'4JOo^@?P#?X?ASGdjFFB=)>q]Yr
F!+[0F(03R@Yb&J!Jgf?;L=3"I?K4g06DG\+EVjM06CcMFEh51BkM=D#%M4^FCfJGDfBe@DfBf
4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#QjV06D,O+BsX&L]M$@GC+b$8RlFF@r#n&H[V
&KA28@UI?I0X!Jgc4!*taD04JjA+BsX&L]M$CGC+b$8RlFF@r$+,H[V&KA2AFVI?I0X!Jgc4!*
taDL]E54L_tIlBp(ZC1N[PS+DI!3H\_ZMP(RjpE$/kN!KmJH97)HqI?K52P":BaOpR9Z06D,OP
!5$bL]E54L_tIlBp(ZC1Lb9E+DI!3H\_]NP(R4^F<G:R!KmJH97)HpI?K52P":BaOpR9Z04JjA
P!5$bAoD^,@<@M7F*(i#CLq%>4aSi'AT/brLba=5!.C#_?'7"""Gd)7/UK-bP!5$bFDl+@Bp)+
uDfd+9P"Us$HZNb;+DHW4FDl+@Bp),PWKMLSHZNb;+DHW4F(K;5BnueQWKKo;WKMLSP#Zpn82"
prG]P!3L]r-IDfCj@P')29K6(UCOogehL^/99Dfh-DP')29K3aWr05tWMGp%'?G]T$WLbb,kOu
 %NL<+^&hD..OH$ZgDu@r#XdDf'B+P!+.FF(K;F+Bot1DfC&Z!KoX0WI9q$?'7!bAT0A[!*b6Z
L]E52L]C_DH#mP90o.GdL]E52L]E52?'9Jh&r6RE*d]PSP!5$bFDl+@Bp),F!0TKlFDl+@Bnue
QWKKo1!KoTmL]MpNF(K;F+DHW4P,XU;L]ET$H\_]NH\_ZMP#Zpn<IK4M!.C#1F(K;FP!3TC5*C
/=P"76IAT0CI>DN98!/LW2!/MA:L]E53I?K5=!/LW2!/LV\Ou"b4AT0FJ>9IBnFF/fEP!5&.I?
I0-Ou%/jE&3:M>DN98!/LW2!*tb5F(K;HLb;nf!/LW2!/LV\P'MisL]N;RHS9)r5*@^2Dfd+9P
"UT2P!+/$Dfd+9L]N[<P"UT3P!+/J!I]<9AT0FJBnueQWKKo1!0TKlL]MpNL]Djd<IL$1I=$bM
I?ITOAT0Gg5&$0DP'DD<82"R2+BsX&L]N;4L]N;4L]N;4L]N;4L]E53L]N;4?'7!cEckrL!/LZ
3%""-s@W-@O5)9l8!Kp*=5%ZU65*AR%4d#qrP"9q@AT0G]'3g7mL]E52L]E52L]E52L]E52L]E
53L]E52?'9J]P#O)RBm=\A>DOGLFDl,]!g7\SP(RgeE&!LWP'(hWE&*RXP'(hWE&3XYP')R(HX
^o8OogehI?K4gOu"b1Bm=nGE+sQ<P%'5&P#@H!I?IPl4>1_dDD*Y`ASu?nFE2)?05tWMF!,F9G
]PNWBm=lY1,!T\G^1ENBm=nVBOtmjBQPA9Bm=oZ8<PkaGA1T0BS\F"8<PkaDfBe@DfBf4Df0V=
5!C*"Df0Z-Eaa0TE%`kbASu?nFE2)?P#Qjm<K]@jOq*X204\L5@:EYcDf'B+OuSV806M%_@rEu
AATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#
drB75qB~>
% uk.co.terryburton.bwipp/databaromni 0.0 0
%%EndData
%%EndResource
% --END ENCODER databaromni--

% --BEGIN ENCODER databarstacked--
% --REQUIRES preamble raiseerror renlinear renmatrix databaromni--
% --DESC: GS1 DataBar Stacked
% --EXAM: (01)24012345678905
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarstacked 0.0 0 0 0
%%BeginData:         29 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04\L5@  :E  YcDf'B  +Ou
P+;CG'+8/p(ZFEd  ;,:Ec  c5;  /n0  $ =E,  ^uo  P'E  -!04\L  5@  :EYcF*  (i#
CLq%'L_Q"0Ops'_  E-,f4  DKC  t)O u"  b#  @<,  jrA  7^ofOu  "b  %Df0Z-  Eaa
/7AmoLsAWeifE-,        f4DK  CuE 06  ;5  UBl  7R*         H#R         >X4a
VtcOu8C3DfBf4Df         0WCP  ,  i2  'C  ia0  N4a        W>WI        ?IQm3
0Ia6V33Qn!BlU*F  E2M8P!  +/T  /  Wr; \F cnqO  1OX  V5/Tc#UAWe  itP#ZpnAWe*
t3A5;iFD5Z2F-8_  M1OYEc  DfB  f 4Df0    WCOu  %NL  8Rc+K@rGmh  L]E56P"^l=-
nmA)P&5P!@WuO*E  %Y[0FC  AWe    EcZ>    2@r#  Xd6  =FCj8WH#*;  _]C_@<>pE@<
*JhFCAZpARlp#F`  VXI@V   '1dD   BO.;F   D)dF  0JP  "!@;p1%Bk(  RnBl@l3Bk1d
mFD5?$ATBFWEa`[         'AS#n   &DfV"  *I?IQ  =@<  ,jrA7^p5L_  5ee@UX:eDe*
FB@YbY[D3>$K04K       ->E,[F?  @<>pe@  <-F2@  :O(  aA3s^89P&*  SFD-[b7oM,b
6t(1G6=FmW;flGXCLq$!D09oA+C\n)0f'qjEZd(n+Co2!BlnDL061K8F(Jp'Ec5u]5CJ\o@UX:
eDe*F8"Cbe[@rGmhP%'4MP,XU<H]g@E0Tp%25);4^:m,jG04K->E,[F?@<>pe@<-F2@:O(aA3s
^86YKnK@:OCjEfM\@;_]C_@<>pE@<*JhFCAZpARlp#F`VXI@rH7,@;0U%Df0B:+Co2!BlnDL06
1K8F(Jp'Ec5u]5CJ\oI?I/T@q]F`CNFW8L]ESoL]E53L^\V`Bp(ZC1G<6OARfLsF_r72BOt[hF
*2=B@UX:eDe*E%BnunT!Kp*30TrDLL]W`SL]ET$H\_ceCjhIGOo^_%I?I,S@q]F`CNFW8L^IX*
ARfLsF_upAP%p/ZL^K;[Ou$QUEas#uAWgMY&s>D)@UX:eDe*F8&X#dsBOt[hF*2>U0TlI"D0mp
FGA2#8/nAC4@:EYcF*(i#CLq$C@:V`=ARfLDBkM.%N\X1D@rHC.ARfg)7oM,b6t(1G6=FmW;fl
GXCLq$!@q]F`CER/%B5)H1E,ol?Bk1dc0/%?SBldisEcQ)=P!=AX<.0p/L_>lIOuS6t@UX:eDe
*FBH'1.C&S#Kc@r$..D29m/!Kq[\@UX:eDe*FB5*@^?E-,f4DKCgDA8c@-A9)+&FE2M8P'CnaF
D5Z2F,gH:DfT]'FH-TIFCAZpARpsK04Am6F!+q#Eas#uAKYo1FD5Z2F"]1W@<>pe@<-:'DJ>7u
Ou$NeB60(8DfBf:E-,f4DKCtc@<-"%+CoD.FC]E#GEQnu061WAD..O,Bm>e?Ou[rR%[&V$A79R
g@UX:uFCAZpARpr`P%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5
GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/databarstacked 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarstacked--

% --BEGIN ENCODER databarstackedomni--
% --REQUIRES preamble raiseerror renlinear renmatrix databaromni--
% --DESC: GS1 DataBar Stacked Omnidirectional
% --EXAM: (01)24012345678905
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarstackedomni 0.0 0 0 0
%%BeginData:         31 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04\L5@  :E  YcDf'B  +Ou
P+;CG'+8/p(ZFEd  ;,:Ec  c5;  /n0  $ =E,  ^uo  P'E  -!04\L  5@  :EYcF*  (i#
CLq$pD/O'7L_Q"0  Ops'_  E-,  f4D KC  t)  Ou"  b#@  <,jrA7  ^o  fOu"b%  Df0
Z-Eaa/7AmoLsAWe        ifE-  ,f4 DK  Cu  E06  ;5U         Bl7         R*H#
R>X4aVtcOu8C3Df         Bf4D  f  0W  CP  ,i2  'Ci        a0N4        aW>WI
?IQm30Ia6V33Qn!  BlU*FE  2M8  P  !+/ T/ Wr;\  Fcn  qO1OXV5/Tc  #UAWeitP#Zp
nAWe*t3A5;iFD5Z  2F-8_M  1OY  E cDfB    f4Df  0WC  Ou%NL8Rc+K  @rGmhL]E56P
"^l=-nmA)P&5P!@  WuO*E%  Y[0    FCAW    eEcZ  >2@  r#XdDf'B+6  =FCj8WHS:;_
]C_@<>pE@<*JhFC  AZpAR   loZD   /O&uB   l[cp  FD5  Z2@;I''F`V  XI@V'1dDBO.
;FD)dF0JP"!@;p1         %Bk(R   nBl@l  3Bk1d  mFD  5?$ATBFWEa  `['AS#n&DfV
"*I?IQ=@<,jrA7^       p5L_5ee  @UX:eD  e*FB@  YbY  [D3>$K04K-  >E,[F?@<>pe
@<-F2@:O(aA8c=&BgQ6=9P&*SFD-[r7oM,b6t(1G6=FmW;flGXCLq$!:Mju`A8-'q@ruF'DII?
(D09oA+C\n)0f'qjEZd(n+Co2!BlnDL061K8F(Jp'Ec5u]5CJ\o@UX:eDe*F8"Cbe[@rGmhP%'
4MP,XU<H]g@E0Tp%25);4^:m,jG04K->E,[F?@<>pe@<-F2@:O(aA8c=&BgQ6=6YKnK@:OCjEf
N7P;_]C_@<>pE@<*JhFCAZpARloZD/O&uBl[cpFD5Z2@;I''F`VXI@rH7,@;0U%Df0B:+Co2!B
lnDL061K8F(Jp'Ec5u]5CJ\oI?I/T@q]F`CNFW8L]ESoL]E53L^\V`Bp(ZC1G<6OARfLsF_r72
BOt[hF*2=B@UX:eDe*E%BnunT!Kp*30TrDLL]W`SL]ET$H\_ceCjhIGOo^_%I?I,S@q]F`CNFW
8L^IX*ARfLsF_upAP%p/ZL^K;[Ou$QUEas#uAWgMY&s>D)@UX:eDe*F8&X#dsBOt[hF*2>U0Tl
I"D0mpFGA2#8/nAC4@:EYcF*(i#CLq$pD/O&S@:V`=ARfLDBkM.%N^?<T@rHC.ARfg)7oM,b6t
(1G6=FmW;flGXCLq$!:Mju`A8-'q@ruF'DII?(@q]F`CER/%B5)H1E,ol?Bk1dc0/%?SBldisE
cQ)=P!=AX<.0p/L_>lIOuS6t@UX:eDe*FBH'1.C&S#Kc@r$..D29m/!Kq[\@UX:eDe*FB5*@^?
E-,f4DKCgDA8c@-A9)+&FE2M8P'CnaFD5Z2F,gH:DfT]'FH-`MFCAZpARo^rDJ>8Y04Am6F!+q
#Eas#uAKYo1FD5Z2F"]1W@<>pe@<-:'DJ>7uOu$NeB60(8DfBf:E-,f4DKCtc@<-"%+CoD.FC]
E#GEQnu061WAD..O,Bm>e?Ou[rR%[&V$A79Rg@UX:uFCAZpARo^rDJ>7nP%64gCG'+8/p(ZFEd
;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P
#M~>
% uk.co.terryburton.bwipp/databarstackedomni 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarstackedomni--

% --BEGIN ENCODER databartruncated--
% --REQUIRES preamble raiseerror renlinear renmatrix databaromni--
% --DESC: GS1 DataBar Truncated
% --EXAM: (01)24012345678905
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databartruncated 0.0 0 0 0
%%BeginData:         29 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04\L5@  :E  YcDf'B  +Ou
P+;CG'+8/p(ZFEd  ;,:Ec  c5;  /n0  $ =E,  ^uo  P'E  -!04\L  5@  :EYcFE  2MA
@psIjA:'+HOu8C3  05kfO  Bl@  m1P !5  $b  04J  @1@  rGmhP!  5$  b04]!=  FC]
E#G9CL+Cia0N1N.        5SBl  @m1 P-  6N  [FE  2)5         B68         E<AW
f3'L]NYrOpu>KFD         5Z2F  *  j(  NA  moL  sAW        f3'P        !FGY<
0B5(@ZmRN0oc8tP  )XR(F_  -_!  H  ]ft D5 *C&O  5*@  ^MH]ft&Eck  rV1OYEdI?J0
)*g/N:DfBf4Df0W  Z5*@^M  P#Q  @ =FD5    Z2F*  j'+  I?I02@<,jr  A7^PsL]il7N
W^aa0e&9&HS8iPB  lJ#DA7  9Rg    @UX;    !Ecl  80@  <?'k6=FCj8  WH),;_]C_@<
>pE@<*JiEcl80@<  ?'k+D   l7BF   <G%(B   5)6+  GA2  /4+=Jou.3N  &<E,95u@<?4
 %DBNY(ASuU(Anb         gs0/%   ?SBld  isEcQ  )=P  !=AX<+99V@  rGmhP%'4ZP&
4Z:Eas#uAWgMY&s       @*p"FDe  2GA2#8  /nAC4  @:E  YcFE2MA@ps  IjA3s^89P&*
SFD-[d7oM,b6t(1G6=FmW<-!,!@psIjA0>`3F*&O6AKW]`+E)9C0f1"`BkM.%F"]1e@;0doATD
g0EfrY8P#Pn!Eas#uAV^Iu@<,jrA7^p5L]im?P"^4c3/B8OAs,?63Kd4%EdKHKGA2#8/nAC4@:
EYcFE2MA@psIjA3s^86YKnK@:OCjEfMbB;_]C_@<>pE@<*JiEcl80@<?'k+Dl7BF<G(3DKK<$D
BNk8Cj@.6BkM.%F"]1e@;0doATDg0EfrY8P#Qjm8M=ReARfLsF_up7Ou%moL]N;?HS9)r5*@]T
@q]F`CNFW8+Cf(r@r$..D'3:rEas#uAKY]C"HieK98G9bWG..iP%odQP!+/J"-RJKP#RSFOu%N
L82"IdARfLsF_upA@q]F`CNFW8L^K;[P,X6EP%p.9@UX:eDe*FB@YbY[4aUXHEas#uAV^q]94M
XH@r$..D29m/!Kq;H04K->E,[F?@<>pe@<-I1F`(\tFCeuL@:V`=ARfLDBkM.%N\j=F@rHC.AR
fg)7oM,b6t(1G6=FmW<-!,!@psIjA0>AqARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV"*I
?IQXP#R5MP,4=$L]CmmEas#uAWh>%3/A/VBOt[hF*2>U0TlI"GV<N7Eas#uAWf6?1N.5SBl@m1
NX006DKKE0@<Zg6F_-_\DfBf4Df0WV#%hdoD..OH$$:31DI[*sARpsK04Am6F!+q#Eas#uAKYo
1FD5Z2F"]1W@<>pe@<-:'DJ>7uOu$NeB60(8DfBf:E-,f4DKCtc@<-"%+CoD.FC]E#GEQnu061
WACh[cu@<.N1Ou[rR%[&V$A79Rg@UX;!Ecl80@<?'kOuSV806M%_@rEuAATDg:@Wc^5Df.1:GA
2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/databartruncated 0.0 0
%%EndData
%%EndResource
% --END ENCODER databartruncated--

% --BEGIN ENCODER databarlimited--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: GS1 DataBar Limited
% --EXAM: (01)15012345678907
% --EXOP:
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp databarlimited 0.0 0 0 0
%%BeginData:         74 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04\L5@  :E  YcCh[a  #FC
f!0L_Q"0Ops'_E-  ,f4DK  Ct)  Ou"  b #@<  ,jr  A7^  ofOu"b  %D  f0Z-Ea  a/7
AmoLsAWei&BOtmj  BQT%;  Le*  [eO u"  b-  Bl7  ]pB  4W2t@;  L!  rOu%#q  FD5
Z2F-<^[F*)G:DJ+        ':E+  P1q H\  _]  c23  JDe         E-,         f4DK
C/fX(GdVF(LLtH]         gXBP  #  RT  (P  %'T  NOt        hst4        d(eHE
ckrV4aW>DP!5%OP  !5$bI=  %,/  F  E2M 8O u%NL  <IL  $AOrfcH05k  fOBl@m1P!5$
bI?IQJE-,f4DKC/  f1OYEX  05+  p 2B4u    B0BO  tmj  BQTCjOu$QU  Eas#uAV^>B"
HlH="=PrY.?\Op0  4K->E,  [F?    @<>p    e@<-  0uD  /"*'A3s^85  tR)$7oM,b6t
(1G6=FmW9PJ?XFC  eu*D0   9oA+   C\npB   l5&;  Bln  #2-nmA)+CT  5.Ch[BfFD5Z
2+DG@tDKKT)Bk;<         <061K   8F(Jp  'Ec5u  ]5C  J\o@UX:eDe  *FB@YbVZD.6
po@rGmhP%'4[P&6       ?bHS8iP  BlJ#DA  79Rg@  UX:  nBl.R+ARn,  9A5$QPB67gI
.n<Mm+@KX[@7"CC+A?KdBlmos+Dl7BF<G%(+>GYpDfQsT1a$=CB5)I/0/%?SBldisEcQ)=P!=A
X<+99V@rGmhL]il6OuS7OP%Kk@LbY&hP&bn&@WuO*E%Y[0FCAWeEboH,Blmos6=FD'FCB336tp
:JFH.h@;_]C_@<>pE@<*JaBl.R+ARlp#F`VXI@V'1dDBO.;FD)dN+E)9C0eY2#@;0doATDg0Ef
rY8P#Pn!Eas#uAV^M!@<,jrA7^p5L]rs@P"^4c3/B8OAs,?63Kd4%EdKHKGA2#8/nAC4@:EYcC
h[a#FCeuL@:V`=@<,ddFCfKQ/4WVn+@KX[@7"CC+A?KdBlmos+Dl7BF<G(3DKK<$DBNk8Cj@.6
BkM.%F"]1e@;0doATDg0EfrY8P#Qjm8M=ReARfLsF_up7Ou%moL]N;?HS9)r5*@]T@q]F`CNFW
8+Cf(r@r$..D'3:rEas#uAKY]C"HieK98G9bWG..iP%odQP!+/J"-RJKP#RSFOu%NL82"IdARf
LsF_upA@q]F`CNFW8L^K;[P,X6EP%p.9@UX:eDe*FB@YbY[4aUXHEas#uAV^q]94MXH@r$..D2
9m/!Kq;H04K->E,[F?@<>pe@<-:'DJ;FGA4($A@r"JHB5)IJ1.c@nDfTl0@rrh`;_]C_@<>pE@
<*JaBl.R+ARlonBOt[h+Co2!BlkJ:Ec6,8A7]:)061K8F(Jp'Ec5u]5CJ\oI?IQc&sB)S3/@QD
@<,jrA7^pLOuS70@q]F`CNFW8LbOtmP'AWh@<,jrA7^ofOu"b#Bl8*&C`lq)@UX:eDe*F8"GdM
M9RDRLP,Wkm8R7K8Ch[d&@:s.u05P??CNa-&+BsX'L]E53L]rS8L]`G8L]rS:L]N;3L^AkA?'7
""!/LYbBl8*&Cm&7`!KsF/056S5Ou$Q]DK]H)+DDs-Bl8*&C`mGT95J<[CNa-&+DI!3Oo^_jI?
I-LP#O)VG]Y';@<,jrA7^p5OpR:-L]E53@UX:eDe*FB@Yb&JWI$:4P!5$bFEhmMBcpV&@UX:eD
e*E%BnueQ9S`\)!0.&8!*tb4I?I,SDI[^6L]W_WP,X6=Or9EpH]gR@P#R5<L]N;8L]`fqL]NY>
M#WW%H]i3$!KpQ@"-QcL@=*e2P$!lFP!4[&Oo^_0I?IQXP"9qU!KpQ@"-QcL:j\?jI?IQc!KpQ
J;Na5"!KmJH5(/T*P!5%OP!5%OI?G)'1G<BPFAc%9GA1T0BQJMRDe5(qOu"b&Cm$uF1G<ThP!5
$b05bWi5*@]TG%#3M5*@]TDfp.EASdM9Ou"b.@<64?!0T-o!/LYeCkr.UWI$:-@<.MpOu"b&GD
H9_1G<TRF))n8@<64?!FfJXOq3^rOu%G<F*:u.+Du$=ATs<:L]N[<AS`Ju@<.O1L]Wa=DI[^M1
N-hID..L$L]ET$Op#Z>+D#b[WF]n%!g7A_WFB:VL]W`UOo^C<P"Ll?HS9G`@;I'-G%#20DJ^M-
GESq:Cm(c,@<.M3AS`Ju@<.O1L]Wa=DI[^MWKK&cP#Q"/+C\c"P,X6=P#-KYCj'6'L]ESoDJ^M
-GESq:Cm(c,@<.M3L]W_?M#V=9L]NY>HZ!\`5*DmVGESq]!KsEnC`m1qEg!DX"-TX$@ra5=G%#
3M5&>CNCm"g^1OYEW06;;FC`meB@;I'&G%#20AS`Ju@<.O1L]N[<P&-;\Ou%N5DJ^M-GESqBGE
PdL06;;FC`meB@;L`#P,XU#I?IQXP#X/Y@;I'0@;I'-G%#3MWKK&\@;L`"P%K'(5^eep04f>MA
Trq2Oo^_%05Y-=CERJ&F)-R4@UX;?&!Cmp"HkQhP%?:i@;I'0@;I'-G%#3M!Ko5lDJ^M6D'3D6
P,XU#Dfp.E@UX:"ATs;^I?I->F`\a;Ckr+TWGZR9G]._HI?G)'1Pc$e!Jh,1056S5Ou$Q]DK]H
)+DHW4Oo^@?Or9EU@VK_'@;I'#P"UH.*k?odC5<4[Cm"g^G[bB)G%#20Bcpl!DK]H)+DI!3KE*
((K9B,qG^Y`G04Zg\@VK_'@;L`.P"UH.*k?odC6CA^Bl8*&CkrLU!g4Fa98!9d\V$&CP'AWj0o
,gm1G<GbFE2M8Ou%moL]N;?HS9,s5*@^2Bl8*&C`mJU99M8j!0TKZOp$,pFa\TiBcq"rCia0N1
G<8n+Cm3_",Qu?LPQ:n$u1s)AU&0W/<Xh4!Ko6eP#Zpn82#'n@PTi#+BsL!!m;C9!/M5C$&AeA
",7\NL`D'J%"ho?!!:=\L^f.LL]rS;L')4G!n`/+%n0!A!"=KfL^AkLL]`G;L`D-e2M;&G^eBC
]%n0$F%u:UL"c*;9$#bOubCfj:28k.J(;NY#$]#=L"Gd59!6^*'BS6@,G`%.S*]:om'8QmL#`&
M96H4f^KE*((JqO+FG`.@_L_GRFL^8e;L-YN>Ou"b*L]ESoHXniRFCAW62E)amP"UsHHZW\*1,
_'6BnueQ!JguD9RD2N8M=U/FCgV!Ou"b%0m%>s5*@]TA2.qFAWf6?1G<8nD0Ko]5*@]TA2.Y3A
Wf6?1G<8nASc:J5*@]TA2._<P!5$bP!FGY<%hr.Bo!%X!Ko6eP%?:\L]ESoHXnlSFCAW62E)am
P"UsHHZW\*1,_'6BnueQ!JguD9RD2N8M=U0FCgV!Ou"b%13@Gt5*@]TA28"GAWf6?1G<8oD0Ko
]5*@]TA27_4AWf6?1G<8oASc:J5*@]TA27e=P!5$bP!FGY<%hr.Bo!%X!Ko6eP%?:W0m@OYA2,
3;0kYQjWFR`*AWfr%0kG0>+Cm3DGAi9BAmoLsAKYVsFAc%9GA1T0BQK=m04Ze]AKYM<+Cm3>F-
<M50m$uiC1K&1Ch4`"0l;,GL^/$BF_)\.ATUgK;g2qdFD,`Y1G<8oGAeU71*C*_B6068A287<P
#>gGASc9-A28"GDhnX1@;L!r+D58-;H$M<Bk2=!F-8=4A28@?+Cm5MA27e=P,VtIFCgVMA27_4
AKYM=D0KQI#BY!/AKYVsFAc%9GA1T0BQK=m04Ze]L^oRSOu%moL]N;9HS9)r5*@^40m=aSL]W`
UA2/:H+DI!3P'CLlG9CUU!g7AU!KmIo0m@1OBp),PG^Y`G04Zh^L^oRSOu%moL]N;9HS9)r5*@
^413XjTL]W`UA28@I+DI!3P'CLmG9CUU!g7AU!KmIo13[:PBp),PG^Y`G06_,@FD,_<>9IH2GC
+b$8RsT#H[V&K?'6us@q]F`CNj?(B4uC.+BsX&L]`G>L`;.ILd?h/LbjiPL^o4jLa@imLdHn3L
cgIpL^&YJLc1&\Lae-(L^f.fL`D4MLe:s91G<6OARfLsAT8hsL]E53Lb!h#P":B\LbsoJLd-[r
LdHH:P":C#L]N<-H[V&JLf0%XL]N51JpVp/8;7+tL&d3h!JUT;H[V&JL&fYX!JUU-H[V&JL&g"
`!Bc/=L&jPdI?I-U!CDMA6\YV2L&k.WOu"b$BOt[hF*2>U!0T-o!/LZ3)ga5PP!5$b04S[,@r$
..D'3>%ARfLsF_r7FBk2=!F!,1[94MXH@r$:"BkM+$F!,1[99O+S!Ko6eP"769BOt[hF*2=B@q
]F`CNFW8LfomUOu"b4AT8i&BOt[hF(K>6@q]F`CNFW8P"Uro06;>OA9;L++EM+6L_Z(NL^8e=L
^%I"Cia/1B4Z0_;c@mSA9;L+Ou"b#GA1T0BQG;;AT<M@P%odYL]`G;AmoLsAKYVsFAc%9GA1T0
BQK=m04S[,@r$:&A9;L++BsX%L]E52L]E52L]E52L]E52L]E52L]E53L]LeE1Pc$e!Jgo+056S
5Ou$T]ARfM"Bk2=!F!,1Q!g7A@GA1T0BQG;1P"Us_@q]F`CNjK'FD,_<BnuhRCkr+T!Fg7eA9;
L++DI!3P'DD<82#$nF!+\C!G!p/H[V&K@q]F`CNjK'FD,`BI?I0413\(nP"CH1L]LeE1H[cQEb
0,A061WACh[cu@<+#B@WNZ5@WO23BQG;#+EM"5P%'4JOo^@?P#?X?ASGdjFFB=)>q]YrF!+[0F
(03R@Yb&J!Jgf?;L=3"I?K4g06DG\+EVjM06CcMFEh51BkM=D#%M4^FCfJGDfBe@DfBf4Df0V=
5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<9IFCAWeEboH,BlmosOuSV806M%_@rEu
AATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#
drB75qB~>
% uk.co.terryburton.bwipp/databarlimited 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarlimited--

% --BEGIN ENCODER databarexpanded--
% --REQUIRES preamble raiseerror renlinear renmatrix--
% --DESC: GS1 DataBar Expanded
% --EXAM: (01)95012345678903(3103)000123
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarexpanded 0.0 0 0 0
%%BeginData:        204 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  061WAD  ..  O,Bm>e  #06
M%_@rEuAATDg:@W  c^5Df  .1:  GA2  # 8P1  l(D  Ops  'T@<>p  e@  <,q(E+  *Wp
ARp.D'Tt>:%52X=  FD5Z2  F-8  _M1 G<  3G  Eas  #uA  Wf6?1G  <9  WDKKE0  @<W
i+@;L!rOu"b)ASG        djFG  M,s 8<  Pl  o1G  <?Y         Ec#         6,NX
03@E+*WpARpr[06         :];D  .  RU  ,F  ,9j  Z1G        <QYD        JNZnA
KYSnCia0N1N.5SB  l@m1P-  6N[  F  E2) 5B 68E<  AWf  3'L]NYrOpu  >KFD5Z2F*j(
NAmoLsAWf3'P!FG  Y<0B5(  @Zm  R N0oc    8tP)  XR(  F_-_!H]ftD  5*C&O5*@^MH
]ft&EckrV1OYEdI  ?J0)*g  /N:    DfBf    4Df0  WZ5  *@^MP#Q@=F  D5Z2F*j'+I?
I/TBOtmjBQPA1AS  GdjFH   S;?1   G<f\B   5M3t  FE8  RGAS5jkDKK  r_/<Vf1AS5j
kDKKrUs,oNl06:]         ;D.RU   ,F!,(  5Ec#6  ,NX  o]GE+*WpAR  ok(@:O(aA<K
*&L]i-QL_bE%<K]       .dP#O)G  G]7)/A  :#tDD  N[2  H1G<ZhF<G:  8P%'TNOu"b+
L]ESoBl89X!FCqKH]g@,F``d1C6CcDH'2WOOo^@>Oo[4NP!5$bP')pIL]E55P"_#iDfp/b5&,l
SP,XU.P'E-LP%'4LP,X6>P!5%&I=%,:Dfp/b5&-6EP'N4"C6ATNC6CcD1N.DXL]D1Q9ThYhP#Z
pnAUT^OOu"b"BlbD$+C1-d04AR<@;L`$Ou8CY@UX:eDe*FB30Ia,!KsF<!KoX09RDp^NW>5*H]
gXBP#RGB.?][RFcnqOFcnqK!@X+jH]gRUFcnqE",Hu@LOFN0!/L`5!Kr4dP#Y^/@;0eG!g7\h)
i+QY!KpPj04AR9P!5$b@;0mnCkr1L!Kr4LG]7)/A<M1cP%Bf!HXUW0P%'4KP!+/#Blf(1P"Uf:
0JS_R@;0e=!Kp*9">_bd1Qjna"FFQkG%#3I!\c?l98ES(!Kp-:!BH<+@;0mnClSWS0ebDH99Li
\J,b[?Op$,l">DPa0P4a0F(LM"I?IQXP#Qjm<+0K^P%'4KP!+/#Blf(1P"Uf:0JS_R@;0e=!Kp
*9">_ee16Oe`"FFQkG%#3I!\c?l98ES(!Kp-:!BH<+@;0mnClSWS1,(JH99Li\-P)AKOp$,l">
DPa0kOj1F(LM"I?IQXP#Qjm<+0K^P%'4KP!+/#Blf(1P"Uf:0JS_R@;0e=!Kp*9">_ee1Qjna"
FFQkG%#3I!\c?l98ES(!Kp-:!BH<+@;0mnClSWS1,(MI99Li\=RVD]Op$,l">DPa0kOj1F(LM"
I?IQXP#Qjm<+0K^P%'S6L]W`&P!4[(P!+tKHS8fA1GLS.+D,%uF(L(7*/FWM$mg7V$A\hJV33N
@Blf(2P"Us$P&bu68<Pb^@;.MQ0R+^P@;L!rL(&Tg!JV#>H\`#b"HoUE0O\[:L]NZ3P!+tKI?I
-a1LY!=P%'4LP!+.F@;01ZA0>u7F_)\"NWLpiNWLpkNWLpmNWLpo?$d]&Blf(3P"UsTOp$2r8W
klXHS8fA@UWdiAmoLsAWeitP#Yq)F,0gZ99''-0p4\.BeqItGT^F/1GUY/P&c]g@;01ZA<Lnp"
FFQkF-:!g"-Pfo@;0mnClSQN0p51c!/LZ=9TB-6P!*5fG%#20@;0e=!Kp*=99LiZ!!.hHP$sLV
@;0mnC`m/#F,0m\99Mr2/;+!669gWAOp$,?BeqItGT^F/F,0m\99''.0p4\_"FH.60JP::0JG1
m@;L!rP!FGY<+0Js1,*qq@;0e=!g63:!\lEm4d#qpNX%6m0ek@90kOj1F(LM"I?IQ<BeqItGT^
F/F,0m\99''.1Qjna"FH.60JP::0JP7n@;L!rP!FGY<+0Js1,*qq@;0e=!g63:!\lKo4d#qpNX
 %6m0ek@:0kOj1F(LM"I?IQ<BeqItGT^F/F,0m\99''.23L+c"FH.60JP::0eb:n@;L!rP!FGY
<+0Js1,*qq@;0e=!g63:!\lQq4d#qpNX%6m0ekC:0kOj1F(LM"I?IQ<BeqItGT^F/F,0m\99''
.2j-=e"FH.60JP::0ek@o@;L!rP!FGY<+0Js1,*qq@;0e=!g63:!\lWs4d#qpNX%6m0ekC;0kO
j1F(LM"I?IQXP#QjV@;0mnClSQN0p51c!/LZ=9TB-6P!*5fG%#20@;0e=!Kp*=99LiZ!!.hHP$
sLVHXUVE0edj!NX%6m0ek@90P4a0F(LM"I?IQ<BeqLuG^GGU0JP::0JG4n@;L!rP!FGY<.0p/I
?ITYP#Qjm<+0K^P%'4KP"L'S@;.MX13apR@;L!rL(@+:!JV+`H\`#b"HoUE0O\[:L]NZ3P!+tK
I?I-a1LY!=L]ET2NWLmhP!*5f1H@48Op$,?Bm*p$NWLmhP"UT2L]NZ4NWD/'4aW1m0JP:90Q_>
XAWf<,P#Qjm<.0p/@;0eG@Yb)K8p`4"Beqb*GT^U,Cia0B%pFbiL(@R:L^Jq@P,4<q@;0e=!Kp
*=4d'i6P":`l@;0e=!0U!8!\c?l4^i%\3AYoC"FFQkG%#3I!\c?l98ES(!Kp-:!BH<+H]A7`0e
k@:FE2M8P!FGY<.0p/I?IQ<Blf(1P"Uf:0JS_RH]A+]FE2M8P!FGY</q#60Q_>XAWf<,P%?:ZE
+WNpCi=N\5*@]TD.Rg&De,"pOu"b$Df0_Q13@Fk0RJg.0JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG17La\F_Or9&WOr9&UL^K;=P!4[%L]`f6Ot;CjL^K<AOt`%YP%'4SP!5&
.P!5%SL]W_WL^JqFP"_$&L]`G8P"_#iL]WA>P,4<qOuSV6L^K;/P,XU.P'MibOr9&iL^K;=P!4
[+L]`f6Ot;CjL^K<AOt`%YP%'4SP!5&.P!5%SL]W_WL`V?ZP"_$&L^Ak>P"_#iL]WA>P,4<qOu
SV6L^K;/P,XU.P'N3SP')29%[&V$@rH7.0f*oi1c0Q>/2/b30JG170JG170JG170JG170JG170
JG170JG170JG170JG170JG170Sh9CV32^P!g4FW!/Lc@9ThSq!/LZ=9Tgr_!f-uBV33Nq30Ia,
"Hks3WKKH.H'1.C",Qu?LPPte%$F:oDf0_Q13@Fk0Sfjp5*C2>Oq*X206D,ABl89\V33g$@Yb&
JWJCP;5)96&5'r(dP$!l2LbP!:I?I-a3/@Zms,r.n!f-o@=H[-VV33Nq30Ia,!g6ZK@Zip<WKK
H.H$thcOu$rdFD,T'NWLmgP!+.F@q90o>9I471G<B[Aft;#?'7!lP#Q:0FD,T'NWCkt4aShlA7
crmBm*p$NWLmhP"UT2L^fM@@rH7.0f*oi1c1@O04SO)+BosuA7g1E0TrD`P"ArB1G<B[Aft;#?
'6us@;0d*@;0e=!F]\`P%'4JP,XU<Ou%NL<,H2gBQ%FA">DPa0TnSG04SO)Lc:KnOu$TYAr$Fq
Bm*p$NWLmhP"UT3L^]G?@rH7.0f!ih1bb)<@q92--t-h5@;Lr,1GLR>P"UrhL_"TG@VK_CGqWZ
<Aft;#@q91uLbP!kI?I0-Ou"b(E+U4s+C1-d04AR9+BosoOu%NL<,H2gBQ%FA">DPa0p4\H04S
O)Lc:KnOu$TYAr$FqBm*p$NWLmhP"UT3L^]G?@rH7.0f!ih1bb)<@;0e=!Kp*9">_ee16OeI@;
0mnClSWS1,(JH99Li^%s2`!Bl8?G+CSu-@;Lr,1GUX?P"UrhL*mOq!Jh8.DdmEuI?IT?A7gugL
a\EMP'J]jA7crg+CeqoH\aA=WI9q$?'6usB5hH*>9I471G<0NF!+[0?'7!lP#Q:0FD,T'P%'4P
P!+.F@q92-9Tl681Ljs-L]CjtG%#3I!\c?l98EV)%$F:oDf0_Q13@Fk0Tp^;#*PgG3/@QCBlf(
2P"UT5L]NZ4P'N3M@;0mnC`m/#F,0j[99Mr(!JgoB9S`_45*C2S/;P!^DdmEu+CeqoP!4[MP!5
 %S@;0eG@Yb,L4aUUOG%#20@;0e=!g63>99M8j!/L]>9Tgr]!J$>LP!5$gL]WA6P"_#iL]N[<L
`hjsP!4[)L]W`5Ot;asOo]uXKE)"<!.C#1L_+ZH@VK^&@q9275);=a5*C1E@q90o>9IEdAp]=f
P,Wkm8R7K805#69+BosoOu"b"BlbD$+C1-dI?IQHATVU(A<$gI0ek@9P!+.F@q92-.[$Wk1Ljs
-L]CjtG%#3I!\c?l98EV)%$F:oDf0_Q13@Fk0Tp]kA7gWG@;0e=!Kp*3",Hu@9Tgr_!d&?iBl9
)Z04SO)+BosuA7g1E0TrD`P"ArB1G<B[Aft;#@;0mnC`m/#F,0j[99MqpI?I0-Ou"b"BlbD*Bl
f(3@;0eG@Yb)KWKKr<1OYEcD.Rg&De+k30JP:90p4\H04SO)Lbt9kOu$TYAr$FqBm*p$NWLmhP
"UT3L^]G?@rH7.0f!ih1bb)<@q92--t-h2L]NZ3L]`G6P"_#iL]V[:@VK_CH"1AsLalhIG%#20
@;0e=!Kp*=98ES("-Q?@/;OXTDdmEuP'J]jA7crg+CeqoH\aA=WI9q$?'6usB5hH*>9I?gG%#2
0@;0e=!Kp*=99M8t@Yb,LWJCY>5*ATdI?I0-Ou"b"BlbD*Blf(3@;0eG@Yb)KWKKr<1OYEcB5h
HkCi"$6HS9PYAr$MO$'I)mHS9PYAft;#?'7!lP#X/DBkD((ARpT5Ou8CY>DN98!Jgl*I?I-,H]
A.]0SfdnV32^Z30H7W!Jgo8s,r.n0TlI"G[Y;uBm=3"L]`G6P)#3FI?I0+L^T">L_P2aP":BFL
`_ERLa7=qP":BX?$hA7L]Wa9Ot`%Y@;0=fG\(EA",Hu@LQZn1P"@<=DIYDWs,o/kCi4B4ATDKp
M#NPn05P'5E+iZtF_t]1Bk)ttOu"b-Ble2N1cC0fOu"b/F_t]1Bk&8J4GWun!JkrHOuSI'0JJ:
aP,4<ZOuS7"M#WWnL^T"?P,4<qOuSV6L]W`'P,XU.P'N3ML]ET2Ld@1eH]g@E!/OsEG^Y`SOuS
6uP"UTsP!+/T3/@Tk?BTP]P#RT.L^9.ENX%6l0JG170SfssV32^Z3/@Zms,r.n!f.)EV33Nq30
Ia,#Eh96WKKH.H$tiHCgh.!BOPe$D.Ra%@u^[G0JG1E5*@]T@;Kmr@;^4)ATDKp+?VcB0Sfac3
I?oKLb"XfL]qm=@VK_.P"92&@kiuI0JP::0o/,O!Jjp+OuS7@P,X6AFDkW&DLI[=LanDh0ekC:
0eeD7L]N;bH]g@E&!?sL#'=cmBl8?^88N0dD.Ra%@u^XF0JI<WF)Nrn2N@qp0JP785!G,c055K
G2Dd<74?SERL]N;lH]g@E/!?lf"a"ZlBl8?^87laL0ocDk0ekC;Ld?gtLg#.g3/@TuWJCe$Ddm
EuI?I-W@>Fr?H@(f7L^0*BL^/$?@VK_.P":BPNX.?o0eb=90JJ;,NX.?o0eb=90JSA0L]N;bH]
g@C!6(*%L^8*@@VK_.P":BiL]N;rH]g@C!5"BpL^8*@@VK_.P":C9NX.?o0ekC:0enJ,NX.?o0
ekC;0JI<\F_t]1Bk*/*0JG1s@;Kmr@;^4)ATDKpNWh*j0eb:F5*@^X!/LYaBlfGHL]N[<HS9)r
5*@]T@;-imBlbD2P"Uro06Uc?+CSu-@;I&pBp),P1M:Z=P%%j6P%'RTG%#3M@ZgbT$'I9(!,$7
_P'N3MB5hIG@UWsn>EV0sI?I0-P'N3MB5hIG@UWu6@Zgb8@;I&jP!45@P"ArBGqWfLAs,?@1MI
t?BlfGHL]N[<P&4WAAncL$A0>;pL]E54P"_$HP&QQeHY7;0P%'4JOo^^POuS6tB5hIGH'1."E+
Y8BAo;*5P'AWmE+Y7sOu%NL<.0p#061W@@VKq*H]g@E%$EN3&<\T#%$GF_0Sfdn)3STYP!4;W<
0DBe3/A!+;Na"\AS5jkDKKr_C5;nR4aVtcOo^@IP&-:FP')2"P')29<K]P/WI9p>Ou"b&DI[Tq
AUBS"061KFP&5Q/5*AQeH]iN"P#Y_L5'r)>P,Wkm8R7K=P%'S<B5hHoDI\hnC6CcDGqWoq5&-5
]Ou%NL%[&V$DKTf-EbT$(F`)7C>9IQtAs-VML]DjdK89M`s':dD04A[9BOPe$D.Ra%@rc^0F!+
[0B5hIG@XEn2I?K5=!*taD05b?GFD5f72Dd=1DJXS@>9IQtAs-VML]DjdK8(`a?'7!VE+Y8BL]
N[<M#W82HS9)r5*@^7E+U5,P"Uf:0JJ:aP,4<ZOuS6tB5hH*Bp),P3+d&<0p4\HP')ReI?IQmG
\J:5E+Y8BL]N[<P%K'(3/@TJE+U5,L]NY>P"UrtAo;*5P!+/TFbj@PP#RThI?IQIF_t]1Bk*;i
P$iWSF_t]1Bk)1+DK?q7+Du==ATDKpEcl8@+DHW5Oo^_=L]W_?P'DD%DKTf-EbT$(F`)7CBnub
PG^Y`TOuQldE+iZtF_t]1Bk*;iP$iWFCiF&rDKTf-EbT$(F`)7CBcpi#E+iZtF_t]1Bk)1+DK?
q7L]NY>P"UT3Oo^_jI=#C=E+iZtF_t]1Bk)1+DK?q7L]ET_I?ITn3,*GP2Dd=T5*B<:5%/8HBO
Pe$D.Ra%A!0$=@$5Jl"FG#tG][Y@D`0F1Df0B:+DHW3P'DD%DIn'7Ble2N1cB8iCj@.;+Dtb8F
D5f72Dd=1DJXS@BnueQ!Kp*3!KmJHG^Y`TI?I,SB5hHoDI\D$r/qAL1G<Hu!0T,kC5;kQ1G<T`
A7^c+DKTf-EbT$H1OEgYB5hIG@Zim$P!FGY<-rJ#A7^c+DKTf-EbT$H4aUlcB5hIG@Yb)KWKL\
:L]Wa9OuS6tB5hH*Bp),P3+d&<0p4\HP')ReI?IQmG`k%B!G?@`+DHW4Oo^_=OuR&k@kj-0H]i
N-?@@u9P'E-LDKTf-EbT$H5*B<#DKTf-EbT#+ASu!rA7[E.+DHW5Oo^_%P!FGY<0DB?@;Kmr@;
^4)ATDKp+Du==ATDKp+D#G#De*E4D/WrrNXT?4E+iZtF_t]1Bk*;^P!FGBB5hH*Bp),P3/B8OA
s,?63Kd4%EdMV2CiF&rDKTf-EbT#+DKTf-EbT#+ASu!rA7[E2De*F>$t3skBOPe$D.Ra%A!/X2
5^eep061W@L^](?Oo]E2FD,T'P%'RTG&1cR@Zgb%A7h!6Oo]<\!HMag@VKq*Ou%,iD28=X8oeK
[L^'#NOp$,l"u%_b0JG2:#*PgG)2J95ASmT(OuR)nAftfN98G6aWJCV3"HoUE0TnDY@Yb/M5*D
n.5*C1EEaa/7ASu!rA7[E.+DHW4Oo^_%P!FGBL]Wa9OuS6tB5hH*Bp),PG`k%B!Jk'FG]%Y@AT
DKp+D#G#De*E4Bcq,G!KmJH1Qk"OP#Zpn<IL$0D/WrrNXT?4E+iZtF_t]1Bk*;hHY7;0+DI!3A
o;*5P!+/(DIYCD@;Kmr@;^4)ATDKp+D#G#De*E4D/WrrNX'HED.Ra%A!/W$Bcq,G!KmJH1Qk"O
P#Q(5AftfN99M8KF)Nrn2Ng7e@$3]^CiF&rDKTf-EbT$H5*B<:E0:?NCh[s/2Dd<7@;Kmr@;^4
)ATDKp+D#G#De*E4D/WrrNWs3=D`0F1Ou&7dI?IQIF_t]1Bk)1+DK?q7P"UT8P"L(;DKTf-EbT
#+@;Kmr@;^4)ATDKp+D#G#De*E4D/WrrNX'HED.Ra%A!/X25^eepDKTf-EbT$(F`)7CBp),P3/
@^#8s2APOo]37As-Vd4d#qpCi4B4ATDKp+CT)*BOPe$D.Ra%@j#?#@rGmh05YW<AW@"5F_t]1B
k*;^P!FGY<+g/^+DI!3@;Kmr@;^4)ATDKp+D#G#De*E4Bcq,G!KmJH1Qk"OP#Q::A7^c*Ble2N
1cCL[HY7;0+DI!3Ao;*5P!+/(DIYCDBle2N1c?IfDI[TqAM7n=A7^c+DKTf-EbT$H1G<GbBnue
Q!Ko7%5^eepDKTf-EbT$(F`)7CBp),F"HlApAU&<2F)Nrn2K*JLGp$ga98Eq<8s0=(Ci4B4ATD
Kp+DGn82Dd<7ASu!rA7[E2De*F>#B"[$ATDKpOu&7dI?IQ<CiF&rDKTf-EbT$(F`)7CBp),F"d
2JqAU&<2F)Nrn2K*JLGp$ga98Eq<8s0=(Cgh.!BOPe$D.Ra%@j#K,D`0F1+D#G#De*E4D/WrrN
XT?4E+iZtF_t]1Bk*;^P!FGY<+g/^+DI!3Ble2N1c?IfDI[TqAM7a?BnueQ!Ko7%5^eepI?J/i
P%?:ZE+U5*E+W[!@u(,"P"_#pL]N;?Oo]E2FD,T'P%'RTG&1cR@Zgb%A7h!6Oo]37As-Vd!KoE
_ASkmjFE<U)OpNd\@:YNbOu%8tAs-VZ!0V2GOo^@IP#@H&L]W`SG&1cR5)93%5*C/H%[(7IL]D
jML]Mpe<H`1jP!4[&P!5%RI=%-"P')29<H)AWP%'4IP#-L]!/Let@:YO1L]N[<HS9)r5*@^@@:
UKp+BsX%L]E53L]E52?&/K"@:YO1Bp,HO"c*5C)3RgCP!4;W<0DBe9Tj[LP"9G.A7^c+DKTf-E
bT$H4aSi$@:UKbL]E52L]E52E+*:?!g7\3L]DC&A<LDb9Th2[P#Qjm<%h]pDK]H)+Bot)Bl7]p
B4ZFG!I]<N!.C#1D.Rg&De+3N0TrD`P"Bh5As*4YF^nroOogehB5hIG!g7\F@:YN&P'(&n1G<9
IFCAusDBND&DK]H)P%'4UP#@H!05b9?H\_`d)3UtT!g4FaAp]\)I?IQc!Jgc4"c*8DLPPto!Jp
c=5'rH/L]NZ@L]`fBP$r]n!KpQJ;Na5"!KmJH5(/SnI?I-JL]NZ@L]`fBP#-Lg5^eepL]NZ@P#
@H,L]NY>P!4;WAWf6?FcnqOFa]D_Ou"b(ATUgK;g2qdFD,`B05kEb5*@]TASdMnOu"b.GEP.Q1
G<W_P!5$b06Uc?P!5$b05kuT+D#AP$'I(tD..L$L]ESoL]E53ASd/(P,Wd]@UX;?5*@]TATrq2
Ou"b.@<63,D..L$L]LsnEfprrEfr5*06;;FC`mV4+D#b[WJCS<WF]lg@UX;?WJCV=WGZ3dOu%#
f+DkP.CPVtR4d#qcD'3D6P,W#/L]W`UP,Vo!Eejd[Cm"gTrfTm:"FDeCG%#20F*:u.+Du$=ATs
<:ASdO/@UX;?!G-'i@UX;?WJCV=WGZ3dP,XU#I?IQ@C`m1qEg!DX!g6B,05Pf?Ckr(S1N%%PAT
s<:ASdO/@UX;?!Jgf?!JpbmGDH9_!IJ^$P!5&.ATs<:L]N[<AS`Ju@<.O1L]`g>DI[]?Cj'6'P
!3]*@;M)-Ou%NL82#%-@;I'-G%#20Cj'6'+D#@3@UX;?WJCS<WKM(\WKK&cHZ![CATs<:D0M.>
HS9G`@;I'-G%#3C!KsFF1OYEcI?IS`G%#20G%#20F*:u.P,XU#G%#3C!0Ur@P!FGY<%hg,+D#b
Q!KmJH1G<TRF))n8@<64?!FfJXOq3^pOp$q(I?J.pG%#20G%#20F*:u.Oo^_%05bVLDJ^M-GES
qg1N.DX+C\c"+D#b[G^Y`GDfp.EASd/'P,W>9P'CnfFFB;^Ou"b5@:CrM1a$"W!F(?[L^](CL^
/_;Lf]B8L';@I!F1EfL^/_>L]iMjL_PROK8'PGL^8eCL]iM;L`V@/L(BK&$\X<?L^T"@L^&YBL
hMMS?\T)UL]iMCL]N;;L]N51b[$Af04]<O+Cno&@;KLmOpR:-L]E53A79RgCh7L?!KsF/06iXD
Ou"b%+C]&&G%#20G_cckCkrL_9Th1bA;C5A!/LZ3$[XOAP!5$bL]WA?C6GQ-G]8fsA0>WM99O+
S!I^,%Ou"b+L]ESoHXn7@@:CrM1a$Or99N_1FCAW52`)XlL]NY>L^0):H[V&K04]09P!5$b04]
0CP!5$b04\pDAWf6?1G<9UGAiX.Ou"b%ASbq@5*@]TA7]RqP!5$b04\^:P!5$bP!FGY<%hu/C5
<.Y!Ko6eP%?:WGAeU7+Co,+P,Vu6AWfr%ASc9-A8QO/L]hg?F_)\.ATUgK;g2qdFD,`Y1G<9_A
KYM+A7otHWFU*^P%nN=Ch4`"D0KQI"D2(YF(HJ,ATUgK;g2qdFD,`Y1G<9_L^9.MOu%?=!g7;S
!0TKlL]E53L]_uWC6CcD1Lt]c#AT%rP&-;\A9Vr7C6D5QG[u#S#&8qqP&-;\A9VT-C6D5QG^Y`
GI=$bML]N;6HS9,s5*@^4G9CXV!g7A1GAeU=P"Us_A9T/2L]W`UL]NY>A9VT-C6D5QG^Y`GI?I
T@G]t9T+Co\ZG^Y`G04np9A7]e*Bk2=!F!+\C!Jh#;"Gd)7!Jgc4!Jgl7#`&M;",I/;"Gd)7!J
gc4!Jgl7#)EA;",I)9#)E;9!Jgc4!Jgr9"Gd/9",I#7#`&M;!Jgc4!Jh#;!f-r7!f.&:"c*28!
Jgc4!Jgo8#)E>:!f-o6$&AV<!Jgc4!Jh&<!f-n`Ou"b'Bl7HmEcYf3+BosmL]E53>p*@-!/L`5
!aQpQL]E57L]WA;>p*@-!/Lr;!f.);"C3-SL]E5;L]WA;L^&YC>p*@-!/Lr;!f.);#`&kE$=+c
YL]E53L]WA7L]iM;L^&Y?>p*@-!/LZ3!f-r7"Gd5;#)ESA#[JQWL]E53L]WA7L]iM;L^&YAL^J
qG>p*@-!/LZ3!f-r7"Gd;=#)ESA#`&kE$=+c[Ou"b4AT8i)Bl7HmEcYf3+Cno&@;KLmL]Wa=L]
W`;P"Uro04oHQ+E      M+6P%  'R\Ou  %moL]  MR  .EK      Xde!Ks      F/06iXD
Ou$]pG9D,QAnc-n        ATE  !/A9;  L++EM  +6  +F'         &BL         ]rrX
L]rr8P'DD<82"Id  ARfM"  AS  GdjFE   8R/M  #W  ;2M  #W;2M  #W;  2M#W;  2LeW
\5L`hLNL`;-VL]`  G6L_P  Y-L  &eT    :G(p  !X  L^/  _NLd-U  oc  %Z5GL&  d0g
FbhE$%>FkFL&eoA  !5XBi  SVT  "T!  0 `3P  LcL  1iX  ,'u7!/  -.  ZLfK00  WJ1
DlL&d$a!4mtML&e  c=!/6  .-]  S6E HL  ]i  MBL  a7d  mLbacf  L`  M:JLgc  #<X
bHh+LiJ.LQA?N:<        /;uZ  H\M Nl  Lb  shd  S;%         $@L         &f/H
!7$<!MhV5DL&fDO         !/cR  b  Le  NU  :Lb  jbc        R></        FDhr^
o!1S]CP)+=<DMW(  aC5)_m  L&c  d  \.u 4a m0ST  RhL  ^JqZLg#TrL  &eK5!2PF!Li
A(KZA&A#L&d'dFG  Odi7YU  okL  & fST!    6U#r  \:t  !8L&eQ9F+s  \/L&fGR7#5-
)+,0c^L&euC!/?4  .P_^*2  6A>    K[L&    e<2?  AM+  -!f/7Z!1JW  B^kb71!2>9-
L_>LJLj4XSQ&$<6  98F(6   .YrP   .!2kP   OYD*  %tL  &fPU7>Mb9:  5BgE:P`Y>@Y
ds=-AZ\s!/$"+[Y         T<c!2   #')Lf  fB3We  c.Z  !4RbIL&dp'  2hh=/Le3C.L
_tq=L]rSFLfoOEL       &eB43ed  X-L&f)  F!/H@  ^?'  6us@q]F`CN  j?(B4uC.AT8
hs+EM+6H\`5rCh%-i@r$:"BkM+$F-8_C&<]_M!g7\SP"ArB30Ia,#a20C#a.B79Th1bGA1T0BQ
G;#+Co_@H[C1(8UZan?'6us@q]F`CNFW8L]ESoL]E53GA1T0BQK>GL]N[<HS9)r5*@]T@q]F`C
NFW8+Cf(r@r$..D'4%:A9;L++DI!3@q]F`CNj?(B4uC.AT8i,P"UsSOo^_%I?I,S@q]F`CNFW8
+Cf(r@r$..D2&&>P%nN9FCAusDMSCXWJ1E%P&-9^Ou"b*L]ESoHXg`#@r$..D'3q/@PKeu+DI!
3P$r]Z@:CrM1a$Lg!KmJ>#Ehc-I?I/T@ru:F5*@]T@ruXP5*@]T@r6F$P!5$b04SjCDj!;I1G<
6LCh8bnOu"b$ASc:J5*@]T@qTkG5*@^b5^eep052PCL^9.EOu%NLAM7P;D]iP'ARfLsF_r72B6
068@ru:F;Ia9SD]iP,GAi9?FE2M8+D58-;H$M<Bk2=!F-8=4@s;K,@q]F`CNFW8+Cf&*P,Vr5A
Wge<ASbp#@r6F$L]h<uCia/1B4Z0_;c@mSA9;L+Ou"b$GDHNf$'I*#!/LZ3"+)\8P!5$b@s9&0
L]W`U@s;i6Bp),PG[kq?BnuhRCkr+T!Fp=b+DI!3P'DD<8;J%E$'I923/@QEGER3,!G$G!P'Mi
`A79RgCh7L?!KmJH9J9q$GEP.Q1G<9IFCAusDBNJ7GEQEu1G<ceGB4m;@<>poASrW3AS5jkDKK
r_2NeW7/<U=&1G<WgD/sQ=F!,LAGB8pVOu%moL]MC9D/sQ=F,0j[WI$:=P!5$bD..I#+EM+,D.
RU,F,0s^C5;kQD/tF6P%odRP!+s2H\_ZMP#R5<L]N;3L]MR.B5M3tFE<6=P,Wd]E,Tf\5&qceA
S5jkDKKr_Cm"g^1N78R+Cno&@;KLmP%K&OG]t9LDf_(7H[V&KE,TfR!g7;S!0TKlApAMBE,TfR
!g6HE97))M8UZb$I?IQXP":B0L]NYXOpR9ZEc6/CP!3oL5*C/RFa]EDAoD^,@<@M?AU&0&DId<
hF*(i#CLq%>D0mpW@WNZ4Dg-8Y!0U!<30Ia,!KsF<!KoX09Th1bF(025>DN<9!/LYd@<>poAT!
;)P,Wd]Bp(ZC1Lt`S+DI!3H[V&KBnuhRC5;kQ4aUdcG9CUU!g6HE97))M8UZb$I?I-W!Jgb^Ou
#3_061WA0/%?WDJX$)ARTU4F(025F(02D@VBg*>9IurF-:!g!KmJ>!g6H.BOtmjBQSZcK3^->@
WNYr+EM"5P%'4JOo^@?P#?X_!.C#_>q^,8F<GL@FD5Z2F!*Y1+CoD.FC]E#GEQnu061WACh[cu
@<.N1I=!VgAT2]5DKTf:Dg-8c$'I*#!/LYnF_u/;GB8Q@P,Wd]EfrVL1G<ceG9CpEGB4mIP"Ur
oD..I#L]E54Ec6/b@Yb&JWI$:4P!5$bEc6.EBp),9L]DjdK4uHKDg.@RL]N[<P%K&]Dg*=<L]N
Y>P"U.X!I^,`I?IQXP":`TOpR9Z061uTP!5$bP'&F!AT/br+EDCEH\_]c5*DmnP"ArB1NR,HL]
CY8!/LW2!/LV\P'M+[E$01>GEQEk"Ho`gL]E52L]E52?'9IdAnc-nATDa.F!+\C'8U+<Dg.@RL
^fNHH[V&JLd[&.Ec6/b@YbJVWI'&V86qB7Anc-nATDa.F*j'0L^oRKL]NZ&HS9)r5*@^BDg*=<
P"UT2P!+/4Dg*=<L]N[<P"UT3P!+/J!I]<9AT/c+L]N[<P"UT2P!+/J!I]<N!.C#1I?ITYH\_Z
MP#ZR7E0<D!P!5%RI?I-LP"B_+B5M3tFE<6@P%odQP!*iA!g7;S!KoU/"FG0-GB4mIP"UsIEc6
/CL]ET2P%'SkAnc-nATDa.F-:!g!g7;S!KoU/"FDeBDg*=.L]DI6GEN#jF^:.d06:]D+BsX%F(
K<R!g7\3Ou%N5Ec6/b@Yb&JWJLS1!./a)GEP.Q97;soEc6/b$^,XRAT3fAL]N[<M#W82HZNb;P
!5%%I?I-BAT3e?P')29<IL$0Ec6/C+EATFDg.@hF(K<3+EATGAT3fWI?I,SE+sQA+EDCEF,0gZ
99NbI1Ktu@Bm=lLL]DjdK3aX"L]DI6GB4mEF_u/;GB8Q@P,XU;P'M(dGB8p2DKTf:Dg-8Y!KsF
F5*C.p+E2%>G^G5HI?K4gOuS6tF(K<3+Du==Ec6/CL]N[<P"Us`F(K<3P!3c+D/sQ=F,0j[WKK
H.GV=,LE$/@-E+sQAL]W`;L]NY>H\_ZX!I^,`?&/K"Bm=lc9Th2QAT3G*>DN98!/LW2!*tb5F(
K;5E+sQAL]im?>DN98!/LW2!*tb505tWMF!+\C!/LYnF_u/;GB8Q@P,Wd]EfrVL1NJ9OP&5PeA
T2]5Efs(Y!g7\SP#R5]HZF%KF!,Ld99K@>Fa]F*EZf7BD/sQ=F,0j[WKM+FF(K<3+EEW<Oogeh
F(K<R!g7\SP#Qjm86qB74?P9;ASs.SEb0-*@<?O(GV=#MG]P!HBm=\PE+sQA+E2%>GV=#MG^1E
NBm=]^@W6%+G`krXBOtmjBQPA9Bm=]^@W6%+G`ks\8<PkaGA1T0BHV8.G^,$8Ou=t3E-*4@E-,
f4DK?pa4s4BSDKKE0@<[lR0/%?WDJ`g(EbTc]<.0p0Ou[rR%[&V$A79Rg@UX:gG]7)/A7];730
If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP
'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/databarexpanded 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarexpanded--

% --BEGIN ENCODER databarexpandedstacked--
% --REQUIRES preamble raiseerror renlinear renmatrix databarexpanded--
% --DESC: GS1 DataBar Expanded Stacked
% --EXAM: (01)95012345678903(3103)000123
% --EXOP: segments=4
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarexpandedstacked 0.0 0 0 0
%%BeginData:         18 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04\L5@  :E  YcAU&0  &DI
d<hOuP+;CG'+8/p  (ZFEd  ;,:  Ecc  5 ;/n  0$=  E,^  uoP'E-  !0  4\L5@:  EYc
AU&0&DId<hF*(i#  CLq%'  L_Q  "0O ps  '_  E-,  f4D  KCt)Ou  "b  #@<,jr  A7^
ofOu"b%Df0Z-Eaa        /7Am  oLs AW  ei  fE-  ,f4         DKC         uE06
;5UBl7R*H#R>X4a         VtcO  u  8C  3D  fBf  4Df        0WCP        ,i2'C
ia0N4aW>WI?IQm3  0Ia6V3  3Qn  !  BlU *F E2M8  P!+  /T/Wr;\Fcn  qO1OXV5/Tc#
UAWeitP#ZpnAWe*  t3A5;i  FD5  Z 2F-8    _M1O  YEc  DfBf4Df0WC  Ou%NL8T/QiB
l@m1NX006DKKE0@  <Zg6F_  -_\    DfBf    4Df0  WV#  %hdoD..OH%  qU!)@;]UeA9
2j$@r#XdP'AWgEb  BG9@U   X:eD   e*E%D   fBf4  Df0  VL04\L5@:E  YcAU&0&DId<
hP!>*c@<-"%NWX3         =FDl,   ?Bl@m  1P'CD  UB6  ,2+Df0Z-Ea  a0TE%`kbASu
?nFE2)?P#RT)I?G       )'1G<9I  FCAWeE  b0K7@  ;]U  eA92j$@r#X  dOuSV806M%_
@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm
"@r#drB75qB~>
% uk.co.terryburton.bwipp/databarexpandedstacked 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarexpandedstacked--

% --BEGIN ENCODER pharmacode--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Pharmaceutical Binary Code
% --EXAM: 117480
% --EXOP: showborder
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp pharmacode 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05tT5E  c#  5pDe*F  +L_
Q"0Ops'_E-,f4DK  Ct)Ou  "b#  @<,  j rA7  ^of  Ou"  b%Df0Z  -E  aa/7Am  oLs
AWei&BOtmjBQT%9  MEj%<  Ulo  PM8 <P  lo  1G<  WiB  k2=!ME  _(  @!/a$!  E28
Y5Ou"b8GA1T0BSo        $i!!  %mA 2/  o@  SCm  $S-         F*D         >/FD
-OrJ,fS,5W*MVP&         -:;D  f  Bf  4D  f0W  ZY:        js=E        bTE(F
Eqh:P!+/J!Ko='%  <$3-Bl  @m1  H  ]kF A@ ;L!r  P!+  /T5^eepOuS  V6P,4<rNWD;
+NHB2`AWf3'OtDh  \P')pO  Ou%  N 5OtC    crF_  -^l  I?ITYP%Bdt  OuY16E-,f4D
KCt)Ou%NL<,Z_tB  l@m1H]  g15    P"@<    ?ASG  djF  <G7.BkM+$O  tVtS05buJA9
;K-DKff*FD-gjOu  "b8GA   1T0B   HVMCB   k2=!  OtV  tS06;>OA9;  K-F*D>/FD-g
jOu$QUEas#uAWgM         Y!Kq&   (@<,j  rA7^p  5L^  '#=P&bn&@W  uO*E%Z*C@<-
3n@rGmh6=FCuASu       .&BT=33  BOPpu@  :O4dA  KYi  4F*&O6AKW]  MFDi9[+Co2!
BlnDL061K8F(Jp'Ec5u]5CJ\o@UX:eDe*F+OuS7OP%Kk@LcLVpP&bn&@WuO*E%Z*C@<-3n@rGm
h6=FClBOPpi@ru:&N[%A6@<-3n@rGmh+Dl7BF<G(3DKK<$DBNk8Cj@.6BkM.%F"]1e@;0doATD
g0EfrY8P#Qjm8Rc+K@rGmhOt;bUL]`fPP!4O!!WW.^:m,jG04K->E,[FKBOPpu@:O4dAO9g9<a
ffeAWA?=BOPpu@:O4dAKZ/)Cis;3D09oA+C\n)@V'Y*AS#a%1E^+DA0<T_0ebO?0/%?SBldisE
cQ)=P!=AX<%i?<F<G%$Eas#uAWgMc$'I*#!/LYb@<,jrA7^p5L]N[<HS9)r5*@^DG]Y'B+Bost
@<,jrA7ZltL]NZ4L]E52NW=k8?'9G\P"768@<,jrA7Zlm@<,jrA7^oTL]NY>L]WAEP,4<qOu"b
#@<,jrA7Zlm@<,jrA7^Pt@UX:eDe*FB@Yb&JWKKr<1G<3GEbo<)+C\c"@rGmhP%'S106:TD+C\
c"Ch7L?!g7A_$'I*#!/LYb@<-0qDMS=VWI$:4P!5$b04f$2+C\c"@rGmh+DHW4P"_#pASu"<!A
K["HZNY;+DHW5P&,#[Bk2=!P'DD%F(025BnuhRCj1);A9;LJG^Y`TF(025BnuhRCkr+T!HWI!A
9;LJG^Y`G4?P9;ASs.SEb0-)Bl7KjE\DKCF!,O5F"_!9F!+[0F(03R@Yb&J!Jgf?;L<(gBkM+$
I?K4g04JC3+Bot0@WR]AL]NY>L]W`;H\_ZMP(R$nFEhmMFEhm\FCf]=G[YE&B5W_6@qBP"ATBG
BE-*4@E-,f4DK?pa4s4BSDKKE0@<[lR0/%?WDJX$)ARTVB<0B7iOq*X205tT5Ec#5pDe*FB30I
f*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'
(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/pharmacode 0.0 0
%%EndData
%%EndResource
% --END ENCODER pharmacode--

% --BEGIN ENCODER pharmacode2--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Two-track Pharmacode
% --EXAM: 117480
% --EXOP: includetext showborder
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp pharmacode2 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05tT5E  c#  5pDe*E  7H\
`B!23JD%DfBf4Df  0WZ5*  @]T  @UX  : eDe  *FB  5*@  ]TA8c@  -A  9)+&+D  ,%u
F(LLj055<6Cis9"  FCf]=  +D,  %uF (L  Lj  05+  p2B  4uCC"H  kQ  ZE-,f4  DKC
uE06;5UBl7R*H#R        >X4a  Vtc Ou  8C  3Df  Bf4         Df0         WCP,
i2'Cia0N4aW>WI?         IQm3  0  Ia  6V  33Q  n!B        lU*F        E2M8P
!+/T/Wr;\FcnqO1  OXV5/T  c#U  A  Wei tP #Zpn  AWe  *t3A5;iFD5  Z2F-8_M1OYE
cDfBf4Df0WCOu%N  L8M=ag  BkM  + $+D>    >#B4  uCM  09S,#@<,jr  A7^p5L]NZN@
UX:eDe*FB@Yb;Q:  m,jG04  K->    E,[F    KBOP  pu@  :O4dAMQS\A  5$QPB67gI.T
CV1/Tc#A@r!2`BO  Ppu@:   O4dA   KYi4F   *&O6  AKW  ]MFDi9[+Co  2!BlnDL061K
8F(Jp'Ec5u]5CJ\         o@UX:   eDe*F  +OuS7  OP%  Kk@LcLVpP&  bn&@WuO*E%Z
*C@<-3n@rGmh11F       [&6YKnK  @:OCjE  fM_NG  Af'  TEa`Hn+Ac`  [Ec#5pDe*E%
D09oA+Cf>-FCAm$+E).6Gp$X3B5)I/0/%?SBldisEcQ)=P!=AX<.0p$@UX:eDe*FB/<VuK"HmA
[5(j$k6K"#'P&bn&@WuO*E%Z*C@<-3n@rGmh11F[&<affeAWAcMGAf'TEa`Hn+Ac`[Ec#5pDe*
E%G%#30AKYi4F*&O6AKYGnFE_;-DBLbY@;]Tu2Dd9M0JGI?0/%?SBldisEcQ)=P!=AX<%i?<F<
G%$Eas#uAWgMc$'I*#!/LYb@<,jrA7^p5L]N[<HS9)r5*@^DG]Y'B+Bost@<,jrA7ZltL]NZ4L
]E52NW=k8?'9G\P"76;DI[a0Eek9iV33Vf@VBh=&<[?_1G<3HF,1Bj$'I(tF(03H+Hd%o1G<3G
EejaR6-D&?Ou?ubBkM+$P&-:;06;)BL]NB!b;1r;2ManeCm$S-Bo!:_1G<o[C`m1qEas#uAWeU
-1OF:RCkr(S4aW>WI?IQQ@;L`%P%p.>>DNB;!Jge_P!5%%G%#3M5*Dn$"-QP8G%#3M5*@^5DI[
a0EZf'=>DN?:!/LY]L]iP6P)#2nP'AWo+DHW4P,XU#I?J.pASu"!FE/L8DI[a0EZf(P!KmJ>%r
 %3+P"_#pL]E53ASu"!FE3ORL]N[<HS9)r5*@^5DI[a0EZf(Z99M8DBQG;1+C\c"+BsX&L]N;5
?&/Z?s,r/#99O+SG[b-'+DDs&L]CmmEej^$L]iP6P)#2nP'DD<83B!fEb0,A061WACh[cu@<+#
1BQG;*BQGh9@WNZ$@WO2D@WNYr+D#G#F*)Gc@Yb)KCjU5B@ssMm>q^;EF<G[MF>%`IG]\1=Ch[
O"NWs!)DKKH106CcMFEqe:AohO*L]fALE-*4@E-,f4DK?pa4s4BSDKKE0@<[lR0/%?WDJX$)AR
TVB<0B7iOq*X205tT5Ec#5pDe*E7OuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&A
TMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/pharmacode2 0.0 0
%%EndData
%%EndResource
% --END ENCODER pharmacode2--

% --BEGIN ENCODER code2of5--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Code 25
% --EXAM: 01234567
% --EXOP: version=iata includetext includecheck includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code2of5 0.0 0 0 0
%%BeginData:         52 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  MS  1921(,  nOu
8C305kfOBl@m1P!  5$b04  J@1  @rG  m hP!  5$b  04]  !=FC]E  #G  9CL+Ci  a0N
1G<H[@r-9uARfCb  @r!3!  @;L  !rO u"  b7  @;K  Xg@  <?'jBO  t[  h+D,%u  F(L
Lj055<6Cis9"FCf        ]=+D  ,%u F(  LL  j05  5<6         Cis         9"@q
]F`CM@[.AU&;>Am         oLsA  W  ei  &F  Cf]  =Ao        DR/O        iNV@0
6CcMFE;/BAV^\V1  G<i]G]  \4L  A  nH* qF GTaU  1G<  EQBkM+$L]N  Yp06UoIF(oQ
1NXBK<A9Ds8EbSr  uOu%#q  FD5  Z 2F-<    ^[F*  )G:  DJ+':E+P1q  H\_]c23JDeE
-,f4DKC/fX(GdVF  (LLtH]  gXB    P#RT    (P%'  TNO  thst4d(eHE  ckrV4aW>DP!
5%OP!5$bI=%,/FE  2M8Ou   %NL<   IL$AO   rfcH  05k  fOBl@m1P!5  $bI?IQJE-,f
4DKC/f1OYEX06Cc         MFCoH   /F<G[  :G][P  9DK  M$nOu"b5AU  &<<BmO>5FCf
]=F(or3OtVtS06C       cMFEqe:  AohO*+  EV1>F  Eqe  :AohO*OtVt  S05+p2B4uB0
BOtmjBQTCjOu$QUEas#uAUBS"LbP!(P!4[^P#.<^HS8iPBlJ#D@rGmh12gb^@UWe7BOPpi@ru:
&NZ^]-A7Zl=2'?aYF*&O7Df0Z*Bl5&3DJXS@A8,[jFE9)gEa`['AS#n&DfV"*I?IQXP"@<9@<-
0qDBNCsEas#uAWgMG@;KXg@<?'jBOt[hH\_]cWI9q/Ou"b$BOt[hF*2>U!0T-o!/LYb@<-0qDM
S=VWI$:4P!5$b04S[,@r$..D'3>%ARfLsF_r71@<,jrA7ZltP"UTbP,Vo!Ebo<)+DI"<L]W`SL
]ETTH\_ceCjhIGOo^_%I?I,S@q]F`CNFW8L^IX*ARfLsF_upAP%p/ZL^K;[Ou%8iCh[EgFCerq
ARfM&+C\c"@rGmh+C\c"Ch7LI94MXH@r$..D29m/!Kq;H04K->E,[F>De*E7De:k9@:V`=ARfL
DBkM.%N[@>8@rHC.ARfg)6Z6LH+>Pes@q]F`CER/%B5)H1E,ol?Bk1dc0/%?SBldisEcQ)=P!=
AX<%h]hEas#uAKYGjEas#uAV^=q@<-0qDN[\V1G<H[@r-9uARfCb@r!3/EckrV1OYEc06UoIF(
oQ1F!*S-055<7F`VYFBjkg#>E0%F0ekC=0f(O=0ocSs0ekC;0ekC=0ocSq0f(O=0ekC=0ocSs0
f(O=0ekC;0ocSq0ekC=0ekC=0ocSs0ekC=0ekC;0ocSq0f(O?0ekC;0ocSq0ekC;0f(O?0ocSs
0ekC;0f(O=0ocSq0f(O=0f(O=0ocGo0f(O=0ocDn0ekC=>q]o#FC?:rNX@Kq0ekI=1GLU=NX@Q
s0ekC;0ekI=NX@Kq1GLU=0ekI=NX@Qs1GLU=0ekC;NX@Kq0ekI=0ekI=NX@Qs0ekI=0ekC;NX@
Kq1GL[?0ekC;NX@Kq0ekC;1GL[?NX@Qs0ekC;1GLU=NX@Kq1GLU=1GLU=NW_'k0en[j1GLUiO_
@sZ"u.hg1GLVE"u@tg0f(PE"u.ng0f(PE"uA%i0ekDC"u.hg0f(PE"u@ti0ekDC"u.ni0ekDC"
u.he1G^bG"u@tg1GLVE"u.ng1GLVE"u@tg0ekDC"Z%kf0elre@rH:)+Bsj11G^a?0en[m0ekC=
1GOmo0ekI=1GOmo0ekI?0en[m0f(O=1GOmo0f(O?0en[m0f(U?0en[m1GLU=1GOmo1GLU?0en[
m1GL[?0en[k1GL[?NWV!l1L2YE@<>poDeEco+Bsj10ekI?0en[m1GLU=1GOmo0f(O=1GOmo1G^
a?0en[m0ekI=1GOmo1GL[?0en[m0f(U?0en[m0ekC=1GOmo1GLU?0en[m0f(O?0en[k0ekC;NW
V'l0jPnc5*@^FATDj+Df0V=G%G]8Bl@mP@$5JU04K->E,[F>De*E7De:k9@:WDMEcYr5DN5]:D
K9;uDeEs%F(Jl)6Z6LH+>PesG%G]8Bl@lB061K8F(Jp'Ec5u]5CJ\o04f$2F!,X;EcYr5DK?qD
ATDj+Df1_2Ou"b$F!,%3@rmG+P"UsIOu"b$GDH61DI[aD!0U!%LbP!kOo]uo8Wkk_F)rI8DI[a
N30Ia,!g9OG99NbI1G<fnL]D"(@rmemP%'4KP,XU;H\aA=WKI:1P"Cfm04J@1@q]:kF,gS]0et
OA2)[BQ3Kc0OF(025@UX:nASrW)DI[L*A7]7aARfM&L]NY>I?IQ>F-:?\F-6QFF-6QeV33VfFE
hmM@UX:nASrW)DI[L*A7]7aARfM&L]NY>I?IQm$'I)c@WR>*ASu"!L^K;<P'Mi`L]LsnEbo<)L
]N[<HS9)r5*@^2@<,jrA7ZltL]NZ4@UX:eBOPq&P!5%gP')ps055<7G`k7R1QlmDFY@<D@j#?#
@ric,DIe!T99M)P@WNZ++CfJUCiaZ\!G-.YP'M.oF<G9?>9IB`Eas#uAKY]C!Kp,j+CfVYCiaf
`!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD<882sOCis9"@q]F`CO71F@WNZ$@<-
0qDBNG1P&,2\Oo]-3@ric&BOt[hF*2>_99ORA@WNZ$@<-0qDBNG1P&+WLOo]WFOo]-3@rmG6P"
Us`Bl7EsF_#&nBOt[hBl8$(G]\9TFEhmM@UX:nASrVp+C\c"@q]:kF!+t+ARfLsF_up8P"]=nE
bo<)+CfVYCiaf`!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD%FEhmM@UX:nASrVp
NWC83@<-0qDBNG5P&,2`Oo]Z9G]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9G\P#ZpWF(02
5@UX:nASrW#F-:?\F-6Q8DI[aD$^+/GH$tiU4?P9;ASs.SEb0-)Bl7KjE\DKCF!+[0F(03;LbP
!kI?I0-04JU9+Bot0@WR]AL]NY>L]W`;HY?u)B4uC8P(R$n@UaC$>9IurF-:!g!KmJ>!g6H.L]
DjdK3]U6DI[L*A7]joG]\9cFEhmMFEhnUP#O)QE-*4@E-,f4DK?pa4s4BSDKKE0@<[lR0/%?WD
JX$)ARTVB<0B7iOq*X204Sp2AMS1923Kq^A1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-o
Eb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/code2of5 0.0 0
%%EndData
%%EndResource
% --END ENCODER code2of5--

% --BEGIN ENCODER code11--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Code 11
% --EXAM: 0123456789
% --EXOP: includetext includecheck includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp code11 0.0 0 0 0
%%BeginData:         57 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  MG  odL_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  ei&
Bl7EsF_#&nBOt[h  +D,%u  F(L  Lj0 6U  c?  Bk1  XoA  RfCb@r  !3  !@;L!r  Ou"
b*DI[L*A7]joG]Y        '?@;  L!r Ou  "b  *DI  [L*         A7]         7aAR
fLiDKKH7F<G1(Ci         a0N1  G  <i  ]G  ][P  9DK        M#]O        u"b5A
U&<<BmO?H$Bd1uF  Cf]=H#  I;,  F  (KH Lq 3!Ne  BOt  mjBQT%2Ou%  #qFD5Z2F-<^
[F*)G:DJ+':E+P1  qH\_]c  23J  D eE-,    f4DK  C/f  X(GdVF(LLt  H]gXBP#RT(P
 %'TNOthst4d(eH  EckrV4  aW>    DP!5    %OP!  5$b  I=%,/FE2M8  Ou%NL<IL$AO
rfcH05kfOBl@m1P  !5$bI   ?IQJ   E-,f4   DKC/  f1O  YEX06CcMFC  oH/F<G[:G][
P9DKM$nOu"b5AU&         <<BmO   >5FCf  ]=F(o  r3O  tVtS06CcMF  Eqe:AohO*+E
V1>FEqe:AohO*Ot       VtS05+p  2B4uB0  BOtmj  BQT  CjOu"b&DI[  `1>E/nB0ekC
=0ocGo0ekC=0ocGm1GLU?0ocGo1GLU=0ocGm0f(O?0ocGo0f(O=0ocGm1G^a?0ocGm0ekI?0oc
Go0ekI=0ocGo0ekC;0ocGm0f(O=0ocGm0f(U?0jTqu04J@1@q]:kF,gV^0etOA2)[BQ3A$CM04
S[(Ectl-F,13e23KbO!/LZ3$@?8r@<-O"Cibb'OuQoZEarckEc[C-L]NZ4P!5%RI?I-W!/LYb@
<,jrA7^p5L]N[<HX^E(@rGmhP!4[&P"]A!@<-O"Cibb'P$jGlHS8iPBlJ#D@rGmh0em-GA4($=
Ea`I"ATEe]6Z6LH+>GSnD09oA+Cf>-FCAm$+E).6Gp$X3B5)I/+CT.u+Cno%BOu6<061K8F(Jp
'Ec5u]5CJ\oI?I,S@UX:nASrW"@<,jrA7^p5Ou%8iCh[EgFCerqARfM&+C\c"Ch7L?$^*Z"04K
->E,[F>De*E60k+R%9P&*SFD-[i6Z6LH+>GSn@ps7mDfd+2AKW]^+Cf(nEa`I"ATDi7F`V87B-
:\tARfKuA8,[jFE9)gEa`['AS#n&DfV"*I?IP_@UX:nASrW"@<-0qDBNCsEbo<)L^K;RH\_]NH
\_`OP#[[EOu%NL<%i-3D.@6j@r$-.Bl7EsF_#&nBOt[h+Eh10Bk1XoARfCb@r%6JHX^E(Ch7L?
$Be#.L]W!OL]Mpe<IK4M!.C#1Ou"b$BOt[hF*2=SL]ESo04S[,@r$..D)-nIOu%moL]LsnEbo<
)L]N[<HS9)r5*@]TBl7I++Cf(nEctl-F!+q#Eas#uAKY]C!Kp->99M(a@q]F`CNFW80d't>ARf
LsF_riU@UX:nASrW)P,X6<P,X6EP%odROo]97A9a8ROo^_%04S[,@r$..D)*5DBOt[hF*2=T+C
\c"Ch7K,Bp,HO$'K%Z!KmItDIe!TCm"g^1OYEW04S[,@r$..D)!/CBOt[hF*2=SL^TA\Ou"b$B
Ot[hF*2=T+Cf(r@r$..D)*5DBOt[hF*2=SOo^@HP%p.9G%#3$A79Rk@q]F`CO71AF_tW%ARfLs
L]NZ%HX^E(@rGmh+C\c"Ch7LI94D=M@q]:kF!+t+ARfLsF_rjr99O.=04K->E,[F>De*E60k+R
 %6YL%@CIDlLBlo@^8T&$VEcP`$F<EqhA7Zl<0d't>ARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS
#n&DfV"*I?IQXHX^E(@rGmh+C\c"Ch7LI94D=M@q]:kF!+t+ARfLsF_rjr99O.$@<,jrA7Zlm@
<-0qDMS=V!Kp)b@<,jk@<-E3@q]F`CNFW816P:nD3Apd04K->E,[F>De*E60k+R%6YL%@CIDlL
BlnEV-V82cDfTl0@rrh\De*E%0eje\BOt[h+Co2!BlnD=E,ol?Bk1dc0/%?SBldisEcQ)=P!=A
X<.0p004J@1@rGmh+C\c"@rGmhL]CmmEbo<)P"_#p055<6Cis9"@q]F`CER_>F_-^lI?IP_F(0
25@UX:nASrW.F_tW%ARfLsOo^@CP&,p_Oo^`BOu"b5G]Y';@<-0qDBNh>D.@6j@r$.K!KmbP1N
R#HL]D"(@rmG6P"Us`06hGSF,1*b1Pc$e!FfJXCh7L?!KsF/056S5Ou"b*DIdu7@q]:kG%#3.+
C\c"@rGmh+DHW4P"_$3Ou"b&DIXf#DI[`1Bl7I+P"UroF(025BnutVCkr:Y!G-.YP'M.oF<G9?
>9IB`Eas#uAKY]C!Kp-$E,Te?FCf]=H#I;,F(KG9FCf]=AoDR/+EV1>FE;/BAKY9AG_c?U!Jgo
+06hGSF-8^uDI\hnP"UTbP,W\FDf_'BOu%NL8:?XlBl7EsF_#&nBOt[hHQZd+Ebo<)L^K;;HZN
Y;+C\c"Ch7L?#*NeY#*K!uDI[`1@q]F`CNFW80p51mH#mG9+C\c"Ch7L?#*NeY%$CX&DI[`1@q
]F`CNFW816P:nH"h/+Cis9"@q]F`CM@[.AU&<D+EVjM+C\c"Ch7K,>9IB`EarckEcW@5BOt[hF
*2=SL]NZ4G]7SB+EV1>FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'AWkDIXf#DI[`1@q]F`
CNFW80p51m1Pc$e!Jgo+06hGSF-8^uDI\hnP"UTbP,W\FDf_'BOu%NL89B)u+C\c"Ch7L?!KmI
f+C\c"@q]:kF!+t+ARfLsF_rmi!Kp-$E,Te?FCf]=H#I;,F(KG9FCf]=AoDR/+EV1>FE;/BAKY
9AG^Xp\G]Y';@<-0qDBN/D!-iI$F!,R9G]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9GSG]
Y';@<-0qDMS=V!F(QaG]7SB+EV1>FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD<<HDVj+
C\c"Ch7L?#*NeY&s<9,DI[aD$^+/GH$t$\@WNZ$@<-0qDMSL[Ckr:Y!G-.YF!+t+ARfLsF_rjr
99OR7DI[L*A7]7aARfLiDKKH7FF,-PG]Y';@<-0qDBN.+@UX:eBOPq&+Cf(r@r$..D)$hIP"^+
>Df[%CAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI=$'\F<G%$Ebo<)+Bsj+G]7SB+EV
1>FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD<<HDVj+C\c"Ch7L?#*NeY%$CX&DI[aD$^
+/GH$tiUI=$$EF!+q#Ebo<)L^'#YL^'"CASu"!L^TA=P'MJ=<BNAsEb0,A061WACh[cu@<+#B@
WNYr+EM"5H\aA=WI9q$>q]Z#F!+[0F(03R@Yb&J!Jgf?;L<(gBkM+$I?K4g04JC3+Bot0@WR]A
L]NY>L]W`;H\_ZMP(R$_Bl7EsF_#'*AU&<D06DG\+EVjMI?IP_DfBe@DfBf4Df0V=5!C*"Df0Z
-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<6VA7[JMOuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2
#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/code11 0.0 0
%%EndData
%%EndResource
% --END ENCODER code11--

% --BEGIN ENCODER bc412--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: BC412
% --EXAM: BC412
% --EXOP: semi includetext includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp bc412 0.0 0 0 0
%%BeginData:         48 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04JEJ0  f"  *3'Tt>  :%5
2X=FD5Z2F-8_M1G  <3GEa  s#u  AWf  6 ?1G  <9W  DKK  E0@<Wi  +@  ;L!rOu  "b*
DI[L*A7]7aARfKu  AmoLs  AWe  i&G %#  3$  A79  Rk@  q]F`CE  R4  tCia0N  1G<
H[@r-9uATVL.F<G        1(Ci  a0N 1G  <H  [@r  -9u         ARf         Cb@r
#drFCf]=+D,%uF(         LLj0  5  5<  6C  is9  "F*        (i2F        E;PBE
$/b$Cia0N1G<f\D  .t,)@;  L!r  O  u"b 5A U&</  Df0  ZZa-&53FCf  ]=F(or3L^K;
$06CcMFEqe:AohO  *M#!2i  05+  p 2B4u    CC!K  o6W  E-,f4DKCuE  06;5UBl7R*H
#R>X4aVtcOu8C3D  fBf4Df  0WC    P,i2    'Cia  0N4  aW>WI?IQm3  0Ia6V33Qn!B
lU*FE2M8P!+/T/W  r;\Fc   nqO1   OXV5/   Tc#U  AWe  itP#ZpnAWe  *t3A5;iFD5Z
2F-8_M1OYEcDfBf         4Df0W   COu%N  L8M>0  sG]  [P9DKI"CAU  &</Df0Z[/Wq
nCFCf]=F(or3+EV       1>FE;/B  AWe^01  G<i]G  ]\4  LAnH*qF<G[  :G]\4LAnH*q
FHS;?1G<EQBkM+$+D>>#B4uCM09S,4ASl..055<6Cis9"@q]F`CER_>F_-^l055<6Cis9"F*(i
2FE;PBE$07CF_-^lI?IP_@UX:eBOPq&N[$5U3CcbD83o4(=u8uR;_^m";)Ud#6s3/L<Cp:K7TW
DD9p.:c@q]:kG%#3.La/'?Ou%moL]N;UHXg_tEctl-F-8_M3+?<:@q]:kF-8_C!Kp->5*C/=P"
:B/L]LsnEas#uAWgMY!KsF/@UX:eDe*FB5)96&9OhaEEctl-F-8_M@$5JU04K->E,[F=@l,nq@
UWe7BOPpi@ru:&N]TQp1bga.D09oA+Cf>-FCAm$+E).6Gp$X3B5)I/+CT.u+Cei!Blmd"+DbV2
FCfK6+D#e-AT2`6:G4AA@;0doATDg0EfrY8P#Qjm82"F\Ebo<)+C\c"@rGmhP%&TCCh[EgFCer
qARfM&L]N[<I?IQm1G<6OARfLsF_up7Ou%moL]LsnEbo<)L]N[<HX^E(@rGmhP!4[&P"]A!@<-
O"Cibb'P"T:uARfLsF`!9B04S[,@r$..D3@)G1OYEW04S[,@r$..D'3>%ARfLsF_upZP%p.9G%
#3$A79Rk@q]F`CO715@<,jrA7Zlm@<-0qDN[Y%@<,jk@<-E3@q]F`CNFW8P"UsTHS8iPBlJ#D@
Uh5L11F[&6YL%@CIDlLBlo@\8T&$VEcP`$F<En;1bga.@q]F`CER/%B5)H1E,ol?Bk1dc0/%?S
BldisEcQ)=P!=AX<%h]hEas#uAKYGjEas#uAV^=q@<-0qDN[\V1G<H[@r-9uARfCb@r!3/Eckr
V1OYEc04f$2F!+\I#Ve%g0ekC;23%qs1GLU=1,1PE#Ve%g1GLU=1QD_q1,1L<1,1SF#Ve(h1,1
R>0ocMo1GL[?0ekDC#Ve(h0ekI=16)Vp0ekI=1,1PE#Ve%g1,1U?0ocMo0ekO?0ekDC#Ve1k0e
kC;0ocMo0ekC;2)-hG#Ve(h1GLX>0ocMo1GLX>0ekGD#Ve+i0ekF<16)Vp0ekC;1,1VG#Ve(h1
,1L<1QD_q0ekC;1GL\G#Ve+i0ekC;1QD_q0ekF<1,1SF#Ve%g1bg^>16)Vp0ekF<1GLYF#Ve%g
1bga?0ocMo1bga?0ekDC#Ve(h1,1O=16)Vp0ekI=1GLVE#Ve+i1,1O=0ocMo1,1L<1bg_F#Ve.
j0ekF<0ocMo0ekC;1bgbG#Ve(h0ekC;1l_hr1bg^>0ekGD#Ve(h1bg^>0ocMo0ekF<0ekMF#Ve
(h1GLU=16)Dj16)Gk0elss1G<fYF!+q#Ebo<)L]NY>L^9/[L]rqBP,4<tBl7EsF_#&nBOt[hHS
9JcF<G%$Ebo<)L]NY>OpR:-I=!VhG]Y';@<-0qDNY<h1OYEdBl7EsF_#')FCB33F*)>>HQ[B=F
,0g-DI[aD,Eb]_GqX,TF,0m\1G<ipFDu/>L]`erI=!VdDf^^7Ou"b5G][nCF,0gZ1OYEdL]E53
@UX:nAT!;)P,Wd]Bp(ZC1G<H[A9]5,BOPq)@;L!-@UX:eDe*E%BnueQ9Ti&31NR#H+E27?+D#G
#F!,17A9a81P'M.oF<G9?>9IB`Eas#uAKY]C!Kp,jL^]G_FEhnHDf_'BFCf]=H#I;,F(KG9FCf
]=AoDR/+EV1>FE;/BAKY9AGV=#SF!,F?F,1*b!Ko6eP"9;)@r-9uARfCb@r$E6F(025E,Te?AS
u"!+Cf(r@r$..D3@PTH"h/+Cis9"@q]F`CM@[.AU&<D+EVjM+C\c"Ch7K,>9IB`EarckEcW@5B
Ot[hF*2>U!Kp,c@<-0qDMS^aCijoDE,Tf\!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)
P'DD%FEhmM@UX:nASrVpNW<NsEbo<)L^]G_FEhnHDf_'BFCf]=H#I;,F(KG9FCf]=AoDR/+EV1
>FE;/BAKY9AG^Y`T05tiN+E27?L^9.EOu%NL<,$5[Cis9"F*(i2FE;PBE-i^K@WNZ2Df[%4DI[
aD,a(f`GqX,TF!,F?F,0m\!Ko6eP#O)U@WNZ5@WR>*E,Tf\9Th1o4>1_dDD*Y`ASu<uDIm6s06
:TD+Bot0@WQmP0TrD`P"Aq4@VBg*>9IurF-:!g!KmJ>!g6H.BOtmjBQSZcK3^->@WNYr+EM"5P
 %'4JOo^@?P#?X_!.C#_>p*j!@r-9uATVL.FF,Z_G]Y'MG]\@s<%i0/F<GL@FD5Z2F!*Y1+CoD
.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$@Uh5L16OV[A1r(@/n8fPFCfK5H"(o:FDl%L@Wu
O*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/bc412 0.0 0
%%EndData
%%EndResource
% --END ENCODER bc412--

% --BEGIN ENCODER rationalizedCodabar--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Codabar
% --EXAM: A0123456789B
% --EXOP: includetext includecheck includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp rationalizedCodabar 0.0 0 0 0
%%BeginData:         59 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  061KCB  l@  ltCh\3  ,A4
(9G@:EYcH\`B!23  JD%Df  Bf4  Df0  W Z5*  @]T  @UX  :eDe*F  B5  *@]TA8  c@-
A9)+&+D,%uF(LLj  04A[=  F*(  i2F E;  PB  E$/  b$C  ia0N1G  <H  [@r-9u  ARf
Cb@r!3!@;L!rOu"        b7@;  KXg @<  ?'  jBO  t[h         +D,         %uF(
LLj055<6Cis9"FC         f]=+  D  ,%  uF  (LL  j05        5<6C        is9"@
q]F`CM@[.AU&;>A  moLsAW  ei&  F  Cf] =A oDR/  OiN  V@06CcMFE;  /BAV^\V1G<i
]G]\4LAnH*qFGTa  U1G<EQ  BkM  + $L]N    YpDf  Bf4  Df0WZY:js=  EbTE(FEqh:P
!+/J!Ko='%<$3-B  l@m1H]  kFA    @;L!    rP!+  /T5  ^eepOuSV6P  ,4<rNWD;+NH
B2`AWf3'OtDh\P'  )pOOu   %N5O   tCcrF   _-^l  I?I  TYP%BdtOuY  16E-,f4DKCt
)Ou%NL<,Z_tBl@m         1H]g1   5P"@<  KAU&<  /Df  0Y>FCf]=Ao  DR/OtDhQ06C
cMFE;/BAKZ)+G]\       "@H=`6m  Ou"b5A  U&<BD  e<U  &ATT&:AU&<  BDe<U&ATX(g
Ou"b)ASGdjF<G7.BkM+$OtVtS04f$2F!+\I#Ve%g0ekI?0ocMo0ekC=1GLVE#Ve%g1GLU?0ocM
q1GLU=0ekDC#Ve%i0ekI=0ocMq0ekC;1GLVE#Ve+i0ekC=0ocMo1GLU?0ekDC#Ve+k0ekC;0oc
Mq0ekI=0ekDC#Ve%g1G^a?0ocMo0f(U?0ekDC#W"1i0f(O?0ocMq0f(O=0f(PE#W"1k0f(O=0o
cMo0f(O?0f(PE#Ve%i1GL[?0ocMo1GL[?0f(PE#Ve%g1GL[A0ocMo0ekI?1GLUiOu$N_FE;P4E
ccAEDfC%V@UX:eBOPq&NYF0%1,CaE2E*TU/L3A1/h9mr.RfLVI=!VV@<,jk@<-FL'JM6s1GgsI
2`NfL,W[S2.mZKh7$9?SP#X/FBOPq)@;L"@'Tt>:1Pc$e!JhD9@q]:kG%#3.P!5$g@UX:eBOPq
&P!4[&P"_$&P'DD<82"FjA9i?,CibCDOu8CYL]E53L_"iADe+-:@;L"J5*@m7@<,jk@<-FP5)9
6&9ThT&G^Y`G06;2X@;L"@"HkX*1PcTu!JhD9F)uM5Cibb'OuQoZEarckEc[C-L]NZ4P!5%RI?
I-1@<,jrA7^PsL]NZ4F)uM5Cibb'P$jGl@UX:eDe*E%@UX:eDe*FB@Yb&JWJCS<9QP8u@;L"J5
*B<:E0>6g@;L%,FCB33F*)>>HS8iPBlJ#DEaa'(Df0!"BmO?$6Z6LD@UX:D@:VZ?FAm9iEcb6%
DfC^u6Z6LD@UX:"F*(i2F<G"0A0>r8Df?h/BOPpi@ru:&F!,=BF*&O6AKYo/AKYo'+@RDJ+B0J
 %EZchb061K8F(Jp'Ec5u]5CIl3@WuO*E%Z0>FD5Z2@;KY(ARn/HA78qUE^F2F;flGgFAm:"E/
m"IDe*9c@<*K3FCB33+CT.u+EMXCE$/Y(@<,ddFCfK6+Dl7BF<G%(+E)./+E(j75p/K:6Qg;f+
@Ik9Ea`['AS#n&DfV"*I?ITYP#R5<L]LsnEas#uAWgMY!g9O0@UX:eDe*FB5)96&9O_pNH$3V4
F-8_M@$5JU04K->E,[FM@<?4%DII?qH=^VSDe*9c@<+\CA4($=Ea`I"ATEeo6Z6LD@UX:"@W,e
&+Dl7BF<G(3DKK<$DBNk8Cj@.6BkM.%F!+n/A0>r=D.7F"F!*%W,To,j0-Dki.k`Pr@;0doATD
g0EfrY8P#Qjm82"F\Ebo<)+C\c"@rGmhP%&TCCh[EgFCerqARfM&L]N[<I?IQm1G<6OARfLsF_
up7Ou%moL]LsnEbo<)L]Wa=HX^E(@rGmhP!4[&P"]A!@<-O"Cibb'P"T:uARfLsF`!9B04S[,@
r$..D3@)G1OYEW@UX:eDe*E%@UX:eDe*FB@Yb&JWJCS<9OhaEEctl-F-8_M94MXH@r$..D3=oQ
@q]F`CNFW8P!5$b04S[,@r$..D28a5BOt[hF*2>U&<^dkWJD+KC6CAr@;KXg@<?'jBOt[hHQZd
+Eas#uAKYGjEbo<)L]N[<P"T7mEarckEcW@5BOt[hF*2>_99O.=04K->E,[FM@<?4%DII?qH=^
VSDe*9c@<+\CA4($A@r"JHB5)IJ-:r)bDfTl0@rrh\De*9c@<*K#BOt[h+Co2!BlkJ:Ec6,8A7
]:)061K8F(Jp'Ec5u]5CJ\o@UX:nAT![-OuS6t@UX:eDe*F8!+KAWCh7L?!KsFF9Tj[a3+?<:C
h7L?!KsEk@<,jrA7Zlm@<-0qDMS=V9TjZS@UX:eDe*FB5*@]TBl7EsF_#&nBOt[h+EVXHAWeit
P#O)U@WNZ$@<-0qDBNY2@r-9uARfCb@r$FI!KmJ3P#R5CP&-;XOu"b5G]Y';@<-0qDBNY2@r-9
uARfCb@r$FI!KmJ3P#RSNOu"b9E,TfR!0T-o!/LYb@<-0qDMS@WWI$:4P!5$b055<7GT^L0@<-
O"Ci^_.@<,jrA7ZltL]NZ4P"Uro04f$2+D#G#F!,17A9a81Ou%/gF!,1Q#a0"8DI\iTFEhmMBc
pV&@UX:eDe*E%BnueQ9R(MpF!,R9G]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9Gg!/LZ3#
CA+KE,Tf\5%SVAP!5%%LbP!kG]7SBOo^_%I?I-LP"9;)@r-9uARfCb@r$E6F(025@UX:nAT!;0
P&,p[P,W#1@ric&BOt[hF*2>_99OR7DI[L*A7]7aARfLiDKKH7FF,-PG]Y';@<-0qDMS=VWEUK
S@<,jk@<-E3@q]F`CNFW8L]NZ4G]7SB+EV1>FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'D
D%FEhmM@UX:nAT!;)P,VZG!?cW+Df[%CAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?
ITd!/LZ3#CA+KE,Tf\5%SVAF!+t+ARfLsF`!:7P!5%%LbP!kG]7SBOo^_%I?I,SBl7I++Cf(nE
ctl-F!+q#Eas#uAKYGjEbo<)L]N[<L]NZ4P"Uro04f$2+D#G#F!,17A9a81Ou%/gF!+q#Ebo<)
L^9/[ASu"@H$":Q+C\c"Ch7K,>9IB`Eas#uAKYGjEbo<)L]N[<L]NZ4G]7SB+EV1>FEqe:AohO
*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD%055<7GT^L0@<-O"Ci^_.@<,jrA7Zlm@<-0qDMS=VWJC
S<9Ti&31G<<W@j#?#@ric,DIe!T99M)P@WNZ$@<-0qDMSR]Ckr@[WF]sWP'M.oF<G%$Ebo<)L]
N[<>9IB`Eas#uAKYGjEbo<)L]N[<L]NZ4G]7SB+EV1>FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H
=\4)P'DD<<BNAsEb0,A061WACh[cu@<+#B@WNYr+EM"5H\aA=WI9q$>q]Z#F!+[0F(03R@Yb&J
!Jgf?;L<(gBkM+$I?K4g04JC3+Bot0@WR]AL]NY>L]W`;H\_ZMP(R$_Bl7EsF_#'*AU&<D06DG
\+EVjMI?IP_DfBe@DfBf4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<cWFD5
Z2@;KY(ARn/HA78qUEfrDFA1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P'
)pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/rationalizedCodabar 0.0 0
%%EndData
%%EndResource
% --END ENCODER rationalizedCodabar--

% --BEGIN ENCODER onecode--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: USPS Intelligent Mail
% --EXAM: 0123456709498765432101234567891
% --EXOP: barcolor=FF0000
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp onecode 0.0 0 0 0
%%BeginData:        133 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05k`>@  rG  mhH\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  A8c  @-A9)+  &+  D,%uF(  LLj
05+p2B4uCE4rKcW  Ou%#q  FD5  Z2F -<  ^[  F*)  G:D  J+':E+  P1  qH\_]c  23J
DeE-,f4DKC/fX(G        dVF(  LLt H]  gX  BP#  RT(         P%'         TNOt
hst4d(eHEckrV4a         W>DP  !  5%  OP  !5$  bI=        %,/F        E2M8O
u%NL<IL$AOrfcH0  5kfOBl  @m1  P  !5$ bI ?IQJ  E-,  f4DKC/f1OY  EX05+p2B4uB
0BOtmjBQTCjOu"b  #@<-0q  DBN  C sEas    #uAW  gMc  1G<ipFC])q  F<E\.L]W`!L
]rr$@UX:eDe*F8"  c*2B9T  B-6    P!+/    J%Xi  \[$  [n1<OuS73O  uS78OuS7<Ou
PWhOu"b5G]Y';@<  -0qDM   SL[!   KmbP1   G<fg  @:N  kYDKL[7Ou%  moL]LsnEbo<
)L]N[<HS9)r5*@^         DG][J   1@rri  -P$iW  YG]  Y'B+EML1@q  B.fFHQZ/NWC
8Y!/LW8!/LV\P'A       X$E+*6f  @r?B2F  )YPtA  RfV  "L]NY>Ou%N  L<-3A,+DDs>
E+*6f@r?CO!F$[U@<,jrA7ZltL]NZ4L]E52NW=k8?'9G\P"76JG]Y'MG]\`A@UX:eDe*FB@WQK
s@qB.fFHQZf9Th1bDJsQ4@;KY(AU?(>@<6"C5*@]TDKTfZ5*@^>F`!:NL]N[<M#W83HS9)r5*@
^>F_r78L]N[<L]W_WP"T\8D'3PU94D=NAWfrS!Kq\FF_r78+Du==+DI!3@UX=hP%p/)I?I-JDK
TfP!0Tua@<6"CAp]\+I?IP_DKTe=>DN8sF_uJRP"ArB1N%>PL]D=8D281T95\lhL]NZ3@UX=hP
#@GDP'CkeD2841F_up8P"T7mF(LMLP'DD<AM7qDD'3%9BcqM<F_-^lDKTfCOuS6tP!*NB"FH;S
I=!V]+D,%uF(LLjI?ITYP"ArB1N%>PP%'4IP!+.FDKTe=>DN8bOu%NL<,QhqI?G)'1G<3OB45=
]H\_`d)3SHl5*BB2!g4FaWKI67De<U&ATX)!Ou&85H]gR@P#O)CP!5$b04L).Ou%moL]LtJ@Yb
&JWI'df@?NfmAnH*qFHQZ\!g4Fa94E\\M#WWnP"Ur=P'DD<87?q0%[&VW@<-0qDMT!i4aUCh!*
t#9<+99VCh7L?)3R.0>DN;cI?IQ=@<-0qDMT<r4aUCh!Jg`3!/LW2!/LY]I?IQ=@<-0qDMTBt4
aUCh!Jg`3!/LW2!Jg`3!/LW2!/LY]I?IP_@VK_'@;M)j>9IB`Eas#uAV_%0@<-0qDMT!iWKKr%
LbP!kI?I0-+C]%t@:Wo31G<3ODK]H)+BostBl8*&CjUSn8Rc+K@rGmhL]ET2LbP!k?'6us@VK_
'@;I&j+C]&&G%#36L]rrXI?I0-+Bost@<,jrA7^PtP"UTbP,V_0@VKI`A7UK'DJsQ4@;KY(AWe
i&@VK_'@;I&j+C]&&G%#36I?I02@<,jrA7^PuL_>kEH\aA=WI9q$?'6us@X3',F,19g$'I(t@V
K_%D/^V%+C]&&G%#36I?I0-Ou%n&M#W82HS9)r5*@^X!/LYbBl8$0E0=[d!g9O005?Y6Ou$Q]D
KK`7+DQ]5Oo^@?Or9EU@VK_%D/^V4P"UN1!0V)Q$Bf4g!Kq\:Bl8$0E$/m<@VK_%D/^V4P"UN1
!0U6CG^Y`G@X3',F!,0>@VK_%D/^V,Bl8$0E0=[d!KsFF983HIP%p/)@VK_%D/^V,Bl8$0E0=[
d!KsF<!g4Fa983HIP#@HfI?I,SAn,n:#QKrC04\L5+C]V<ATNY-P"UT7Oq3^3L^&3<@ric'@<@
[KL'.L>"Gd&@D0mpJ@ric)@rmG,Oq39X23Pe=1OXU'An,m)An,n<!KmtV1OYEd04n^8+D,,)L'
RaA"HkPoA79R&A79S9!KmtV1OYF=L]N;4L^\W>H$!V=P!5%%L]`eN04\L5P!5$bL^8?>@ric'@
<@[KL'.L>"Gd&@D0mpJ@ric)@rmG,Oq39X23Pe=1OXU'An,m)An,n<!KmtV1OYEd04n^8+D,,)
L'RaA"HkPoA79R&A79S9!KmtV1OYF=I?I,S@rGmhGAhM4F,10d$'I*#$&JV;!.-A5P!5$bBo!(
Y4aShkL&uac1OXU'@YP%dOu%NL<JUX2!Ffb\G%#3M@Yb)KWI$:5P!5$b@VK_'@;I'$L]NY>L]W
_WP"T7uDK]H)+DR'4@ZkJ^$Bf4g!Kq\:Bl8*&C`mI8@VK_'@;I'$P"T8I;Nc9QP"9)$A7]t'Eb
'56Bcpl!DK]H)+C]&&G%#3M@Yb&JWKKn`P%p/)@VK_'@;I&qBl8*&Cm&7`!KsF<!g4Fa94F&^P
'DD<87QRKATr'5A93P5@rGmhGAhM4F,1-c98EY4Cm'$T@rmA-!0RJ@!0V2G@rGmhGAhM4F,0g+
De*F'DfTB0L]ET2L'!R%!Kq\UP#O)V@:D)K1E]nX+,1j;LbFK(J;?.=*Irr-L)YZ!4bac'Ld$P
(J;@!U*^GN_L)iO8>D=(^Lg>`O5_ra$%mYq`L)e!bCPEbCLi%k^^kcl_%`!mAL)Id_FbUXHLj"
L^^kd8j'>TEML'teQI"hmAL&d9h*[$1;Q\HM'L&d]t)^'k8SV@q'L&dg"%j6T,VhQ1aL&e9/)P
DfbXbIUaL&eB2%\SOVZ\B?jL&eW9'qg9][Y>6aL&ec=';1'[\qUTcL&el@#G?eOa+bRAL&fDO)
IS:"c%[!AL&fMR%Ub"kdtS`JL&fbY'juareqOWAL&fn]'4?Opg4fuCL&g"`#@N8dj+\E/L&g=i
']=]Gk(X<&L&gIm'&\KEl@oZ(L&gRp#2k49nV.Y6L&ge!$/gO<oS*P-L&h"'"5nn7%u),:L&i*
F*>!r+)ho:CL&i<L(D)<%*ek1:L&iZV*0>mU.u"t(L&il\(6F7O/qsjtL&j)b)3BRR222j-L&j
2e%?Q;F3JJ3/L&j>i$]p)D4GF*&L&jf!*)M@j984?]L&k#'(/T_d:506TL&k5-),Q%g<JD5bL&
k>0%8_c[=b[SdL&kJ4$W)QY>_WJ[L&ke=(sn!<AVLoGL&kn@%+'_0Bnd8IL&l%D$IFM.Ck`/@L
&l:K&^Z75EeXnIL&lCN"jhu)G_Q=IL&m'a*&**JMhW-(L&m9g(,1IDNeS#tL&mKm))-dGQ%g#-
L&mTp%5<M;R>)A/L&m`t$S[;9S;%8&L&n'((pJ_qV1o\gL&n0+%'YHeWJ2%iL&n</$F#6cXG-q
`L&nQ6&[6ujZA&[iL&nZ9"gE^^\:t*iL&o2H(iY31`J,(GL&o;K$ugq%abCFIL&oGO$?1_#b_?
=@L&o\V&TEI*dY8'IL&oeY"`T1sfS0KIL&p7f&FbDTie@a.L&p@i"Rq-Hk_90.L&qm?*XIK%(P
Wq9L&r<K)[M0"*JP@9L&rEN%g[mk-\`UsL&rl[)Mj+L/VY$sL&ru^%Z#i@1PQd'L&s5e'o7SG2
MMZsL&sAi'8VAE3ee#uL&sJl#De*97tr!SL&t#&)G#Sa9njESL&t,)%S2<U;hc/\L&tA0'hF&\
<e_&SL&tM4'1diZ>)!DUL&tV7#=sRN@tkiAL&tq@'Zc"1Aqg`8L&u(D'$,e/C5*):L&u1G#0;N
#EJ>(HL&uCM$-7i&FG9t?L&uUS"3?2uLP?csL'!9f)CU=ANJ82sL'!Bi%Od&5PD0r'L'!Wp'e"
e<QA,hsL'!ct'.AS:RYD1uL'!m"#:P<.UP9VaL'"3+'W?`fVM5MXL'"?/&u^NdWeLkZL'"H2#,
m7XZ%`jhL'"Z8$)iR[["\a_L'"l>"/pqU_hK"AL'#>K'PN4&`eFn8L'#JO&nm"$b(^7:L'#SR#
&&_md=r6HL'#eX$##%pe:n-?L'$"^")*DjiJ%p-L'$@h#j@!EjG!g$L'%[8*#OD4$\fQ:L'%m>
()Vc.%YbH1L'&*D)&S)1'o!G?L'&3G%2ag%)28eAL'&?K$Q+U#*/4\8L'&ZT(mp$[-&*,$L'&c
W%%)bO.>AJ&L'&o[$CHPM/;=@rL''/b&X\:T156+&L''8e"dk#H3/.O&L''et(g)Lp7>;LYL''
o"$s85d8VRj[L'(&&$<W#b9SNaRL'(;-&Qjbi;MGK[L'(D0"^$K]@>5?GL'(n>#hXk6A;16>L'
*'_(c[6PKn^:$L'*0b$oitDM1uX&L'*<f$93bBN.qNrL'*Qm&NGLIP(j9&L'*Zp"ZV5=TnX,gL
'+0)#e5TkUkT#^L',8H&9rp3_M/>@L',AK"F,Y(%u),.L'/<I*<_*")ho:7L'/NO(BfHq*ek1.
L'/lY*/'%L.u"sqL'0)_(5.DF/qsjhL'0;e)2*_I222j!L'0Dh%>9H=3JJ3#L'0Pl$\X6;4GF)
oL'1#$*(5Ma984?QL'15*(.<l[:506HL'1G0)+92^<JD5VL'1P3%7GpR=b[SXL'1\7$Uf^P>_W
JOL'2"@(rV.3AVLo;L'2+C%)dl'Bnd8=L'27G$H.Z%Ck`/4L'2LN&]BD,EeXn=L'2UQ"iQ,uLP
?coL'3Eh)C1%?NJ82oL'3Nk%O?c3PD0r#L'3cr'dSM:QA,hoL'3p!'-r;8RYD1qL'4$$#:,$,U
P9V]L'4?-'VpHdVM5MTL'4K1&u:6bWeLkVL'4T4#,HtVZ%`jdL'4f:$)E:Y["\a[L'5DK(hA@(
`J,(;L'5MN$tP(qabCF=L'5YR$=nkob_?=4L'5nY&S-V!dY8'=L'6"\"_<>jiJ%p)L'6Lj#ip^
D#DO34L'7s>)AIo0%>GW4L'8'A%MXX$'8@A=L'8<H'blB+(5<84L'8HL',60))MSV6L'8QO#8D
mr,DI&"L'8lX'U4=U-ADqnL'9#\&sS+S.Y\:pL'9,_#*aiG0np:)L'9>e$'^/J1kl0uL'9r!(f
Z4n7>;LUL':&$$rhrb8VRjWL':2($<2``9SNaNL':G/&QFJg;MGKWL';"?&CcF<@YP0<L'<3a(
c6sNKn^9uL'<<d$oE\BM1uX"L'<Hh$8dJ@N.qNnL'<]o&N#4GP(j9"L'=9*&@@/qU4rr\L'>DJ
&9NX1_M/><L'@m;*"7Q+$\fQ.L'A*A((>p%%YbH%L'A<G)%;6('o!G3L'AEJ%1Isq)28e5L'AQ
N$Ohao*/4\,L'AlW(lX1R-&*+mL'AuZ%#foF.>AIoL'B,^$B0]D/;=@fL'BAe&WDGK156*oL'C
#"(efYg7>;LML'C,%$quB[8VRjOL'C8)$;?0Y;2,ZVL'CP1#u$'X@>5?;L'D+A#gA#-K8(3oL'
E?d'J+tCL5$*fL'EKh&hJbAMM;HhL'Ecp&M/Y@P(j8oL'F?+&?LTjU4rrTL'GJK&8[(*_M/>4L
'Ig8(`\88"bm^2L'Ip;$lk!,$&0'4L'J'?$64d*&V^l;L'J?G#on[)+bgPuL'JoW#b6VS6&#qU
L'L&"#[E)hJVF^uL'N<b#X!hI%u),,L'STM*<Ls$)ho:5L'SfS(BT<s*ek1,L'T/]*.inN.u"s
oL'TAc(4q8H/qsjfL'TSi)1mSK222itL'T\l%>'<?3JJ3!L'Thp$\F*=7tr!ML'UG,)FB/a9nj
EML'UP/%RPmU;hc/VL'Ue6'gdW\<e_&ML'Uq:'1.EZ>)!DOL'V:D(rD"5AVLo9L'VCG%)R`)Bn
d8;L'VOK$GqN'EJ>(BL'VgS$,VE&LP?cmL'W]l)BsnANJ82mL'Wfo%O-W5PD0r!L'X'!'dAA<Q
A,hmL'X3%'-`/:RYD1oL'XQ/(nu`jV1o\YL'XZ2%&/I^WJ2%[L'Xf6$DN7\Z%`jbL'Y)>$)3.[
_hK";L'YbQ'Ole&`eFn2L'YnU&n6S$b(^74L'Z1]&RpJ#dY8';L'Zam&E8EN#DO32L'\6B)A7c
2%>GW2L'\?E%MFL&'8@A;L'\TL'bZ6-(5<82L'\`P',$$+)MSV4L'])Z(m9U[-&*+sL']2]%$H
>O.>AIuL']>a$Bg,M0np:'L']Vi$'L#L6\ZFUL'^;''N0Yl7YV=LL'^G+&lOGj8qm[NL'^_3&Q
4>i@>5?AL'`Ke(c$gPKn^9sL'`Th$o3PDM1uWuL'``l$8R>BObOH'L'aQ.&@.#s_1iMAL'e0?*
"%E-$\fQ,L'eBE((,d'%YbH#L'eTK)%)**'o!G1L'e]N%17gs)28e3L'eiR$OVUq,DI%mL'f5]
'T.VP-ADqdL'fAa&rMDN.Y\:fL'fYi&W2;M6\ZFML'gA('M=)e7YV=DL'gM,&k[lc;2,ZTL'h@
D&B]_7K8(3mL'iWh'InhEL5$*dL'icl&h8VCObOGtL'jW/&?:Hl_1iM9L'n*<(`J,:"bm^0L'n
3?$lXj.$&0'2L'nTJ&K6B3+bgPsL'p;%&6aerJVF^sL("<A*!V-+$\fQ(L("NG(']L%%YbGtL(
"`M)$Yg('o!G-L("iP%0hOq)28e/L(#;](l!bR-&*+gL(#D`%#0KF.>AIiL(#ek&Vc#K6\ZFIL
($M*'Lmfc8VRjIL($q6&OqK`@>5?5L(&]h(aatGKn^9gL(&on&gi>AObOGpL('c1&>k0j_1iM5
L(+6>(`%i8"bm^,L(+HD&f-32&V^l5L(,;\&=/%[6&#qOL(/]g&2o7Q",7X&L(4BA'Foj-$&0'
&L(4fM&IsO*+bgPgL(6M(&5IriJVF^gL(=<>&0?Q;%u),+L(G/U*<Cm+)ho:4L(GA[(BK7%-\`
UlL(Gki)M*VS/VY$lL(H.q)1dMR222isL(HA"'7klL7tr!LL(I"4)F9)h9njELL(I:<)*rug<J
D5SL(ILB'1%?a@tki:L(IpN'Z#M8Bnd8:L(J?Z&]'25LP?clL(K8t)BjhHNJ82lL(KQ')'O_GQ
 %g"sL(Kc-'-W)AUP9VZL(L29'VU6mWJ2%ZL(LVE&YXpj_hK":L(M=Y'Oc_-abCF:L(Mae&RgD
+#DO31L(OfJ)A.]9%>GW1L(P)R)%hT8'o!G8L(P;X'+os2,DI%tL(P_d'Tn+^.>AItL(Q.p&Wq
e[6\ZFTL(Qk/'N'Ss8VRjTL(T&m(bpaWKn^9rL(T8s&i#+R#DO3)L(XlK)@;-2%>GW)L(Y/S)$
u$1'o!G0L(YAY'+'C+,DI%lL(Yee'T%PW.>AIlL(Zk.(eKGp7>;LJL(],n(b(1PKn^9jL(aZD(
`A&A"bm^/L(jlI*!M'2$\fQ'L(k)O('TF,'8@A.L(kAW'a9=+,DI%hL(kqg'SV8U6\ZFHL(o8p
(aXnO",7X-L)'lG(_)3:#DO3#L):;Q)?Y^2'8@A,L);.i(k[P[6\Z:DL([(4&Q+8oiJ%b1L'gP
-#uZK`ie@Y2L':P2"QY:>=G?n@L&pdLOu"b5@:CuH1E]nX",7WmL]rMI!/Li6$il(iL(XKB$AJ
lfL^]"B!/M5A&HIV"L'[j9'SZbkL_tjK!/MeQ&:fQ\L'W<c,_cGPLa[uZJ;>n6!J#tlL(HV+6A
>b2LdZt#5_qsc!^MQ<L&jPq@"nZsL&cdZ&0Q]-JqaORL&cm]"<`F!LkYsRL&d<i!?d*t!JV-sL
&h@1#S;^k"GR$jL&hR7!YC(f!JV-kL&qF2#RH.d"GR$bL'.O3&-R^j!eps`L'Rg7&-@Rt!JUj]
L'.X6!XOM]&;C1X?'6us@q]:kF,10d$'I*#!/LZ3$%"=>P!5$b@rGmhGAhM4F!,1[99M8h"U:,
uHZW\*2)-nM5*AQeHZW\*1,1SJ5)'4GP,XU;I?IT?BOPq&+DHW6M#WWnP'DD<8;IS.s+gZ%056
S5Ou%mqBcpu3E0;ba@rme9L]ETTHXg_tEcW@;+Cf(nEcW@;P"UNOs,t3]G^Y`SI?I,S@UX:o@;
m>nL^/_;L]iM9L]N;=L]E52L^AkGL]WA<L]rS<L^&YCL^8eCL]`G6L]E53L]rSCL]WA9L]N;;L
]iM:L^AkFL^&Y;L^8eDL]`G>L^/_?L]rSBL]N;7L^8e?L]WA@L^AkEL]E54L^/_:L^&Y?L]`G;
L]iM?L]E55L^8e@L^&Y<L]WA;L]N;4L^AkDL^/_CL]rS9L]iM6L]`G=L^&Y:L]E56L^8eEL]N;
3L^AkCL]`GAL]WA:L^/_@L]rS8L]iM@L]N;?L^&YAL^/_<L^8e:L]rS?L^AkBL]iM<L]WA>L]`
G9L]E57L^8e>L]rS>L^/_DL]N;<L^&Y8L^AkAL]E58L]iM>L]WA5L]`G7L]rS@L^8eFL]iMAL^
&Y9L^Ak@L^/_=L]`G8L]N;5L]E59L]WA4L]N;6L]iM7L^&YBL]`G:L^8eAL^Ak?L]WA?L]rS=L
]E5:L^/_EL]iM8L^8e;L]rSAL]`G5L^Ak>L]E5;L^&Y=L]WA8L^/_AL]N;:L]rS7L]iM;L]WA7
L]E5<L^&YDL^Ak=L]`G@L]N;9L^8eBL^/_BL]rS;L]E5=L]N;8L]WA6L^Ak<L]iMBL^8e=L^&Y
>L^/_9L]`G<L]iM=L^/_>L]E5>L]N;>L]WA=L^Ak;L^&Y@L]rS:L]`G?L^8e<?'6us@UaD76';
P;1G<3NF,3,F$'I*#!/LZ35^P.uP!5$b04\X(+Cf(nEcW@4@<-3nE$/kN"HmSa99Mr(!b,SYD.
.B+BnunTCkr+T!Kp)eG]8fsOp$R@P&6@<04Ap3+Cf(nEcW@4@<-3nE$/kN"HmSW!g3SI99Mr(!
b,SYD..B+BnunTCkr1V!Kp)eG]8fsOp$R@P&6@<A7]86E+*ftP&QQeHX^H*+DHW6BOtmjBQTDR
L^9/%P'CGLF!,1Q!bc.ZB4uCMCkr@[2Ni<5P#Pt'A!1e>F(:@9HX^H*+DHW6BOtmjBQTDRL^9/
 %P'CGLF!,1Q"__I]B4uCMCkr@[2Ni<5P#Pt'@j#3$A!1eo"FFTeF!,1Q!,,qXB4uCMCkr@[2N
i;oBQG;1L]qI'BkM+$P&,p[OuAJJI?IQ?ARcikF(:@9HX^H*+DHW3BOtmjBQTDRL^9/%P'CGLF
!,1Q#\[d`B4uCMCkr@[2Ni<5P#Qjm83B!fEb0,A061WACh[cu@<+#1@WNZ$@WO23BQG;*BQGhJ
@WNYr+C]#*P%'4JP,Wec5IaSWMEgR#Z@.mgMEeUJls28dG]Y'MG]YT\AU&<A@;KXjDN4j9AS-$
;FCf]=AoDR/OioD"AU&<BDe<U&ATW_/06CcMFEh_9AohO*MS>LHRP/SuF<GL@FD5Z2F!*Y1+Co
D.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$Df0,rDe*FB30If*F_`U>D_?-CEcQG7F`MSBDD
#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/onecode 0.0 0
%%EndData
%%EndResource
% --END ENCODER onecode--

% --BEGIN ENCODER postnet--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: USPS POSTNET
% --EXAM: 01234
% --EXOP: includetext includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp postnet 0.0 0 0 0
%%BeginData:         45 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05tiNF  Db  Z3H\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  A8c  @-A9)+  &+  D,%uF(  LLj
055<6Cis9"FCf]=  +D,%u  F(L  Lj0 6U  c?  Bk1  XoA  RfCb@r  !3  !@;L!r  Ou"
b*DI[L*A7]7aARf        LiDK  KH7 F<  G1  (Ci  a0N         1G<         i]G]
[P9DKM#]Ou"b5AU         &<<B  m  O?  H$  Bd1  uFC        f]=H        #I;,F
(KHLq3!NeBOtmjB  QT+q!!  !"^  1  N.5 SB l@m1  P-6  N[FE2)5B68  E<AWf3'L]NY
rOpu>KFD5Z2F*j(  NAmoLs  AWf  3 'P!F    GY<0  B5(  @ZmRN0oc8t  P)XR(F_-_!H
]ftD5*C&O5*@^MH  ]ft&Ec  krV    1OYE    dI?J  0)*  g/N:DfBf4D  f0WZ5*@^MP#
Q@=FD5Z2F*j'+I?  I/TFC   f]=A   oDR/+   EV1>  FCo  H/FHS5=1G<  i]G]\"@H=\4
@AU&<<BmO?R09S+         EFCf]   =H#I;  ,F(KG  9FC  f]=H#I;,F(  KHV09S+EBOt
mjBQPA1ASGdjFHS       ;?1G<3G  Ebo<)+  C\c"@  rGm  hP%&TCCh[E  gFCerqARfM&
L]N[<I?IQm1Lad5Ch7L?"d3_3@<-0qDMSU^D3>$2@<-0qDMS[`D3>$K04K->E,[FKDf^#<ATU7
IA5$QPB67gI4B5<V;]nn4;cHL\<$6%#F*&O6AKWi]+?:Q_EZd(k+Co2!BlnD=AU%^$F_#3(B-:
\tARfKuA8,[jF>#:f@;0doATDg0EfrY8P#Pn!Eas#uAUBS"LbP!(P!4[^P#.<^HS8iPBlJ#DE,
Tf>DImoV@:V`=@<,ddFCfKQ,uml?;]nn4;cHL\<$6%#F*&O7Df0Z*Bl5&3DJXS@A8,[jFE9)gE
a`['AS#n&DfV"*I?IQXP"@<9@<,jk@<-FL$8=1i1GgsI2`Ng\1G<6OARfLsF_up7Ou%moL]Lsn
Ebo<)L]N[<HS9)r5*@]T@q]F`CNFW8+Cf(r@r$..D'3:rEas#uAKY]M98G9bWKI:F1OYEW04S[
,@r$..D28O/BOt[hF*2>U$Bf.eWJCnEC6CAr@;KXg@<?'jBOt[hHQZd+Eas#uAKYGjEbo<)P"T
7mEarckEcW@5BOt[hF*2>_99O.=04K->E,[FKDf^#<ATU7IA4($A@r"JHB5)IJ.nOVgDfTl0@r
rhn;c$C8:et"h:.8,)@q]F`CER/%B5)H1E,ol?Bk1dc0/%?SBldisEcQ)=P!=AX<%h]hEas#uA
KYGjEas#uAV^=q@<-0qDN[\V1OYEc04f$2F!+\I"Z8.m1,=jn1,:UB23%hq1,UgENWh0n2)R.L
"Yqqj1,Y'q1,UgE16)Mn2)R-ENWh9q1,:_I"Z8%j2):0q2)7$E16)AmNWD"COu"b#BQG;*@<-0
qDMSIZCkr=Z!KmbP1G<ipF<G%$Ebo<)L]NY>OpR:-04f$2+D#G#F,10d99M(aBOtmjBQS;<ASu
"@@Zh%\1Pc$e!G-.YP%'4JP,Wd]C6CcD1MC?6B4uC.+DN$1DIXf(L]NZ4Ot:9XBkM+$P&,pXOu
AJJI?I-1BQJt0BOtmjBQS<YH&)HV!FfJXCh7L?!KsF/056S5Ou"b&DIXf#DI[`1@UX:eDe*E%B
p),F0TrDu99M(aBOtmjBQS;<ASu"@@Zh%\1Pc$e!G-.YP%'4JP,Wd]C6CcD1MC?6B4uC.+DN$1
DIXf(L]NZ4Ot:9XBkM+$P&,pXOuAJJI?I-1BQG;1L]rrXL]NY>BOtmjBQS<YH$":Q+DDs&+C\c
"@rGmh+DHW4P"]SG"d3\X!KmJ@5Z@F'P&,5OG]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9
G\P"76;DIXf#DI[`1@q]F`CNFW8P"Uro05+p2B4uC.+D#G#P%'R\Ou%moL]M()A!1;W!KsF/05
?Y6Ou$c_BkM+$F!,3?ASu!#C5;nR9Tgr?ASGdjFHUHr"d1d,G^Y`G@VBg*@UX:nAT!;-P&,pTO
o]6-BkM+$F-:f_DI[L*A7]7aARfLiDKKH7FF,-PG]Y';@<-0qDBN.+@UX:eBOPq&+Cf(r@r$..
D284U9O_FNCh7L?"d3\X!KmJ@5Z@F'P&,5OG]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9G
\HZXLS+C\c"Ch7K,>E/_,@UX:nAT!;-P&,pTOo^A0P&,plOu@DnG]\4LAnH*qF<G[:G][P9DKI
"CAU&<<BmO>5?'9G\P#X/HDIXf#DI[aD$^+/G1G<EQBkM+$F!,%3A!1;a$'I*#!/LYeDI\i=L]
N[<HS9,s5*@^8ASGdjFE8R>+D#G#+DQ]5P"_#iBOtmjBQTDRL]rr"P'DD<87H7R+C\c"Ch7L?"
d3\X#*K"#ASGdjFE<Uj4?P9;ASs.SEb0-)Bl7KjE\Cm8F!+q*F"_!3F!+[0@VBhG@XEn2I?K4g
06:TD+BostBQK>GL]N[<H\t%t;='0)n"$b4P(SWV\5DTu+DG_'Cis9"FCf]=HS9JcF<G[MFFB<
O05kfO+E)4@Bl@m1+?ht3A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b1Df^#<ATX(pP%6
4gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`
V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/postnet 0.0 0
%%EndData
%%EndResource
% --END ENCODER postnet--

% --BEGIN ENCODER planet--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: USPS PLANET
% --EXAM: 01234567890
% --EXOP: includetext includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp planet 0.0 0 0 0
%%BeginData:         44 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05t`9D  Im  p:L_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  ei&
Bl7EsF_#'*AU&;>  AmoLs  AWe  i&G %#  3$  A79  Rk@  q]F`CE  R4  tCia0N  1G<
H[@r-9uARfCb@r#        drFC  f]= +D  ,%  uF(  LLj         06C         cMFC
oH/FHOV,1G<i]G]         \"@H  =  _m  >O  u"b  5AU        &<BD        e<U&A
TWb(Ou"b)ASGdjF  G`6^!!  &0<  D  fBf 4D f0WZ  Y:j  s=EbTE(FEq  h:P!+/J!Ko=
'%<$3-Bl@m1H]kF  A@;L!r  P!+  / T5^e    epOu  SV6  P,4<rNWD;+  NHB2`AWf3'O
tDh\P')pOOu%N5O  tCcrF_  -^l    I?IT    YP%B  dtO  uY16E-,f4D  KCt)Ou%NL<,
Z_tBl@m1H]g15P"  @<KAU   &</D   f0Y>F   Cf]=  AoD  R/OtDhQ06C  cMFE;/BAKZ)
+G]\"@H=`6mOu"b         5AU&<   BDe<U  &ATT&  :AU  &<BDe<U&AT  X(gOu"b)ASG
djF<G7.BkM+$OtV       tS04J@1  Ch7K,@  UX:eD  e*F  B@Wl0rBk1X  oARfCb@r$FI
!KsF1P#RT#@UX:nAT!;3P&4Z:Ebo<)L^fMaOp$+b@WuO*E%Z*G@;]Xu6=FCuASu.&BT>)Q;c$C
8:eX/M78tCHF`VXI@V$Z:0d(CT+>GYpA8,[jFE8R9G[kQ4A8,po+Cf(r@r!2tBkM.%0/%?SBld
isEcQ)=P!=AX<+99V@rGmhH]g@E0Tp%25);4^:m,jG04K->E,[FKCgh3mF@'DH6YKnK@:OCjEf
MDF;c$C8:eX/M78tCHF`VXI@rH7,@;0U%Df0B:+Co2!BlnDL061K8F(Jp'Ec5u]5CJ\oI?I/T@
UX:eBOPq&NX@Hp1,CaE2E*TUOu"b$BOt[hF*2>U!0T-o!/LYb@<-0qDMS=VWI$:4P!5$b04S[,
@r$..D'3>%ARfLsF_r71@<,jrA7ZltP"UTbP,XTFOu%NL82"IdARfLsF_upA@q]F`CNFW8L^K;
[P,X6EP%p.9G%#3$A79Rk@q]F`CO715@<,jrA7Zlm@<-0qDN[Y%@<,jk@<-E3@q]F`CNFW8P"U
sTHS8iPBlJ#DE,8s#ATU7IA4($A@r"JHB5)IJ.S4MfDfTl0@rrhn;c$C8:eX/M78tC>BOt[h+C
o2!BlkJ:Ec6,8A7]:)061K8F(Jp'Ec5u]5CJ\o04J@1@rGmh+C\c"@rGmhL]CmmEbo<)P"_#pI
?IP_ASu"!+Bsj01,:^E23%ht2)R-ENWh9t1,UhI"Z8.m1,Y'q2)7$H16)Mq1,UgENWh9q1,UqL
"Yqqm2):0q1,UpE23%hq2)7$HNWD"t!B"/G1G<3NF!+q#Ebo<)L]rrXL^0(DOpR:-06DG\+C\c
"Ch7L?!KmJH$'I(tASu!#ASu"!L^K;<Ou"b)ASGdjFE8R9DI\i=OpR:-L]E53ASu"@@Yb&JWI$
:5P!5$bBOtmjBQS;<C*7)*@j#NB!Kp->/8/U/B4uCMCkr7X2Ni<5P"9%qF,0g0ASGdjFE<UjL]
E53@UX:nAT!;)P,Wd]Bp(ZC1G<<W@j#?#@ric%@<,jrA7ZltP"UTbP,XU;Ou"b)ASGdjFE8R9D
I\i=OpR:-L]E53ASu"@@Yb&JWI$:5P!5$bBOtmjBQS;<C*7)*@j#NB!Kp->/8/U/B4uCMCkr7X
2Ni<5P"9%qF!,1Q"d3\X!KmIsASGdjFE<UjFEhmMBcpV&@UX:eDe*E%BnueQ9PK:dP&,pTOo^G
*;tnV$Cij65FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD<82"Ol@j#?#@ric&BOt[hF*2
>_99M(aBOtmjBQS;<ASu"@@Zh%\1Pc$e!G-.YP%'4JP,Wd]C6CcD1MC?6B4uC.+DN$1DIXf(L]
NZ4Ot:9XBkM+$P&,pXOuAJJI?I-1BQG;*@<-0qDMSIZCkr+T!GH%YB4uC.P'LbZ@r-9uARfCb@
r#drFCf]=HQ[ETF<G%$Ebo<)+Bost@<,jk@<-E3@q]F`CNFW8L]NZ4@UX:nAT!;-P&,pTOo^G*
;tnV$Cij65FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD%FEhmM@UX:nASrVpNWC83@<-0
qDMSIZCkr+T!Jj:0Ckrsl2KWMTFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD<<A.p$@j#
?#@rmG6P"Uro05+p2B4uC.+D#G#P%'R\Ou%moL]M()A!1;W!KsF/05?Y6Ou$c_BkM+$F!,3?AS
u!#C5;nR9Tgr?ASGdjFHUHr"d1d,G^Y`G@VBg*@UX:nAT!;-P&,pYOo]6-BkM+$F-:f24>1_dD
D*Y`ASu<uDIm6s04JU9+C]#*04JC3+BostBQK>GH\_ZMP(R$nF(025>9IBgF-:!g!KsF/MEeUJ
m#"$rS[*[,K8Mn';=%R2Bl7EsF_#'*AU&<D06DG\+EVjMI?IP_DfBe@DfBf4Df0V=5!C*"Df0Z
-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<]`@;]XuOuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2
#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/planet 0.0 0
%%EndData
%%EndResource
% --END ENCODER planet--

% --BEGIN ENCODER royalmail--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Royal Mail 4 State Customer Code
% --EXAM: LE28HS9Z
% --EXOP: includetext barcolor=FF0000
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp royalmail 0.0 0 0 0
%%BeginData:         48 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  061uV@  ;K  dhBl&-  P'T
t>:%52X=FD5Z2F-  8_M1G  <3G  Eas  # uAW  f6?  1G<  9WDKKE  0@  <Wi+@;  L!r
Ou"b*DI[L*A7]jo  G]Y'?  @;L  !rO u"  b7  @;K  Xg@  <?'jBO  t[  h+D,%u  F(L
Lj055<6Cis9"@q]        F`CM  @[. AU  &;  >Am  oLs         AWe         i&FC
f]=AoDR/OiNV@06         CcMF  E  ;/  BA  V^\  V1G        <i]G        ]\4LA
nH*qFGTaU1G<EQB  kM+$ME  WgP  1  QjP 4E -,f4  DKC  uE06;5UBl7  R*H#R>X4aVt
cOu8C3DfBf4Df0W  CP,i2'  Cia  0 N4aW    >WI?  IQm  30Ia6V33Qn  !BlU*FE2M8P
!+/T/Wr;\FcnqO1  OXV5/T  c#U    AWei    tP#Z  pnA  We*t3A5;iF  D5Z2F-8_M1O
YEcDfBf4Df0WCOu  %NL8M   >0sG   ][P9D   KI"C  AU&  </Df0Z[/Wq  nCFCf]=F(or
3+EV1>FE;/BAWe^         01G<i   ]G]\4  LAnH*  qF<  G[:G]\4LAn  H*qFHS;?1G<
EQBkM+$+D>>#B4u       CM09S+E  @UX:eB  OPq&N  [.e  .<``C+2)$a  ?1GhEV2`Nf`
84,d67Rp3F8kViP<)6=f;H&`704S[(Ectl-F,2*)23KbO!/LZ3,C<p6@<-O"Cibb'OuQoZEarc
kEc[C-L]NZ4P!5%RI?I-W!/LYb@<,jrA7^p5L]N[<HX^E(@rGmhP!4[&P"]A!@<-O"Cibb'P$j
GlHS8iPBlJ#DEc653Ci*TpCdMQ@6YKnK@:OCjEfMqR9f,d96Qg5gF*&O7Df0Z*Bl5&3DJXS@@p
s=jFCAu.Ch7^1ATDi7@;]TuA8,[jFE9)gEa`['AS#n&DfV"*I?IQXP"768@<-0qDBNCsEas#uA
WgMG@;KXg@<?'jBOt[hH\_]cWI9q/Ou"b$BOt[hF*2>?Dg.!;Ou"b$BOt[hF*2>0Det40Ou%mo
L]LsnEbo<)L]N[<HS9)r5*@]TBl7I++Cf(nEctl-F!+q#Eas#uAKY]C!Kp->99M(a@q]F`CNFW
8Ec6.E@q]F`CNFW8Ec6.EBl7I+L^'#?Oo^_%04S[,@r$..D.@L#+Cf(r@r$..D.@L#+DG_(G_c
QeC6AU\1OYEW04S[,@r$..D'3>%ARfLsF_u/;GDHHdC5<(WCh%-i@r$..D.@L#L^'#WOo^_%G%
#3$A79Rk@q]F`CO715@<,jrA7Zlm@<-0qDN[Y%@<,jk@<-E3@q]F`CNFW8P"UsTHS8iPBlJ#DE
c653Ci*TpCdMQ@6YL%@CIDlLBlo@]8T&$VEcP`$F<FIU1fHb/+Cf(r@r!2tBkM.%+E2@>G%kJu
A1oTV@;0doATDg0EfrY8P#O)D@<,jrA7Zlm@<,jrA7^Ps@UX:nAT!Z)Ou%NL<%hg#@ribsNW_-
o0JJLi1,:R=NW_*n0JSRj1,CX=NW_-n0JSRj1GU[=NW_'k1,=jm0JG:=NW_$j1,Fpn0JP@=NW_
'j1,Fpn0ebC=NW_'m0J\Xk0JY@=NW_$l0Je^l0JbF=NW_'l0Je^l0etI=NW_'m1,+^k0JYF=NW
_$l1,4dl0JbL=NW_'l1,4dl0etO=NW_-m0J\Xk1,(F=NW_*l0Je^l1,1L=NW_-l0Je^l1GCO=N
W_-m1,+^k1,(L=NW_*l1,4dl1,1R=NW_-l1,4dl1GCU=NWCnq!Ae#E1G<<W@rla4+C\c"Ch7L?
"HmSW#*K"MV33VfFEhmM@UX:nAT!;)Oo^^POu$Ze@rla4L]D"(@rmGOP"Us`L]E53@UX:nAT!;
)P,Wd]Bp(ZC1G<H[A9]5,BOPq)@;L!-@UX:eDe*E%BnueQ9Ti&31M(H6F*)FFBnunTCkr+T!G-
.YF!,17A9a81P'M.oF<G9?>9IB`Eas#uAKY]C!Kp,jL]ilWL]NY>MEk,7c]W*dAU&<BDe<U&AT
T&:AU&</Df0Y>FCf]=F(or3+C1.TI?I-4DI[a0EZeh"Ebo<)L]ilWL]NY>ASu"!+Cf(r@r$..D
3@PTH"h/+Cis9"@q]F`CM@[.AU&<D+EVjM+C\c"Ch7K,>9IB`EarckEcW@5BOt[hF*2>U!Kp,c
@<-0qDMSFYCkr+T!K'-@pWo"=FCf]=H#I;,F(KG9FCf]=AoDR/+EV1>FE;/BAKY9AG^Xp\G]Y'
;@<-0qDBN/D!?bi[Ebo<)L]ilWL]NY>MEk,7c]W*dAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(o
r3+C1.TI?ITADI[a0EZeh"Ebo<)L]ilWL]rqBASu"!LaA3WP'J]i@WNZ'DI[a0Efsmp$'I(t@V
Bg*ASu"!FE3OROpR:-L]E53ASu"!FE3ORL]N[<HS9)r5*@]TASu!#ASu"!FE/L<L]NZ4Ou$Ze@
u^RDP!+/$@WNZ+L]_=%BkM+$P&,p[OuAJJ@VBg*Bnuh(ASGdjFHUHr#a.*/G^Y`SASu"<!ATa#
HX^H*+DHW3BOtmjBQTDRL^9/%P'CGLF!,1Q"__I]B4uCMCkr@[2Ni<5P#Q"1@u^RFP!+/$@WNZ
+L]_=%BkM+$P&,p[OuAJJ@VBg*Bnuq+ASGdjFHUHr#a.*/G^Y`SASu"<!Afm%HX^H*+DHW3BOt
mjBQTDRL^9/%P'CGLF!,1Q#\[d`B4uCMCkr@[2Ni<5P#Qjm83B!fEb0,A061WACh[cu@<+#1@W
NZ$@WO23BQG;*BQGhJ@WNYr+C]#*P%'4JP,Wec5IaSWMEgR#Z@.mgMEeUJls1`JDI[L*A7]joG
]\9cFEhmMFEhnUP#O)QE-*4@E-,f4DK?pa4s4BSDKKE0@<[lR0/%?WDJX$)ARTVB<0B7iOq*X2
061uV@;KdhBl&qlP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5G
bFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/royalmail 0.0 0
%%EndData
%%EndResource
% --END ENCODER royalmail--

% --BEGIN ENCODER auspost--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: AusPost 4 State Customer Code
% --EXAM: 5956439111ABA 9
% --EXOP: includetext custinfoenc=character
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp auspost 0.0 0 0 0
%%BeginData:         59 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04B!EE  ,T  f>H\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  A8c  @-A9)+  &+  D,%uF(  LLj
055<6Cis9"FCf]=  +D,%u  F(L  Lj0 6C  cM  FCo  H/F  HOV,1G  <i  ]G]\"@  H=_
m>Ou"b5AU&<BDe<        U&AT  Wb( Ou  "b  )AS  Gdj         FG`         7<1G
b1M04T-GFD5W)De         3frN  X  93  /@  <,d  dFC        fKU1        N.5SB
l@m1P-6N[FE2)5B  68E<AW  f3'  L  ]NY rO pu>K  FD5  Z2F*j(NAmo  LsAWf3'P!FG
Y<0B5(@ZmRN0oc8  tP)XR(  F_-  _ !H]f    tD5*  C&O  5*@^MH]ft&  EckrV1OYEdI
?J0)*g/N:DfBf4D  f0WZ5*  @^M    P#Q@    =FD5  Z2F  *j'+I?I/TF  Cf]=AoDR/+E
V1>FCoH/FHS5=1G  <i]G]   \"@H   =\4@A   U&<<  BmO  ?R09S+EFCf  ]=H#I;,F(KG
9FCf]=H#I;,F(KH         V09S+   EBOtm  jBQPA  1AS  GdjFHS;?1G  <<W@ribsNWU
sh0TH5h0JSRi0JG       8B"#)G`  NWUsi0  oc>i0  f"a  k0JY>B"#)J  bNWUsj16)Gk
0JJLh0eb>B"#2JbNWV!j0TH5i0en[j0ekGD"#2PbNWV!k0oc>j1,=jl1,(DB"#;PbNWV$j16)G
l0eeUi1,1MD"#;SdNWV$l0TH5j1,4dk1,:VF"#DVbNWV'k0oc>l0J\Xj1GLSD"#DYdNWV'l16)
Gm1,+^j1GU\F"#D\fNWUsj1QDPk1GFgk0JbGD"#)MdNWUsk1QDPl0Je^k0ekJE"#2PeNWV!l0T
H5i1GOml0f(SF"#2SfNWV$j1QDPm0f+gl1,:YG"#;YdNWV$m0oc>k1GXsm1,C_H"#DVeNWV'l1
QDPn1,Fpm1G^_F"#D_fNWV'n16)Gm1Gb$n0JG;C"#)GcNWLmgNWLmhNWLmiNWLphNWLpiNWLpj
NWLsiNWLsjNWLskNWM!jNWLpkNWCqAOu"b#@<,jk@<-FL5X@_(6q'R884cEH9MJ8X:f1+h<)lt
#=BSf]0etOA2)[BQ3FQB,A7]@cBPD3sCi+'.E,fo>FEMbNG^4TX,Eai9@UX:nASrW"@<,jrA7^
p5Ou$QUEas#uAV^>B!g66;!\lEm4aVu2I?IQ=@<,jrA7^PsL]W`5NWM$pP!+/J-%1qU@UX:eDe
*F8!/L]>9TB033KcOPLbsOC<+99V@rGmhL]E54P"^l;2DUFYH\b%;P#O)GDI[a0EfrVLV33VfF
EhmM@UX:nAT!;*P,XTNOu$Ze@rla4L]D"(@rmGuP"Us`L]E53L]MiUBp(ZC1M(H6F!+q#Eas#u
AKY]C!Kp->/;QQS!Kp)eDI[a0EZf(P!g7AU!g3S?",I#ALQZq2P":B1L]N;<HS9)r5*@^5DI[`
1@UX:eDe*E%BnueQ9Tgr_5`u/294`!NF*)FFBnuhRCkr.U!Jgi6!g8>%H$":Q+DHW5P,VY.@UX
:eDe*E%BnueQ9PK:aP,X6=P&,pYOo^G*;tnV$Cij65FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=
\4)P'DD<87Qd`FD5W)De3frNX'HED.Ra%A!0!%L]E53@UX:nAT!;3P,Wd]Bp(ZC1M(H6F!+q#E
as#uAKY]C$BbFG!Kp->/;QQS!Kp)eDI[a0EZf(P!g7AU(6S]S",I#ALQZq)G]Y'BL^9.E>9IB`
Eas#uAKY]C$BbFG!Kp,jL]W`UL_c-SMEk,7c]W*dAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or
3+C1.TI?I,S@qfOkASrW"@<-0qDMSX_WJCV=Cm$T&H\_ZX!FfJXCh7L?$^.K9056S5Ou$QUEas
#uAKY]C$BbFG!Kp,c@<,jk@<-FP5*CngFcp2eBl7I+P!5$bP')q104f$2+D#G#F!,17A9a81Ou
$Ze@rla4+DHW6P&,piOo]-3A!2+ZG]Y'BL^9.E>9IB`Eas#uAKY]C$BbFG!Kp,jL]`fVL_c-SM
Ek,7c]W*dAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?I,S@qfOkASrW"@<-0qDMSX_
WJCY>Cm$T&P#[;R@qfOkAT!Y3L]M()@rla4P%'4WP,We>DI[a0EfrUtDI[aD99Mr2H$tiH062,
U@:F%aLd6b]P&-9fOu%-"FCAWpAV^=jLd6<C!.C#_?'9JRF*(i"Ch8Df>DN98!JiseI?I-,P'J
^"Eb0EM!Ko6p5^P/%AU&;>E,oN5L]NYLOu$ueG]\a,Op$R@P&5P!DIn'7+Dtb8FGN;I_3-U&P#
R5;L]N;rHS9,s5*@]TDIn'7@qBImHQ[?MFCAWpAV`ThAU&<[Chf+6I?HC(AU&<,ASc0*EcZ>2@
VfV35]CaTG*6ZVOo^_=L]NYLP'CkUG][G,Ci#8-Ld7++L]ETTHZ!D>FCSluC`mV,G][G,Ci#8-
LdR?AP'DD<<.0p#05trCFs([6G]]*)I?K49EcY`/A7]g)ASu"!FE3ORL_,`KL]`f<L]ikAOpR:
-EcY`/A7]h<!*b6^H\_ZMP(R&'H&)NX"(c@[F*)Gc@YbSYWI$:4P!5$bEcY`/A7]g)EcY`/A7]
hF@VLW"P,X6>P#@IBL]N[<ASu"!FE/L<L]NZ4Ot;D#P&+]I@rla4+DHW4Oo^@>P"_#iL]ilWOo
]-3@rla4+DHW5Oo^@>P"_#iOo^_jI?I-AF(9-!ATO#DL]rs@M#W82HS9)r5*@^X!/LZ3"FDe:P
!5$bEcY`/A7]g)Bcq/R!HN6kDe*F#+DDs5Oo^_=EcZ>2@VfV35[0$uL_5F`L`V?Q>p*mF99O+3
F(9-!ATJu.L]ikAP"Ur=P"UtSP'DD<8:?Xl04S[,@r#RmA7^c00JG170JG170JG17L^]HCOr9E
=L]E53L]_uWBp(ZC1G<<W@j#f5@rGmhF,0p4P,XU;L]iM9P,4<qOu$T]ARfLcDe*E%BnukSCkr
1)DI\i=P,XTFASu"@H$tiHASu"!FE/L8DI[a0Efsmf%[*f$BOt[h@rGmhP'LVV@rla4+D#G#F*
)Gc@Yb)KWF]sWF,3GO99OQR@UaC$ASu"!FE3OROpR:-04JU9+D#G#F*)Gc@Zh%\1Pc$e!G-.YF
*)Gc@Yb&JWI$:4P!5$b04f$2+D#G#F*)FFBnueQ9Th2CDI\\-0TnSG@UaC$Bnub&ASGdjFHUHr
#a.*/G[b?-+DHW;BOtmjBQTDRL^9/%P'DD<<+TrWNWCkt4aUXIF!,1Q"))7[B4uCMCkr@[2Ni;
oBQG;1L]qI'BkM+$P&,p[OuAJJI?IQ@DI\\-16OeI@UaC$Bnub&ASGdjFHUHr#a.*/G[b?-+DH
W8BOtmjBQTDRL^9/%P'DD<<+TrWNWCr!4aUXIF!,1Q"))7[B4uCMCkr@[2Ni;oBQG;1L]V7$Bk
M+$P&,p[OuAJJI?IQXP"7\t061WA0/%?WDJX$)ARTU4@UaC$@UaC3@VBg*@VBg9F(025>9IBgF
-:!g!KsF/MEeUJm#"$rS[*[,K8Mn';=%R2Bl7EsF_#'*AU&<D06DG\+EVjMI?IP_DfBe@DfBf4
Df0V=5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<0ZF)Z&=FHSVHA1r(@/n8fPFCfK
5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+
B\;u~>
% uk.co.terryburton.bwipp/auspost 0.0 0
%%EndData
%%EndResource
% --END ENCODER auspost--

% --BEGIN ENCODER kix--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Royal Dutch TPG Post KIX
% --EXAM: 1231FZ13XHS
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp kix 0.0 0 0 0
%%BeginData:         35 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05G9HH  \`  B!23JD  %Df
Bf4Df0WZ5*@]T@U  X:eDe  *FB  5*@  ] TA8  c@-  A9)  +&+D,%  uF  (LLj05  5<6
Cis9"FCf]=+D,%u  F(LLj  06C  cMF Co  H/  FHO  V,1  G<i]G]  \"  @H=_m>  Ou"
b5AU&<BDe<U&ATW        b(Ou  "b) AS  Gd  jFG  `7<         1Gb         1MDf
Bf4Df0WZY:js=Eb         TE(F  E  qh  :P  !+/  J!K        o='%        <$3-B
l@m1H]kFA@;L!rP  !+/T5^  eep  O  uSV 6P ,4<r  NWD  ;+NHB2`AWf  3'OtDh\P')p
OOu%N5OtCcrF_-^  lI?ITY  P%B  d tOuY    16E-  ,f4  DKCt)Ou%NL  <,Z_tBl@m1H
]g15P"@<KAU&</D  f0Y>FC  f]=    AoDR    /OtD  hQ0  6CcMFE;/BA  KZ)+G]\"@H=
`6mOu"b5AU&<BDe  <U&AT   T&:A   U&<BD   e<U&  ATX  (gOu"b)ASG  djF<G7.BkM+
$OtVtS04f$2F!+\         I">DM   c1QDS  l0etP  F">  DPd16)Jl0J  YGE">MSd16)
Jl0etME">DSc1QD       Sl1GCVF  ">DVd1  6)Jl1  ,(M  E">MYd16)J  l1GCSE">DSe
0ocAj1GU\F">DVf0TH8j1,:SE">MYf0TH8j1GUYE">VYc1QDSn0ebDD">V\d16)Jn0JG;C">__
d16)Jn0ebAC">VYe0ocAl0etJD">V\f0TH8l0JYAC">__f0TH8l0etGC">V_e0ocAl1GCPD">V
bf0TH8l1,(GC">_ef0TH8l1GCLgOu"b#@<,jk@<-FL,VUr.1GgsI2`Nf`6:4.07Rp!@8kViP:/
=\`;H$Op<``C+>*:Zp@q]:kG%#3.La8-@Ou%moL]N;VHXg_tEctl-F-8_M3+?<:@q]:kF-8_C!
Kp->5*C/=P":B/L]LsnEas#uAWgMY!KsF/@UX:eDe*FB5)96&9OhaEEctl-F-8_M@$5JU04K->
E,[FFBm;sQA4($=Ea`I"ATEeb91`5.D09oA+Cf>-FCAm$+E).6Gp$U*E+sE&C`mP*FED)7F!+n
/A0>DsB5)I/0/%?SBldisEcQ)=P!=AX<.0p#04J@1Ch7K,@UX:eDe*FB@ZiN#ASu"!FE/L5@<-
0qDMSFYCm(WX1G<ipF<G%$Ebo<)OpR:-L]E53@UX:nAT!;)P,Wd]Bp(ZC1G<H[A9]5,BOPq)@;
L!-@UX:eDe*E%BnueQ9Ti&31M(H6F*)FFBnunTCh7KoF!,17A9a81P'M.oF<G9?>9IB`Eas#uA
KY]C!Kp,jL]ilWMEk,7c]W*dAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?I,S@UaC$
ASu"!FE3OROpR:-04JU9+D#G#F*)Gc@Zh%\1Pc$e!G-.YF*)Gc@Yb&JWI$:4P!5$b04f$2+D#G
#F*)FFBnueQ9Th2CDI\\-0TnSG@UaC$Bnuk)ASGdjFHUHr#a.*/G[b?-+DHW5BOtmjBQTDRL^9
/%P'DD<<+TrWNWCkt4aUXIF!,1Q!,,qXB4uCMCkr@[2Ni;oBQG;1L]qI'BkM+$P&,p[OuAJJI?
IQ@DI\\-16OeI@UaC$Bnuk)ASGdjFHUHr#a.*/G[b?-+DHW8BOtmjBQTDRL^9/%P'DD<<+TrWN
WCr!4aUXIF!,1Q!,,qXB4uCMCkr@[2Ni;oBQG;1L^7[*BkM+$P&,p[OuAJJI?IQXP"7\t061WA
0/%?WDJX$)ARTU4@UaC$@UaC3@VBg*@VBg9F(025>9IBgF-:!g!KsF/MEeUJm#"$rS[*[,K8Mn
';=%R2Bl7EsF_#'*AU&<D06DG\+EVjMI?IP_DfBe@DfBf4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu
<uDIm6sP#RT)I?G)'1G<NXG`k%LA1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`
Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/kix 0.0 0
%%EndData
%%EndResource
% --END ENCODER kix--

% --BEGIN ENCODER japanpost--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Japan Post 4 State Customer Code
% --EXAM: 6540123789-A-K-Z
% --EXOP: includetext includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp japanpost 0.0 0 0 0
%%BeginData:         43 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05=p7@  ;^  %&F*)b  b'T
t>:%52X=FD5Z2F-  8_M1G  <3G  Eas  # uAW  f6?  1G<  9WDKKE  0@  <Wi+@;  L!r
Ou"b*DI[L*A7]jo  G]Y'?  @;L  !rO u"  b*  DI[  L*A  7]7aAR  fL  iDKKH7  F<G
1(Cia0N1G<i]G][        P9DK  M#] Ou  "b  5AU  &<<         BmO         ?H$B
d1uFCf]=H#I;,F(         KHLq  3  !N  eB  Otm  jBQ        T+q1        G^hM1
N.5SBl@m1P-6N[F  E2)5B6  8E<  A  Wf3 'L ]NYr  Opu  >KFD5Z2F*j  (NAmoLsAWf3
'P!FGY<0B5(@ZmR  N0oc8t  P)X  R (F_-    _!H]  ftD  5*C&O5*@^M  H]ft&EckrV1
OYEdI?J0)*g/N:D  fBf4Df  0WZ    5*@^    MP#Q  @=F  D5Z2F*j'+I  ?I/TFCf]=Ao
DR/+EV1>FCoH/FH  S5=1G   <i]G   ]\"@H   =\4@  AU&  <<BmO?R09S  +EFCf]=H#I;
,F(KG9FCf]=H#I;         ,F(KH   V09S+  EBOtm  jBQ  PA1ASGdjFH  S;?1G<<W@ri
bsNWV'k0TH5k1GF       gk1GLYF  "#2SeN  WV'm0  oc>  l0Je^k0etP  F"#;YeNWV$k
1QDPk1Gb$n0JbDC"#2PbNWV!i16)Gl0eeUi0JP>C"#;PbNWUsj0oc>i0Je^k1G^hI!])Qk!\lK
:Ou"b#@<,jk@<-FL,qq&/1GgsI2`NfL5sdq,77Kd<8P2WL9hnJ\;,U=l<E<1'=^$tE04J@1Ch7
K,@UX:eDe*FB@ZiN#ASu"!FE30OL]NY>L]`fVL]ikAP,4<t04\d0BlnEP'Trcc1G<ipF<G%$Eb
o<)L]NY>OpR:-ASu"!FE30;ASu"!L_GqEP'J]jBOt[hF*2>U!0T,kC5;kQ1G<Hu!0T-o!/LYb@
<-0qDMS=VWI$:4P!5$b@UX:eDe*E%BnueQ9O_FN@q]:kF-8_MNKSFI@P;G5A9a8$Ou&8DP'(JV
A9`n<P"KG+A9`nVP%Kj[HYS?LP#-Lg5^eep04\d0BlkJ3DIe!J!KsF<$Be;C$BbFQ1M(H6F*)F
FC5;tTCkr.U!G-.YF!,"-B5)IN99OQR@q]F`CNFW8+Cf(r@r$..D'3A'B5)IN!Ko6LBkM.%F!,
3?A8,[jFHUl%C*78I!KmJH1OYEcC5<Od:j\?jI?IP_A8,[jFGKp[1ML`;G_dZ/4aShmBkM.%L^
oS(I?IQDDIe!J$^++rDIe!J-'Dl'"FDe4BkM.%+DG_(G_cB`WJCnEC6CB$P#Q.5A9`n<P%K%oA
8,[jF<G:8A9a7nI?IQ@DI[a0EZf+Q"-RJV!g3RqDI[`1A8,[jFHT:[GqWZ@ARfLsF_r72BOt[h
F*2=BA8,[jFHQZf1Lt34BlnD=C*7&$B5)ING]\1P+DDs&+C\c"@rGmh+DHW4P"]VH"-RJV!g3S
A5Z@F'P&,5OG]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9FcC*78I!KmJH1OYEWC5;nH'Sl
dQWI$:6P!5$bASu"!FE/L>L]`fVL]W_?ASu"!L^oS@P'J]jBOt[hF*2=B@q]F`CNFW8L^oRKOu
$W_B5)I/+DZcCP'DD<82"IdARfLsF_r72BOt[hF*2>U'9[*d'9YPBWKK&KDI[a0EejdQ'SljSC
m"g1DI[`1@q]F`CNFW8P"Us`ASu"!FE30=L_Y^JP&-9^ASu"!L_Q"FP'J]jBOt[hA8,[jFH-AE
Ou$fi@r-9uARfCb@r#drFCf]=HS8lBARfLdBkM.%+C\c"@q]:kF!+t+ARfLsF_up8P"_#pI?IQ
OG]Y'BL]NY>>9IEhARfLdBkM.%L_PXIP&,pUOo^G*;tnV$Cij65FEqe:AohO*+EV1>FCoH/F<G
[:G]\"@H=\4)P'CPU@rla4L_PXGOo^@@P&,pUOo]-3@rmG?P"Us`04JC3L_Y^JP&,pWOo^^POu
"b#BQG;*@WR]AOpR:-L]E53@UaDA@Yb&JWI$:4P!5$b04f$2+D#G#F*)FFBnueQ9Th1b@WcR&F
GKp[1G<EaDJ=3K!0T-LDI\\-0TnSG04K'ABlo.5Ou"b)F`(o8L]W_qI?IQ@DI\\-0p4\H04K'A
Blo.2Ou"b)F`(o8L]rqtI?IQ@DI\\-16OeI04K'ABlo.5Ou"b)F`(o8L]rqtI?IQ@DI\\-1Qjn
J04K'ABlo.2Ou"b)F`(o8L^9/"I?IQ=@WNZ++C]J2BlkJ2ASGdjFHUHr#a.*/G[b?-+DDs3F`(
o8+D>>#B4uCMCkr@[2Ni<5P"7\t061WA0/%?WDJX$)ARTU4@UaC$@UaC3@VBg*@VBg9F(025>9
IBgF-:!g!KsF/MEeUJm#"$rS[*[,K8Mn';=%R2Bl7EsF_#'*AU&<D06DG\+EVjMI?IP_DfBe@D
fBf4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<KOE+*X'Df^#`30If*F_`U>
D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtY
uCM@[!I?IP~>
% uk.co.terryburton.bwipp/japanpost 0.0 0
%%EndData
%%EndResource
% --END ENCODER japanpost--

% --BEGIN ENCODER msi--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: MSI Modified Plessey
% --EXAM: 0123456789
% --EXOP: includetext includecheck includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp msi 0.0 0 0 0
%%BeginData:         43 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05YcEH  \`  B!23JD  %Df
Bf4Df0WZ5*@]T@U  X:eDe  *FB  5*@  ] TA8  c@-  A9)  +&+D,%  uF  (LLj05  5<6
Cis9"@q]F`CER4t  Cia0N  1G<  H[@ r-  9u  ATV  L.F  <G1(Ci  a0  N1G<H[  @r-
9uARfCb@r#drFCf        ]=+D  ,%u F(  LL  j04  S[,         @r$         13E+
P%5D/Wr>0Tn4F@U         WeaD  e  (R  W+  D,%  uF(        LLj0        6CcMF
CoH/FHOV,1G<i]G  ]\"@H=  _m>  O  u"b 5A U&<B  De<  U&ATWb(Ou"  b)ASGdjFGKs
\1N.5SBl@m1P-6N  [FE2)5  B68  E <AWf    3'L]  NYr  Opu>KFD5Z2  F*j(NAmoLsA
Wf3'P!FGY<0B5(@  ZmRN0o  c8t    P)XR    (F_-  _!H  ]ftD5*C&O5  *@^MH]ft&Ec
krV1OYEdI?J0)*g  /N:Df   Bf4D   f0WZ5   *@^M  P#Q  @=FD5Z2F*j  '+I?I/TFCf]
=AoDR/+EV1>FCoH         /FHS5   =1G<i  ]G]\"  @H=  \4@AU&<<Bm  O?R09S+EFCf
]=H#I;,F(KG9FCf       ]=H#I;,  F(KHV0  9S+EB  Otm  jBQPA1ASGd  jFHS;?1G<<W
@ribsNX.?p0etI=0f"ap0etI=0etL=NX.?p0etL=0f"ap0etI=1,1O=NX.?p1,1L=0f"ap0etL
=0etL=NX.?p1,1O=0f"ap0etL=1,1O=NX.Bp0etI=0f"ap1,1L=0etL=NWLsjNWV!k0jTqu04J
@1@q]:kF,gS]0etOA2)[BQ3Kc0O@UX:nASrW"@<,jrA7^p5Ou"b5G][b5DBNCsEbo<)Ou"b.De
(RVHS8lIA7^ofOu%moL]Cq'A7^+D0TrDu5)9Q/Cm"g^5(/ScP')Q^P&,pSH\_]c=GR<IC6AU\5
)9Q/;Na"q!0TKlP')pQI?IQm5(/T*L]E52@rGmhH\aA=WKI:F5(/ScP!5%OOo^@GP%od[P!5&.
L^K;[@rGmhP%'4JOo^`BOuS6t@rGmhP'N3M@rGmhP%'4MM#WWnLbOtmP'DD<%[&V$D/Wr>0mbQ
`De*FB5*@^3De*FB@Yb&JWFKjWAUB4eP,XU.OuS6uP,XU.L^'#WL]W_?P!4;W8Wn4P!+TqXAWg
MLL]`G6P)#3:Oo]uoK89nuC5<7\5*Dn$$^,7f3/@p)4^qi1D/Wr>0p2ZdP'(8QA7^p5L]W_?P,
4=$L]Cq'A7^pLOuQriA7^p5NWLphP'MJ&@rGmhP%'4JOo^`BOuS6t@rGmhP'N3M@rGmhP%'4MM
#WWnLbOtmP'DD<<IL#?Ou"b/@rcF)A2,fc04Sp2AWf6?1Lk?6AWgMY!KsElDe*F+LbP!kP!5$g
L]N[<P!4[-P%odSOo^_0I?I0bFbg$-De*FB@XEn5L]NZoP&-9^I?K5=$^,7\$^*]:WJCqFC6CQ
4$BdP]@:X4nA2,g%"FH;S@rGmhP%'4KOo^`BOuS6t@rGmhP'N3M@rGmhP%'FQ0eec9I=#IBA7^
p5L]NY>P,4=$L]Cq'A7^pLOuQriA7^p5L]iP6P)"iIOo^_jI?ITYOq*X2Bl7EsF_#&nBOt[hHQ
Zg3ARfLtH#R>T"`80g0eebRHX^E(@rGmh+Dl%-0ee$=<+BTQ@r$13E+P%7D/Wr>0JP8E4aUXHE
as#uAKYi.A2,b\D/Wr>0R]*`@q]F`CNOi@AW?q2De(RWP!+/$@<,jrA7Zm#De(RWI?IQ>BOt[h
FEqh:NX0N4Ec#`*0enhSHX^E(@rGmh+Dt\0D/Wr>0n#3a@q]F`CNOi@AW@"4De(RW0eebRHX^E
(@rGmh+Dl%-0ejefDe(RVI?IQ>BOt[hFEqh:NXBZ6Ec#`*0ekC:P!+/$@<,jrA7Zm$@rcF)A2,
e]D/Wr>0R]*`04J@1@rGmhP!5$b04J@1Ch7K,@UX:eDe*FB@ZiN]DI[L*A7]7aARfLiDKKH7FF
,Z_G][b5DBNCsEbo<)Ou%NL<.0p/06:TD+C\c"Ch7L?#a0"["d/nLV33VfFEhmM@UX:nAT!Y;O
u%/gF,0g-DI[aD$Be&FH&)HV!FfJXCh7L?!KsF/056S5Ou$QUEas#uAKY]C!Kp,c@<,jk@<-FP
5*CngFcp2eBl7I+P!5$bP')q104f$2+D#G#F!,17A9a81Ou%/gF!,1Q#a0"[!g3RqDI\iTFEhm
MBcpV&@UX:eDe*E%BnueQ9PK:kP&,pVOo]Z9G]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9
G\P"9Y'F!+q#Ebo<)L^9/[L]W_?ASu"!L^TA=P'K/P061WA0/%?WDJX$)ARTU4F(025>9IurF*
i]sP,Wkm8R3uYBQG;#+EM"5P%'4JOo^@?P#?X?ASGdjFFB=)>q]YrF!+[0F(03R@Yb&J!Jgf?;
L=3"I?K4g+DG_'Cis9"FCf]=HS9JcF<G[MFGKp=G][b5DN[\AP#O)QE-*4@E-,f4DK?pa4s4BS
DKKE0@<[lR0/%?WDJX$)ARTVB<0B7iOq*X205YcEOuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#
8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/msi 0.0 0
%%EndData
%%EndResource
% --END ENCODER msi--

% --BEGIN ENCODER plessey--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Plessey UK
% --EXAM: 01234ABCD
% --EXOP: includetext includecheckintext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp plessey 0.0 0 0 0
%%BeginData:         51 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05t`=F  )t  o<H\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  A8c  @-A9)+  &+  D,%uF(  LLj
055<6Cis9"FCf]=  +D,%u  F(L  Lj0 6U  c?  Bk1  XoA  RfCb@r  !3  !@;L!r  Ou"
b*DI[L*A7]7aARf        LiDK  KH7 F<  G1  (Ci  a0N         1G<         lgBk
1puARfgrDf0!"+D         ,%uF  (  LL  j0  6Cc  MFC        oH/F        HOV,1
G<i]G]\"@H=_m>O  u"b5AU  &<B  D  e<U &A TWb(  Ou"  b)ASGdjFGK  s\1N.5SBl@m
1P-6N[FE2)5B68E  <AWf3'  L]N  Y rOpu    >KFD  5Z2  F*j(NAmoLs  AWf3'P!FGY<
0B5(@ZmRN0oc8tP  )XR(F_  -_!    H]ft    D5*C  &O5  *@^MH]ft&E  ckrV1OYEdI?
J0)*g/N:DfBf4Df  0WZ5*   @^MP   #Q@=F   D5Z2  F*j  '+I?I/TFCf  ]=AoDR/+EV1
>FCoH/FHS5=1G<i         ]G]\"   @H=\4  @AU&<  <Bm  O?R09S+EFC  f]=H#I;,F(K
G9FCf]=H#I;,F(K       HV09S+E  BOtmjB  QPA1A  SGd  jFHS;?1G<3  GEarckEc[6P
0JP==1c70M3&s8k6UX@4Ou"b$BOPq)@;L"@&<\o61Pc$e!Jh85@q]:kG%#3.P!5$g@UX:eBOPq
&P!4[&P"_$&P'DD<8;I8%!FfJX@rGmhP%'4JP,We;@<,jrA7^ofL]NZ4@q]:kG%#3.P!5%:P&P
b$@WuO*E%Z*GATMp(GsYqM6YKnK@:OCjEfN+UCh7[/AU,D8F`VXI@rH7,@;0U%Df0B:+Co2!Bl
nD=@;]TuCh7^1ATDi75p/K:6Qec>73G&Q061K8F(Jp'Ec5u]5CJ\oI?I,S@UX:nASrW"@<,jrA
7^p5G%#3$A79Rk@q]F`CO:j=P,Wkm<0B$j@q]F`CLV""F!+q#Ebo<)L]ilWL^9.EOpR:-@q]F`
CLV""F!+q#Ebo<)L]ilW>DN98!/LW2!/LW2!/LW2!*tb5L]E53@UX:nAT!;)P,Wd]Bp(ZC1G<H
[A9]5,BOPq)@;L!-@UX:eDe*E%BnueQ9Ti&31Lk*0@r#OfFE8R=L]ilW>9IWtA9`n2Op#K:A9`
q1Oq3?LOp#K:A9`q0Oq3?LOp#K:A9`q/Oq1i]H$tiH04S[,@r$-oCige(L]N;4L]N;4L]E53L]
E52L]LeE1Pc$e!FfJXCh7L?"HmSW!KsF/056S5Ou$T]ARfLbBlnD=Bp),F!KoTmL]E53L^8>\C
6CcD1Lk*0@r#OfFE8R=+DR&?@q]F`CLV""F!,0>C6AU\94MXH@r$-oCige7P"UtSP'DD<8:?Y#
I?I,S@q]F`CNa-&L]ESoL]E53L^/8[Bp(ZC1G<6OARfM!@;I&rBOt[hG%#3C!bicgG]8fs@q]F
`CLV""F!+q#Ebo<)L]ilWBp&L[99O+S!Ko6eP"769BOt[hF*2=S+Cf(r@r$6rCkrUb"HkPo@q]
F`CNFW81*C(?ARfM!@;LbtOq3^3G%#3$A79Rk@q]F`CO715@<,jrA7Zlm@<-0qDN[Y%@<,jk@<
-E3@q]F`CNFW80p51mD.6po@rGmh+C\c"Ch7L?!KmJH94D=M@q]:kF!+t+ARfLsF_rms99O.TE
dKHKGA2#8/oYW<F)to<6=FClBOt[h6tp:JFE<Hi8T&$VEcP`$F<FCrATMp(Gp$U1ARfKuA8,[j
FE8RDEc6,8A7]:)061K8F(Jp'Ec5u]5CJ\o04J@1@rGmh+C\c"@rGmhL]CmmEbo<)P"_#pI?IP
_ASu"!+Bsj30f1UA0f1UANX.Er0f1UA0f4mr0f1[A0f1UANX.Er1GU[A0f4mr0f1UA1GU[ANX.
Er0f1[A0f4mr0f1[A1GU[ANX.Er1GUaA0f4mr0f1UA0f1[ANX.Er0f1UA1GXsr0f1[A0f1[ANX
.Er1GU[A1GXsr0f1UA1GUaANX.Er0f1[A1GXsr0f1[A1GUaANX.Er1GUaA1GXsr1GUaA0f1[AN
X7R"0f1U?1GUbH"#D\g?'6usF(025@UX:nAT!;0P&,8YBk1puARfgrDf0!"H\`VhH\`hnP#[YG
P,4<t06DG\+C\c"Ch7L?!g3SI$'I)c@WR>*ASu"!L_,_BP'Mi`L]LsnEbo<)L]N[<HS9)r5*@]
TBl7I++Cf(nEctl-F!+q#Eas#uAKY]C!Kp->99M)P@WNZ+L^9/[L^9.EASu"!+DG_(G`k^_H$"
:Q+DDs&+C\c"@rGmh+DHW4P"]SG'U!9g'TrK=AU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C
1.TI?I-B@WNZ$@<-0qDMSR]Ckr@[!G-.YF!+t+ARfLsF_rjr99ORA@WNZ$@<-0qDMSR]CkrXc!
G-.YF!+t+ARfLsF_rms99OR7DI[L*A7]7aARfLiDKKH7FF,-PG]Y';@<-0qDBN.+@UX:eBOPq&
+Cf(r@r$..D)$hIP"]=nEbo<)L_Q"gL_Q!QFCf]=H#I;,F(KG9FCf]=AoDR/+EV1>FE;/BAKY9
AG]\1P+C\c"Ch7L?!KmIf+C\c"@q]:kF!+t+ARfLsF_rmi!Kp,c@<-0qDMS=V!JhGQCkrdg!H_
mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD%FEhmM@UX:nASrVpNWC83@<-0qDMT!iCk
rdg!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'D(nF<G%$Ebo<)L]NY>>E/_,@UX:nA
T!;)Oo^@QP&,pgOo]Z9G]\4LAnH*qF<G[:G][P9DKI"CAU&<<BmO>5?'9G\P#ZR4F!+q#Ebo<)
L^9/[L_u9UASu"!+E_R9A8-'q@ruF'DII@.L_>,_L_5&u<K^"<Gs"2BEb0,A061WACh[cu@<+#
B@WNYr+EM"5H\aA=WI9q$>q]Z#F!+[0F(03R@Yb&J!Jgf?;L<(gBkM+$I?K4g04JC3+Bot0@WR
]AL]NY>L]W`;H\_ZMP(R$_Bl7EsF_#'*AU&<D06DG\+EVjMI?IP_DfBe@DfBf4Df0V=5!C*"Df
0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<]`ATMp(H'1.MA1r(@/n8fPFCfK5H"(o:FDl%L@
WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/plessey 0.0 0
%%EndData
%%EndResource
% --END ENCODER plessey--

% --BEGIN ENCODER telepen--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Telepen
% --EXAM: 123456
% --EXOP: numeric includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp telepen 0.0 0 0 0
%%BeginData:         63 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  06CcAA  T2  3uH\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  DKT  f-EbT#  +A  moLsAW  ei&
A8c@-A9)+&+D,%u  F(LLj  055  <6C is  9"  FCf  ]=+  D,%uF(  LL  j06CcM  FCo
H/FHOV,1G<i]G]\        "@H=  _m> Ou  "b  5AU  &<B         De<         U&AT
Wb(Ou"b)ASGdjFG         Ks\1  G  <]  UE  cYe  7Am        oLsA        WeifE
-,f4DKCuE06;5UB  l7R*H#  R>X  4  aVt cO u8C3  DfB  f4Df0WCP,i  2'Cia0N4aW>
WI?IQm30Ia6V33Q  n!BlU*  FE2  M 8P!+    /T/W  r;\  FcnqO1OXV5  /Tc#UAWeitP
#ZpnAWe*t3A5;iF  D5Z2F-  8_M    1OYE    cDfB  f4D  f0WCOu%NL8  M>0sG][P9DK
I"CAU&</Df0Z[/W  qnCFC   f]=F   (or3+   EV1>  FE;  /BAWe^01G<  i]G]\4LAnH*
qF<G[:G]\4LAnH*         qFHS;   ?1G<E  QBkM+  $+D  >>#B4uCM09  S,1@<-F#HS9
5WB-:YlEas#uAWg       McV33Vf  C5;kQ1  Lad5@  rGm  hH]A,5P)Xg  O3,N_LP!3WD
5*C2S@VV&,L]NY>05?Y6Ou&8DOuS6tL]`f6Ot:HkB9GGnL]N[<P!5%ROuSV6L]`g>L]`f(P"^:
NOuR<"B9GGnP!5%SP%&0h!AA2N5*@]T@UX:eDe*E%D0'?G!,@ZjOu&7dI?ITYP%B')<%hg#@ri
bsNX.Eq1GL[?1GOms0ekI=1GL[?0en[o1G^gA1GLU=NX@Kq0ekI=1GL[?NX@Qs0ekI=1GLU=NX
.?o1G^gA1GOmq0f(O?1GL[?NXRWs0ekC;1GL[?0en[o1GL[A1GLU=NX@Kq1GLU=1GL[?NX.Es0
ekI=1GOms0ekC;1G^gA0en[q1GLU=0ekI=1GOms0ekC=0f(U?0en[q0f(O=0f(U?0en[s0ekC;
0ekC;1GL[?NX@Qs1GLU=1GLU=NX.?o1GL[A1GOmo1G^gC1GOmu0ekC;1GLU=1GLU=NX.Eq0ekI
?1GOms0ekI?0ekI=0en[q0f(O?0ekI=0en[q0ekC;0ekI?1GOmq1GLU?0f(U?NXRWs1GLU=0ek
I=0en[q1G^a?0ekI=0en[q0ekC;0f(O?1GOmu1GLU=0ekC;1GLU=NX@Kq0f(O=0f(U?NX@Ks0e
kC;0f(U?NXdcu0ekC;0ekC;1GLU=NX.Eq1GL[A0en[q0ekI=1GLU=1GOmq1G^gA0ekI=NX@Kq0
ekI=1G^a?NX@Qs0ekI=0ekI=NX.?o1G^gC0en[o0f(O?1G^a?NXRWs0ekC;1GLU=1GOmq1GL[A
0ekI=NX@Kq1GLU=1G^a?NX.Es0ekI?0en[q0ekC;1G^a?1GOms1GLU=0ekI?0en[q0ekC=0f(O
=1GOms0f(O=0f(O=1GOmu0ekC;0ekC;1G^a?NX@Qs1GLU=0ekI=NX@Kq1GLU?0f(O=NX.Es0f(
O?0en[s0ekC;1GLU=0ekI=NX@Qs0ekC=0f(O=NX@Kq1G^a?0ekI=NX@Ks0f(O=0ekI=NXRWs0e
kC;0f(O?0en[q1GLU?0ekC=0en[s0ekI=0ekC;0ekI=NX@Qu0ekC;0ekI=NXRWs0ekC=0ekC=0
en[s1GLU=0ekC;0ekI=NXRWs0f(O=0ekC=0en[s0f(O=0ekC;0f(O=NXdcu0ekC;0ekC;0ekI=
NX@Qs1GL[?0ekC;NX.?o1GL[?1Gb$q1G^gA1Gb%"0ekC;1GL[?0ekC;NX.Eq0ekI=1Gb$u0ekI
?1GLU=0en[q0f(O?1GLU=0en[q0ekC;0ekI=1Gb$q1GL[A1Gb%"0ekI=0ekI=0ekC;NX@Qu0ek
I=0ekC;NX.?o0ekI?1Gb%"1GLU=0ekI=0ekC;NX.?o0f(O?1Gb$s0f(O=0f(UANXdcu0ekC;0e
kI=0ekC;NX.Eq1GLU=1Gb$u0ekI=1G^a?0en[o1G^gC0ekC;NX@Kq0ekI=0ekI?NX@Qs0ekI?0
ekC;NX.?o1G^a?1Gb$s0f(O?0ekI?NXRWs0ekC;1G^a?0en[q1GLU?0f(O=0en[q0ekI=0ekC;
1Gb$s1G^a?0ekI?NXRWs0ekC=0f(O=0en[q1GLU=0ekC;1Gb%"0ekC=0ekC=0ekC;NXRWu0ekC
;0f(O=0en[s0ekC;0ekC;0ekI?NX.Eq1GLU?0f+gu0ekI=1GLU=0ekC;NX@Qu1GLU=0ekC;NX@
Kq0ekI=0f(O?NXR]u0ekI=0ekC;0en[o0ekI?0f(O?NX.?q0f(O?0f+h"0ekC;0ekI=0ekC;0e
n[q1GL[A0ekC;0en[q0ekI=0ekC=0f+gq1G^a?0f(O?NXRWs0ekI?0ekC;0en[q1GLU=0ekC=0
f+gu0ekC=0f(O=0ekC;NXRWu0ekC=0ekC;0en[s0ekC;0ekC;0f(O?NXR]u1GLU=0ekC;0en[q
0ekI=0f(O=0f+gq1G^aA0ekC=NXdcu0ekI=0ekC;0ekC;NX@Qs0ekC=0ekC=NXRWs1G^a?0ekC
;0en[s0f(O?0ekC;0ekC;NXRWs0ekC;0f(O=0f+gs1GLU?0ekC;0f+h"0ekI=0ekC;0ekC;0en
[s1G^a?0ekC;0ekC;NXRWs0ekC=0ekC;0f+h"1GLU=0ekC;0ekC;0en[s0ekC=0ekC;0ekC=NX
RWu0ekC;0ekC;0f+h$0ekC;0ekC;0ekC;0ekC;?'6us@UX:nASrW"@<,jrA7^p5Ou"b4@WNZ$@
<-0qDMSjeCksd.!Ks:B1G<ipF<G%$Ebo<)OpR:-04f$2+D#G#F,41d99M)P@WR>*ASu"@GqWtV
ASu"@@ZiN#@q]F`CNFW8L]ESo0564BOu"b+L]ESoHYFU3@<-0qDN[/0P!FGY<,QhqATDKpHQZd
+Eas#uAKY]M98F.B:jXj5E$/UuEas#uAKY]C!g66?1N%/f!Jgc>9TB-UP!+.FBl7I++Du.S!/L
Z=9Tgr_&X!0X1OXU'Bl7I++Du.]/;P7.!Ko6eP#ZUKF<G<@>9Ig&+DQ]DP&,pcOo]Z9G]\4LAn
H*qF<G[:G][P9DKI"CAU&<<BmO>5?'9FcBcq,G!g3SI1OXU'Bl7I++C\c"@rGmh+DI!3Ou%3)F
<G<@>E/_,C5<FaCkrXc!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'AWo+DHW4Oo^_%
I?ITYHS9)NA9]5+@<,jrA7ZltP"UroBl7I+L`hjQBl7I+LjkLqOp$,RG]Y'C+Bost@<,jrA7Zl
tL]NZ4C5<FaCkrXc!H_mtFEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)P'DD%FEhmMC*6`@!?c
-5&<^jc&<['9AU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?IS`Bcq,G!KmJH1OYEd04
S[,@r$..D'3>%ARfLsF_r78DIe!T!Ko5lASu!#ASu"!+DG_(G`k^_1NR#H+D`03DI\iT05MbI+
D#G#P%'RTOu"b++DQ]5Oo^_%I?J.p@q]F`CNFW8LjroJARfLsF_uqaP%p/ZLjtS&Ou"b&DIXf#
DI[`1@q]F`CNFW8P"UroF(025C`m;,A!2*jC`mO:ASu"@@ZgbT1G<<W@j#?#@rmHPP"UroF(02
5C`m;,A!2*jC`mO:ASu"@@ZgbT1G<fYF!,O5F,0g4P"_#p06DG\+EVjML]D1Q9Th1o4>1_dDD*
Y`ASu<uDIm6s06:TD+Bot0@WQmP0TrD`P"Aq4@VBg*>9IurF-:!g!KmJ>!g6H.BOtmjBQSZcK3
^->@WNYr+EM"5P%'4JOo^@?P#?X_!.C#_>p*j!@r-9uATVL.FF,Z_G]Y'MG]\@s<%i0/F<GL@F
D5Z2F!*Y1+CoD.FC]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$FCf9"E+NpM30If*F_`U>D_?-C
EcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[
!I?IP~>
% uk.co.terryburton.bwipp/telepen 0.0 0
%%EndData
%%EndResource
% --END ENCODER telepen--

% --BEGIN ENCODER posicode--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: PosiCode
% --EXAM: ABC123
% --EXOP: version=b inkspread=-0.5 parsefnc includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp posicode 0.0 0 0 0
%%BeginData:        105 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05tiNB  k)  'lAUB4  IOu
8C305kfOBl@m1P!  5$b04  J@1  @rG  m hP!  5$b  04]  !=FC]E  #G  9CL+Ci  a0N
1G<H[@r-9uATVL.  F<G1(  Cia  0N1 G<  i]  G][  P9D  KM#]Ou  "b  5AU&<<  BmO
?H$Bd1uFCf]=G].        2+F(  KHL !0  T,  kFC  f]=         H#I         ;,F(
KHLq3!NeBOtmjBQ         T%2O  u  "b  &D  I[T  qBl        7RD"        CZFpD
iun0G%G]8Bl@mL!  F_-I04  S[,  @  r$! pA ohO*  L]E  So061KF+D,  %uF(LLj05t?
?F(HJ+@;L!rOu"b  1@<-F#  Ao;  * $Amo    LsAW  eif  E-,f4DKCuE  06;5UBl7R*H
#R>X4aVtcOu8C3D  fBf4Df  0WC    P,i2    'Cia  0N4  aW>WI?IQm3  0Ia6V33Qn!B
lU*FE2M8P!+/T/W  r;\Fc   nqO1   OXV5/   Tc#U  AWe  itP#ZpnAWe  *t3A5;iFD5Z
2F-8_M1OYEcDfBf         4Df0W   COu%N  L8M>0  sG]  [P9DKI"CAU  &</Df0Z[/Wq
nCFCf]=F(or3+EV       1>FE;/B  AWe^01  G<i]G  ]\1  KAnH*qF<G[  :G]\1KAnH*q
FHS;?1G<i]G]\4LAnH*qF<G[:G]\4LAnH*qFHS;?1G<<W@rGmlDJ()'DI[TqBl7RH/WqnCG%G]
8Bl@l3G%G]8Bl@mP/WqnC@q]F`CN!fsF(KG9@q]F`CN!fsF(KHV/<VeBBOtmjBQPA1ASGdjFHS
;?1N6cCF(K\OD0'>4@UX:eDe*FB@ZmRN1G<L!!0T-I@<,jrA7^+J!FCqKH]g@*F(^Y"C6CcDH'
2WOOo^@>Oo[4NP!5$bP')pIL]E55P"_#iD0'?Q5&,lSP,XU.P'E-LP%'4LP,X6>P!5%&I=%,:D
0'?Q5&-6EP'N4"C6ATNC6CcD1G<3GEas#uAKYi2B8?P&P"_#pP!FGY<IL$AI?IP_@UX:nASrW"
@<,jrA7^p5Ou"b-@5*N;Ou"b-@53T;Ou"b-@5<Z;Ou"b4Ah]&=Ou"b4Ahf,=Ou"b4Aho2=Ou"b
'DD?tCOu"b'DDI%COu"b'DDR+COu"b'DD[1COu#3_05b]KD..6'>9I.1!AKN7?B,%6>p*@3!AT
T84,=h]+Bsj,16)AtL`B\C>E/_?NWD;!*F0dlNWCts!Bu;\>p*@3!B#l<5DUCe+Bsj,2N@f'NW
C;/+Bsj,2i[oCNWC>0+Bsj,3/Ch"!@(km>E/_ENWEFG!@D(p>E/_MNWERE!F6gPNWDJ,!Fgid>
p*@3!CMkJ@u(4m+Bsj,7#h:YL]h!+>E/_QNWE^I"^N6TNWDV0!G7,l>p*@3!Cr.NB8?du+Bsj,
8<*^aL^79/>E/_UNWEjM$!eZXNWDb4!G[Dt>p*@3!DAFRCPW@(+Bsj,9TB-iL^[Q3>E/_YNWF!
Q%:()\NWDn8!H*]'>p*@3!De^VDhnp0+Bsj,:lYQqL_*i7>E/_]NWF-U&R?M`NWE%<!HNu/>p*
@3!E5!ZF,1K8+Bsj,</q!$L_O,;>E/_aNWF9Y'jVqdNWE1@!Hs87>p*@3!EY9^GDI&@+Bsj,=H
3E,L_sD?>E/_eNWFE])-n@hNWE=D!IBP?>p*@3!A0<4?\g+9+Bsj,/rfs?LacUP>E/_,Ljt3\>
p*@3!@3[+H]A+V>p*@3!ABH6I#\4Y>p*@3!@s02I?"=h>p*@3!@<a,IV*IP+C-*o+DbI@+DbI?
+D,LH+C-*o+EM-L+EM-K+D,LI+C-*o+EM-M+EM-M+D,LJ+C-*q05P?>Blmos+BosmNWChiSqrt
D+Bsj,0o2EWSm<ICNWCnkSqrtD+Bsj,1PhWYSm<ICNWCtmSqrtD+Bsj,22Ii[Sm<ICNWD%oSqr
tD+Bsj,2i+&]Sm<ICNWD+qSqrtD+Bsj,3Ja8_Sm<ICNWDG%SqrtD+Bsj,6AV4hSm<ICNWDM'Sq
rtD+Bsj,7#7FjSm<ICNWDS)SqrtD+Bsj,7YmXlSm<ICNWDY+SqrtD+Bsj,8;NjnSm<ICNWD_-S
qrtD+Bsj,8r0'pSm<ICNWDe/SqrtD+Bsj,9Sf9rSm<ICNWDk1SqrtD+Bsj,:5GKtSm<ICNWDq3
SqrtD+Bsj,:l(^!Sm<ICNWE"5SqrtD+Bsj,;M^p#Sm<ICNWE(7SqrtD+Bsj,</@-%Sm<ICNWE.
9SqrtD+Bsj,<f!?'Sm<ICNWE4;SqrtD+Bsj,=GWQ)Sm<ICNWE:=SqrtD+Bsj,>)8c+Sm<ICNWC
_fSqrtD+Bsj,/r6*TSm<IE+?ht3G%G]8Bl@mL!F_-SG%G]8Bl@mL!Fh3TP&bn&DJsQ4@;L@=05
P?>BlmosI?ITn9.sdg@<-3nE-%1+Ou"b$BOPq)@;L!->9IEh@<-3nE-%1OOu6`_@<-3nE-%1OO
u6`_@<-3nE-%1OOu6O.1Pc$e!FoeOEc#6(F-:!g!KsF/056S5Ou"b&DI[`1@q]:kD..C)+DI!3
Ou%moL]N;5HS9,s5*@^5DI[`1C6D5Q30LHuF*)G:DJ+':E+P1qH\_Zb97;t&@q]:kG%#3.+DR'
4P!3TCG^Y`GI?I,SF(KGI+Cf(nEctl-F,0gZ99M(aF(KGJ+Cf(nEctl-F,0j[99M(aF(KGK+Cf
(nEctl-F,0m\99M)O@<[&OASu!rA8,poNWX<1GEOb1P#Q"1@rGmlDJ+t3Eaa0T4aShlGB4m9@<
-0qDNY<h1G<Hu!0T,kC5;kQ1OEgY@UX:nAT!YoH]gXBP#O)EG9C@'Eas#uAKY]C!KmJ>"-Q?@/
<Vf!GB4mA+CfVYGV<bRBnunT!Ko5lC*78I!KmJH1OYEt04T3I+CfV:L]D1Q9Th1bFCf]=NW>4u
I?IQ@DI[TqBl7RD"CZFpDj!8104o*3G%#3.+?VcH"@c-R0kP;XNW_gH6S`7k16)K,:.$gLDDR:
U7SZ<-Ao9FJ5!G,c05YcC+C\c"Ch7LI$'I(tFCf]=+C\c"Ch7LIV33VfBnubP1G<L!!0T-bBcp
knEbo<)P!+/T5^eep04S[(EZeh"Eas#uAKY]M99M)QAU&;>C*7#"@<.NUE+*d.AS,gi+Cf(nEe
n%b4d#q^+C\c"Ch7L?"HoaIAs*:D@UX:eDe*E%BnueQ!Kp*3?BT/P04S[(EZet3@s29sF!+q#E
as#uAKY]C!KmJ>"HlHA99M)QAU&;>C5r<;P'J]p+DHW7Oo^_%I=!V]+DHW4Oo^_%I?ITYP#Q:>
B-:q3@q]:kP'AWo+DHW4Oo^_%05;VEL]NY>Ou%NLAM7nAB-;&4B8?P&P"_#p05YcCCh7K,D0'?
Q@ZiN#FCf]=+EV1>FGKp3P"_#p04f$2H]gRU94N0eP!3WD5*C.DC*78I!KmJH1OYDrOu"b$GB4
m9@<,jrA7^p5L]W`UOpR:-0564BOu"b+L]ESo04T'7FH-KFATTVh1OEgYD0'?+AT!YoH]gXBP#
Qc]@q]:k0d(=SB-:oO99M(a@q]:k1*C:e!KmJ#F(]<#DN\UYD0'>4BnueQ!Kp*(H\e5@P#[Z$@
rl4'P%8'9@<+)c@!cBs@<+(F@rl4'P%8-A@kVO=BnueQ!Ko7%5^eepF(KGK+Cf(nE\W_bHZNdS
+CfJ(FHU0GDIXf!BOPp9+EM+91*C.G@kVO=BnueQ!Ko7%5^eep@rl4'P%8'9@<+,d@$5JU@rl4
'NWaE7F>/k@HYd+F+CfJ(FHU0GDIY>0F(KHR"ES-r0p4>@HYd+E+CfJ(FHU0GDIY>0F(KHR"ES
-r0Tn5?P#[Z1I=#IFATWq8F(KGIP!+/5AhbE<F(KHVA7]Xg+Cf(nE\S\XATTXLASu"+HQ[BA0H
akHATX)GASu!#@q]:k0d(OKF>+hKDI\*X<A/&/BnueQ!Ko7%5^eeqP!FGYAUT_Q04T3I+CfV:L
]D1Q9Th2[P#OP+04>u-NWq3p0ekC<NWq3o0etI=NWq3n0f(O>NWq3m0f1U?NWq3o0ekC=NWq3n
0etI>NWq3m0f(O?NWq3n0ekC>NWq3m0etI?NWq3m0ekC?NWq3t0ekC;NWq3s0etI<NWq3r0f(O
=NWq3q0f1U>NWq3p0f:[?NWq3o0fCa@NWq3n0fLgANWq3m0fUmBNWq3s0ekC<NWq3r0etI=NWq
3q0f(O>NWq3p0f1U?NWq3o0f:[@NWq3n0fCaANWq3m0fLgBNWq3r0ekC=NWq3q0etI>NWq3p0f
(O?NWq3o0f1U@NWq3n0f:[ANWq3m0fCaBNWq3q0ekC>NWq3p0etI?NWq3o0f(O@NWq3n0f1UAN
Wq3m0f:[BNWq3p0ekC?NWq3o0etI@NWq3n0f(OANWq3m0f1UBNWq3o0ekC@NWq3n0etIANWq3m
0f(OBNWq3n0ekCANWq3m0etIBNWq3m0ekCBNX.@%0ekC;0f"as0ekC;0ekC;0fq*q04H&.NWq3
q0etI>NWq3p0f(O?NWq3o0f1U@NWq3n0f:[ANWq3p0etI?NWq3o0f(O@NWq3n0f1UANWq3o0et
I@NWq3n0f(OANWq3n0etIANWq3u0etI=NWq3t0f(O>NWq3s0f1U?NWq3r0f:[@NWq3q0fCaANW
q3p0fLgBNWq3o0fUmCNWq3n0f^sDNWq3t0etI>NWq3s0f(O?NWq3r0f1U@NWq3q0f:[ANWq3p0
fCaBNWq3o0fLgCNWq3n0fUmDNWq3s0etI?NWq3r0f(O@NWq3q0f1UANWq3p0f:[BNWq3o0fCaC
NWq3n0fLgDNWq3r0etI@NWq3q0f(OANWq3p0f1UBNWq3o0f:[CNWq3n0fCaDNWq3q0etIANWq3
p0f(OBNWq3o0f1UCNWq3n0f:[DNWq3p0etIBNWq3o0f(OCNWq3n0f1UDNWq3o0etICNWq3n0f(
ODNWq3n0etIDNX.@%0etI>0f"as0etI=0etI=0g%0r05P?>Blmos@3Ad7"u.he1bg_F"u.he1G
LYF"u.he1,1SF"u.he0ekMF"u.kf1GLVE"u.kf1,1PE"u.kf0ekJE"u.qh0ekDC"u.ng1,1MD"
u.ng0ekGD"u/%k0ekDC"u/"j1,1MD"u.ti1GLVE"u.qh1bg_F"u.ng2)-hG"u.kf2DHqH"u.he
2_d%I"u/"j0ekGD"u.ti1,1PE"u.qh1GLYF"u.ng1bgbG"u.kf2)-kH"u.he2DHtI"u.ti0ekJ
E"u.qh1,1SF"u.ng1GL\G"u.kf1bgeH"u.he2)-nI"u.qh0ekMF"u.ng1,1VG"u.kf1GL_H"u.
he1bghI"u.ng0ekPG"u.kf1,1YH"u.he1GLbI"u.kf0ekSH"u.he1,1\I"u.he0ekVI"u.ti0e
kDC!ARk5Ch[a#FCeul+Bsj10etI@0f"an0etI?0f+go0etI>0f4mp0etI=0f=sq0f(O@0f"an0
f(O?0f+go0f(O>0f4mp0f:[@0f"an0f1U@0f"an0f1U?0f+go0fUmC0f"an0fLgC0f"an0fCaC
0f"an0f:[C0f"an0f1UC0f"an0f(OC0f"an0etIC0f"an0fLgB0f+go0fCaB0f+go0f:[B0f+g
o0f1UB0f+go0f(OB0f+go0etIB0f+go0fCaA0f4mp0f:[A0f4mp0f1UA0f4mp0f(OA0f4mp0et
IA0f4mp0f:[@0f=sq0f1U@0f=sq0f(O@0f=sq0etI@0f=sq0f1U?0fG$r0f(O?0fG$r0etI?0f
G$r0f(O>0fP*s0etI>0fP*s0etI=0fY0t0f1U?0f"ai0jPnc4s5#[EcYr5DN[XGASu"!P!5$b0
4Qb]+BosmL&pat!D8(HdYN@.7Yi:F%u:Bp+BsR#V20AP</<Mi,D[%i$A\gj+BsXRLa7crL_Y^V
L^JqBL]^p*>DNTA#`&_A#)EG="Gd/9!aQpQL]N;4L]N;4L]N;4L]N;4>p*F91G<p-!0T-JGB8*
a@s=)"Ou%muHXh7BG*9[t!KmSA!0V2G06SI]L)pDZ_3-U&P#O)X+EiS@Oq3^304T2K@s<b/Oq3
^3I?K52P"@<M+Eel;BOt[hDe<U&ATX(9Ou%8mEcYr5DN5!=Bl.R+ARo544a(CWF(oQ1NX0H8D/
"*'A7C]bP&bn&Fs(s_"94MeOu%99"#uH?G(p*!P%Kj[HS9ObG(p#COo^_%I?IQXHS9ObG(p,!O
p$RmOo^_%I?IS`A0>*4!f-o6!f-o6!f-n`Ou"b3L]ESo04Te<Ou"b8L]ESo06;8QL]ESoHZO=H
+Eio2H]gXBP#O)V+EM[B+Cd0N+EEW<A!0KJ!Ko6\+Eio2HS9RcGDH9_!Ko6L+EATKL]W_?P'AX
$F_r7COu%NL<-07+P#-L9+EATKL]W_?P'AX#+EE8=Oo^_%06`3POu%NL<-07+P%K%o@j#9;!Km
JH1G<qpGDH9_!Ko5lF*2=BFHSG.P#QjmAV_%V!/LZ3"FF[B5*AR%WI9q#A<K-4"d2'4G]mY=F(
oQ1NWEUP4a(CWF(oQ1NX0H8D/"*'A7C]bP&bn&A0>)!A:'+5Oo]uo8R7K8I?IP_@q'M>$o'Ik0
ekC;0ekC;0o-7$V32^Z1Pc3js+gZ%056S5Ou$TWF,1!6P,X6=P&,pTOo])9Bp),F09Q@!G^Y`G
06:TD+CfV:P%'4OP&,prOo^`BOu$Ze@ric(DI[aN@Yb)KWKKo;3-/PMP!4[%P!5%SP%$(ZP!5$
bL]E53@s<!W@Yb&JWI$:4P!5$bF(025C*7)*@ric&GB4m@P"Us2P'J]q+DQ]:Oo^_%I?I-B@WN
Z,+Cel%P'J]q+DQ]@Oo^_%ASu"!+D#G#F-:!g!KsFF99M8U@WR\rC6CcDH'2WOOo[4NP!5$b06
:TD+EM"5L]D1Q9Th1o4>1_dDD*Y`ASu<uDIm6s06:TD+Bot0@WQmP0TrD`P"Aq4@VBg*>9IurF
-:!g!KmJ>!g6H.BOtmjBQSZcK3^->@WNYr+EM"5P%'4JOo^@?P#?X_!.C#_>q^;EF<Fd1>9J$!
G]Y'MAU&<ADe<U&ATT&:AU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C-*q06CcMFEh51BkM=
D#%M4^FCfJGDfBe@DfBf4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<]cF(o
-&A7^o`P%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM
@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/posicode 0.0 0
%%EndData
%%EndResource
% --END ENCODER posicode--

% --BEGIN ENCODER codablockf--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: Codablock F
% --EXAM: CODABLOCK F 34567890123456789010040digit
% --EXOP: columns=8
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp codablockf 0.0 0 0 0
%%BeginData:        130 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2@  :F  %k@r#\  'L_
Q"0Ops'_E-,f4DK  Ct)Ou  "b#  @<,  j rA7  ^of  Ou"  b%Df0Z  -E  aa/7Am  oLs
AWei&Ec6/CM#WVo  04Sp:  F_u  #;L ^9  /"  061  uTB  OtmjBQ  T%  ;Ou"b4  AT2
<oBkM+$L]NYp04f        $2De  *R" B9  !+  'F`  _Pb         1G<         ]UEc
Ye7AmoLsAWei&E+         *d.A  S  ,g  i+  D,%  uF(        LLjD        fBf4D
f0WZY:js=EbTE(F  Eqh:P!  +/J  !  Ko= '% <$3-  Bl@  m1H]kFA@;L  !rP!+/T5^ee
pOuSV6P,4<rNWD;  +NHB2`  AWf  3 'OtD    h\P'  )pO  Ou%N5OtCcr  F_-^lI?ITYP
 %BdtOuY16E-,f4  DKCt)O  u%N    L<,Z    _tBl  @m1  H]g15P"@<I  Dg-7FEc6/CO
t;bP04Sp:F_u#;+  Cf>+F   _u#;   Ot;bP   061u  TBO  tmjBQPA;Dg  ,l+BkM+$Ot;
bP06:]DBOtmjBQP         A<AT2   <oBkM  +$Ot;  bP@  rH1+D/OEN"  HlAeDesQ5DK
CUtP$sLVEc6/CL]       W`3Ec6/  CLb+]t  Op#fD  GB8  T?P!+tKOp$  +b@j#9"CisT
4F-8>-P#QC/EcYf=05YcC+C\c"@rGmhP%'TNOu"b+L]ESo@UX:eDe*F+NWEILNI-gJD0'?Q5&-
6EP'N4"C6AUR!KmI:C6CcD1QlmD3/@Qj"-Q?@/8]H@P!3W:!KsFF5*C/R30Ia,"-TX>"-Pj29R
V8N3,N_LP!3WD5*C2S@VV&,05?Y6Ou"b#@<,jrA7Zm#F(^:/C6D8R1Qk"OP#ZpnAUT_@04J@1C
h7K,@UX:eDe*FB@ZiN#F*D&Ks,o/kF*D)LrfT&jF*D,MrK8riF(TNMr/rihAo9>ZqiW`gAo9A[
qN<WfAo9D\q3!NeAo9G]pl[EdF*(iHpQ@<cF*)AWp6%3b@q]:kD..C)+BosmL`hKrNWLmg>p*@
3!?mI(+cZUX0jPo+NWC>a!@!O*0JZoV>E/_/NWCAb!\cE9+Bsj,,`VmNNWLmk>p*@3!@<a,-&r
$\2-h>/NWCJe!@Eg.0K*2Z>E/_3NWCMf!\cQ=+BsXMLa\8b0K<>\>DO_a.?4H`3F*b3NWCVi!@
j*20eclU>E/_7NWCYj!\lE8+Bsj,/<0`^NWLpj>p*@3!A0<4/WKle1L2,-NWCbm!A9B60f3/Y>
E/_;NWCen!\lQ<+Bsj,0TH/fNWLpn>p*@3!ATT80oc;i2dIP1NWCnq!A]Z:0fWG]>E/_?NWCqr
!\l]@+Bsj,1l_SnNWLsi>p*@3!B#l<23%_n0jPo+NWD%u!B,r>1,<,X>E/_CNWD)!!\uQ;+Bsj
,30"#!NWLsm>p*@3!BH/@3K=.r2-h>/NWD2$!BQ5B1,`D\>E/_GNWD5%!\u]?+Bsj,4H9G)NWL
sq>p*@3!BlGD4cTS!3F*b3NWD>(!BuMF1GE)W>E/_KNWDA)!])Q:+Bsj,5`Pk1NWM!l>p*@3!C
;_H6&l"&1L2,-NWDJ,!CDeJ1GiA[>E/_ONWDM-!])]>+Bsj,7#h:9NWM!p>p*@3!C`"L7?.F*2
dIP1NWDV0!Ci(N1H8Y_>E/_SNWDY1!])iB+Bsj,8<*^ANWM$k>p*@3!D/:P8WEj/0jPo+NWDb4
!D8@R1br>Z>E/_WNWDe5!]2]=+Bsj,9TB-INWM$o>p*@3!DSRT9o]932-h>/NWDn8!D\XV1cAV
^>E/_[NWDq9!]2iA+Bsj,:lYQQNWM$s>p*@3!E"jX;2t]73F*b3NWE%<!E+pZ2)&;Y>E/__NWE
(=!];]<+Bsj,</puYNWM'n>p*@3!EG-\<K7,<1L2,-NWE1@!EP3^2)JS]>E/_cNWE4A!];i@+B
sj,=H3DaNWM'r>p*@3!EkE`=cNP@2dIP1NWE=D!EtKb2)nka>E/_gNWE@E!];uD+BsY,Lg5rA2
DADZ>E/_iNWEFG!]Dc=+Bsj,?B,%mNWM*o>p*@3!FLif?]G1G1L2,-L]EG9@#b:H1gM5.L]NM:
@?(CI2-h>/L]WS;@ZCLJ2I.G0L]`Y<@u^UK2dIP1L]i_=A<$^L3*dY2L]re>AW?gM3F*b3L^&k
?ArZpO0O5f*L^/q@B9!$P0jPo+L^9"ABT<-Q10l#,L^B(BBoW6R1L2,-L^K.CC5r?S1gM5.L^T
4DCQ8HT2-h>/L^]:EClSQU2I.G0L^f@FD2nZV2dIP1L^oFGDN4cW3*dY2L_#LHDiOlX3F*b3L_
,RIE/juZ0O5f*L_5XJEK1)[0jPo+L_>^KEfL2\10l#,L_GdLF,g;]1L2,-L_PjMFH-D^1gM5.L
_YpNFcHM_2-h>/L_c!OG)cV`2I.G0L_l'PGE)_a2dIP1L_u-QG`Dhb3*dY2L`)3RH&_qc3F*b3
L`29SHB&%e0O5f*L`;?TH]A.f0jPo+L`DEUI#\7g10l#,L`MKVI?"@h1L2,-L`VQWIZ=Ii1gM5
.L`_G&NWM3u>p*>oAo9CIAo9Db!]`/E+Bot#DDE>HDDI4R3B(4d>9J!!F<GX:FH-D_3*dY2+EM
a:+EMa:NWM4$>p*>oF*D(9Ao9FJF*D(9>p*>oAo9FJF*D%8F*D%8>p*>oAo9=GAo9=GAo9=G>p
*>oF*(h5F*(h5F*(h5>p*>oF*)@DF*)@DF*)@D>p*F91G<6O@<-O"Ci^_'LhW#0LhW#0LhW#0?
'7""!/LYcBOPpu@;p:N@Yb&JWI$:4P!5$b04f$2F!+t+@<-3nE-!.9P"UroL]E53L]VoVC6CcD
1M(H6F!,4\99M8tY:js=EbTE(FEqh:P!+/J!0U!'P#Pq)@<-O"Ci^_6P"Us%Bp*^hP":"a82#$
qFC?;%BOPq)@;L"@!0U!<1G<f\FCHA&BOPq)@;L"@!Kp*=1G<f\FCQG'BOPq)@;L"@!g63>1G<
?X@s29sF!*S-NW_gH6SW1j0ocB+:.$dKDDI4T7SZ<,Ao9Db"@c-R1hLV^+?huP1G<TdB-:YlEb
o<)OpR:-0564BOu"b+L]ESoHYFU3@<-0qDN[/0P!FGY<%h`p@<*K"@<,jrA7ZltP"UroE+*d.A
S,gi+Cf(nEen%b4d#q^+C\c"Ch7L?"HoaIAs*:D@UX:eDe*E%BnueQ!Kp*3?BT/P04S[(EZet3
@s29sF!+q#Eas#uAKY]C!KmJ>"HlHA99M(aBcq,G"HieK1OXU'Bcq,G!KmJH1OYEdI?IQHF(ZV
1+Cf(nEftZ#Bcq,G!KmJH1G<JcC5;nR!Ko6eP%?:`F(ZV4F(^:/C6D8R1G<TdB5D-s+Dl14P%'
S105boLF)ti3HS98m!0T,kF,0gZ1G<^15*@^KE$0"=B5D-sP"L(a5^eepD0'>4E0<kW3-/YQA!
0$=@$5JUP')pQI?IQADD@;;HZOuEP%odQP!+.FF!,O[!KmJH1OXV55^eeqI?IP_DBNhQ!KmJH1
G<elF,0j[!Ko5lE$0+U!KmJH1OYEtDBO"KOq*X204f$2@=',<ATV@D5*AQKGB8p2C6CcDGV<eS
C5;nR!Ko6eOq*X204f$2@XB5=ATVCE5*AQKGB8p2C6CcDGV<eSC5;nR!Ko6eOq*X204f$2@sa@
uP-6NIEcPT6FEqh:P&5PeATVFF5*AQeH]eGnFbh`7WKKH$0TrDk$Bf4g!I^,2@s<!W5&-6EP'A
Wp+DQ]5Oo^_%I?G)'1G<0SDffH8OuRMoFCC=rP$jG:F(KH&P!5%:P&QQeI?G)'1G<3TDffE7Ou
RMoFCLCsP$jG:F(KH%P!5%:P&QQeI?G)'1G<WWG][A3DffG2>9Id(B9H_NL]DjdK8(`a?'6usD
In'7@W$++@3AbsD0'?Q@XEn2I?K5;-P'LG1Mq2GP%'4JP,X9;L]DcTBp(ZC1Mq2G+DI!3@;^"*
@XB58AU&<*DJsW++DHW3P'DD%DIn'7@;^"*@N]A-DIn'7@;^"*@N]B@!KmJH98EV3!Kq\UP#Z@
?B-:oO94DdWFCBM=DIn'7@W$++@3B9?!0VSTHZ!D>FCK-+FC?;++Dtb8FCK-+FC?;+L]NY>P"U
T3Oo^_jI?ITYP"767@V'.iEb/^,OuR>jG][A3DffHO5*AR%5&OqVFCK-+FCC=rP"UsMI?G)'1G
<3HAS,k$ARTqK3,W;PFCK-+FCC=rP"Us%DIn'7@;^"*@Zip<99Nn8Oq*X205t?1Ec6/KH[?lFF
(KHR"ES-r@?Nd#F*D+:ASu!d04T'7FH-KFATVFF1Qk"OP#Pq4ATWq8F(KH&P!+/5G@Mb,DI[-/
@rl4'NWaE7FCUIiP!FGY<+Bu\FH-KFATVFF4aV6o@N]6"@q.0%F(KHR"ES-r@ZiO15^eepI?J/
iP(S1G%[&V$@s;u:@u(;O!HN+&F,9jZD0p;AGB81ZLb*t;<K_0]$'I(tBnubP1G<L!!0T,kEej
aZ1G<QQF*)G@G9CL+Cia0N1OEqHF*)G@GC,K<I?IQNFC?;'DI[)tBcq86B5D-sP%K&T+Du==F)
ti3I=$eMM#Vmd<A/64D0(k(Ou"b/@q]:kF-8_M1OEt[B5D-sL]ET$HZOC?+D#G#@4u,3ATWq8F
(KH&Ou&7dI?IQIF_u2U!g60&F*D+:ASu!d04T'7FH-KFATVFF1Qk"OP#Q-<@:Ee[DfTDuHQ[BA
F<G.4@pq$#F(KHR"ES-r@?NF05^eepF*D(9ASu!d04T'7FH-KFATVCE1Qk"OP%?:]+DQ]5Oo^_
 %04f$3De=$.G9CL+Cia0N1OCcqASiQ"L]`e@C*7#B"d/nLC6GQZ1MItKF(]<#DN[.oDIdZtEc
6/bEdNs7I?IQD+Du==F)ti305boLF-8_M1G<WUBOPq&P!5$bHXh,.FH-KFATV@D4_&PEFH-KFA
TVCE4d'i'F_u2U"HlB?"Dr3m+DI!3Ao9>dD3>$KDKTf;L]W`SL]ET$Eb0*D"-Q9>"FG36@j#9&
ATWq8F(KH%P!+/'DI[+'HQZm;@q'kL<A.j'ATWq8F(KH'Ou%mqHYmh:+DI!3Ao9>d4aUdY0d(%
F@q.0++DHW4Oo^_%I=#gPB-:oE!g65gDI[00Bcq,G!g3SI1OYEdI?K5G5^eepDKTf;L]W`SL]E
TTEb0*D"HlB?"FG!,B-:oO94N$SFH-KFATV@D4aUaX@pse4+D#G#@XXD>052PCL]NY>Ou%0'@j
#9&ATWq8F(KH%P!+/'DI[+'HQZm;@q'kL<A.j'ATWq8F(KH'Ou%mqHYmh:+DI!3Ao9>d4aUdY0
d(%F@q.0++DHW4Oo^_%I=#gPB-:oE!g65gDI[00Bcq,G!g3SI1OYEdI?K5G5^eepI?IQ>F(KHR
"ES-r@ZilkF(ZV0P"T5$DffHO"EJ'jL]W`3Op$,G+Dl14Ch7L?!KsFFAp\6J!KmIm@V'.iEb/[
++EM.:+D#G#@N]N/B-:oO94`!N@4u=;BnueQ!Ko7%5^eepI?IQNG@;V*DI[-/@rl4'NWaE7FCC
=gD0'>4Bp),#DI[*.Bcq,G!KmJH1Qk"OP#Pq4ATWq8F(KH%P!*Z'B-:oO94DdWFCC=8Eb0*D!g
60="FFi*D0'?+AT!;)P,XUVHYJ9:Oo]!#AS,k$AR^!/F(TM:ASu!d+Dl14+DI!3ASu!e052PCL
]NY>Ou&7dI?IQXP#QLH@N]6"@pq$#F(KHR"ES-r@ZiNaF(ZV0P"TA(@q%**+DHW4Oo^_%P!FGY
<+Bu\FH-KFATVFF4`5CZF,0m\As*:;ASm5)P"Ll?HYFU2@V'.iEb/^,+EMa8+D#G#@kV>5ATWq
8F(KH%Ou$rrB-:oO94`!N@4u=;BnueQ!Ko7%5^eepF*D(9ASu!f04T'7FH-KFATVCE1Mq2G+DI
!3ASu!e052PCL]NY>Ou&7dI?IQ>F(KHR"ES-r@?NcpATV?'D0'>4Bp),P@$1Y5ASm5(P"Ll?HY
mh:+DI!3ASu!d052PCL]NY>Ou&7dI?IQ>F(KHR"ES-r@ZilqATVB(D0'>4Bp),P@$1Y5ASm5(P
"Ll?HYmh:+DI!3ASu!e052PCL]NY>Ou&7dI?IQ>F(KHR"ES-rA!/umF_u2U!g60="EJ'jL]NZ2
Op$,KF(ZV0P"TD)0p4\HAo9=GASu!f052PCL]NY>Ou%N5D0'>4BnuhR9P&*O@kVO=BnuhR!Ko6
eP#[Z1I?IP_ASu$sAo_g6+EVXHAWej45^ef,I?J/^+EDCEF-8\,Dg-8Ys,oO.EcQs:P#.;EBcq
86B5D-sP!+s2Eb0*D!g60="FG0#D287VWGl9VEc6.TC*78I"-N\J1NRYW+D#G#@4uG*F*)G@G9
D!JF_-^lI=$!GD'3e+A9)U405;VEL]NY>Ou%0$E$/_0@pq$2+EE8=Oo^_%I?ITYP%?:VGB4m:G
B8Q?C6D8R1G<0GD..B+>DPP#!Jk*0I?I-W!/LZ3%sr_f8;J1?!JiseI?I-,Ou"b$D..B+>DN98
!Jja&I?I-,Ou"b$BPVI+B-;&4B5D-sOpR:-05?:COu%moL]M@6B5D-sL]N[<HS9)r5*@]T@q]:
k+Dl14+DI!3Ou$T]@<./(P"L(2BPVI+B-:q3@q]:kP'AWp+DQ]5Oo^_%I?IQ>BOPp(Ao9>d4_]
]PP&6?bHXg`)D0'>4C5<mnGV<eSC5;nR!Ko6eP#Qjm82#'>L]ESo06At*!0T,kCGCVFOu"b,15
Gpn1Pc$e!G[DkP,Wd]Bp(ZC1G<i)+Cf)#D0'>4Bp),'P&,qTP%p.906ArlF>4nJBPVI+B-:oO9
9K=3<g%3\1G<Mu+DW\SF>B![LfT[ROu"b,1*C?f+ET?$!Jjd>C6CB$P"9),F!+t:F-:!g"Ho`o
F(KHR"ES-rA!1\U@:F(^E.*'U@r5XnI?ITG0p51mG[kr=+CfV:P%'4LP,Vr4ATWq8F(KH'P&5P
S@VoOmI=!)HD..C3P#Z9QP"Us_@s<!M!f-o@)2J<VWKKo1A!1\U@:F(^E.*'U@r5XnI?ITNL]W
a=P"Us_L]N;4EejaZWI$:4P!5$b@s;u:BcpoA"d/nLCkr.U!Jgf?)2J<VWKKo1A!1\U@:F(^E.
*'U@r5XnI?ITELanPgP"Us_I?I-W!/LYrL]N[<HXh8@P!3B3"d/nLCh&8(Oo^_>061QHF-8_M1
G<6ZF_r7A@s<!M!0U!<1Pc'f!HM[oF-:!g!g9O0056S5Ou"b$F*2=B@rld0+ECt9F!,1[950Q*
Oo^_%I?I-A@s;u:Eas<7P%'4JP,Vr4F_uqIP%p/)I?I,SASu"!+Bsj11,1O>1,=jo1,:U>1,=j
o1,:U?1,4dn0etI=1,Fpp0etI>1,=jo0f(O>1,=jo0etL>0f+go0etL?0f"an0f(R?0f"an1,:
R>0f+go1,:R?0f"an1,CX?0f"an0ekF=1GXsp0etL=1GXsp0etL>1GOmo0ekI>1,=jo0etO>1,
=jo0etO?1,4dn1,:X@0en[m1,:R=1GXsp1,:R>1GOmo1,1R?0f"an1,:X?0f"an1GLX>1GOmo1
GLU>1,=jo1GU[>1,=jo1GU[?1,4dn1GLX?0f"an1GU^?0f"an1GU^@0en[m1,1O=1,Fpp1,1O?
1,4dn1,C[?1,4dn0ekC=1,Fpp0f(O=1,Fpp0f(O?1,4dn0ekF>0f+go0f(R>0f+go0f(R@0en[
m1,1L>0f+go1,CX>0f+go1,CX@0en[m0ekF<1Gb$q0ekF>1GOmo0f(R>1GOmo0ekI=1,Fpp0ek
I?1,4dn0f(U?1,4dn1GL[?1,4dn1,1L>1GOmo1,CX>1GOmo1,1R>0f+go1,1R@0en[m1,1R>1G
Omo1GLU=1,Fpp1GLU?1,4dn1G^a?1,4dn1GLX>0f+go1GLX@0en[m1G^d@0en[m1GL^@0en[m1
,:R@0en[m1c$j@0en[m0ekC<1,P!q0ekC>1,=jo0etI<1,P!q0etI?1,4dn0f1U>1,=jo0f1U?
1,4dn0ekF=0f4mp0ekF?0f"an0etL=0f4mp0etL@0en[m0f1X?0f"an0f1X@0en[m1,L^@0en[
m1,:R=0f4mp1bgd@0en[m1,L^?0f"an0f(X@0en[m0ekC<1bt'q0etI<1bt'q0etI=1bk!p0ek
L?0f"an0etR?0f"an0etR@0en[m1bg^?0f"an1bpd?0f"an1bpd@0en[m1,1O=1bk!p1,1U?1,
4dn1bga?1,4dn0ekC;1c(-r0ekC=1bk!p0f(O=1bk!p0ekL>0f+go0ekL@0en[m1bg^>0f+go1
bg^@0en[m0ekI=1bk!p0ekL>1GOmo1GLU=1bk!p1bg^>1GOmo1,1L?0f"ao1,C^@0ekFhOu"b3
Dg,Z)FE8RFOpR:-L]E53EejaZWI$:4P!5$b06:TD+BosuGB4m@+Cg32Oo^_^@u(;O!Kp-'ASu"
!P!5%%H\aA=WI9q$I?I0-Ou$r`EbgI2F(03;L]NZ@L]NZ%H[CPKI=6HhL]MpPP#[ZtI?I0b)i+
NXWKIRN$^*]:FcnqOF`MDE@VKq*+DHW6M#WWnP'DD<82#%0D0K])+Cg38P&,q7Oo^_%05tWMF!
+[0F*VVHBk/?-AT2<oBkM+$P&,K$!I^,`L]E53Eejd[WI$:4P!5$bEc6/8ASGdjFF,-NDg,Z)F
E8R=P"Ur>P')29K6(UCBOtmjBQSTW!Jgc4!/LZ3!/LW2!/LW2!Jg`3!-<F&GA1TD(m:kFL]Mpe
K89Pa!Jg`3!/LW2!Jgc4!Jg`3!Jg`3!Jgc)P(S1G89/WmBOtmjBQSSDEc6/2BlnD=EejaZWKKo
;!g7\SP(Rh$D0K])+EM+5BOtmjBQTDRH\_]NP(R&'1H[cQEb0,A061WAD..O,Bm;:MBm=\AE+s
Q<05tWMGT_'QD0K])05tWMGp%'?G]T$WF*VVHBk3B)05+p2B4uB0E+sQ<P%&KXD0K])P#@*,Ou
=t;Bk2=!+EMgFGA1TD8<PkaDfBe@DfBf4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu?nFE2)?P#RT)I
?G)'1G<6VA78q`De!QpOuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[D
Fcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/codablockf 0.0 0
%%EndData
%%EndResource
% --END ENCODER codablockf--

% --BEGIN ENCODER code16k--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: Code 16K
% --EXAM: Abcd-1234567890-wxyZ
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp code16k 0.0 0 0 0
%%BeginData:        158 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  MH  )YH\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  A8c  @-A9)+  &+  D,%uF(  LLj
05YW<AVgAL1G<]c  F,9jZ  1G<  ceG B8  Q?  Ou"  b3D  g,l+Bk  M+  $L^9/"  06:
]DBOtmjBQT%2Ou"        b&DI  [Tq Bl  7R  D"C  ZFp         Diu         n0Ea
a/7AmoLsAWei&E+         *d.A  K  YS  nC  ia0  N1G        <]UE        cYf(D
IXf$@;L!rOu%#qF  D5Z2F-  <^[  F  *)G :D J+':  E+P  1qH\_]c23J  DeE-,f4DKC/
fX(GdVF(LLtH]gX  BP#RT(  P%'  T NOth    st4d  (eH  EckrV4aW>D  P!5%OP!5$bI
=%,/FE2M8Ou%NL<  IL$AOr  fcH    05kf    OBl@  m1P  !5$bI?IQJE  -,f4DKC/f1O
YEX05YW<AKYi.A7  ^oTOu   "b1D   f[%?D   f_'m  Ou"  b3Dg-7FEc6  /COt;bP061u
TBOtmjBQPA;Dg,l         +BkM+   $Ot;b  P06:]  DBO  tmjBQPA<AT  2<oBkM+$Ot;
bPE,TfRs,q5G061       uTF,1Bj  1OYEcE  +*d.A  U?(  IF(ZV)@<,j  rA7^p5P,4<t
05?:COu$QUEas#uAUBF<?BU:pOuR<"B9GGnP!5%SP%&0h!Jgc>!AA2N5*@^bFcn_?!/L`?9Tgr
DF(^Y"C5;nRWKKH.G`k%L@Yb,LWJCY>5*ATfH]g@*F(^Y"C6CcDH'2WOOo[4NP!5$b04J@1@rG
mh+Dl14L]D1Q9Th2p5^eeqI?J/iP#O)D@<-0qDBNCsEas#uAWgMc1G<fn@>OrH1G<fn@Yk#H1G
<fn@u1)H1G<fX0o5aj1G<fY0o5^i1G<fZ0o5[h1G<fX15Pah1G<fY15P^g1G<fZ15P[f1G<]UA
;KrB1G<fY1Pk^e1G<fZ1Pk[d1G<?X0o5Fa1G<?X15PLa1G<?X1PkRa1G<?X1l1Xa1G<6O@<-3n
E-!.++BsXEL`h]Z0JHcT>E/_-NWC;`!\c?7+Bsj,,)u[JNWLmi>p*@3!@*U*,E;gZ1L2,-NWCD
c!@3[,0Jm&X>E/_1NWCGd!\cK;+Bsj,-B8*RNWLmm>p*@3!@Nm.-]S6^2dIP1La\'-NWLmo>p*
@-.>TF5!\cW?+Bsj,.ZONZNWLph>p*@3!@s02.ujZc0jPo+NWC\k!A'640f!#W>E/_9NWC_l!\
lK:+Bsj,/rfrbNWLpl>p*@3!ABH609-)g2-h>/NWCho!AKN80fE;[>E/_=NWCkp!\lW>+Bsj,1
6)AjNWLpp>p*@3!Af`:1QDMk3F*b3NWCts!Aof<1,)uV>E/_ANWD"t!\uK9+Bsj,2N@erNWLsk
>p*@3!B6#>2i[qp1L2,-NWD,"!B?)@1,N8Z>E/_ENWD/#!\uW=+Bsj,3fX5%NWLso>p*@3!BZ;
B4,s@t2dIP1NWD8&!BcAD1,rP^>E/_INWD;'!\ucA+Bsj,5)oY-NWM!j>p*@3!C)SF5E5e$0jP
o+NWDD*!C2YH1GW5Y>E/_MNWDG+!])W<+Bsj,6B2(5NWM!n>p*@3!CMkJ6]M4(2-h>/NWDP.!C
VqL1H&M]>E/_QNWDS/!])c@+Bsj,7ZIL=NWM!r>p*@3!Cr.N7udX,3F*b3NWD\2!D&4P1b`2X>
E/_UNWD_3!]2W;+Bsj,8r`pENWM$m>p*@3!DAFR99''11L2,-NWDh6!DJLT1c/J\>E/_YNWDk7
!]2c?+Bsj,:6#?MNWM$q>p*@3!De^V:Q>K52dIP1NWDt:!DndX1cSb`>E/_]NWE";!]2oC+Bsj
,;N:cUNWM'l>p*@3!E5!Z;iUo:0jPo+NWE+>!E>'\2)8G[>E/_aNWE.?!];c>+Bsj,<fR2]NWM
'p>p*@3!EY9^=,m>>2-h>/NWE7B!Eb?`2)\__>E/_eNWE:C!];oB+Bsj,>)iVeNWM't>p*@3!F
(Qb>E/bB3F*b3Lg5a@NWM*m>p*@3!F:]d?&etE0jPo+NWEIH!FCcf2DSP\>E/_kNWELI!]Di?+
BsX%NWEOJ!]Dl@+BsX&NWERK!]DoA+BsX'NWEUL!]DrB+BsX(NWEXM!]DuC+BsX)NWE[N!]E#D
+BsX*NWE^O!]E&E+BsX+NWEaP!]Mf=+BsX,NWEdQ!]Mi>+BsX-NWEgR!]Ml?+BsX.NWEjS!]Mo
@+BsX/NWEmT!]MrA+BsX0NWEpU!]MuB+BsX1NWEsV!]N#C+BsX2NWF!W!]N&D+BsX3NWF$X!]N
)E+BsX4NWF'Y!]N,F+BsX5NWF*Z!]Vl>+BsX6NWF-[!]Vo?+BsX7NWF0\!]Vr@+BsX8NWF3]!]
VuA+BsX9NWF6^!]W#B+BsX:NWF9_!]W&C+BsX;NWF<`!]W)D+BsX<NWF?a!]W,E+BsX=NWFBb!
]W/F+BsX>NWFEc!]W2G+BsX?NWFHd!]_r?+BsX@NWFKe!]_u@+BsXANWFNf!]`#A+BsXBNWFQg
!]`&B+BsXCNWFTh!]`)C+BsXDLjtEd3Ak(b>9INq1E^:I1QDMs2I.G0+D,LH+D,LHNWM4">p*>
oF(-jHF($e`!]`5G+Bot0G@Mb:G@QX73B:@f>9J!2@N]9#1a$j`@N\r!>9INq1a$j`@3BW8@3A
hu>9INq0d((G0d((G0d'aE>9IlnA0>i"A0>i"A0>/#>9Iur1*CXH1*CXI0d'aE>9Ius1*CXJ1*
CXI1*BjF>9Ius1E^aK1E^aJ1E]sG?'6us@q]:kG%#3.+BsY=Ou8&4Ou8&4Ou6O.1Pc$e!FoeOE
c#6(F-:!g!KsF/056S5Ou"b&DI[`1@q]:kD..C)+DI!3Ou%moL]N;5HS9,s5*@^5DI[`1C6D5Q
30LHuF*)G:DJ+':E+P1qH\_Zb97;t&@q]:kG%#3.+DR'4P!3TCG^Y`GI?I,SF(KH%+Cf(nEctl
-F,0gZ99M(aF(KH&+Cf(nEctl-F,0j[99M(aF(KH'+Cf(nEctl-F,0m\99M)O@<[&OASu!rA8,
poNWX<1GEOb1P#Q"1@rGmlDJ+t3Eaa0T4aShlGB4m9@<-0qDNY<h1G<Hu!0T,kC5;kQ1OEgY@U
X:nAT!YoH]gXBP#O)EG9C@'Eas#uAKY]C!KmJ>"-Q?@/<Vf!GB4mA+CfVYGV<bRBnunT!Ko5lC
*78I!KmJH1OYEt04T3I+CfV:L]D1Q9Th1bFCf]=NW>4uI?IQ@DI[TqBl7RD"CZFpDj!8104o*3
G%#3.+?VcH"@c-R0kP;XNW_gH6S`7k16)K,:.$gLDDR:U7SZ<-Ao9FJ5!G,c05YcC+C\c"Ch7L
I$'I(tBnubP1G<L!!0T-bBcpknEbo<)P!+/T5^eep04S[(EZeh"Eas#uAKY]M99M)M@<-F#Ao;
*$@q]:kLgH6-Op#JA@UX:nAT!;,P,XUVOp$,@@<,jrA7ZltL]NY>P"UU;P&5P!@q]:k+D,M$G%
#3.+C\c"@rGmh+DHW4Oo^@AP"_$3Ou"b*+DHW7Oo^_%I=!V]+DHW4Oo^_%I?ITYP#Q:>B-:q3@
q]:kP'AWo+DHW4Oo^_%05;VEL]NY>Ou%NLAM7nAB-;&4B8?P&P"_#p05YcCCh7K,D0'?Q@ZiN#
DKTf;F(96;05cRGOu"b4L]ESo06!(<Ou%H(+Dl14Ch7LI8pc^dI?IQHF(ZV7P"UrtF(KH'P!5%
:P&Pc2Fco"<P#Q%20p4\HF,0m\C5;kQ4aSi'+EN>>Oo^_%I=%,BI?ITYP#O)P+Duu9Oo^_%068
7WL]NY>Ou"b1+E3,;Oo^_%I?J/Z+EMso%[&V$ASu!dHQ[B@FCC=rP"T;/F-8_%P!5%R05;VEL]
NY>Ou%NL%[&V$ASu!eHQ[B@FCLCsP"T;/F-8_%P!5%R05;VEL]NY>Ou%NL%[&V$ASu!fH]g@OY
:j=)Eaa68H#R>XD0p>8FCUItP"U4MOogehLbP!kP!4[UP,X6EP&-9^I?IT?GB8p2C6CcDGV<eS
C5;nR!Ko6eOq*X204Aa:FCKT[3-/YQ@?Ng;@$3]pATVCE5*B<:E0:?POq*X204Jg;FCBNZ3-/Y
Q@Zip<@$3]pATV@D5*B<:E0:?POq*X205b?GFCB'*FCH@s+Dl14P%&co!.C#_L*mL;Ou"b/AU&
<+DJsW*+Bot*F(^YFH\_ZMP(SK:%pb>SD0'?Q@Yb&JWJLS1!.-A5P!5$bD0'>4Bp)+tDJsW+HQ
[3;G][A3DffG2BnubPG^XpVAU&<*DJsW++DDs9AU&<*DJsW++DHW4Oo^_=L]NY>P'DD<<Gcei+
DI!3@W$++@=',7AU&<+DJsW*+DHW3P'DD%DIn'7@W$++@3B8,DIn'7@W$++@3B9?!KmJH98EV3
!Kq\UP#Zpn82"C\AS,k$AR^"L3,W;PFCB'*FCLCsP"Us%DIn'7@W$++@?Ng;99Nn8Oq*X204JC
 %AoD^$@=+.sDIn'7@W$++@?Ng;99MJVAU&<*DJsW+P!5%%P%K-*%[&V$@s;u:@UX:eDe*FB@Y
b)KCkr1V!KmbP1G<Hu!0T,kC5;kQ1OF(ZF,9jZD0oc:F,0g8Df^^AP#@):P,XUh@s<!M!H;suL
^K;[L]N[<P'AWpL]W_q04T'7FH-KFATVCE1G<T`A7^Q%Ou&7dI?IQHF(]<#DMS:U4aShlF(KHR
"ES-r@ZiN#D/WrrL]NYpP!FGY<,H\hCh7L?!g60&D0'?G!0TueDD@;;L]MC9D0'c.EfrVLFbg*
^8s0=(04T'7FH-KFATVFF1G<T`A7^Q"Ou"b*L]NYpP!FGY<.0p/D0'?G!0TueDD@;;HS8lMATW
q8F(KH&Ou"b.De*F8"-PGnBnueQ1Qk"OP#Q:>B5D-sL]W`3H\_Z>F_u2@@rd_rP')pIL]W`3P!
4['P%odQP!+s2HS8lMATWq8F(KH'Ou"b.De*F8!g5@&5^eepL]D=8D0'c.EfrVLFcn_?"-Q9>5
)99'C5;nR4d#qpD0'?G!0TudDI[-/@rl4'NWaE7FCUIi05YW<AV^MQ1G<Hu!Ko7%5^eepF(KH&
+Dl14L]ET2P$j(HDKTf;F(96R5*C&O3/@X!8s2Ao!g7;S!0TL."Hin7D0'?G!0TudDI[-/@rl4
'NWaE7FCUIi05YW<AV^MQ1G<Hu!Ko7%5^eepF(KH&+Dl14L]ET2P$j(HDKTf;F(96R5*C&O3/@
["8s2Ao!g7;S!KoU/"Hin7D0'?G!0TudDI[,uD0'?G!Kp)eDI[-/@rl4'NWaE7FCUIi05YW<AV
^PR1G<Hu!g5@&5^eepF(KH&+Dl14L]ET2P$i?BFCHA0F(^:0P"UsGOp$RBDKTf;F(96R5*C&O3
/@X!8s2Ao!g7;S!0TL."Hin7D0'?G!0TudDI[,uD0'?G!Kp)eDI[-/@rl4'NWaE7FCUIi05YW<
AV^PR1G<Hu!g5@&5^eepI?IQc!+B>JAoD^$@XBb<F(KHR"ES-r@?NE"D/WrrL]ESoP!FGY<%ha
&ATWq8F(KH&Ou"b.De*F8!Ko7%5^ef,HYFU>F(]<#DN[/0P!FGY<,!ImF_u2@@ra5?F_u2_5*@
]TDI[?gEc[C-Ou%GpF(KHR"ES-r@?Nd#Bcq86B5D-sL]N[<P%K&XF(ZV0P"T8%DffD1BnueQ!F
]GKAoD^$@Zgk@F(-jHASu!d+Dl14+DI!3ASu!e052PCL]NY>Ou&7dI?IQXP#Q-<D0'?+AT!;*P
,XUVHYmh:+DI!3@W$++@3BE.B-:oE!KmJH94DdWFCC=8BnuhR!F]GKAoD^$@Zgk@F(-mIASu!d
+Dl14+DI!3ASu!e+Dl14+DHW4Oo^_=ASu!e052PCL]W_?Ou&7dI?IQXP#Q:>B-:oO94DdWFCBM
=F*D(9ASu!d04T'7FH-KFATVCE1Qk"OP#Q-<D0'?+AT!;,P,XUVHZ!tCF,0s^4`b1V@3BE.B-:
oE"HieK99N\G"FG3"1*C.G@pt/pHYmh:+DI!3Ao9>d4aUdY0d(%F@q.0++DHW4Oo^_%I=#gPB-
:oE!g65gDI[00Bcq,G!g3SI1OYEdI?K5G5^eepI?IQD+Dl14Ch7L?#*PsKAp\E<D0(L;P!*ktF
C?;/F(ZV0L^'"CP"UsGOp$,Q@l#6=DI[+2"++m+B-:oO94i&rP!+/(DD<8FDI[00Bcq,G!KmJH
1OXUeF(ZV0L]W`5ASu!f052PCL]W_?Ou%NL<IL$_P!FGY<.0p/DKTf;L]il5DKTf;L]W`SL]ET
$Op$,QG@Mb,DI[*.@rl4'NWaE7FCUIiP!FGY<,H\h+DI!3ASu!d052PCL]NY>Ou&7dI?IQ>F(K
HR"ES-r@Zim$Bcq86B5D-sL]N[<P%K&XF(ZV0P"T5$DffG2BnueQ!FfMLAoD^$@?Lb?F($dGAS
u!e+Dl14+DI!3ASu!d052PCL]NY>Ou&7dI?IQXP#Q-<D0'?+AT!;*P,XUVHYmh:+DI!3@;^"*@
N]N/B-:oE!KmJH94;^VFCLC9BnuhR!FfMLAoD^$@?Lb?F($gHASu!e+Dl14+DI!3ASu!d+Dl14
+DHW4Oo^_=ASu!d052PCL]W_?Ou&7dI?IQXP#Q:>B-:oO94;^VFCKS>F*D%8ASu!e04T'7FH-K
FATV@D1Qk"OP#Q-<D0'?+AT!;,P,XUVHZ!tCF,0s^4`b1V@N]N/B-:oE"HieK99N\G"FG3"1*C
.G@q(5qHYmh:+DI!3Ao9>d4aUdY0d(%F@q.0++DHW4Oo^_%I=#gPB-:oE!g65gDI[00Bcq,G!g
3SI1OYEdI?K5G5^eepI?IQD+Dl14Ch7L?#*PsKAp\E<D0(L;P!*ktFCHA0F(ZV0L^'"CP"UsGO
p$,Q@l#6=DI[.3"++m+B-:oO94i&rP!+/(DD<8FDI[00Bcq,G!KmJH1OXUeF(ZV0L]W`5ASu!f
052PCL]W_?Ou%NL<IL$_P!FGY<.0p/DKTf;L]il5DKTf;L]W`SL]ET$Op$,QG@Mb,DI[-/@rl4
'NWaE7FCUIiP!FGY<,H\h+DI!3ASu!e052PCL]NY>Ou&7dI?IQ>F(KHR"ES-rA!0!%DKTf;L]W
`3HYmh:+DI!3Ao9>d4aUdY0d(%F@q.0++DHW4Oo^_%I=#gPB-:oE!g65gDI[00Bcq,G!g3SI1O
YEdP!FGY<,!IlF(]<#DMS=VWKLk?F(KH&+Dl14+DI!3P$i![!KmJ$F_u2@@rd_rP')pIL]W`3P
!4['P%odQP!+s2Op$,Q@PK!:DI[0!D0'>4Bp),#DI[-/Bcq,G!KmJH1Qk"OP#Qjm<,!IlF(]<#
DMS=VWKLk?F(KH&+Dl14+DI!3P$i![!KmJ$F_u2@@rd_rP')pIL]`f4P!4['P%odRP!+s2Op$,
Q@PT';DI[0!D0'>4Bp),#DI[,uD0'>4BnueQ!Kp)eDI[-/Bcq,G!g3SI1Qk"OP#Qjm<,!IlF(]
<#DMS@WWKLk?F(KH&+Dl14+DI!3P$i?BFCHA0F(ZV0L]NY>P"UsGOp#KT!g3S%F_u2@@rd_rP'
)pIL]W`3P!4['P%odQP!+s2Op$,Q@PT';DI[0!D0'>4Bp),#DI[,uD0'>4BnueQ!Kp)eDI[-/B
cq,G!g3SI1Qk"OP#Qjm<,!IlF(]<#DMSCXWKLk?F(KH&+Dl14+DI!3P$i?BFCHA0F(ZV0L]NY>
P"UsGOp#KT!g3S%F_u2@@rd_rP')pIL]`f4P!4['P%odRP!+s2Op$,Q@P]-<DI[0!D0'>4Bp),
#DI[,uD0'>4BnueQ!Kp)eDI[,uD0'>4BnuhR!Kp)eDI[-/Bcq,G"-N\J1Qk"OP#Qjm<,!IlF(]
<#DMSCXWKLk?F(KH&+Dl14+DI!3P$i?BFCHA0F(ZV0L]NY>P"UsGOp#i;FCHA0F(ZV0L]W_?P"
UsGOp#KT"-N\&F_u2@@rd_rP')pIL]W`3P!4['P%odQP!+s2Op$,Q@P]-<DI[0!D0'>4Bp),#D
I[,uD0'>4BnueQ!Kp)eDI[,uD0'>4BnuhR!Kp)eDI[-/Bcq,G"-N\J1Qk"OP#Qjm<,!I`@V'.i
Eb/^,+EMa8+D#G#@kV>5ATWq8F(KH%Ou&7dI?IQNG@D\+DI[00@rl4'NWaE7FCLChP!FGY<0BL
pP%B')AM7P;F!+t:F,0g2P"_#pI?IP_D.Rg0Bk)3,>9I.+!f.(e+BsX(L^[Q3>DNE<&R?M`L]r
SM>p*@-#)F4(+BsX,L`ftG>DNQ@-!_WtL^Ake>p*@-$A^?@+BsX0LbrB[>DN]D3F*b3L^f/(>p
*@-%Z!JX+BsX4Le(eo>DNiH9jJlIOu"b6Ec6/C+EDCEF-8=4BnubP1OCcl+Dk\3EbT$)+DI!3O
u"b3+Dlo7P"Uro04\R:F!,=U!Kp*=1G<Z^@<iu;EckrV1Nd_VGB8Q?P&5>^Dg-7FEft:&"FDe?
CLMK2AmoLsAWeitP#Pq8F-:!C@s<!W:jXj6CLMK2AmoLsAWeitP#Q@8@<m3_5^eep052PCL]NY
>Ou%NLAM7P;F!+[0@s<!W!g7\:@s;u:@s<!W@Zm^;LhD.!K3aWr04T3I+Bot/L]Wa=L^0)ZD/W
rrOo]':F-6TfF^:.dL]E52L]M$rGB8+o3/@X!!KoWVGB8p2P"UsSOo]uo8;M&EC+j'OP!5$bL]
E52L]M$rGB8+o3/@Tu!KoWVGB8p2P"UsSOo]uo87O@sA7Kh)L]W_?P&-9^Lhi/g04Qc#5*@]T@
s;u:>9IF"F-6TfF^m-K@ko04Ou"b&DI[`1>E/nC0etL>16)Po1,:R>16)Po1,:U?0ocGm1,1O>
1QDYo1,1R?16)Pn1GLX?16)Pn1,:U>1QDYo1,:X?16)Pn1GU^?16)Po1,1O=1QDYp1,1R>16)P
o1GLX>16)Pn0etL?16)Pn1,:R?16)Pn1,:U@0ocGm0f(R?16)Pn1,CX?16)Pn1,C[@0ocGn1,C
[?0ocGn1,1L>16)Po1,1O?0ocGn0f(R>16)Po1,CX>16)Pp0etI>0ocGo0ekF=16)Pp1,1L=16
)Pp1,1O>0ocGo0etL=16)Pp1,:R=16)Pp1,:U>0ocGn0etI=1QDYp0etO?0ocGn1GU[?0ocGm0
ekI>1QDYo1GLU>1QDYo1GL[@0ocGm0etO>1QDYo1GU[>1QDYo1GUa@0ocGn0ekI=1QDYp1GLU=
1QDYp1GL[?0ocGm0etI>1QDYo0etO@0ocGm1GU[@0ocGm0f(O>1QDYo0f(U@0ocGm1G^a@0ocG
o0f(O>0ocGn0ekI?0ocGn1GLU?0ocGn0f(O=1QDYp0f(U?0ocGn0f(O?0ocGo0ekC<1QDYq0ek
I>0ocGo1GLU>0ocGo0etI<1QDYq0etO>0ocGo1GU[>0ocGo0f1U>0ocGn1,1U?0ocGp1GLU=0o
cGm0ekF=1l_bp0ekL?16)Pn1,1L=1l_bp1,1U@0ocGm1bg^?16)Pn1bga@0ocGm0etL=1l_bp0
etR?16)Pn1,:R=1l_bp1,:[@0ocGm1bpd?16)Pn1bpg@0ocGn1bga?0ocGn1,1L<1l_bs0f(O=
0ocGn1bg^>16)Pn1Ggg@0ocGm0ekF?16)Pn1,1L?16)Pn1,1O@0ocGm0f1X?16)Pn1,L^?16)P
n1,La@0ocGp0ekF<16)Pq1,1L<16)Pq1,1O=0ocGn0etI?0ocGn0f1U?0ocGp0etI=0ocGm0ek
C>1QDYo0ekI@0ocGm1GLU@0ocGm0f1U>1QDYo0f1[@0ocGp0ekC;1QDYr0ekI=0ocGm0f(O@0o
cGm0f1U@0ocGo0ekC>0ocGp0ekC=0ocGn0ekL>16)Po0ekF<1l_bq0ekF>16)Po0ekC=1L6/"0
6;5DEcbl1@ribsNW_-n0en[k1,:U>NW_*l1,=jm0f1U>NW_'k1GXsn0etO>NW_'k0f4mn1GLU>
NW_-n0en[k1,:U>NW_*l1,=jm0f1U>NW_'k1GXsn0etO>NW_'k0f4mn1GLU>?'6usF*)>>ASu"
!De*B$>E/hB1,1MD">V_f0ocAl0etME">M_f0ocAk0f(SF">MYf0ocAk0ekMF">_be16)Jl0f(
SF">MYf0ocAk0ekMF">_be16)Jn1,1MD">V_f0ocAl0etME">M_f0jTqu06;5RE+NosF(KN+DB
N/D">V\e16)Jl1bg_F">MVe16)Jl1,CYF">MVc1l_\p0ekGD">MVe16)Jl1,CYF">MVc1l_\p0
ekGD">_ef0ocAl1,:SE">V\e16)Jl1bg_F">_ef0ocAl1,:RiOu%&qF,9jZ4`G=\L^K;CL]W`S
L]NZ%P&bn&F*)>>ASu"!+EMXCE+NosF)PT"Ou%N506;5RE+NosF!,OGDfB9*@rl4)AT!YeI?IS
`Ec6/2BlnD=Efp`l1Pc$e!HNtsP,Wd]Bp(ZC1G<fYF!+\C$?L;tEcbl1@ric,P"U.X0TrD`P"C
H1@s;u:BnuqUCkr7X9RC>g@rmesP"U.X0TrD`P"C(b8TSulE+NosF!,1[97)IKP,Wkm8VdCQOu
$r`EbgI3F(03;L]NZ@L]ET$H[CPLI=6HhL]DjOP#[ZtI?I0b)i+NXWKIRN$^*]:FcnqOF`MDE@
VKq*+DHW6M#WWnP'DD<82"prG]P!3Lf&5)E+ifsB4uCMCjUs=I?K5=!/LYrL]Wa=HS9)r5*@^B
Dg,l+BkM+$HQ[?IG@G9.F!,1[99K@>Fa]F*F(K<(ASGdjFF/fNH\_ZMP(SQ[H\_]NP(SPjI?K5
2P"9V3GA(Q%B4uC6+EDCE@VKq*+EE8=P,XU;OogehI?K5=;0-;fBOtmjBQTDRH\_]NP(R&'1H[
cQEb0,A061WAD..      O,Bm;  :MBm=  \AE+s  Q<  05t      WMG_f3      ME+sQB+
E2%>F-:!g;3Fg1B        Otm  jBQPA  9Bm=]  ^@  Ydm         E;M         [l,2
D98gA9;L@;2@c+2  D8ufF  <G  L@FD5   Z2F!  *Y  1+C  oD.FC  ]E#  GEQnu  061W
AD..O,Bm>e?Ou[r  R%[&V  $@r  Gmh    0fEg  13  0If  *F_`U>  D_  ?-CEcQ  G7F
`MSBDD#CBBlJ#6A  7]@eD  Imj  "F)  Q 2A@  qCg  GOu  Y1:ATV  m"  @r#drB  9Ki
QP'(hWFDtYuCM@[  !I?IP  ~>
% uk.co.terryburton.bwipp/code16k 0.0 0
%%EndData
%%EndResource
% --END ENCODER code16k--

% --BEGIN ENCODER code49--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: Code 49
% --EXAM: MULTIPLE ROWS IN CODE 49
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp code49 0.0 0 0 0
%%BeginData:        934 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  Mc  DoL_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  ei&
D/WrrM#WVo05tiN  M#WVo  061  uTF ,0  gZ  1G<  ceG  A(Q%B4  uC  C#a-ts  F(K
<(ASGdjFGKs\1G<        ]UEc  Ye7 Am  oL  sAW  ei&         E+*         d.AS
,gi+D,%uF(LLjDf         Bf4D  f  0W  ZY  :js  =Eb        TE(F        Eqh:P
!+/J!Ko='%<$3-B  l@m1H]  kFA  @  ;L! rP !+/T  5^e  epOuSV6P,4  <rNWD;+NHB2
`AWf3'OtDh\P')p  OOu%N5  OtC  c rF_-    ^lI?  ITY  P%BdtOuY16  E-,f4DKCt)O
u%NL<,Z_tBl@m1H  ]g15P"  @<D    De*E    %D/W  rrO  t;bP05tiN+  E27?Ot;bP06
1uTF!,LAGB8ouOu  "b3Dg   ,l+B   kM+$+   EDCE  BOt  mjBQTCgOu"  b4AT2<oBkM+
$+EM+5BOtmjBQTC         gOu%&   cEcYf  =05Yc  C+C  \c"@rGmhP%  'TNOu"b+L]E
So@UX:eDe*F+NWE       ILNI-gJ  D0'?Q5  &-6EP  'N4  "C6AUR!KmI  :C6CcD1QlmD
3/@Qj"-Q?@/8]H@P!3W:!KsFF5*C/R30Ia,"-TX>"-Pj29RV8N3,N_LP!3WD5*C2S@VV&,05?Y
6Ou"b#@<,jrA7Zm#F(^:/C6D8R1Qk"OP#ZpnAUT_@04J@1Ch7K,@UX:eDe*FB@ZiN#F"rLNOu"
b415Ppm1G<?X0o5dk1G<?X15Pjk1G<?X1Pkpk1G<WeM#*8j04o*3G%#3.+?VcH"@c-R0kP;XNW
_gH6S`7k16)K,:.$gLDDND!5*@]TD0'>4@UX:nAT!Y;Ou"b*L]ESo05?:COu%H!+C\c"Ch7LI4
aW>WI?IP_@q]:k+C\c"@rGmh+DI!3Ou%&cEcYf(DIXf!BOPq;?BRI7"DJuf@<-0qDMSFYWKLkV
"FFTdEas#uAKY]C!KmJH98Ho;D0mpGBOPp(Ao;+%@;L!-@UX:eDe*E%BnueQ!JglA9Ti&31G<G
bBnunT!Ko6eHS9(UBnueQ!Ko6eP#Zpn<,H\h+DN$/BOPqEGV<bRBnueQ!Ko5lC*78I!KmJH1OY
Et05YcC+Dl14L]D1Q9Th1bD0'?+ASrW-F(^YFOu"b$BOPpu@;m>nNWCho!ATT816)AkNWCts!B
#l<2N@esNWD,"!BH/@6&kt4NWDM-!CVqK7?.C<NWDY1!D&4O8WEgDNWDe5!DJLS9o]6LNWDq9!
DndW;2tZTNWE(=!E>'[<K7)\NWE4A!Eb?_=cNMdNWC_l!A9B5+H?IJNWCen!@s02-$(d`F#"kM
DD<8GDDE>HDDNDQF!+bO1G<6O@<-O"CibCeOu8CYL]E53LbO0/Bp(ZC1Lk*,Ec#6(+DI!3OuSW
.06;5UBl7R*H#R>X4aVtbP"U4d<+BTMEctl-F-8_$P'DD<82"IkD.7F)+Bsj-0d)JX0gUg$0g^
m%0ggs&0gq$'0h%*(0h.0)0h76*0h@<+0hIB,0hRH-0h[N.0hdT/0hmZ00i!`10i*f20i3l30i
<r40iF#50iO)60iX/70ia580ij;90isA:0j'G;0j0M<0j9S=0en[i0f"aj0f+gk0f4ml0f=sm+
<Z[G0fG$n0fP*o0fY0p+=)sK+=3$L0fb6q0eeUh0eJCe0eSIf0dMb\+=iHR0e\Og+>&TT+>/ZU
+>8`V+>AfW+>JlX+>SrY+>]#Z+>f)[+>o/\+?#5]+?,;^+?5A_+?>G`0e87c1,4dj1,=jk1,Fp
l1,P!m1,Y'n1,b-o+@2"h+@;(i+@D.j+@M4k+@V:l+@_@m+@hFn+@qLo+A%Rp+A.Xq+A7^r+A@
ds+AIjt+ARpu+A\"!+Ae("+An.#+B"4$+B+:%+B4@&+B=F'+BFL(+BOR)+BXX*+Ba^++Bjd,1,
k3p1,t9q1-(?r1,+^i1+eLf1+nRg1-pp%1.%!&1..''1.7-(1.@3)1.I9*1.R?+1.[E,1.dK-1
.mQ.1/!W/1/*]01/3c11/<i21/Eo31/Nu41/X&51/a,61/j271/s8810'>9100D:109J;10BP<
10KV=10T\>1*hk]1,"Xh1+S@d1*qq^1*Bkc1Pc$e!Jl5P056S5Ou$TdD.7F)+DI!3OuS6tP"RH
<0p4_`1Pc'p9.sd1P!5$b@kicoP!+/%BOPq)@;L!-BcpV&@q]:kG%#3.+EK9#94MXDEctl-F!+
sJP"T)DG^Y`S@kicpP!+/%BOPq)@;L!-BcpV&@q]:kG%#3.+EK<$94MXDEctl-F!+sJP"T)DG^
Y`SI?I,SASu!rA7]1cE+i[,+Cf(nEctl-F-8_M99M8tY:j=)Eaa68H#R>XD0q'>OpR9ZI?IQm3
+I/RP!3WD5*C2S@VV&,05?Y6Ou%NL%[&V$@UX=h1cTi<!0TNmLbP!kP!4[/P&-9^I?I0+L]`G6
P)#2aL]N[<H]g@E0Tp165):nU;LO^\>p*@75*@mg@Yb&JWJLS1!.0M&P$!l2P"Us%I?I-aF^:.
i@s<!W5&-6EP'N4"C6ATNC6CcD1OYDrOu"b&DI[TqASuX-ATDKpHS98ZD0(k(Ou"b1Eb-A2F_u
2_@Zi^,"d3V`3/@X!D0qGFI=%-VL]rs@I?ITn1Pc$e"`SKnL]N[<HZ!tCF-8_C"d2Q8"-PiW@<
6!:3.6r\05boLF!,@CD0$h=Eb-A2F_u2_@W6@!P,XU<Ou$uuD0(kLOuS6uP!+/0F_u1BBp),#D
I[TqARTCoBOQ=P<0B4s"-PfoL]VI:D0$h/@<6!:3.6rhOuS7#P!+/J"'^R9LbN^hD0(jAP'(%Q
@UX=h1cToH</:dB4aVte>DP"i0Q)#MF,0gP"HlHA!g7\3+C\c#AMcB&!cE-tF,0sT"-Q>e@<6!
:3.6rhI?G)'1G<WgD.Ra%@rc^0F!+[0D0'?+ASujN!.C#_L]C_D1Mq2GCh7L?!KsF<s+gZ%056
S5Ou$rrB-:oO99M8j0To%k5);4^@?Lb?DKTf-EbT$(F`)7CBcq;9D.Ra%@rc^0F!,1Q!KmJH98
EV3!Kq\UHZ!tCATDKpEcl8@+DHW3P'DD<<IL$$D/WrrM#WW$H[B^MF,9jZD0mpQDe*F8"-PI'5
^eepDKTf-EbT$(F`)8V!0U!2"d2K)05YW<AV^DN1Qk"OP#Pq)@<-O"Ci^_9F(^:/P"Us2OuSW.
04AmA@<ls?E+P2LH]iM)D/WrrL]ESoP!FGY</:O;98G*]4aVtfI=$bRI?IS`D/WrrP!5$bP!FG
YAUT_@04T3I+Dl14Ch7L?!g7AU!KmJH$'I(tD.Rg&De+k3@;Kmr@?NE"Bo)eP1G<L!s,o0TDe*
F8!0TK^De*F8!KoU/EdKHVATVU(A<$h%CiF&rOu"b*L]ESo05?:COu%NL<,HPaAV^DN4aSi!AT
VU(A<$n4F_t]1Bk*;^0564BOu"b+L]ESoI?IQHDe*F8"-Pfo05tiNG%#20>DN]D(5NEU(Pj5j%
YtsX,)@e+%u;*Z,D[q-2i&$$)MfYp/r2KC6AQ50)i,er08MWE6\nHm&r7N`-AX@33f$1[:5E#.
'8RZb-\sL54,?=]:P`/0@pP6R@s<!M!/LW2!Ji7QOuRE!F*:u.P!5%%E,Tf\D0qFgI?IQXP":B
0Oo^_j05Y9BBQ%FA"^u4dBOR&[0564BOu"b+L]NYpI?IQHDe*F8"HkobDe*F8"d2$3EdM;?F,0
g+BOPq)@;L!-D0'?G!0U!<98EV399ONQD.Rg&De+k3@;Kmr@?NE"BnueQ1G<L!!Ko6eP#QdB+D
l14Ch7LI4aW>WI?IQVD.Rg&De+k3@;Kmr@?Nd#DKTf-EbT$(F`)7CBp),F"d2K)DK?q3DI[TqA
RTCoBONQ2ATVU(A<$n4F_t]1Bk*;^P!FGY<,H\h+DI!3ASu!rA7]1cE+iZ5Bcq,G!KmJH1Qk"O
P#Q:0FD,T'NX'HED.Ra%A!0!%DKTf-EbT$(F`)7CBp),F"d3JEDK?q3DI[TqARTCoBONQ2ATVU
(A<$h%CiF&rOu&7dI?IQHF(ZV0+Du==ATDKpEcl8@+DI!3P"]G)@rGmhDKTf-EbT#:Bcq+4DKT
f-EbT$(F`)7CBp),P!Ko7%5^eepI?J/iP%?:VGB4m:GB8Q?C6D8R1G<TVFE2)*F!+[0>DN?:$!
eZXL]`GE>p*@-"Gdk"+BsX*L`ThE>DNK>-!_WtL^/_c>p*@-#`(3@+C1-d06M;RGB4mIDg-8c1
G<Hu!0T-b05VhKATVs,@ric,P"Uro06/1PL]ET2Ou"b%@s;u:D284U99M(aDeid,+EVXHAWeil
Ec6/CL]ETTF`MDEF!,LdD3>$K05kW7Gp$^-Cia0N1OYEc@s<!W@UrtmF-9@H05kW7Gp$^-Cia0
N1OYEcDeid,H]gXBP#O)K+DHW4Oo^_%I?J.p@s;u:>9IF"F-6TfF_#!+F!+t:F-:!qWI'FTI?K
4gOu"b$@ric5L^9/[OpR:-05?:COu%moL]MOP!g9O0056S5Ou"b$@j#9*F!,4R#EhcD1Ljp9+D
HW;P&+W<P'LPIF!,1Q#a0"[#Ef+D!+TMcOo]uo8Vf*aC6EfpC*78I#Ef+N1OYEWC*7%sGB8pZH
XgQ,+Ceo&P%'4QP,Vr8F!,3?A7Kh)+DR(=P"_$aI?IP_@raLNEejd[WJCeBCi+*$AWd(W1Ljp9
+Ceo&P%'4KP,Vr32j/DiL]N;<L`_EkL]WA@L_5FZLa@iiL_bdNL`;.$L_#:lLaRudL^f.DLae-
'La7c^L]iMVL]`GHLa\&sL`M9YL_tph?'70OP!4[9P!4[%L`hjSOogeh>q^D5BkM+$G`k7R1Qj
_%P!4[5P!4[&L`hjSOogeh>q^D5BkM+$H'1@S1L$#+LaJ9KL]WATP"_#?P'(%`G@bK$BQSQ`5*
@]T@ps1`@q]F`CO7^YASGdjFE<U/Ou"b4@rHC!L]ESoL]E53EejaZWJChCCkr.U;MY@:WI$:4P
!5$b@q0R&BnuhRCm%GI0p6?_@ric,L]W`UL]NY>P"Ur=G@bK$BQS;<BnueQ!Kp*=CbKj>DfTEP
5'(4PEb1C7Ou%NL8989ZEb0Z^%[&V$CghC,Ec6.E@q0R&@q0SC@Yb;QWJChC9Th2PL^0)8HXh(
T+EqC2B4uC5L]ET2P&,>RBkM+$H6?^+Ch$sgARfM=!JUnhP%p.>LbY&jP!4[VP%odSOpR9ZCgh
C,Ec6/X!/L`5s,r/#H$tiT06_Fk+DbJ-FE2;DL]ET2LbY'/CghC,Ec6/X!Kp*=!Ko6KE]5+bAS
GdjFErZBP"UsSG@bK$BQSMB@ps1`@q]F`CQ\^BE\S\\ASGdjFEo!LL]ilWL]`g>P"UsSOo^:D@
?PAg3%oJr16Oha1Qj_R0p5Ft5):qVC5;qS$'G[4@<6O2Dg.!=L]`J5P)#3G@raLNG@bK$BQSKT
!0U!<Cj0H)B4uC3+Cehr@q01`@r%5.GB,D\G@bK$BQSJAEejj]Ckr1VWKKo;Cm"gCE\\b]ASGd
jFEepKL]ilWL]Wa=P"UsSOo^:D@?PAg3/B;P;Na5"0p6:-!g3kQ$Z'6mFE2;DL]iM9M#WWnP'L
PIF!+t&F-:!g#a20C#Ehc:!0TNmOo]uo8Vf*aC1Cap+Ceo&P%'4JP,X6>M#WWnP'AX!@<?U&Ec
,q@>9I.1#Ve%k1,1L>16)Vq2)-g@0f(PE#Ve.k0etI>16)Vq2)-j@1,:SE#Ve.k1,1O>16)Vp1
,L^@0f(SF#Vn1l1,1O>0ocMo1,La@1,:VF#Vn+l1,1O>0ocMo2)-g@1,:VF#Ve1k1,1R>16)Vp
1G^a@1,:VF#Vn4l1,1R>0ocMo1G^d@1GLYF#Ve%k0etL>16)Vq1,La@1GLVE#Ve%k1,1R>16)V
q2)-g@1GLVE#Ve.k0etO>16)Vq1G^a@1GLVE#Ve(k0etO>16)Vq0f:[@1GLVE#Ve4l1,1L>0oc
Mo1c$mA0f(PE#Ve(l1,1L>0ocMo2)6mA0f(PE#Ve1l1,1O>0ocMo1GggA0f(PE#Ve+l1,1O>0o
cMo0fCaA0f(PE#Ve4l0etL>0ocMo2DHsA1GLVE#Ve.l0etL>0ocMo1c$mA1GLVE#Ve(l0etL>0
ocMo1,UgA1GLVE#Ve1l0etO>0ocMo1GggA1GLVE#Ve%l0etO>0ocMo0ekI=0f(\I#W"1i1GLU?
1QD_u0ekI=0f(PE#Vn+h1,:R?1l_hu0ekF=0f(SF#Vn+h1GLX?1l_hu0ekI=1,:VF#Ve%g0f(O
?23%qu0ekC=0f(VG#W4=k0f(O?0ocMo0ekF=1,:_I#W"1i1,:U?1QD_u0ekF=1,:SE#Ve%g1GL
[?23%qu0ekI=1GL\G#W4=k1GL[?0ocMp0ekC=1,:\H#W+7j0f(R?16)Vq0ekF=1GL_H#W+7j1,
:X?16)Vp0ekC=1GLbI#W"1i0f(U?1QD_u0ekC=1GLVE#Ve(h1GLU?1l_ht1,1R>0f(SF#Vn+i1
GLU?1QD_t0etO>0f(PE#Vn.i1,:R?1QD_t1,1O>0f(PE#Ve%h1,:R?1l_hs1,1R>1,:YG#W+:k
1GLX?0ocMo0etO>1,:\H#W"1j1GLX?16)Vp1,1L>0f(YH#W"4j0f(O?16)Vp1,1O>1,:\H#W"4
j1,:U?16)Vp1,1R>1GL_H#W"4j1GL[?16)Vq0etO>1GL\G#W+7k1GL[?0ocMp1,1L>1,:YG#W+
:k0f(R?0ocMo0etI>1,:\H#Vn.i1,:X?1QD_t1,1O>1GLVE#Ve%h1,:X?1l_ht0etL>1GLYF#V
e(h0f(U?1l_ht1,1L>1GLYF#Vn+i0f(U?1QD_t0etI>1GLVE#Ve+i1GLU?1QD_s1GL[?0f(PE#
Vn.j1GLU?16)Vp0f(U?0f(VG#W"1k1GLU?0ocMp1GLX?0f(SF#Ve(i1,:R?1QD_r1GL[?1,:VF
#Ve(i1GLX?1QD_s1,:X?1,:SE#Vn+j1GLX?16)Vp1GLU?0f(VG#W"7k0f(O?0ocMo1GLX?1,:Y
G#W"7k1,:U?0ocMo0f(O?0f(VG#Ve+i1GL[?1QD_s1GL[?1GLVE#Ve%i1,:U?1QD_r1,:X?1GL
YF#Ve%i1GL[?1QD_s0f(U?1GLVE#Vn1j0f(R?16)Vp1,:R?1,:YG#Vn1j1,:X?16)Vp1,:U?1G
L\G#W"4k1,:X?0ocMp0f(R?1GLYF#Ve+i0f(U?1QD_s1GLU?1GLVE#Vn.j0f(U?16)Vp0f(O?1
GL\G#W"1k0f(U?0ocMo1bgd@0f(SF#Vn1k1GLU?0ocMo1,C^@0f(SF#Vn+k1GLU?0ocMp1bga@
0f(PE#Ve+j1,:R?16)Vq1bgd@1,:SE#Ve+j1GLX?16)Vp0f1X@0f(SF#Vn.k1GLX?0ocMo0f1[
@1,:VF#Ve.j0f(O?16)Vp1bga@1,:VF#Ve(j0f(O?16)Vp1bgd@1GLYF#Ve(j1,:U?16)Vq1GU
a@1GLVE#Ve(j1GL[?16)Vq0f1[@1GLVE#Vn4k0f(R?0ocMo1GU[@1,:VF#Vn4k1,:X?0ocMo1G
U^@1GLYF#Ve%j0f(R?16)Vq1,C[@1GLVE#Ve%j1,:X?16)Vp1bg^@1GLYF#Vn1k0f(U?0ocMo1
,CX@1GLYF#Vn+k0f(U?0ocMo2)-mA0f(PE#Ve+k1GLU?0ocMo1bpgA0f(PE#Ve.k1GLX?0ocMo
1,LaA0f(PE#Ve(k1GLX?0ocMo2)-gA0f(PE#Ve1k1,:U?0ocMo1G^aA0f(PE#Ve1k1GL[?0ocM
o1G^dA1,:SE#Ve%k0f(O?0ocMo1G^gA1GLVE#Ve%k1,:U?0ocMo1bpdA1,:SE#Ve.k1,:X?0oc
Mo1,L^A1,:SE#Ve(k1,:X?0ocMo2)-gA1GLVE#Ve+k0f(U?0ocMo0f:[A1GLVE#Ve%g1bg^@1l
_ht0ekL>0f(SF#Vn+h1GU[@1QD_t0ekI>0f(PE#Vn+h1bga@1QD_t0ekL>1,:SE#Ve%g1,CX@1
l_ht0ekF>0f(SF#Ve%g1GU^@1l_ht0ekI>1,:VF#Ve%g1bgd@1l_ht0ekL>1GLYF#Vn+h0f1U@
1QD_t0ekC>0f(PE#Vn+h1,C[@1QD_t0ekF>1,:SE#Vn+h1GUa@1QD_t0ekI>1GLVE#Ve%g0f1X
@1l_ht0ekC>1,:VF#Ve%g1,C^@1l_ht0ekF>1GLYF#Vn+h0f1[@1QD_t0ekC>1GLVE#Ve(h1bg
^@1QD_s1,1U?0f(PE#Vn+i1bg^@16)Vq1,1R?0f(SF#Ve%h1GU[@1QD_r1,1U?1,:VF#Ve%h1b
ga@1QD_s0etR?1,:SE#Ve(h1,CX@1QD_s1,1O?0f(PE#Ve(h1GU^@1QD_s1,1R?1,:SE#Ve(h1
bgd@1QD_s1,1U?1GLVE#Vn+i1bgd@16)Vq1,1L?0f(SF#Ve%h0f1U@1QD_r1,1O?1,:VF#Ve%h
1,C[@1QD_r1,1R?1GLYF#Ve%h1GUa@1QD_s0etO?1GLVE#Ve(h0f1X@1QD_s1,1L?1,:SE#Ve(
h1,C^@1QD_s1,1O?1GLVE#Vn+i1,C^@16)Vq1,1L?1GLYF#Ve%h0f1[@1QD_s0etI?1GLVE#Ve
+i1bg^@16)Vq1,:[@0f(PE#Ve%i1bg^@16)Vq1GL[@0f(PE#Ve(i1GU[@16)Vq1GL^@1,:SE#V
e(i1bga@16)Vq0f(X@1,:SE#Ve+i1,CX@16)Vp1GL[@1,:VF#Ve%i1,CX@16)Vp1GL^@1GLYF#
Ve%i1GU^@16)Vq1,:[@1GLVE#Ve%i1bgd@16)Vq1GLU@0f(PE#Ve(i0f1U@16)Vq1GLX@1,:SE
#Ve(i1,C[@16)Vq1GL[@1GLVE#Ve(i1GUa@16)Vq0f(U@1GLVE#Ve+i0f1X@16)Vp1GLX@1GLY
F#Ve%i0f1X@16)Vq1,:U@1GLVE#Ve%i1,C^@16)Vq1GLU@1GLVE#Ve(i0f1[@16)Vq0f(O@1GL
VE#Ve.j1bg^@0ocMo1,CaA0f(PE#Ve+j1GU[@0ocMo1GUdA1,:SE#Ve%j1GU[@0ocMo1bgaA0f
(PE#Ve.j1GU^@0ocMo1,C[A0f(PE#Ve.j1bgd@0ocMo1,C^A1,:SE#Ve(j1bgd@0ocMo1GU[A0
f(PE#Ve+j1,C[@0ocMo0f1UA0f(PE#Ve+j1GUa@0ocMo0f1XA1,:SE#Ve%j1GUa@0ocMo1bg^A
1,:SE#Ve.j1,C^@0ocMo1,CXA1,:SE#Ve(j1,C^@0ocMo1GU[A1GLVE#Ve%j0f1[@0ocMo0ekO
?0f(VG#W"1i2)-gA0ocMp0ekL?0f(SF#Vn+h2)-jA16)Vp0ekI?0f(VG#W"1i1G^aA0ocMo0ek
L?1,:YG#W"1i1bpgA0ocMo0ekO?1GL\G#W"1i2)-mA0ocMp0ekF?0f(SF#Vn+h1G^dA16)Vq0e
kL?1GLYF#Ve%g0f:[A1QD_s0ekC?0f(PE#Ve%g1,LaA1QD_s0ekF?1,:SE#Ve%g1G^gA1QD_s0
ekI?1GLVE#Vn+h0f:^A16)Vq0ekF?1GLYF#Ve(h2)-gA16)Vq0etU@0f(PE#Vn.i1bpdA0ocMo
0etR@0f(SF#Vn.i2)-jA0ocMo0etU@1,:VF#Ve(h1G^aA16)Vp1,1U@1,:VF#Ve(h2)-mA16)V
q0etU@1GLVE#Vn.i1,L^A0ocMo0etL@0f(SF#Vn.i1G^dA0ocMo0etO@1,:VF#Vn.i1bpjA0oc
Mo0etR@1GLYF#Ve(h0f:[A16)Vp1,1O@1,:VF#Ve(h1G^gA16)Vq0etO@1GLVE#Vn.i0f:^A0o
cMo0etI@1,:VF#Vn.i1,LdA0ocMo0etL@1GLYF#Ve+i2)-gA0ocMo1,:[A0f(PE#Ve(i2)-jA0
ocMo1GL[A0f(PE#Ve+i1bpgA0ocMo0f(UA0f(PE#Ve+i2)-mA0ocMo0f(XA1,:SE#Ve(i1,L^A
0ocMo1,:XA1,:SE#Ve(i1bpjA0ocMo1GLUA0f(PE#Ve+i1,LaA0ocMo0f(OA0f(PE#Ve+i1G^g
A0ocMo0f(RA1,:SE#Ve%i1G^gA0ocMo1,:RA1,:SE#Ve(i1,LdA0ocMo0ekR@0f(SF#Vn+h2)6
mB0ocMp0ekR@1,:SE#Ve%g1c$jB16)Vp0ekO@1,:VF#Ve%g2DI!B16)Vq0ekI@0f(PE#Vn+h1c
$mB0ocMp0ekO@1GLVE#Ve%g1,UdB16)Vp0ekI@1,:VF#Ve%g1c$pB16)Vq0ekC@0f(PE#Vn+h1
,UgB0ocMp0ekI@1GLVE#Ve(h2DHpB0ocMo0etUA0f(PE#Ve(h1c$jB0ocMo1,1XA1,:SE#Ve(h
2DI!B0ocMo0etOA0f(PE#Ve%h1c$mB0ocMo0etUA1GLVE#Ve(h1,UdB0ocMo1,1RA1,:SE#Ve(
h1c$pB0ocMo0etIA0f(PE#Ve%h1,UgB0ocMo0etOA1GLVE#Ve%g0ekF>2NA&!0ekC;1,CbI#W4
=k0ekF>16)Vq0ekC;1GUhJ#W+7j0ekI>1QD`!0ekC;1GU\F#Ve%g0ekL>2NA&!0ekC;1bghI#W
4=k0ekL>16)Vr0etI<0f1\H#W4=l0ekC>0ocMo1,1L<1,CeJ#W"4j0ekF>1QD_u1,1L<1,CYF#
Vn+i0ekF>1l_hu0etI<1,C\G#Vn.i0ekI>1l_hu1,1L<1GU_G#Ve%h0ekI>23%qu0etI<1GUbH
#W4=l0ekI>0ocMo1,1L<1bgkJ#W"4j0ekL>1QD_u1,1L<1bg_F#Vn+i0ekL>1l_hu0etI<1bgb
G#Ve(i0ekC>1l_h      t1,:R  =0f1Y  G#Vn+  j0  ekC      >1QD_t      0f(O=0f
1VF#Ve+i0ekF>1l        _ht  1GLU=  1,C\G  #V  n.j         0ek         F>1Q
D_t1,:R=1,CYF#V  e%i0e  kF  >1l_h   t0f(  O=  1,C  \G#Vn  1j0  ekI>1  QD_t
1GLU=1GU\F#Ve(i  0ekI>  1l_  ht1    ,:R=  1G  U_G  #Vn+j0  ek  I>1QD_  t0f
(O=1GU\F#Ve+i0e  kL>1l  _ht  1GL  U =1b  gbG  #Vn  .j0ekL  >1  QD_t1,  :R=
1bg_F#Ve%i0ekL>  1l_ht  0f(  O=1 bg  bG  #Ve  +j0  ekC>1Q  D_  s1GU[>  0f1
VF#Vn.k0ekC>16)        Vp0f  1U> 0f  1\  H#W  "1l         0ek         C>0o
cMo1bg^>1,C_H#W         ":l0  e  kF  >0  ocM  p1G        U[>1        ,C\G#
Ve(j0ekF>1QD_s1  ,CX>1,  CYF  #  Vn+ k0 ekF>  16)  Vq1bg^>1GU  _G#Ve+j0ekI
>1QD_s1GU[>1GU\  F#Vn.k  0ek  I >16)    Vp0f  1U>  1GUbH#W"1l  0ekI>0ocMo1
bg^>1bgeH#W":l0  ekL>0o  cMp    1GU[    >1bg  bG#  Ve(j0ekL>1  QD_s1,CX>1b
g_F#Vn+k0ekL>16  )Vp1b   pd?0   f1YG#   Vn1l  0ek  C>0ocMo1,L  ^?0f1YG#Vn+
l0ekC>0ocMo2)-g         ?1,C\   G#Vn4  l0ekF  >0o  cMo1G^a?1,  C\G#Vn.l0ek
F>0ocMo0f:[?1,C       \G#Vn7l  0ekI>0  ocMo1  bpd  ?1GU_G#Vn1  l0ekI>0ocMo
1,L^?1GU_G#Vn+l0ekI>0ocMo2)-g?1bgbG#Vn4l0ekL>0ocMo1G^a?1bgbG#Vn.l0ekL>0ocM
o0f:[?1bgbG#Ve1l0ekC>0ocMo1Ggg@0f1VF#Ve%l0ekC>0ocMo2DHp@1,CYF#Ve.l0ekF>0oc
Mo1,Ud@1,CYF#Ve1l0ekI>0ocMo1Ggg@1GU\F#Ve%l0ekI>0ocMo2DHp@1bg_F#Ve.l0ekL>0o
cMo1,Ud@1bg_F#Vn+h1,1L?1l_hu0ekF<0f1YG#Ve%g0etI?23%qu0ekC<0f1\H#W4=k0etI?0
ocMo0ekF<1,CeJ#W"1i1,1O?1QD_u0ekF<1,CYF#Vn+h0etL?1l_hu0ekC<1,C\G#Vn+h1,1R?
1l_hu0ekF<1GU_G#Ve%g0etO?23%qu0ekC<1GUbH#W4=k0etO?0ocMo0ekF<1bgkJ#W"1i1,1U
?1QD_u0ekF<1bg_F#Vn+h0etR?1l_hu0ekC<1bgbG#Vn.i1,1L?1QD_t1,1O=0f1VF#Ve%h1,1
L?1l_ht0etL=0f1YG#Ve(h0etI?1l_ht1,1L=0f1YG#Ve(h1,1O?1l_ht1,1O=1,C\G#Vn+i1,
1O?1QD_t0etL=1,CYF#Vn.i0etL?1QD_t1,1L=1,CYF#Ve%h0etL?1l_hs1,1O=1GUbH#W+:k1
,1R?0ocMo0etL=1GUeI#W"1j1,1R?16)Vp1,1L=1GUeI#W"4j0etO?16)Vp1,1O=1bghI#W"4j
1,1U?16)Vq0etL=1bgeH#W+7k1,1U?0ocMp1,1L=1bgeH#W+:k0etR?0ocMo0etI=1bghI#W"1
j0etR?16)Vq1GLX>0f1YG#Ve(i1,1L?1QD_s1,:U>0f1VF#Vn+j1,1L?16)Vp1GLU>0f1\H#W"
7k0etI?0ocMo1GLX>1,C_H#W"7k1,1O?0ocMo0f(O>0f1\H#Vn.j1,1O?16)Vp0f(R>1,C_H#W
"1k1,1O?0ocMp1GLU>1,C\G#Ve(i0etL?1QD_r1GLX>1GU_G#Ve(i1,1R?1QD_s1,:U>1GU\F#
Vn+j1,1R?16)Vp1GLU>1GUbH#W"7k0etO?0ocMo1GLX>1bgeH#W"7k1,1U?0ocMo0f(O>1GUbH
#Vn.j1,1U?16)Vp0f(R>1bgeH#W"1k1,1U?0ocMp1GLU>1bgbG#Ve(i0etR?1QD_s1,:R>1bg_
F#Vn+j0etR?16)Vq1bga?0f1VF#Ve+j1,1L?16)Vq1,C[?0f1VF#Ve%j1,1L?16)Vp1bg^?0f1
YG#Ve.j1,1O?16)Vp1,CX?0f1YG#Vn1k1,1O?0ocMo1,C[?1,C\G#Vn+k1,1O?0ocMp1bg^?1,
CYF#Ve+j0etL?16)Vq1bga?1GU\F#Ve+j1,1R?16)Vp0f1U?1,C\G#Vn.k1,1R?0ocMo0f1X?1
GU_G#Ve.j0etO?16)Vp1bga?1bgbG#Ve(j0etO?16)Vq1GU^?1bg_F#Ve(j1,1U?16)Vq0f1X?
1bg_F#Vn4k0etR?0ocMo1GU[?1bgbG#Vn.k0etR?0ocMo0f1U?1bgbG#Ve.k1,1L?0ocMo1,La
@0f1VF#Ve1k0etI?0ocMo2)-j@1,CYF#Ve+k0etI?0ocMo1G^d@1,CYF#Ve%k0etI?0ocMo0f:
^@1,CYF#Ve.k0etL?0ocMo1bpg@1GU\F#Ve(k0etL?0ocMo1,La@1GU\F#Ve1k0etO?0ocMo2)
-j@1bg_F#Ve+k0etO?0ocMo1G^d@1bg_F#Ve%k0etO?0ocMo0f:^@1bg_F#Ve.k0etR?0ocMo1
,L^@1bg_F#Vn+h1GLU@1QD_t0ekI=0f1VF#Ve%g1,:R@1l_ht0ekF=0f1YG#Ve%g1GLX@1l_ht
0ekI=1,C\G#Vn+h0f(O@1QD_t0ekC=0f1VF#Vn+h1,:U@1QD_t0ekF=1,CYF#Vn+h1GL[@1QD_
t0ekI=1GU\F#Ve%g0f(R@1l_ht0ekC=1,C\G#Ve%g1,:X@1l_ht0ekF=1GU_G#Ve%g1GL^@1l_
ht0ekI=1bgbG#Vn+h0f(U@1QD_t0ekC=1GU\F#Vn+h1,:[@1QD_t0ekF=1bg_F#Ve%g0f(X@1l
_ht0ekC=1bgbG#Vn.i1GLU@16)Vp0etO>0f1\H#W"1j1GLU@0ocMo1,1O>0f1\H#W"4j1,:R@0
ocMo1,1R>1,C_H#W"4j1GLX@0ocMp0etO>1,C\G#Vn.i0f(O@16)Vp0etI>0f1\H#Vn.i1,:U@
16)Vp0etL>1,C_H#Vn.i1GL[@16)Vp0etO>1GUbH#W"1j1GL[@0ocMo1,1L>1,C_H#W"4j0f(R
@0ocMo1,1O>1GUbH#W"4j1,:X@0ocMo1,1R>1bgeH#W"4j1GL^@0ocMp0etO>1bgbG#Vn.i0f(
U@16)Vp0etI>1GUbH#Vn.i1,:[@16)Vp0etL>1bgeH#W"1j1,:[@0ocMo1,1L>1bgeH#W"4j0f
(X@0ocMp0etI>1bgbG#Vn1j1GLU@0ocMo1,:X?0f1YG#Vn+j1GLU@0ocMo1GLX?0f1YG#Ve+i1
GLX@16)Vp0f(R?0f1YG#Vn.j1GLX@0ocMo0f(U?1,C\G#Vn1j0f(O@0ocMo1,:R?0f1YG#Vn1j
1,:U@0ocMo1,:U?1,C\G#Vn1j1GL[@0ocMo1,:X?1GU_G#Vn+j1GL[@0ocMo1GLU?1,C\G#Ve+
i1,:X@16)Vp0f(O?1,C\G#Ve+i1GL^@16)Vp0f(R?1GU_G#Vn.j1GL^@0ocMo0f(U?1bgbG#Vn
1j0f(U@0ocMo1,:R?1GU_G#Vn1j1,:[@0ocMo1,:U?1bgbG#Vn+j1,:[@0ocMo1GLU?1bgbG#V
n.j0f(X@0ocMo0f(O?1bgbG#Ve+j1GLU@0ocMo0f1[@0f1VF#Ve.j1,:R@0ocMo1bgd@1,CYF#
Ve(j1,:R@0ocMo1,C^@1,CYF#Ve+j0f(O@0ocMo1GU^@1,CYF#Ve%j0f(O@0ocMo1GUa@1GU\F
#Ve%j1,:U@0ocMo0f1[@1GU\F#Ve.j0f(R@0ocMo1bga@1GU\F#Ve(j0f(R@0ocMo1bgd@1bg_
F#Ve(j1,:X@0ocMo1,C^@1bg_F#Ve+j0f(U@0ocMo1GU^@1bg_F#Ve%j0f(U@0ocMo0f1X@1bg
_F#Ve.j0f(X@0ocMo1,CX@1bg_F#Vn+h1bg^A16)Vp0ekI>0f1\H#W"1i1GU[A0ocMo0ekL>1,
C_H#W"1i1bgaA0ocMp0ekF>0f1YG#Vn+h1GU^A16)Vq0ekL>1GU_G#Ve%g0f1UA1QD_s0ekC>0
f1VF#Ve%g1,C[A1QD_s0ekF>1,CYF#Ve%g1GUaA1QD_s0ekI>1GU\F#Ve%g1bggA1QD_s0ekL>
1bg_F#Vn+h0f1XA16)Vq0ekF>1GU_G#Vn+h1GUdA16)Vp0ekC>1GUbH#W"1i0f1[A0ocMo0ekF
>1bgeH#W"1i1,CaA0ocMp1,1U?0f1VF#Ve%h1bg^A16)Vp1,1R?0f1YG#Ve(h1bgaA16)Vq0et
R?1,CYF#Vn.i1,CXA0ocMo0etL?0f1YG#Vn.i1GU^A0ocMo0etO?1,C\G#Vn.i1bgdA0ocMo0e
tR?1GU_G#Ve(h0f1UA16)Vp1,1O?1,C\G#Ve(h1GUaA16)Vp1,1U?1bgbG#Vn+i1bggA0ocMp1
,1L?1,CYF#Ve%h0f1XA16)Vq1,1O?1GU\F#Ve%h1,C^A16)Vq1,1R?1bg_F#Ve%h1GUdA16)Vp
1,1L?1GU_G#Ve(h1,CaA16)Vq0etL?1bg_F#Ve(i1bg^A0ocMo1GL[@0f1VF#Ve+i1bgaA0ocM
o0f(U@0f1VF#Ve%i1bgaA0ocMo1,:U@0f1VF#Ve(i1GU^A0ocMo1,:[@1GU\F#Ve+i0f1UA0oc
Mo1GLX@1,CYF#Ve%i0f1UA0ocMo1GL[@1GU\F#Ve%i1,C[A0ocMo1GL^@1bg_F#Ve%i1GUaA0o
cMo0f(X@1bg_F#Ve(i0f1XA0ocMo1,:U@1GU\F#Ve(i1GUdA0ocMo1GLU@1GU\F#Ve+i1,CaA0
ocMo0f(O@1GU\F#Ve%i1,CaA0ocMp0ekO?0f1VF#Ve%g1bpdB16)Vp0ekO?1,C\G#Vn+h1G^aB
0ocMp0ekL?1,CYF#Vn+h2)-mB0ocMo0ekF?0f1YG#Ve%g1G^dB16)Vp0ekL?1GU_G#Ve%g2)-p
B16)Vq0ekC?0f1VF#Vn+h1,LaB0ocMp0ekI?1GU\F#Vn+h1bpmB0ocMo0ekC?1,C\G#Ve%g1,L
dB16)Vp0ekI?1bgbG#Ve%h2)-gB0ocMo1,1U@0f1VF#Ve(h2)-jB0ocMo0etO@0f1VF#Ve%h1b
pgB0ocMo0etU@1GU\F#Ve(h1,L^B0ocMo1,1R@1,CYF#Ve(h1bpjB0ocMo1,1X@1bg_F#Ve%h0
f:[B0ocMo0etL@1,CYF#Ve%h1G^gB0ocMo0etR@1bg_F#Ve(h0f:^B0ocMo1,1O@1GU\F#Ve(h
1G^jB0ocMo0ekO@0f1VF#Ve%g2DHsC0ocMo0ekI@0f1VF#Ve%g1c$mC0ocMo0ekO@1GU\F#Ve%
g2DI$C0ocMo0ekC@0f1VF#Ve%g1,UgC0ocMo0ekI@1GU\F#Ve%g1c$sC0ocMp0ekC;1,LhJ#W+
7j0ekF?16)Vp0ekC;1G^nK#W"1i0ekI?1QD_u0ekC;1G^bG#Vn+h0ekL?1l_hu0ekC;1bphH#V
e%g0ekO?23%qu0ekC;2)-nI#W4=k0ekO?0ocMp0etI<0f:bI#W+7k0ekC?0ocMp1,1L<1,LeI#
W+:k0ekF?0ocMo0etI<1,LhJ#W"1j0ekF?16)Vp1,1L<1G^kJ#W"4j0ekI?16)Vq0etI<1G^hI
#W+7k0ekI?0ocMp1,1L<1bpkI#W+:k0ekL?0ocMo0etI<1bpnJ#W"1j0ekL?16)Vp1,1L<2)-q
J#W"4j0ekO?16)Vq0etI<2)-nI#W+7k0ekO?0ocMp1,:R=0f:_H#Ve%i0ekC?1QD_s0f(O=0f:
\G#Vn1j0ekF?16)Vp1,:R=1,LeI#W"4k0ekF?0ocMp0f(O=1,LbH#Ve+i0ekI?1QD_s1GLU=1G
^bG#Vn.j0ekI?16)Vp0f(O=1G^hI#W"1k0ekI?0ocMp1GLU=1bphH#Ve(i0ekL?1QD_s1,:R=1
bpeG#Vn+j0ekL?16)Vp1GLU=2)-nI#W"7k0ekO?0ocMp1,:R=2)-kH#Ve%i0ekO?1QD_s0f(O=
2)-hG#Vn1k0ekC?0ocMo1,CX>0f:_H#Vn+k0ekC?0ocMp1bg^>1,L_G#Ve+j0ekF?16)Vq1,CX
>1,L_G#Ve%j0ekF?16)Vp1bg^>1G^eH#Vn1k0ekI?0ocMo1,CX>1G^eH#Vn+k0ekI?0ocMp1bg
^>1bpeG#Ve+j0ekL?16)Vq1,CX>1bpeG#Ve%j0ekL?16)Vp1bg^>2)-kH#Vn1k0ekO?0ocMo1,
CX>2)-kH#Vn+k0ekO?0ocMo1G^a?0f:\G#Ve%k0ekC?0ocMo1bpd?1,L_G#Ve(k0ekF?0ocMo2
)-g?1G^bG#Ve+k0ekI?0ocMo0f:[?1G^bG#Ve.k0ekL?0ocMo1,L^?1bpeG#Ve1k0ekO?0ocMo
1G^a?2)-hG#Ve%k0ekO?0ocMq0ekF<0f:_H#Vn+h0etI@1QD_t0ekC<0f:\G#Vn+h1,1O@1QD_
t0ekF<1,L_G#Ve%g0etL@1l_ht0ekC<1,LbH#Ve%g1,1R@1l_ht0ekF<1G^eH#Vn+h0etO@1QD
_t0ekC<1G^bG#Vn+h1,1U@1QD_t0ekF<1bpeG#Ve%g0etR@1l_ht0ekC<1bphH#Ve%g1,1X@1l
_ht0ekF<2)-kH#Vn+h0etU@1QD_t0ekC<2)-hG#Ve(h1,1L@1QD_s1,1O=0f:\G#Vn+i1,1L@1
6)Vq1,1L=0f:_H#Ve%h0etI@1QD_r1,1O=1,LbH#Ve%h1,1O@1QD_s0etL=1,L_G#Ve(h0etL@
1QD_s1,1L=1,L_G#Ve(h1,1R@1QD_s1,1O=1G^bG#Vn+i1,1R@16)Vq1,1L=1G^eH#Ve%h0etO
@1QD_r1,1O=1bphH#Ve%h1,1U@1QD_s0etL=1bpeG#Ve(h0etR@1QD_s1,1L=1bpeG#Ve(h1,1
X@1QD_s1,1O=2)-hG#Vn+i1,1X@16)Vq1,1L=2)-kH#Ve%h0etU@1QD_s0etI=2)-hG#Ve+i1,
1L@16)Vq1,:U>0f:\G#Ve%i1,1L@16)Vq1GLU>0f:\G#Ve(i0etI@16)Vq1GLX>1,L_G#Ve(i1
,1O@16)Vq0f(R>1,L_G#Ve+i0etL@16)Vp1GLX>1G^eH#Ve%i0etL@16)Vq1,:U>1G^bG#Ve%i
1,1R@16)Vq1GLU>1G^bG#Ve(i0etO@16)Vq1GLX>1bpeG#Ve(i1,1U@16)Vq0f(R>1bpeG#Ve+
i0etR@16)Vp1GLX>2)-kH#Ve%i0etR@16)Vq1,:U>2)-hG#Ve%i1,1X@16)Vq1GLU>2)-hG#Ve
(i0etU@16)Vq0f(O>2)-hG#Ve.j1,1L@0ocMo1,C[?0f:\G#Ve+j0etI@0ocMo1GU^?1,L_G#V
e%j0etI@0ocMo0f1X?1,L_G#Ve.j0etL@0ocMo1bga?1G^bG#Ve(j0etL@0ocMo1,C[?1G^bG#
Ve+j0etO@0ocMo1GU^?1bpeG#Ve%j0etO@0ocMo0f1X?1bpeG#Ve.j0etR@0ocMo1bga?2)-hG
#Ve(j0etR@0ocMo1,C[?2)-hG#Ve+j0etU@0ocMo0f1U?2)-hG#Ve%g1GLUA1QD_s0ekI=0f:\
G#Vn+h1,:RA16)Vq0ekI=1,LbH#Ve%g0f(OA1QD_s0ekC=0f:\G#Ve%g1,:UA1QD_s0ekF=1,L
_G#Ve%g1GL[A1QD_s0ekI=1G^bG#Vn+h0f(RA16)Vq0ekF=1G^eH#Vn+h1GL^A16)Vp0ekC=1G
^hI#W"1i0f(UA0ocMo0ekF=1bpkI#W"1i1,:[A0ocMo0ekI=2)-nI#W"1i1GLaA0ocMp0ekC=1
bphH#Vn+h1,:^A16)Vp1,1R>0f:_H#Vn+i1GLUA0ocMp1,1O>0f:\G#Ve%h1,:RA16)Vq1,1R>
1,L_G#Ve%h1GLXA16)Vp1,1L>0f:_H#Ve(h1,:UA16)Vp1,1R>1G^eH#Vn+i1GL[A0ocMp1,1L
>1,L_G#Ve%h0f(RA16)Vq1,1O>1G^bG#Ve%h1,:XA16)Vq1,1R>1bpeG#Ve%h1GL^A16)Vp1,1
L>1G^eH#Ve(h1,:[A16)Vp1,1R>2)-kH#Vn+i1GLaA0ocMp1,1L>1bpeG#Ve%h0f(XA16)Vq1,
1O>2)-hG#Ve%h1,:^A16)Vp1GL[?0f:\G#Ve%i1GLUA0ocMo1,:U?0f:\G#Ve(i1GLXA0ocMo1
GLU?0f:\G#Ve+i1,:UA0ocMo0f(O?0f:\G#Ve+i1GL[A0ocMo0f(R?1,L_G#Ve%i1GL[A0ocMo
1,:R?1,L_G#Ve(i1,:XA0ocMo1,:X?1bpeG#Ve+i0f(UA0ocMo1GLX?1bpeG#Ve%i0f(UA0ocM
o1GL[?2)-hG#Ve%i1,:[A0ocMo0f(U?2)-hG#Ve(i0f(XA0ocMo1,:U?2)-hG#Ve%g1bg^B16)
Vq0ekI>0f:\G#Vn+h1bgaB0ocMo0ekF>0f:_H#Ve%g1GU^B16)Vp0ekL>1G^eH#Vn+h0f1UB0o
cMp0ekF>1,L_G#Vn+h1GUaB0ocMp0ekL>1bpeG#Ve%g0f1XB16)Vp0ekF>1G^eH#Ve%g1GUdB1
6)Vp0ekL>2)-kH#Vn+h0f1[B0ocMp0ekF>1bpeG#Vn+h1GUgB0ocMo1,1U?0f:\G#Ve%h1GU[B
0ocMo0etR?1,L_G#Ve(h1,CXB0ocMo1,1R?1,L_G#Ve(h1bgdB0ocMo0etI?0f:\G#Ve%h1,C[
B0ocMo0etO?1G^bG#Ve%h1bggB0ocMo1,1L?1,L_G#Ve(h1,C^B0ocMo1,1R?1bpeG#Ve(h1bg
jB0ocMo0etI?1G^bG#Ve%h1,CaB0ocMo0etO?2)-hG#Ve%g2)-gC0ocMo0ekI?0f:\G#Ve%g1b
pgC0ocMo0ekO?1G^bG#Ve%g0f:[C0ocMo0ekF?1,L_G#Ve%g1G^gC0ocMo0ekL?1bpeG#Ve%g2
)-sC0ocMo0ekC;1,UnK#W"1i0ekF@16)Vq0ekC;1GgnJ#W+7j0ekI@0ocMo0ekC;1c$tK#W"1i
0ekL@16)Vq0ekC;2)6tJ#W+7j0ekO@0ocMo0ekC;2DI%K#W"1i0ekR@16)Vr0etI<0fCbH#Ve(
h0ekF@1QD_s1,1L<1,UeH#Vn+i0ekF@16)Vq1,1L<1GgkI#Ve%h0ekI@1QD_s0etI<1GghH#Ve
(h0ekL@1QD_s1,1L<1c$kH#Vn+i0ekL@16)Vq1,1L<2)6qI#Ve%h0ekO@1QD_s0etI<2)6nH#V
e(h0ekR@1QD_s1,1L<2DHqH#Vn+i0ekR@16)Vp1,:R=0fCeI#Vn+j0ekC@0ocMo1GLU=1,UhI#
Vn.j0ekF@0ocMo0f(O=1,UhI#Vn1j0ekI@0ocMo1,:R=1GgkI#Vn+j0ekI@0ocMo1GLU=1c$nI
#Vn.j0ekL@0ocMo0f(O=1c$nI#Vn1j0ekO@0ocMo1,:R=2)6qI#Vn+j0ekO@0ocMo1GLU=2DHt
I#Vn.j0ekR@0ocMo0f(O=2DHtI#Ve+j0ekC@0ocMo0f1U>0fCbH#Ve.j0ekF@0ocMo1,CX>1,U
eH#Ve+j0ekI@0ocMo0f1U>1GghH#Ve.j0ekL@0ocMo1,CX>1c$kH#Ve+j0ekO@0ocMo0f1U>2)
6nH#Ve.j0ekR@0ocMo1,CX>2DHqH#Vn+h1,1LA16)Vp0ekC<0fChJ#W"1i0etIA0ocMo0ekF<1
,UkJ#W"1i1,1OA0ocMp0ekC<1,UhI#Vn+h1,1RA16)Vp0ekC<1GgnJ#W"1i0etOA0ocMo0ekF<
1c$qJ#W"1i1,1UA0ocMp0ekC<1c$nI#Vn+h1,1XA16)Vp0ekC<2)6tJ#W"1i0etUA0ocMo0ekF
<2DI"J#W"1i1,1[A0ocMp1,1O=0fCbH#Ve%h1,1LA16)Vp1,1L=0fCeI#Ve(h1,1OA16)Vq0et
L=1,UeH#Vn.i0etLA0ocMo0etI=1,UhI#Vn.i1,1RA0ocMo0etL=1GgkI#Ve(h0etOA16)Vp1,
1O=1c$nI#Vn+i1,1UA0ocMp1,1L=1c$kH#Ve%h0etRA16)Vq1,1O=2)6nH#Ve%h1,1XA16)Vp1
,1L=2)6qI#Ve(h1,1[A16)Vq0etL=2DHqH#Ve(i1,1LA0ocMo1GLU>0fCbH#Ve+i1,1OA0ocMo
0f(O>0fCbH#Ve%i1,1OA0ocMq1,1O=0ekPG#W4@l1,1L<1QD_r0etL=0ekSH#W+7k1,1L<1l_i
"0etL=0ekGD#Vn.i0etI<2NA&"1,1L=0ekMF#W"1j0etI<23%r"0etI=0ekJE#Ve+i1,1L<2NA
&!1GLX>0ekMF#Vn.j1,1L<23%r!1,:U>0ekJE#Ve%i1,1L<2NA&!0f(R>0ekMF#W4=m1,1L<16
)Vq1GLU>0ekPG#W+=l0etI<1QD_q1,:R>0ekSH#W"4k0etI<1l_i!1,:R>0ekGD#Vn+j0etI<2
3%r!0f(O>0ekJE#W=Cn0etI<0ocMo1bga?0ekPG#W":l1,1L<1QD_r1GU^?0ekMF#W+=m1,1L<
16)Vp1,C[?0ekPG#W"4l1,1L<1QD_u1,C[?0ekDC#Vn+k1,1L<1l_hu0f1X?0ekGD#Vn4k0etI
<1l_hr1GU[?0ekPG#W"7l0etI<1QD_r1,CX?0ekMF#W+:m0etI<16)Vp0f1U?0ekPG#W"1l0et
I<1QD_u0f1U?0ekDC#Ve1k1,1L<1l_hs1bpg@0ekJE#Ve+k1,1L<1l_ht1G^d@0ekGD#Vn.l1,
1L<1QD_t1,La@0ekDC#Ve%k1,1L<1l_ht0f:^@0ekGD#Vn7l0etI<1QD_q1bpd@0ekMF#W":m0
etI<16)Vq1G^a@0ekJE#W+=n0etI<0ocMo1,L^@0ekMF#W"4m0etI<16)Vq0f:[@0ekJE#W+7n
0etI<0ocMo2DHsA0ekJE#Vn7m1,1L<16)Vp1c$mA0ekJE#W":n1,1L<0ocMp1GgjA0ekGD#Ve(
l1,1L<1QD_s1,Ug      A0ekD  C#Ve1  l0etI  <1  QD_      r1c$jA      0ekGD#V
e+l0etI<1QD_s1G        ggA  0ekDC  #Vn.m  0e  tI<         16)         Vp0f
CaA0ekJE#W"1n0e  tI<0o  cM  q0ekI   =0ek  PG  #W4  =k1GL  U=1  QD_r0  ekF=
0ekSH#W+7j1,:R=  1l_i"  0ek  F=0    ekGD  #W  "1i  0f(O=2  3%  r"0ekC  =0e
kJE#Ve(h1GLU=2N  A&!1,  1R>  0ek  M F#W  4@l  1GL  U=16)V  q0  etO>0e  kPG
#W+7k1GLU=1QD`!  0etO>  0ek  DC# Vn  .i  1,:  R=2  3%r!1,  1O  >0ekJE  #Ve
 %h1,:R=2NA&!0e        tL>0  ekM F#  W4  =l1  ,:R         =16         )Vp1
,1L>0ekSH#W"4j0         f(O=  1  l_  i!  1,1  L>0        ekGD        #Vn+i
0f(O=23%r!0etI>  0ekJE#  W=C  m  0f( O= 0ocM  o1G  L[?0ekPG#W  "7k1GLU=1QD
_r1,:X?0ekMF#W+  :l1GLU  =16  ) Vp0f    (U?0  ekP  G#W"1k1GLU  =1QD_u0f(U?
0ekDC#Vn1j1,:R=  1l_hu1  GLX    ?0ek    GD#V  e(i  1,:R=23%qu  1,:U?0ekJE#
W4@m1,:R=0ocMp0  f(R?0   ekMF   #W+7l   1,:R  =16  )Vp1GLU?0e  kPG#W"7k0f(
O=1QD_r1,:R?0ek         MF#W+   :l0f(  O=16)  Vp0  f(O?0ekPG#  W"1k0f(O=1Q
D_u0f(O?0ekDC#V       e.j1GLU  =1l_ht  1bgd@  0ek  GD#Vn1k1GL  U=1QD_t1GUa
@0ekDC#Ve(j1GLU=1l_ht1,C^@0ekGD#Vn+k1GLU=1QD_t0f1[@0ekDC#Vn4k1,:R=1QD_q1GU
^@0ekMF#W"7l1,:R=16)Vq1,C[@0ekJE#W+:m1,:R=0ocMo0f1X@0ekMF#W"1l1,:R=16)Vp1b
g^@0ekMF#W":l0f(O=16)Vq1GU[@0ekJE#W+=m0f(O=0ocMo1,CX@0ekMF#W"4l0f(O=16)Vq0
f1U@0ekJE#W+7m0f(O=0ocMo2)-mA0ekJE#Vn4l1GLU=16)Vp1G^gA0ekJE#W"7m1GLU=0ocMp
1,LdA0ekGD#Vn7l1,:R=16)Vp1bpgA0ekJE#W":m1,:R=0ocMp1G^dA0ekGD#Ve(k1,:R=1QD_
s1,LaA0ekDC#Vn+l1,:R=16)Vp2)-gA0ekJE#Vn4l0f(O=16)Vp1G^aA0ekJE#W"7m0f(O=0oc
Mp1,L^A0ekGD#Ve%k0f(O=1QD_s0f:[A0ekDC#Ve4l1GLU=16)Vq2)6sB0ekDC#Ve.l1GLU=16
)Vq1GgmB0ekDC#Ve1l1,:R=16)Vq1c$mB0ekDC#Ve+l1,:R=16)Vq1,UgB0ekDC#Ve4l0f(O=1
6)Vq2)6mB0ekDC#Ve.l0f(O=16)Vq1GggB0ekDC#Ve(l0f(O=16)Vq0fCaB0ekDC#Ve%g1bg^>
2NA&!0ekL>0ekMF#W4=k1bg^>16)Vq0ekI>0ekPG#W+7j1GU[>1QD`!0ekI>0ekDC#Ve%g1,CX
>2NA&!0ekF>0ekMF#W4=k1,CX>16)Vq0ekC>0ekPG#W+7j0f1U>1QD`!0ekC>0ekDC#Ve(h1bg
^>23%qu1,1U?0ekJE#W4@l1bg^>0ocMp0etR?0ekMF#W+7k1bg^>16)Vq1,1R?0ekMF#W+:k1G
U[>16)Vp0etO?0ekPG#W"1j1GU[>1QD_u0etO?0ekDC#Ve(h1,CX>23%qu1,1O?0ekJE#W4@l1
,CX>0ocMp0etL?0ekMF#W+7k1,CX>16)Vq1,1L?0ekMF#W+:k0f1U>16)Vp0etI?0ekPG#W"1j
0f1U>1QD_u0etI?0ekDC#Ve+i1bg^>1l_ht1GL^@0ekGD#Vn.j1bg^>1QD_t1,:[@0ekDC#Ve%
i1bg^>1l_ht0f(X@0ekGD#Vn1j1GU[>1QD_t1GL[@0ekDC#Ve(i1GU[>1l_ht1,:X@0ekGD#Vn
+j1GU[>1QD_t0f(U@0ekDC#Ve+i1,CX>1l_ht1GLX@0ekGD#Vn.j1,CX>1QD_t1,:U@0ekDC#V
e%i1,CX>1l_ht0f(R@0ekGD#Vn1j0f1U>1QD_t1GLU@0ekDC#Ve(i0f1U>1l_ht1,:R@0ekGD#
Vn+j0f1U>1QD_t0f(O@0ekDC#Ve.j1bg^>1QD_s1bggA0ekDC#Vn1k1bg^>16)Vp1,CaA0ekJE
#W"4l1bg^>0ocMp1bgdA0ekGD#Ve+j1GU[>1QD_s1GUaA0ekDC#Vn.k1GU[>16)Vp0f1[A0ekJ
E#W"1l1GU[>0ocMo1bgaA0ekJE#W":l1,CX>0ocMp1GU^A0ekGD#Ve(j1,CX>1QD_s1,C[A0ek
DC#Vn+k1,CX>16)Vq1bg^A0ekGD#Ve+j0f1U>1QD_s1GU[A0ekDC#Vn.k0f1U>16)Vp0f1UA0e
kJE#W"1l0f1U>0ocMo2)-pB0ekGD#Vn4l1bg^>0ocMo1G^jB0ekGD#Vn7l1GU[>0ocMo1bpjB0
ekGD#Vn1l1GU[>0ocMo1,LdB0ekGD#Ve1k1,CX>16)Vq1bpgB0ekDC#Ve+k1,CX>16)Vq1,LaB
0ekDC#Ve%k1,CX>16)Vq2)-gB0ekDC#Ve.k0f1U>16)Vq1G^aB0ekDC#Ve(k0f1U>16)Vq0f:[
B0ekDC#Ve4l1bg^>0ocMo1c$sC0ekDC#Ve1l1GU[>0ocMo1GgmC0ekDC#Ve4l1,CX>0ocMo1c$
mC0ekDC#Ve(l1,CX>0ocMo2)6mC0ekDC#Ve+l0f1U>0ocMo0fCaC0ekDC#Ve%g2)-g?23%qu0e
kO?0ekJE#W4=k2)-g?0ocMp0ekL?0ekMF#W+7j1bpd?16)Vp0ekI?0ekPG#W"1i1G^a?1QD_u0
ekI?0ekDC#Vn+h1,L^?1l_hu0ekF?0ekGD#Ve%g0f:[?23%qu0ekC?0ekJE#W4=k0f:[?0ocMo
1,1X@0ekMF#W"4j2)-g?16)Vq0etU@0ekJE#W+7k2)-g?0ocMp1,1U@0ekJE#W+:k1bpd?0ocM
o0etR@0ekMF#W"1j1bpd?16)Vp1,1R@0ekMF#W"4j1G^a?16)Vq0etO@0ekJE#W+7k1G^a?0oc
Mp1,1O@0ekJE#W+:k1,L^?0ocMo0etL@0ekMF#W"1j1,L^?16)Vp1,1L@0ekMF#W"4j0f:[?16
)Vq0etI@0ekJE#W+7k0f:[?0ocMo1GLaA0ekJE#W"7k2)-g?0ocMp1,:^A0ekGD#Vn1j1bpd?1
6)Vp1,:[A0ekJE#W"4k1bpd?0ocMp0f(XA0ekGD#Ve+i1G^a?1QD_s1GL[A0ekDC#Vn.j1G^a?
16)Vp0f(UA0ekJE#W"1k1G^a?0ocMp1GLXA0ekGD#Ve(i1,L^?1QD_s1,:UA0ekDC#Vn+j1,L^
?16)Vp1GLUA0ekJE#W"7k0f:[?0ocMp1,:RA0ekGD#Ve%i0f:[?1QD_s0f(OA0ekDC#Ve.j2)-
g?16)Vq1GUgB0ekDC#Vn4k1bpd?0ocMo1GUdB0ekGD#Vn.k1bpd?0ocMo1bgdB0ekGD#Vn1k1G
^a?0ocMo1,C^B0ekGD#Vn+k1G^a?0ocMp1bgaB0ekDC#Ve+j1,L^?16)Vq1,C[B0ekDC#Ve%j1
,L^?16)Vp1bg^B0ekGD#Vn1k0f:[?0ocMo1,CXB0ekGD#Vn+k0f:[?0ocMo2)-sC0ekDC#Ve.k
1bpd?0ocMo2)-mC0ekDC#Ve+k1G^a?0ocMo1bpgC0ekDC#Ve(k1,L^?0ocMo2)-gC0ekDC#Ve+
k0f:[?0ocMo0f:[C0ekDC#Ve%g2DHp@1l_ht0ekR@0ekGD#Vn+h2)6m@1QD_t0ekO@0ekDC#Ve
 %g1c$j@1l_ht0ekL@0ekGD#Vn+h1Ggg@1QD_t0ekI@0ekDC#Ve%g1,Ud@1l_ht0ekF@0ekGD#
Vn+h0fCa@1QD_t0ekC@0ekDC#Ve(h2DHp@1QD_s1,1[A0ekDC#Vn.i2)6m@16)Vp0etUA0ekJE
#W"1j2)6m@0ocMo1,1UA0ekJE#W"4j1c$j@0ocMp0etRA0ekGD#Vn.i1Ggg@16)Vp0etOA0ekJ
E#W"1j1Ggg@0ocMo1,1OA0ekJE#W"4j1,Ud@0ocMp0etLA0ekGD#Vn.i0fCa@16)Vp0etIA0ek
JE#W"1j0fCa@0ocMo1GLdB0ekGD#Vn1j2)6m@0ocMo1,:^B0ekGD#Ve+i1c$j@16)Vq1,:[B0e
kDC#Ve%i1c$j@16)Vq1GL[B0ekDC#Ve(i1Ggg@16)Vq0f(UB0ekDC#Ve+i1,Ud@16)Vq1,:UB0
ekDC#Ve%i1,Ud@16)Vq1GLUB0ekDC#Ve(i0fCa@16)Vq0f(OB0ekDC#Ve.j2DHp@0ocMo1GUgC
0ekDC#Ve.j1c$j@0ocMo1,CaC0ekDC#Ve+j1Ggg@0ocMo0f1[C0ekDC#Ve.j1,Ud@0ocMo1,C[
C0ekDC#Ve+j0fCa@0ocMo0f1UC0ekDC#W"1i0ekF<2NA&#0ekC;1,1VG#W"1j0ekC<23%r"0et
I<0etPF#W"4j0ekF<23%r"1,1L<1,1SF#Vn+i0ekF<2NA&"0etI<1,1VG#W=Cm0ekF<16)Vp1,
:R=0etYI#W"4k0ekC<1l_i!1,:R=0etME#Vn+j0ekC<23%r!0f(O=0etPF#W=Cn0ekC<0ocMo1
GLU=1,1\I#W"7k0ekF<1l_hs1,:R=1,1YH#W+:l0ekF<1QD_q0f(O=1,1\I#W"1k0ekF<1l_i!
0f(O=1,1PE#Ve+j0ekC<23%qu1GU[>0etPF#Vn.k0ekC<1l_hu1,CX>0etME#Ve%j0ekC<23%q
u0f1U>0etPF#W4=n0ekC<0ocMo1bg^>1,1YH#W":l0ekF<1QD_r1GU[>1,1VG#W+=m0ekF<16)
Vp1,CX>1,1YH#W"4l0ekF<1QD_u1,CX>1,1MD#Vn+k0ekF<1l_hu0f1U>1,1PE#Ve.k0ekC<1l
_ht1bpd?0etME#Vn1l0ekC<1QD_t1G^a?0etJD#Ve(k0ekC<1l_ht1,L^?0etME#Vn+l0ekC<1
QD_t0f:[?0etJD#Ve1k0ekF<1l_hs1bpd?1,1SF#Ve+k0ekF<1l_ht1G^a?1,1PE#Vn.l0ekF<
1QD_t1,L^?1,1MD#Ve%k0ekF<1l_ht0f:[?1,1PE#Ve1l0ekC<1QD_r1c$j@0etME#Ve+l0ekC
<1QD_s1Ggg@0etJD#Vn.m0ekC<16)Vp0fCa@0etPF#W"1n0ekC<0ocMo2DHp@1,1SF#Vn7m0ek
F<16)Vp1c$j@1,1SF#W":n0ekF<0ocMp1Ggg@1,1PE#Ve(l0ekF<1QD_s1,Ud@1,1MD#Vn+m0e
kF<16)Vq0ekF<0etYI#W+7j1,1L=1l_i"0ekF<0etME#W"1i0etI=23%r"0ekC<0etPF#W"1i1
,1O=23%r"0ekF<1,1SF#Vn+h0etL=2NA&"0ekC<1,1VG#W=Cl0etL=16)Vq1,1O=0etVH#W+:k
1,1L=1QD_q0etL=0etYI#W"1j1,1L=1l_i!0etL=0etME#Ve(h0etI=2NA&!1,1L=0etSG#W4@
l0etI=16)Vp1,1O=1,1\I#W"4j1,1O=1l_i!1,1O=1,1PE#Vn+i1,1O=23%r!0etL=1,1SF#W=
Cm1,1O=0ocMp1,1L=1,1YH#W+:k0etL=1QD_q0etI=1,1\I#W"1j0etL=1l_i!0etI=1,1PE#V
n1j1,1L=1l_hu1GLX>0etME#Ve(i1,1L=23%qu1,:U>0etPF#W4@m1,1L=0ocMp0f(R>0etSG#
W+7l1,1L=16)Vp1GLU>0etVH#W"7k0etI=1QD_q1GLX>1,1YH#W"7k1,1O=1QD_q0f(O>0etVH
#Vn.j1,1O=1l_hu1,:U>1,1PE#Ve%i1,1O=23%qu0f(R>1,1SF#W4=m1,1O=0ocMp1GLU>1,1V
G#W+=l0etL=16)Vp1,:R>1,1YH#W"4k0etL=1QD_u1,:R>1,1MD#Vn+j0etL=1l_hu0f(O>1,1
PE#Vn4k1,1L=1QD_q1GU^?0etSG#W"7l1,1L=16)Vq1,C[?0etPF#W+:m1,1L=0ocMo0f1X?0e
tSG#W"1l1,1L=16)Vp1bg^?0etSG#W":l0etI=16)Vp1bga?1,1VG#W":l1,1O=16)Vp1,CX?0
etSG#Vn1k1,1O=1QD_t1GU^?1,1MD#Ve(j1,1O=1l_ht1,C[?1,1PE#Vn+k1,1O=1QD_t0f1X?
1,1MD#Vn4k0etL=1QD_q1GU[?1,1VG#W"7l0etL=16)Vq1,CX?1,1SF#W+:m0etL=0ocMo0f1U
?1,1VG#W"1l0etL=16)Vq2)-j@0etME#Ve.k1,1L=1QD_s1bpg@0etJD#Vn1l1,1L=16)Vp1,L
a@0etPF#W"4m1,1L=0ocMp0f:^@0etME#Ve1k0etI=1QD_q2)-j@1,1SF#Ve+k0etI=1QD_r1b
pg@1,1PE#Ve+k1,1O=1QD_s1G^d@1,1MD#Ve%k0etI=1QD_r1,La@1,1PE#Ve%k1,1O=1QD_s0
f:^@1,1MD#Vn7l0etL=16)Vp1bpd@1,1SF#W":m0etL=0ocMp1G^a@1,1PE#Ve(k0etL=1QD_s
1,L^@1,1MD#Vn+l0etL=16)Vp2)6pA0etME#Vn4m1,1L=0ocMo1GgjA0etME#Vn.m1,1L=0ocM
o2DHpA0etME#Ve4l1,1O=16)Vp1c$jA0etME#Vn7m1,1O=0ocMo1c$mA1,1PE#Ve(l0etI=16)
Vq1GgjA1,1MD#Ve(l1,1O=16)Vp2)6mA1,1PE#Vn4m0etL=0ocMo1GggA1,1PE#Vn.m0etL=0o
cMo0fCaA1,1PE#Vn+h1GLU>23%r!0ekI=0etPF#W=Cl1GLU>0ocMo0ekF=0etYI#W"1i1,:R>1
l_i!0ekF=0etME#Ve%g1GLX>2NA&!0ekI=1,1VG#W4=k1GLX>16)Vq0ekC=0etVH#W+7j0f(O>
1QD`!0ekC=0etJD#Vn+h1,:U>23%r!0ekF=1,1SF#W=Cl1,:U>0ocMo0ekC=1,1\I#W"1i0f(R
>1l_i!0ekC=1,1PE#Vn.i1GLU>1l_hu1,1R>0etME#Ve%h1GLU>23%qu0etO>0etPF#W4=l1GL
U>0ocMo1,1O>0etVH#W"4j1,:R>1QD_u1,1O>0etJD#Ve(h1GLX>23%qu1,1R>1,1SF#W4@l1G
LX>0ocMp0etO>1,1VG#W+7k1GLX>16)Vq1,1L>0etSG#W+:k0f(O>16)Vp0etI>0etVH#Vn.i1
,:U>1l_hu1,1O>1,1PE#Ve%h1,:U>23%qu0etL>1,1SF#W4=l1,:U>0ocMo1,1L>1,1YH#W"4j
0f(R>1QD_u1,1L>1,1MD#Vn+i0f(R>1l_hu0etI>1,1PE#Vn1j1GLU>1QD_t1GL[?0etJD#Ve(
i1GLU>1l_ht1,:X?0etME#Vn+j1GLU>1QD_t0f(U?0etJD#Ve+i1,:R>1l_ht1GLX?0etME#Ve
+i1GLX>1l_ht1GL[?1,1PE#Ve%i1,:R>1l_hs1,:X?1,1SF#W+:l1GLX>0ocMo0f(U?1,1VG#W
"1k1GLX>16)Vq1GLU?0etPF#W+=l0f(O>0ocMo1,:R?0etSG#Vn1j1,:U>1QD_t1GLX?1,1MD#
Ve(i1,:U>1l_ht1,:U?1,1PE#Vn+j1,:U>1QD_t0f(R?1,1MD#Ve+i0f(R>1l_ht1GLU?1,1PE
#Vn.j0f(R>1QD_t1,:R?1,1MD#Ve%i0f(R>1l_ht0f(O?1,1PE#Vn4k1GLU>16)Vp1GUa@0etP
F#W"7l1GLU>0ocMp1,C^@0etME#Ve%j1GLU>1QD_s0f1[@0etJD#Ve.j1,:R>1QD_s1bga@0et
JD#Ve.j1GLX>1QD_s1bgd@1,1MD#Ve(j1,:R>1QD_r1GUa@1,1PE#Ve(j1GLX>1QD_s1,C^@1,
1MD#Vn+k1GLX>16)Vq1bg^@0etME#Ve+j0f(O>1QD_r1bga@1,1PE#Ve+j1,:U>1QD_s1GU^@1
,1MD#Ve%j0f(O>1QD_r1,C[@1,1PE#Ve%j1,:U>1QD_s0f1X@1,1MD#Ve.j0f(R>1QD_s1bg^@
1,1MD#Vn1k0f(R>16)Vp1,CX@1,1SF#W"4l0f(R>0ocMp0f1U@1,1PE#Vn7l1GLU>0ocMo1bpj
A0etME#Vn1l1GLU>0ocMo1,LdA0etME#Ve1k1,:R>16)Vp2)-mA1,1PE#Ve+k1,:R>16)Vq1bp
jA1,1MD#Ve+k1GLX>16)Vp0f:^A0etME#Vn.l1GLX>0ocMp2)-gA0etJD#Ve.k0f(O>16)Vq2)
-jA1,1MD#Ve.k1,:U>16)Vp1,L^A0etME#Vn1l1,:U>0ocMo1,LaA1,1PE#Vn+l1,:U>0ocMo2
)-gA1,1PE#Vn4l0f(R>0ocMo1G^aA1,1PE#Vn.l0f(R>0ocMo0f:[A1,1PE#Ve1l1GLU>0ocMo
1GgmB0etJD#Ve4l1,:R>0ocMo2DI!B1,1MD#Ve.l1,:R>0ocMo1c$pB1,1MD#Ve(l1,:R>0ocM
o2)6mB0etJD#Ve1l1,:U>0ocMo1GggB0etJD#Ve+l1,:U>0ocMo0fCaB0etJD#Ve4l0f(R>0oc
Mo1c$jB1,1MD#Ve(l0f(R>0ocMp0ekL>0etSG#W+7j1bg^?16)Vp0ekI>0etVH#W"1i1GU[?1Q
D_u0ekI>0etJD#Ve%g1bga?23%qu0ekL>1,1SF#W4=k1bga?0ocMp0ekF>0etSG#W+7j1,CX?1
6)Vq0ekI>1,1VG#W+7j1GU^?16)Vp0ekC>0etVH#W"1i0f1U?1QD_u0ekC>0etJD#Ve%g1,C[?
23%qu0ekF>1,1SF#W4=k1,C[?0ocMp0ekC>1,1VG#W+7j0f1X?16)Vq1,1U?0etPF#W+:k1bg^
?0ocMo0etR?0etSG#W"1j1bg^?16)Vp1,1R?0etSG#W"4j1GU[?16)Vp1,1U?1,1VG#W"4j1bg
a?16)Vq0etR?1,1SF#W+7k1bga?0ocMp1,1O?0etPF#W+:k1,CX?0ocMo0etL?0etSG#Vn.i1G
U^?1QD_t1,1R?1,1MD#Ve%h1GU^?1l_ht0etO?1,1PE#Ve(h0f1U?1l_ht1,1L?0etME#Ve(h1
,C[?1l_ht1,1O?1,1PE#Vn+i1,C[?1QD_t0etL?1,1MD#Vn.i0f1X?1QD_t1,1L?1,1MD#Ve%h
0f1X?1l_ht0etI?1,1PE#Vn1j1bg^?16)Vp1,:[@0etPF#W"4k1bg^?0ocMp0f(X@0etME#Ve+
i1GU[?1QD_s1GL[@0etJD#Ve+i1bga?1QD_s1GL^@1,1MD#Ve%i1GU[?1QD_r1,:[@1,1PE#Ve
 %i1bga?1QD_s0f(X@1,1MD#Vn1j1,CX?16)Vp1,:U@0etPF#Vn1j1GU^?16)Vp1,:X@1,1SF#
W"4k1GU^?0ocMp0f(U@1,1PE#Ve+i0f1U?1QD_s1GLU@0etJD#Ve+i1,C[?1QD_s1GLX@1,1MD
#Ve%i0f1U?1QD_r1,:U@1,1PE#Ve%i1,C[?1QD_s0f(R@1,1MD#Vn1j0f1X?16)Vp1,:R@1,1S
F#W"4k0f1X?0ocMp0f(O@1,1PE#Vn4k1bg^?0ocMo1GUdA0etME#Vn.k1bg^?0ocMo1bgdA0et
ME#Ve.j1bga?16)Vp1,C^A0etME#Vn1k1bga?0ocMo1,CaA1,1PE#Vn4k1,CX?0ocMo1GU^A0e
tME#Vn4k1GU^?0ocMo1GUaA1,1PE#Ve%j1,CX?16)Vq1,C^A1,1MD#Ve%j1GU^?16)Vp1bg^A0
etME#Ve.j1,C[?16)Vp1,CXA0etME#Vn1k1,C[?0ocMo1,C[A1,1PE#Vn+k1,C[?0ocMp1bg^A
1,1MD#Ve+j0f1X?16)Vq1,CXA1,1MD#Ve%j0f1X?16)Vp1bpmB0etJD#Ve1k1GU[?0ocMo2)-p
B1,1MD#Ve+k1GU[?0ocMo1G^jB1,1MD#Ve.k1,CX?0ocMo1bpjB1,1MD#Ve(k1,CX?0ocMo1,L
dB1,1MD#Ve1k0f1U?0ocMo2)-jB1,1MD#Ve+k0f1U?0ocMo1G^dB1,1MD#Ve%k0f1U?0ocMo0f
:^B1,1MD#Ve.k0f1X?0ocMo1,L^B1,1MD#Vn+h2)-g@1QD_t0ekO?0etJD#Ve%g1bpd@1l_ht0
ekL?0etME#Ve%g2)-j@1l_ht0ekO?1,1PE#Vn+h1G^a@1QD_t0ekI?0etJD#Vn+h1bpg@1QD_t
0ekL?1,1MD#Ve%g1,L^@1l_ht0ekF?0etME#Ve%g1G^d@1l_ht0ekI?1,1PE#Vn+h0f:[@1QD_
t0ekC?0etJD#Vn+h1,La@1QD_t0ekF?1,1MD#Ve%g0f:^@1l_ht0ekC?1,1PE#Vn.i2)-g@16)
Vp0etU@0etPF#W"1j2)-g@0ocMo1,1U@0etPF#W"4j1bpd@0ocMo1,1X@1,1SF#W"4j2)-j@0o
cMp0etU@1,1PE#Vn.i1G^a@16)Vp0etO@0etPF#Vn.i1bpg@16)Vp0etR@1,1SF#W"1j1bpg@0
ocMo1,1O@0etPF#W"4j1,L^@0ocMo1,1R@1,1SF#W"4j1G^d@0ocMp0etO@1,1PE#Vn.i0f:[@
16)Vp0etI@0etPF#Vn.i1,La@16)Vp0etL@1,1SF#W"1j1,La@0ocMo1,1L@1,1SF#W"4j0f:^
@0ocMp0etI@1,1PE#Vn1j2)-g@0ocMo1,:^A0etME#Ve+i1bpd@16)Vp1GLaA1,1PE#Ve%i1bp
d@16)Vq1,:^A1,1MD#Vn1j1G^a@0ocMo1,:XA0etME#Vn1j1bpg@0ocMo1,:[A1,1PE#Vn+j1b
pg@0ocMo1GLXA0etME#Ve+i1G^d@16)Vp0f(RA0etME#Vn.j1G^d@0ocMo0f(UA1,1PE#Vn1j0
f:[@0ocMo1,:RA0      etME#  Vn1j1  ,La@0  oc  Mo1      ,:UA1,      1PE#Vn+
j1,La@0ocMo1GLU        A1,  1PE#V  n.j0f  :^  @0o         cMo         0f(O
A1,1PE#Ve+j2)-g  @0ocM  o1  bggB0   etJD  #V  e.j  2)-j@  0oc  Mo1,C  aB0e
tJD#Ve+j1G^a@0o  cMo1G  UdB  1,1    MD#V  e%  j1G  ^a@0oc  Mo  1bgaB0  etJ
D#Ve.j1G^d@0ocM  o1,C[  B0e  tJD  # Ve(  j1G  ^d@  0ocMo1  GU  [B0etJ  D#V
e+j1,La@0ocMo0f  1UB0e  tJD  #Ve %j  1,  La@  0oc  Mo1bg^  B1  ,1MD#V  e(j
0f:^@0ocMp0ekR@        0etM  E#V e%  g2  )6m  A1Q         D_s         0ekO
@0etJD#Ve%g2DHs         A1QD  _  s0  ek  R@1  ,1M        D#Vn        +h1c$
jA16)Vq0ekO@1,1  PE#Ve%  g1G  g  gA1 QD _s0e  kI@  0etJD#Ve%g  1c$mA1QD_s0
ekL@1,1MD#Vn+h1  ,UdA16  )Vq  0 ekI@    1,1P  E#V  e%g0fCaA1Q  D_s0ekC@0et
JD#Ve%g1,UgA1QD  _s0ekF  @1,    1MD#    Vn.i  2DH  pA0ocMo1,1  XA0etME#Ve(
h2DHsA16)Vq1,1U  A0etJ   D#Ve   %h1c$   jA16  )Vq  1,1XA1,1MD  #Ve%h2)6pA1
6)Vp1,1RA0etME#         Ve(h1   c$mA1  6)Vq0  etR  A1,1MD#Vn.  i1,UdA0ocMo
0etLA0etME#Vn.i       1GgjA0o  cMo0et  OA1,1  PE#  Ve(h0fCaA1  6)Vp1,1OA1,
1PE#Vn+i1,UgA0ocMo1GLaB0etJD#Ve+i2DHsA0ocMo1,:[B0etJD#Ve(i2)6pA0ocMo1GL[B0
etJD#Ve+i1c$mA0ocMo0f(UB0etJD#Ve%i1c$mA0ocMo1,:UB0etJD#Ve(i1GgjA0ocMo1GLUB
0etJD#Ve+i1,UgA0ocMo0f(OB0etJD#Ve%i1,UgA0ocMp0ekC;1,:bJ#W+7j0ekF=1l_i"0ekC
;1,:VF#W"1i0ekI=23%r"0ekC;1GL\G#Vn+i0ekC=23%r!0etI<0f(VG#W=Cm0ekC=0ocMp1,1
L<1,:_I#W+:k0ekF=1QD_q0etI<1,:bJ#W"1j0ekF=1l_i!0etI<1,:VF#Ve(h0ekI=2NA&!1,
1L<1GL_H#W4@l0ekI=16)Vq0etI<1GLbI#W+7k0ekI=1QD`!0etI<1GLVE#Vn.j0ekC=1l_hu1
,:R=0f(SF#Ve%i0ekC=23%qu0f(O=0f(VG#W4=m0ekC=0ocMp1GLU=1,:\H#W+=l0ekF=16)Vp
1,:R=1,:_I#W"4k0ekF=1QD_u1,:R=1,:SE#Vn+j0ekF=1l_hu0f(O=1,:VF#Ve+i0ekI=23%q
u1GLU=1GL\G#Vn.j0ekI=1l_hu1,:R=1GLYF#Ve%i0ekI=23%qu0f(O=1GL\G#W4=m0ekI=0oc
Mp1GU[>0f(VG#W+=m0ekC=0ocMo1,CX>0f(YH#W"4l0ekC=16)Vq0f1U>0f(VG#W+7m0ekC=0o
cMp1bg^>1,:YG#Ve+j0ekF=1l_ht1GU[>1,:VF#Vn.k0ekF=1QD_t1,CX>1,:SE#Ve%j0ekF=1
l_ht0f1U>1,:VF#Ve.j0ekI=1l_ht1bg^>1GLYF#Vn1k0ekI=1QD_t1GU[>1GLVE#Ve(j0ekI=
1l_ht1,CX>1GLYF#Vn+k0ekI=1QD_t0f1U>1GLVE#Vn4l0ekC=16)Vp1G^a?0f(VG#W"7m0ekC
=0ocMp1,L^?0f(SF#Ve%k0ekC=1QD_s0f:[?0f(PE#Vn7l0ekF=16)Vp1bpd?1,:YG#W":m0ek
F=0ocMp1G^a?1,:VF#Ve(k0ekF=1QD_s1,L^?1,:SE#Vn+l0ekF=16)Vp2)-g?1GL\G#Vn4l0e
kI=16)Vp1G^a?1GL\G#W"7m0ekI=0ocMp1,L^?1GLYF#Ve%k0ekI=1QD_s0f:[?1GLVE#Vn7m0
ekC=0ocMo1c$j@0f(SF#Vn1m0ekC=0ocMo1,Ud@0f(SF#Vn+m0ekC=0ocMo2)6m@1,:VF#Vn4m
0ekF=0ocMo1Ggg@1,:VF#Vn.m0ekF=0ocMo0fCa@1,:VF#Ve4l0ekI=16)Vq2)6m@1GLVE#Ve.
l0ekI=16)Vq1Ggg@1GLVE#Ve(l0ekI=16)Vq0fCa@1GLVE#W"1i1,1L>1l_i!0ekF<0f(SF#Vn
+h0etI>23%r!0ekC<0f(VG#W=Cl0etI>0ocMp0ekF<1,:_I#W+7j1,1O>1QD`!0ekF<1,:SE#V
e%g0etL>2NA&!0ekC<1,:\H#W4=k0etL>16)Vp0ekF<1GLeJ#W"1i1,1R>1l_i!0ekF<1GLYF#
Vn+h0etO>23%r!0ekC<1GL\G#W=Cl0etO>0ocMo1,1O=0f(\I#W"4j1,1L>1QD_u1,1O=0f(PE
#Vn+i1,1L>1l_hu0etL=0f(SF#Vn.i0etI>1l_hu1,1L=0f(SF#Ve%h0etI>23%qt1,1O=1,:\
H#W+:k1,1O>16)Vp0etL=1,:_I#W"1j1,1O>1QD_u0etL=1,:SE#Ve(h0etL>23%qu1,1L=1,:
YG#W4@l0etL>0ocMo1,1O=1GLbI#W"4j1,1R>1QD_u1,1O=1GLVE#Vn+i1,1R>1l_hu0etL=1G
LYF#Vn.i0etO>1l_hu1,1L=1GLYF#Ve%h0etO>23%qu0etI=1GL\G#W4=l0etO>0ocMo1GLX>0
f(YH#W"7k1,1L>16)Vq1,:U>0f(VG#W+:l1,1L>0ocMo0f(R>0f(YH#W"1k1,1L>16)Vq1GLU>
0f(VG#W+=l0etI>0ocMo1,:R>0f(YH#Vn1j1,1O>1QD_t1GLX>1,:SE#Ve(i1,1O>1l_ht1,:U
>1,:VF#Vn+j1,1O>1QD_t0f(R>1,:SE#Ve+i0etL>1l_ht1GLU>1,:VF#Ve+i1,1R>1l_ht1GL
X>1GLYF#Ve%i0etL>1l_hs1,:U>1GL\G#W+:l1,1R>0ocMo0f(R>1GL_H#W"1k1,1R>16)Vq1G
LU>1GL\G#W+=l0etO>0ocMo1,:R>1GL_H#W"4k0etO>16)Vq0f(O>1GL\G#W+7l0etO>0ocMo1
bga?0f(VG#W":l1,1L>0ocMp1GU^?0f(SF#Ve(j1,1L>1QD_s1,C[?0f(PE#Vn+k1,1L>16)Vq
1bg^?0f(SF#Ve+j0etI>1QD_r1bga?1,:VF#Ve+j1,1O>1QD_s1GU^?1,:SE#Ve%j0etI>1QD_
r1,C[?1,:VF#Ve%j1,1O>1QD_s0f1X?1,:SE#Ve.j0etL>1QD_s1bg^?1,:SE#Ve.j1,1R>1QD
_s1bga?1GLVE#Ve(j0etL>1QD_r1GU^?1GLYF#Ve(j1,1R>1QD_s1,C[?1GLVE#Vn+k1,1R>16
)Vq1bg^?1GLYF#Ve+j0etO>1QD_s1GU[?1GLVE#Vn.k0etO>16)Vp0f1U?1GL\G#W"1l0etO>0
ocMo2)-j@0f(SF#Vn4l1,1L>0ocMo1G^d@0f(SF#Vn.l1,1L>0jPo+NX.Bq0etI<0fG$t1bpd@
0ekC>NX.Eq1,:R=0f=ss2)-jA0ekC=NX.Er0ekF<0f=ss2)6m@1,1L>NX.Bp1,1O=0fG$t1bga
?1,1L?NX.Nt1,1O=0f"ap1,CX?0ekC?NX.Ht0etI<0f+gq0etL>0ekC@NX.Er1,:R=0f4mr2)6
pB0ekC<NX.Bp1GU[>0f=ss1bgdA0ekC=NX.Nt1GU[>0en[o0f(O=1,1LANX.Es0ekF<0f4mr1,
:U>1,1L@NX.Hs1,1O=0f+gq0ekI=1,1LANX.Eq1GLX>0f4mr2)-mA1,1L=NX.Bs0etI<0f4mr0
f(R?0ekC?NX.Es1,:R=0f+gq1,:X@0ekC>NX.Hs1GU[>0f"ap0ekL?0ekC?NX.Eq1bpd?0f+gq
2)-pC0ekC;NX.?r0ekF<0f=ss1Ggg@1,1L>NX.Br1,1O=0f4mr1c$mA1,1L=NX.?p1GLX>0f=s
s1GUa@1,1L>NX.Kt1GLX>0en[o1,1U?1,1L?NX.Hr1bga?0f"ap1,UdA0ekC=NX.?r1,:R=0f4
mr1GgjB0ekC<NX.Br1GU[>0f+gq1c$pC0ekC;NX.?p1bpd?0f4mr1GUdB0ekC<NX.Bp2)6m@0f
+gq1bgjC0ekC;NX.?s0ekF<0f4mr1,La@1,1L>NX.?q1GLX>0f4mr1G^gA1,1L=NX.Bq1bga?0
f+gq1bpmB1,1L<NX.?o2)-j@0f4mr1GLaA1,1L=NX.?s1,:R=0f+gq1,LdB0ekC<NX.?q1bpd?
0f+gq1G^jC0ekC;NX.Bq2)6m@0f"ap0fCa@1,1L>NX.Bt1,1O=0f"ap0f1[@1,1L>NX.Et1GLX
>0en[o1,CaA1,1L=NX.?p2)-j@0f+gq1GUgB1,1L<NX.Bp2DHsA0f"ap1,1L>0ekC@NX.Hr0f(
O=0f4mr2DHpB0ekC<NX.Eq0etL=0f=ss2)-g@1,1L>NX.Bp0ekI=0fG$t1bg^>1GLU@NX.Nt0e
kI=0f"ap1,:R?0ekC?NX.Hs0f(O=0f+gq0ekF>0ekC@NX.Eq1,CX>0f4mr2)-jB0ekC<NX.?p0
etL=0fG$t1GU[?1,1L?NX.Kt0etL=0f"ap1,1O>1,1L@NX.Hr1,:U>0f+gq2DHsB1,1L<NX.Bq
0ekI=0f=ss1bpd?1GLU?NX.?o1,1R>0fG$t1GLX>1GLU@NX.Ks1,1R>0f"ap1,CX@0ekC>NX.H
t0f(O=0f"ap0etL?0ekC?NX.Er1,CX>0f+gq2)6pC0ekC;NX.Bp1G^a?0f4mr1bgdB0ekC<NX.
?q0etL=0f=ss1G^a@1,1L>NX.Bq1,:U>0f4mr1bpgA1,1L=NX.?o1GU^?0f=ss1GL[@1,1L>NX
.Ks1GU^?0en[o1,CX>1GLU@NX.Ht0ekI=0f"ap0etL=1GLUANX.Er1,1R>0f+gq2)6pA1GLU=N
X.Bp1GL[?0f4mr1bgd@1GLU>NX.Bs0f(O=0f+gq0f(R@0ekC>NX.Es1,CX>0f"ap1,:XA0ekC=
NX.Hs1G^a?0en[o0ekL@0ekC>NX.Eq1c$j@0f"ap0f1U?1,1L?NX.Et0etL=0f"ap1,C[@1,1L
>NX.Ht1,:U>0en[o0etO?1,1L?NX.Er1GU^?0f"ap1,1U@1,1L>NX.Hr1bpg@0en[o1,L^?1GL
U?NX.?q1,1R>0f4mr1G^d@1GLU>NX.Bq1GL[?0f+gq1bpjA1GLU=NX.?o1bgd@0f4mr1GL^@1G
LU>NX.Bt0f(O=0f"ap0f1XA0ekC=NX.Et1,CX>0en[o1,C^B0ekC<NX.?p1c$j@0f+gq1GUdC0
ekC;NX.?s0etL=0f+gq1,LaA1,1L=NX.?q1GU^?0f+gq1G^gB1,1L<NX.Bq1bpg@0f"ap0ekO@
1,1L>NX.Eq2)6pA0en[o1,Ud@1GLU>NX.?r1,1R>0f+gq1GgjA1GLU=NX.Br1GL[?0f"ap0etR
?1GLU?NX.Er1bgd@0en[o1,1X@1GLU>NX.?s1,CX>0f"ap1,LdC0ekC;NX.?q1c$j@0f"ap0fC
aA1,1L=NX.Bt1,:U>0en[o0f1[A1,1L=NX.Br1bpg@0en[o0etUA1,1L=NX.?s1,1R>0f"ap1,
LdA1GLU=NX.?q1bgd@0f"ap1,:^A1GLU=NX.?o2DI!B0f"ap1,1L?0ekC?NX.Hr0f1U>0f+gq2
DHpC0ekC;NX.?o0f(R>0fG$t1GLU?1,1L?NX.Ks0f(R>0f"ap1,1L=1GLUANX.Hr0etO>0f+gq
2DHpA1GLU=NX.?o0ekL>0fG$t1GLU=1bg^ANX.Ks0ekL>0f"ap1,:R@0ekC>NX.Hs0f1U>0f"a
p0ekF?0ekC?NX.Eq1,L^?0f+gq2)-jC0ekC;NX.?p0f(R>0f=ss1GU[@1,1L>NX.Kt0f(R>0en
[o1,1O?1,1L?NX.Hr1,C[?0f"ap1,:R>1GLU@NX.Hs0etO>0f"ap0ekF=1GLUANX.Eq1,:X?0f
+gq2)-jA1GLU=NX.?p0ekL>0f=ss1GU[>1bg^@NX.Kt0ekL>0en[o1,1O=1bg^ANX.Hr1,1U?0
f"ap1,CXA0ekC=NX.Ht0f1U>0en[o0etL@0ekC>NX.Er1,L^?0f"ap1,1RA0ekC=NX.Hr1Ggg@
0en[o0f(O?1,1L?NX.Es0f(R>0f"ap1,:U@1,1L>NX.Hs1,C[?0en[o0ekI?1,1L?NX.Eq1G^d
@0f"ap1,CX?1GLU?NX.Ht0etO>0en[o0etL>1GLU@NX.Er1,:X?0f"ap1,1R?1GLU?NX.Hr1GU
a@0en[o0f(O=1bg^ANX.Es0ekL>0f"ap1,:U>1bg^@NX.Hs1,1U?0en[o0ekI=1bg^ANX.Eq1G
L^@0f"ap1,L^B0ekC<NX.?q1,L^?0f+gq1G^dC0ekC;NX.Bq1Ggg@0f"ap0f1U@1,1L>NX.Et0
f(R>0en[o1,C[A1,1L=NX.?p1G^d@0f+gq1GUaB1,1L<NX.Bp1c$mA0f"ap1,L^@1GLU>NX.?q
1,:X?0f+gq1G^dA1GLU=NX.Bq1GUa@0f"ap0ekL?1GLU?NX.Eq1bpjA0en[o0f1U>1bg^@NX.E
t0ekL>0en[o1,C[?1bg^?NX.?p1GL^@0f+gq1GUa@1bg^>NX.Bp1bggA0f"ap1,UdC0ekC;NX.
?r1,L^?0f"ap1,C^C0ekC;NX.?s0f(R>0f"ap1,LaB1,1L<NX.?q1G^d@0f"ap1,:[B1,1L<NX
.Bt0etO>0en[o0f1X@1GLU>NX.Br1GUa@0en[o0etR@1GLU>NX.Bp2)6sB0en[o0f:[?1bg^?N
X.Bs1,1U?0en[o0f(U?1bg^?NX.Bq1bggA0en[o0ekO?1bg^?NX.?s1,L^?0en[o0fCaB1,1L<
NX.?r1G^d@0en[o0f:^A1GLU=NX.?q1bpjA0en[o0fCa@1bg^>NX.?r1GL^@0en[o0etU@1bg^
>NX.Bp0f:[?0f4mr1bg^B0ekC<NX.?o0f1X?0f=ss1GLU@1,1L>NX.Ks0f1X?0en[o1,1L>1GL
U@NX.Hr0f(U?0f"ap0ekC<1bg^BNX.Eq0etR?0f+gq2)-g@1bg^>NX.Bp0ekO?0f4mr1bg^>2)
-g@NX.Bq0f:[?0f+gq1bpdC0ekC;NX.?o1,Ud@0f4mr1GLXB0ekC<NX.?p0f1X?0f4mr1GU[A1
,1L=NX.Bp1,La@0f+gq1bgaB1,1L<NX.Bq0f(U?0f+gq1bpdA1GLU=NX.?o1,C^@0f4mr1GLX@
1GLU>NX.?p0etR?0f4mr1GU[?1bg^?NX.Bp1,:[@0f+gq1bga@1bg^>NX.Bq0ekO?0f+gq1bpd
?2)-g?NX.?o1,1X@0f4mr1GLX>2)-g@NX.Br0f:[?0f"ap0etLA0ekC=NX.Er1,Ud@0en[o0f(
O@1,1L>NX.Es0f1X?0en[o1,:UA1,1L=NX.?o1GgjA0f+gq1GL[B1,1L<NX.Br0f(U?0f"ap0e
tL?1GLU?NX.Er1,C^@0en[o1,1R@1GLU>NX.?q0etR?0f+gq1G^a@1bg^>NX.Bq1,:[@0f"ap0
ekI>1bg^@NX.Eq1GUdA0en[o1,CX>2)-g@NX.?p1,1X@0f+gq1GU^?2)-g?NX.Bp1GLaA0f"ap
1,L^C0ekC;NX.?q1,Ud@0f"ap0f1UA1,1L=NX.Br1,La@0en[o0etOA1,1L=NX.Bs0f(U?0en[
o0f(R@1GLU>NX.Bq1G^gA0en[o0ekL@1GLU>NX.?r0etR?0f"ap1,C[@1bg^>NX.?p1GUdA0f"
ap1,1U@1bg^>NX.Bs0ekO?0en[o0f(R>2)-g@NX.Bq1GLaA0en[o0ekL>2)-g@NX.?r1,Ud@0e
n[o0f:[B1,1L<NX.?q1GgjA0en[o0f1XA1GLU=NX.?p1c$pB0en[o0f:[@1bg^>NX.?q1GUdA0
en[o0ekO@1bg^>NX.?r1,1X@0en[o0etR?2)-g?NX.Bp0fCa@0f+gq1bg^C0ekC;NX.?o0f:^@
0f4mr1GLUA1,1L=NX.Bp0f1[@0f+gq1bg^A1GLU=NX.?o0f(X@0f4mr1GLU?1bg^?NX.Bp0etU
@0f+gq1bg^?2)-g?NX.?o0ekR@0f4mr1GLU=2DHpANX.Bq0fCa@0f"ap0etI@1,1L>NX.Er0f:
^@0en[o1,1OA1,1L=NX.Bq0f1[@0f"ap0ekF?1GLU?NX.Eq1,LdA0en[o0etI>1bg^@NX.Er0f
(X@0en[o1,1O?1bg^?NX.Bq0etU@0f"ap0ekF=2)-gANX.Eq1,:^A0en[o0etI<2DHpBNX.Er0
ekR@0en[o1,1O=2DHpANX.Br0fCa@0en[o0f(OA1,1L=NX.Bq1,UgA0en[o1,CXA1GLU=NX.?p
1,LdA0f"ap1,1RA1GLU=NX.?q0f(X@0f"ap1,:U@1bg^>NX.?o1G^jB0f"ap1,CX?2)-g?NX.?
p1,:^A0f"ap1,1R?2)-g?NX.?q0ekR@0f"ap1,:U>2DHp@NX.?o1GLdB0f"ap0f1UB1,1L<NX.
?q1,LdA0en[o0f1U@1bg^>NX.?p1G^jB0en[o0f(R?2)-g?NX.?o1bppC0en[o0f1U>2DHp@NX
.?p1GLdB0en[o1bg^>0etI@NX.Nt0ekC<0f+gq1,1O=0ekFANX.Hr1,1L<1,P!s2DHsA0ekF=N
X.Bq0ekC<0fG$t1bpd?0etI?NX.Eq1,1L=0f=ss2)-j@0etI>NX.Bq1,1L<1,Y't1bpg@0ekF>
NX.?o1GLU=1,b-u1GL[?0ekF?NX.Ks1GLU=1,=jq1,CX>0etI@NX.Ht0ekC<0f+gq0etL=0etI
ANX.Er1,1L=0f4mr2)6pA0etI=NX.Bp1GLU>0f=ss1bgd@0etI>NX.Nt1GLU>0en[o1,C[?0ek
F?NX.Ht1,1L<1,=jq0etO>0ekF@NX.Er1GLU=1,Fpr2)6sB0ekF<NX.Bp1bg^>1,P!s1bggA0e
kF=NX.Bs0ekC<0f4mr0f(R>0etI@NX.Es1,1L=0f+gq1,:X?0etI?NX.Hs1GLU>0f"ap0ekL>0
etI@NX.Eq1bg^?0f+gq2)-pB0etI<NX.Bs1,1L<1,Fpr0f(U?0ekF?NX.Es1GLU=1,=jq1,:[@
0ekF>NX.Hs1bg^>1,4dp0ekO?0ekF?NX.Eq2)-g?1,=jq1,Ud@0etI>NX.?r1,1L=0f4mr1Ggj
A0etI=NX.Br1GLU>0f+gq1c$pB0etI<NX.?p1bg^?0f4mr1GUdA0etI=NX.Bp2)-g@0f+gq1bg
jB0etI<NX.Bt1,1L<1,=jq0f1[@0ekF>NX.Et1GLU=1,4dp1,CaA0ekF=NX.?p2)-g?1,Fpr1G
UgB0ekF<NX.Bp2DHp@1,=jq0f:^@0etI>NX.Bs1GLU>0f"ap0f(X@0etI>NX.Es1bg^?0en[o1
,:^A0etI=NX.?o2DHpA0f+gq1GLdB0etI<NX.Eq0etI<1,Y't2)-g@0ekF>NX.Bp0ekF<1,b-u
1bg^>1,1O@NX.Nt0ekF<1,=jq1,1L=0etIANX.Hr0etI=0f4mr2DHpA0etI=NX.Eq0ekF=0f=s
s2)-g?1,:R?NX.?p0etI<1,b-u1GU[?0ekF?NX.Kt0etI<1,=jq1,1O>0ekF@NX.Hr1,:R=1,F
pr2DHsB0ekF<NX.Bq0ekF<1,Y't1bpd?1,1O?NX.?o1,1O=1,b-u1,:R>0etI@NX.Hs0etI=0f
+gq0ekF=0etIANX.Eq1,:R>0f4mr2)-jA0etI=NX.?p0ekF=0fG$t1GU[>1,:R@NX.Kt0ekF=0
f"ap1,1O=1,:RANX.Hr1,1O>0f+gq2DHsA1,:R=NX.?q0etI<1,Y't1G^a@0ekF>NX.Bq1,:R=
1,P!s1bpgA0ekF=NX.?o1GU[>1,Y't1GL[@0ekF>NX.Ks1GU[>1,4dp1,CX>1,1O@NX.Ht0ekF
<1,=jq0etL=1,1OANX.Br0etI=0f4mr1c$jA0etI=NX.?p1,:R>0f=ss1GU^@0etI>NX.Kt1,:
R>0en[o1,1R?0etI?NX.Hr1GU[?0f"ap0f(O=1,:RANX.Es0ekF=0f+gq1,:U>1,:R@NX.Hs1,
1O>0f"ap0ekI=1,:RANX.Eq1GLX?0f+gq2)-mA1,:R=NX.?r0etI<1,P!s1GggA0ekF=NX.Br1
,:R=1,Fpr1c$mB0ekF<NX.?p1GU[>1,P!s1GUaA0ekF=NX.Bp1bpd?1,Fpr1bggB0ekF<NX.Bs
0ekF<1,Fpr0f(R>1,1O@NX.Bs0etI=0f+gq0f(R?0etI?NX.Es1,:R>0f"ap0ekL>1,1O@NX.B
q1GU[?0f+gq1bpjB0etI<NX.?o1bpd@0f4mr1GL^A0etI=NX.?r0ekF=0f4mr1Ggg@1,:R>NX.
Br1,1O>0f+gq1c$mA1,:R=NX.?p1GLX?0f4mr1GUa@1,:R>NX.Bp1bga@0f+gq1bggA1,:R=NX
.?s0etI<1,Fpr1,LaA0ekF=NX.?q1GU[>1,Fpr1G^gB0ekF<NX.Bq1bpd?1,=jq0ekO@0ekF>N
X.Eq2)6m@1,4dp1,Ud@1,1O>NX.?r1,1O=1,Fpr1,UdA0etI=NX.?r1,:R>0f+gq1GgjB0etI<
NX.?p1bga?1,Fpr1,C^A0etI=NX.?p1bpd@0f+gq1GUdB0etI<NX.Bp2)6mA0f"ap0f:[?1,:R
?NX.Bs1,1O>0f"ap0f(U?1,:R?NX.Es1GLX?0en[o1,:[@1,:R>NX.?o2)-jA0f+gq1GLaA1,:
R=NX.?t0etI<1,=jq1,UgB0ekF<NX.?r1GU[>1,=jq1,CaB0ekF<NX.?p2)6m@1,=jq0f:^@1,
1O>NX.?s1,:R>0f"ap0f(X@1,1O>NX.Bs1GU[?0en[o0f(XA0etI=NX.?o2DHsA1,=jq1,:^B0
etI<NX.?t0ekF=0      f"ap1  ,UgA1  ,:R=N  X.  ?r1      GLX?0f      "ap1,Ca
A1,:R=NX.?p2)-j        A0f  "ap1,  1[A1,  :R  =NX         .?o         0f(O
=1,b-u1GLU?0ekF  ?NX.K  s0  f(O=1   ,=jq  1,  1L=  1,1OA  NX.  Hr0et  L=1,
Fpr2DHpA1,1O=NX  .Bp0f  (O>  0f=    ss1b  g^  @0e  tI>NX.  Nt  0f(O>0  en[
o0ekC;1GLXCNX.E  q0ekI  =1,  P!s  2 )-g  ?1G  LX?  NX.?o0  et  L>0fG$  t1G
LU>1,:R@NX.Ks0e  tL>0f  "ap  1,1 L<  1G  U[B  NX.  Hr0ekI  >0  f+gq2D  Hp@
1GU[>NX.?p0f(O=        1,Y'  t1G U[  @0  ekF  >NX         .Kt         0f(O
=1,4dp1,1O?0ekF         ?NX.  H  r1  ,C  X>1  ,=j        q1,:        R>1,1
O@NX.Hs0etL=1,=  jq0ekF  =1,  1  OAN X. Bq0f  (O>  0f4mr1bpdA  0etI=NX.?o1
,CX?0f=ss1GLX@0  etI>NX  .Ks  1 ,CX?    0en[  o0e  tI<1GLXBNX  .Er0ekI=1,F
pr2)6m@1GLX>NX.  ?p0etL  >0f    =ss1    GU[?  1,:  R?NX.Kt0et  L>0en[o1,1O
>1,:R@NX.Hr1,:U  ?0f"a   p1,:   R=1GU   [ANX  .Hs  0ekI>0f"ap  0ekF<1GU[BN
X.Eq1,1R?0f+gq2         )-j@1   GU[>N  X.?q0  f(O  =1,P!s1G^a  A0ekF=NX.Bq
1,CX>1,Fpr1bpgB       0ekF<NX  .?o1G^  a?1,P  !s1  GL[A0ekF=N  X.Br0etL=1,
Fpr1c$jA1,1O=NX.?p1,:U>1,P!s1,CX@0etI>NX.Ht0f(O>0en[o0etL?0etI?NX.Er1,CX?0
f"ap1,1R@0etI>NX.Hr1G^a@0en[o0f(O=1GLXANX.Es0ekI=1,=jq0f(O>1,:R@NX.Es0etL>
0f"ap0ekI=1GLXANX.Bq1,:U?0f+gq1bpgA1,:R=NX.?o1GU^@0f4mr1GL[@1,:R>NX.Br0ekI
>0f+gq1c$j@1GU[>NX.?p1,1R?0f4mr1GU^?1GU[?NX.Bp1GL[@0f+gq1bgd@1GU[>NX.?r0f(
O=1,Fpr1GggB0ekF<NX.Br1,CX>1,=jq0etO@0ekF>NX.Er1G^a?1,4dp1,1UA0ekF=NX.Bs0e
tL=1,=jq0f(R?1,1O?NX.Bs0f(O>0f"ap0f(R@0etI>NX.Es1,CX?0en[o0ekL?1,1O?NX.Bq1
G^a@0f"ap0ekL@0etI>NX.Eq1c$jA0en[o0f1U>1GLX@NX.Et0ekI=1,4dp0f1U?1,:R?NX.Et
0etL>0en[o0etO>1GLX@NX.Br1,:U?0f"ap0etO?1,:R?NX.Er1GU^@0en[o1,1U@1,:R>NX.B
s0ekI>0f"ap0f(R>1GU[@NX.Es1,1R?0en[o1,:X?1GU[?NX.?o1bgdA0f+gq1GL^@1GU[>NX.
?s0f(O=1,=jq1,LaB0ekF<NX.?q1G^a?1,=jq1,:[B0ekF<NX.Bt0etL=1,4dp0f1X@1,1O>NX
.Bt0f(O>0en[o0f1XA0etI=NX.?p1bpg@1,=jq1,C^B0etI<NX.?p1c$jA0f"ap0f:[?1GLX?N
X.?s0etL>0f"ap0f(U?1GLX?NX.Bs1,:U?0en[o0f(U@1,:R>NX.?o2)-mA1,=jq1,:[A1,:R=
NX.?o2)6pB0f"ap1,Ud@1GU[>NX.?r1,1R?0f"ap1,C^@1GU[>NX.?p1bgdA0f"ap1,1X@1GU[
>NX.?t0f(O=1,4dp0f1[B0ekF<NX.?s1,:U>1,4dp0f:^B0etI<NX.?q1bpg@1,4dp0f(XB0et
I<NX.?t0ekI=1,4dp0fCaA1,:R=NX.?r1GL[?1,4dp0f1[A1,:R=NX.?p2)-mA1,4dp0etUA1,
:R=NX.?s1,1R?0en[o0f(X@1GU[>NX.?o2DI!C0en[o0ekC>0ekF@NX.Eq0f1U>1,Fpr2)-gB0
ekF<NX.Bp0f(R>1,P!s1bg^@1,1O>NX.Bp0f1U?0f4mr1bg^A0etI=NX.?o0etO>1,Y't1GLU>
1GLX@NX.Ks0etO>1,4dp0ekC=1,:RANX.Eq0f(R?0f+gq2)-gA1,:R=NX.Bp0ekL>1,P!s1bg^
>1bga@NX.Bp0etO?0f4mr1bg^?1GU[?NX.?o0ekL?0f=ss1GLU=1bpdANX.Ks0ekL?0en[o0et
I?0ekF?NX.Er0f1U>1,=jq1,1O@0ekF>NX.Hr1,L^?1,4dp1,:R?1,1O?NX.Hs0f(R>1,4dp0e
kF>1,1O@NX.Bq0f1U?0f+gq1bpdB0etI<NX.?o1,L^@0f4mr1GLXA0etI=NX.?p0etO>1,P!s1
GU[?1GLX?NX.?p0f(R?0f4mr1GU[@1,:R>NX.Bp1,C[@0f+gq1bgaA1,:R=NX.Bq0ekL>1,Fpr
1bpd?1bga?NX.?o1,1U?1,P!s1,:R>1GU[@NX.Hs0etO?0en[o0ekF=1GU[ANX.Eq1,:X@0f"a
p0etI<1bpdBNX.Er0ekL?0f"ap1,1O=1bpdANX.Hr1,1U@0en[o0f(O@0ekF>NX.Es0f1U>1,4
dp1,:UA0ekF=NX.?o1Ggg@1,Fpr1GL[B0ekF<NX.Br0f(R>1,=jq0etL?1,1O?NX.Br0f1U?0f
"ap0etL@0etI>NX.Er1,L^@0en[o1,1RA0etI=NX.?q0etO>1,Fpr1G^a@1GLX>NX.?q0f(R?0
f+gq1G^aA1,:R=NX.?o1GUa@1,Fpr1,:U@1,:R>NX.?o1G^dA0f+gq1GL[A1,:R=NX.Br0ekL>
1,=jq0etL=1bgaANX.Br0etO?0f"ap0etL>1GU[@NX.Er1,:X@0en[o1,1R?1GU[?NX.?q0ekL
?0f+gq1G^a?1bpd?NX.Bq1,1U@0f"ap0ekI=1bpdANX.Eq1GL^A0en[o0f1UA0ekF=NX.Br1,L
^?1,4dp0etOA0ekF=NX.Bs0f(R>1,4dp0f(R@1,1O>NX.Bs0f1U?0en[o0f(RA0etI=NX.?o1c
$mA1,=jq1,:XB0etI<NX.?r0etO>1,=jq0f1U@1,:R>NX.?p1GUa@1,=jq1,C[A1,:R=NX.?p1
G^dA0f"ap1,1UA1,:R=NX.Bs0ekL>1,4dp0f(R>1bga@NX.Bs0etO?0en[o0f(R?1GU[?NX.?o
1bggA1,=jq1,:X@1GU[>NX.?o1bpjB0f"ap0f1U>1bpd@NX.Br1,1U@0en[o0etO>1bpd@NX.B
p1bggB0en[o0f:[B0ekF<NX.?q1Ggg@1,4dp0f1XA1,1O=NX.?r1,L^@0en[o0etRA1,1O=NX.
?s0etO>1,4dp0f:[A1,:R=NX.?q1GUa@1,4dp0f(UA1,:R=NX.?o2)6sB1,4dp0f1X?1bga?NX
.?r1,:X@0en[o0etR?1bga?NX.?p1bpjB0en[o0f:[?1bpd?NX.?q1GL^A0en[o0ekO?1bpd?N
X.?o0f:[?1,P!s1GLUA0ekF=NX.Bp0f1X?1,Fpr1bg^A1,1O=NX.Bp0f:[@0f+gq1bg^B0etI<
NX.?o0f(U?1,P!s1GLU?1GLX?NX.?o0f1X@0f4mr1GLU@1,:R>NX.Bp0etR?1,Fpr1bg^?1bga
?NX.Bp0f(U@0f+gq1bg^@1GU[>NX.?o0ekO?1,P!s1GLU=2)-jANX.?o0etR@0f4mr1GLU>1bp
d@NX.Bp0ekO@0f+gq1bg^>2)6m@NX.?p0f:[?1,Fpr1GU[B0ekF<NX.Bp1,Ud@1,=jq1,:R@1,
1O>NX.?o1,La@1,Fpr1,:RA0etI=NX.?o1,UdA0f+gq1GLXB0etI<NX.?p0f(U?1,Fpr1GU[@1
GLX>NX.?p0f1X@0f+gq1GU[A1,:R=NX.Bp1,LaA0f"ap1,:R>1bga@NX.?o1,:[@1,Fpr1,:R?
1GU[?NX.?o1,C^A0f+gq1GLX@1GU[>NX.?p0ekO?1,Fpr1GU[>2)-j@NX.?p0etR@0f+gq1GU[
?1bpd?NX.Bp1,:[A0f"ap1,:R=2)6mANX.?o1,1XA0f+gq1GLX>2)6m@NX.?q0f:[?1,=jq1,:
UB0ekF<NX.Br0f1X?1,4dp0etL@1,1O>NX.Br0f:[@0en[o0etLA0etI=NX.?q0f(U?1,=jq0f
(O@1,:R>NX.?o1G^gA1,=jq1,:UA1,:R=NX.?o1GgjB0f"ap1,CX?1bga?NX.?p1,:[@1,=jq1
,CX@1GU[>NX.?p1,C^A0f"ap1,1R@1GU[>NX.?q0ekO?1,=jq0f(O>1bpd@NX.?o1GLaA1,=jq
1,:U?1bpd?NX.?o1GUdB0f"ap1,CX>2)6m@NX.?p1,1XA0f"ap1,1R>2)6m@NX.?r0f:[?1,4d
p0f(RA1,1O=NX.?q1,UdA0en[o0f1U@1GLX>NX.?r0f1X@0en[o0etO@1GLX>NX.?p1GgjB0en
[o0f(R?1bga?NX.?q1,C^A0en[o0ekL?1bga?NX.?o1c$pC0en[o0f1U>2)-j@NX.?r0etR@0e
n[o0etO>2)-j@NX.?p1GUdB0en[o0f(R>2)6m@NX.?o1bgjC0en[o0ekC@0ekF>NX.Eq0fCa@1
,4dp1,1L@1,1O>NX.Bp0fCaA0f"ap0ekC>1GLX@NX.Eq0f1[@1,4dp0ekC?1,:R?NX.Eq0f:^A
0en[o1,1L>1bga@NX.Bp0f1[A0f"ap0ekC<2)-jBNX.Eq0etU@1,4dp0ekC=1bpdANX.Eq0f(X
A0en[o1,1L<2DHsBNX.Bp0etUA0f"ap0etIA0ekF=NX.Bq0f:^@1,4dp0ekF@1,1O>NX.Bq0fC
aA0en[o0etI?1GLX?NX.?p0f:^A0f"ap1,1OA1,:R=NX.Bq0f(X@1,4dp0ekF>1bga@NX.Bq0f
1[A0en[o0ekF?1GU[?NX.?p0etU@1,=jq0etI>1bpd@NX.Bp1,CaB0en[o1,:R=2DHsANX.?o1
,1[A1,=jq1,:R>2)6m@NX.?o1,:^B0f"ap0f(OB0ekF<NX.?p1,UgA1,4dp0f(O@1GLX>NX.?q
0f:^A0en[o0ekI@1GLX>NX.?p1,CaA1,4dp0etL@1GU[>NX.?q0etU@1,4dp0f(O?1bpd?NX.?
o1GUgB1,4dp0ekI?1bpd?NX.?p1,1[A1,4dp0etL>2)6m@NX.Eq0ekC<1,Y't2)-g?0etL?NX.
Bp0ekC=0fG$t1bg^>0f(O@NX.Nt0ekC=0f"ap1GLX>0ekI@NX.Ks1,1L<1GXsr0etI<0etLBNX
.Er0ekC<1,P!s2)6m@0etL>NX.Bp1,1L=1,Y't1bga?0etL?NX.Nt1,1L=1,4dp1,:R=0f(OAN
X.Hs0ekC=0f+gq0ekF<0f(OBNX.Eq1,1L>0f4mr2)-j@0f(O>NX.?p1,1L<1Gt0u1GU^?0ekI?
NX.Kt1,1L<1GOmq1,1R>0ekI@NX.Hr1GLU=1GXsr0f(O=0etLANX.Es0ekC<1,Fpr1,:U>0etL
@NX.Hs1,1L=1,=jq0ekI=0etLANX.Eq1GLU>1,Fpr2)-mA0etL=NX.Br0ekC=0f4mr1c$j@0f(
O>NX.?p1,1L>0f=ss1GU^?0f(O?NX.Kt1,1L>0en[o1,1R>0f(O@NX.Hr1GLU?0f"ap0f(R>0e
kI@NX.Es1,1L<1GXsr1,:X?0ekI?NX.Hs1GLU=1GOmq0ekL>0ekI@NX.Eq1bg^>1GXsr0f1U>0
etL@NX.Et0ekC<1,=jq1,C[?0etL?NX.Ht1,1L=1,4dp0etO>0etL@NX.Er1GLU>1,=jq1,1U?
0etL?NX.Hr1bg^?1,4dp1,L^?0f(O?NX.?q1,1L>0f4mr1G^d@0f(O>NX.Bq1GLU?0f+gq1bpj
A0f(O=NX.?o1bg^@0f4mr1GL^@0f(O>NX.?r1,1L<1Gb$s1GgjA0ekI=NX.Br1GLU=1GXsr0et
R?0ekI?NX.Er1bg^>1GOmq1,1X@0ekI>NX.?s0ekC<1,Fpr1,La@0etL>NX.?q1GLU>1,Fpr1G
^gA0etL=NX.Bq1bg^?1,=jq0ekO?0etL?NX.Eq2)-g@1,4dp1,Ud@0f(O>NX.?r1,1L>0f+gq1
GgjA0f(O=NX.Br1GLU?0f"ap0etR?0f(O?NX.Er1bg^@0en[o1,1X@0f(O>NX.?s1,1L<1GXsr
1,LdA0ekI=NX.?q1bg^>1GXsr1,:^A0ekI=NX.?o2DHp@1GXsr0fCa@0etL>NX.Bt1,1L=1,4d
p0f1[@0etL>NX.Br1bg^?1,4dp0etU@0etL>NX.Bp2DHpA1,4dp0f:^@0f(O>NX.Bs1GLU?0en
[o0f(X@0f(O>NX.Bq2)-gA0en[o0ekR@0f(O>NX.Bp0etI<1Gt0u1bg^?0ekI?NX.Nt0etI<1G
Omq0ekC;1,1RCNX.Eq0ekF<1Gk*t2)-g?1,1R?NX.?o0etI=1,b-u1GLU>0etL@NX.Ks0etI=1
,=jq1,1L<1,:UBNX.Hr0ekF=1,Fpr2DHp@1,:U>NX.Bp0etI>0f=ss1bg^?0f(O?NX.Nt0etI>
0en[o0ekC;1,CXCNX.Eq0ekF>0f4mr2)-g?1,CX?NX.Bq0etI<1Gk*t1bpd@0ekI>NX.?o1,:R
=1Gt0u1GLX?0ekI?NX.Ks1,:R=1GOmq0etI<1,1RBNX.Er0ekF<1Gb$s2)6m@1,1R>NX.?p0et
I=1,Y't1GU[?0etL?NX.Kt0etI=1,4dp1,1O>0etL@NX.Hr1,:R>1,=jq1,:R=1,:UANX.Hs0e
kF=1,=jq0ekF<1,:UBNX.Bq0etI>0f4mr1bpd@0f(O>NX.?o1,:R?0f=ss1GLX?0f(O?NX.Ks1
,:R?0en[o0etI<1,CXBNX.Er0ekF>0f+gq2)6m@1,CX>NX.Bp1,1O?0f4mr1bga?1,CX?NX.Br
0etI<1Gb$s1c$jA0ekI=NX.?p1,:R=1Gk*t1GU^@0ekI>NX.Bp1GU[>1Gb$s1bgdA0ekI=NX.?
q0ekF<1Gk*t1G^a?1,1R?NX.?q0etI=1,P!s1G^a@0etL>NX.?o1GLX>1Gk*t1,:U?0etL?NX.
Hs1,:R>1,4dp0ekI>0etL@NX.Eq1GU[?1,=jq1,CX>1,:U@NX.Ht0ekF=1,4dp0etL=1,:UANX
.Br0etI>0f+gq1c$jA0f(O=NX.?p1,:R?0f4mr1GU^@0f(O>NX.Bp1GU[@0f+gq1bgdA0f(O=N
X.?q0ekF>0f4mr1G^a?1,CX?NX.Bq1,1O?0f+gq1bpg@1,CX>NX.?o1GLX@0f4mr1GL[?1,CX?
NX.Bs0etI<1GXsr0f(R?0ekI?NX.Es1,:R=1GOmq1,:X@0ekI>NX.?o1bpd?1Gb$s1GL^A0ekI
=NX.?r0ekF<1Gb$s1Ggg@1,1R>NX.?r0etI=1,Fpr1GggA0etL=NX.?p1GLX>1Gb$s1,C[@0et
L>NX.?p1GU[?1,Fpr1GUaA0etL=NX.Bp1bpd@1,=jq1,L^?1,:U?NX.?q1,1O>1,Fpr1,L^@0f
(O>NX.?q1,:R?0f+gq1G^dA0f(O=NX.?o1bga@1,Fpr1,:X@0f(O>NX.?o1bpdA0f+gq1GL^A0
f(O=NX.?r0ekF>0f+gq1Ggg@1,CX>NX.Br1,1O?0f"ap0etO>1,CX@NX.Er1GLX@0en[o1,1U?
1,CX?NX.Bt0etI<1GOmq0f1X@0ekI>NX.Br1GU[>1GOmq0etR@0ekI>NX.Bp2)6m@1GOmq0f:[
?1,1R?NX.?s0etI=1,=jq0f(U?1,1R?NX.Bs1,:R>1,4dp0f(U@0etL>NX.?o2)-j@1GXsr1,:
[A0etL=NX.?o2)6mA1,=jq1,Ud@1,:U>NX.?r1,1O>1,=jq1,UdA0f(O=NX.?r1,:R?0f"ap0e
tR?1,:U?NX.Br1GU[@0en[o0etR@0f(O>NX.Bp2)6mB0en[o0f:[?1,CX?NX.Bs1,1O?0en[o0
f(U?1,CX?NX.Bq1bgaA0en[o0ekO?1,CX?NX.?s1,:R=1GOmq0f(XA0ekI=NX.?t0ekF<1GOmq
0fCaA0etL=NX.?r1GLX>1GOmq0f1[A0etL=NX.?p2)-j@1GOmq0etUA0etL=NX.?s1,1O>1,4d
p0f:^A0f(O=NX.?q1bga@1,4dp0f(XA0f(O=NX.?o2DHsB1,4dp0fCa@1,CX>NX.?r1GLX@0en
[o0etU@1,CX>NX.Bp0f(O=1Gk*t1bg^@0ekI>NX.?o0etL=1Gt0u1GLU>1,1R@NX.Ks0etL=1G
Omq0ekC=0etLANX.Eq0f(O>1,Fpr2)-gA0etL=NX.Bp0ekI=1Gk*t1bg^>1GL[@NX.Bp0etL>1
,P!s1bg^?1,:U?NX.Bp0f(O?0f4mr1bg^@0f(O>NX.?o0ekI>1,Y't1GLU=1GU^ANX.Ks0ekI>
1,4dp0ekC<1,CXBNX.Eq0etL?0f+gq2)-g@1,CX>NX.Bp0ekI?0f4mr1bg^>1G^a@NX.Bq0f(O
=1Gb$s1bpdA0ekI=NX.?o1,CX>1Gk*t1GLX@0ekI>NX.?p0etL=1Gk*t1GU[?1,1R?NX.?p0f(
O>1,P!s1GU[@0etL>NX.Bp1,CX?1,Fpr1bgaA0etL=NX.Bq0ekI=1Gb$s1bpd?1GL[?NX.?o1,
1R>1Gk*t1,:R>1,:U@NX.Hs0etL>1,4dp0ekF=1,:UANX.Bq0f(O?0f+gq1bpdA0f(O=NX.?o1
,CX@0f4mr1GLX@0f(O>NX.?p0ekI>1,P!s1GU[>1GU^@NX.?p0etL?0f4mr1GU[?1,CX?NX.Bp
1,:U@0f+gq1bga@1,CX>NX.Bq0ekI?0f+gq1bpd?1G^a?NX.?o1,1R@0f4mr1GLX>1G^a@NX.B
r0f(O=1GXsr0etL?0ekI?NX.Er1,CX>1GOmq1,1R@0ekI>NX.?q0etL=1Gb$s1G^a@1,1R>NX.
?q0f(O>1,Fpr1G^aA0etL=NX.?o1GU^?1Gb$s1,:U@0etL>NX.?o1G^a@1,Fpr1GL[A0etL=NX
.Br0ekI=1GXsr0etL=1GL[ANX.Br0etL>1,=jq0etL>1,:U@NX.Br0f(O?0f"ap0etL?0f(O?N
X.Er1,CX@0en[o1,1R@0f(O>NX.?q0ekI>1,Fpr1G^a?1GU^?NX.?q0etL?0f+gq1G^a@1,CX>
NX.?o1GL[@1,Fpr1,:U?1,CX?NX.?o1GU^A0f+gq1GL[@1,CX>NX.Br0ekI?0f"ap0etL=1G^a
ANX.Er1,1R@0en[o1,1R>1G^a@NX.Bs0f(O=1GOmq0f(R@0ekI>NX.Bq1G^a?1GOmq0ekL@0ek
I>NX.?r0etL=1GXsr0f1U@0etL>NX.?p1GU^?1GXsr1,C[A0etL=NX.?p1G^a@1,=jq1,1UA0e
tL=NX.Bs0ekI=1GOmq0f(R>1GL[@NX.Bs0etL>1,4dp0f(R?1,:U?NX.Bs0f(O?0en[o0ekL>1
GL[@NX.?q1,CX@0f"ap0ekL?1,:U?NX.Bq1G^aA0en[o0ekL@0f(O>NX.?r0ekI>1,=jq0f1U?
1,CX?NX.?p1GL[@1,=jq1,C[@1,CX>NX.?p1GU^A0f"ap1,1U@1,CX>NX.Bs0ekI?0en[o0f(R
>1G^a@NX.Bq1GL[A0en[o0ekL>1G^a@NX.?r1,CX>1GOmq0etRA0ekI=NX.?s0etL=1GOmq0f:
[A0etL=NX.?q1GU^?1GOmq0f(UA0etL=NX.?o2)6pA1GOmq0f1X?1GL[?NX.?r1,:U?1,4dp0e
tR?1GL[?NX.?r1,CX@0en[o0etR@1,:U>NX.?p1c$jB0en[o0f:[?1GU^?NX.?s0etL?0en[o0
f(U?1GU^?NX.?q1GU^A0en[o0ekO?1GU^?NX.?o2)6pC0en[o0f1X?1G^a?NX.?p1bgdB0en[o
1,1L?0ekI?NX.Hr0f1U>1GOmq0ekC=1,1RANX.Eq0f(R>1GXsr0ekC>0etL@NX.Eq0f1U?1,=j
q1,1L=1GL[ANX.Hr0etO>1GOmq1,1L>1,:U@NX.Hr0f(R?1,4dp1,1L?0f(O?NX.Hr0f1U@0en
[o0ekC;1bgdCNX.Eq0ekL>1GXsr0ekC<1GU^BNX.Eq0etO?1,=jq0ekC=1,CXANX.Eq0f(R@0f
"ap1,1L<1bpgBNX.Hr0ekL?1,4dp1,1L=1G^aANX.Hr0etO@0en[o0ekC;1c$jCNX.Eq0ekL@0
f"ap1,:R@0ekI>NX.?o1,L^?1Gb$s1GLXA0ekI=NX.?p0f(R>1Gb$s1GU[@1,1R>NX.?p0f1U?
1,Fpr1GU[A0etL=NX.Bp1,L^@1,=jq1,:R>1GL[@NX.?o1,:X?1Gb$s1,:R?1,:U?NX.?o1,C[
@1,Fpr1,:R@0f(O>NX.?o1,L^A0f+gq1GLXA0f(O=NX.?p0ekL>1Gb$s1GU[>1bgd@NX.?p0et
O?1,Fpr1GU[?1GU^?NX.?p0f(R@0f+gq1GU[@1,CX>NX.Bp1,C[A0f"ap1,:R=1bpgANX.?o1,
1U@1,Fpr1,:R>1G^a@NX.?o1,:XA0f+gq1GLX?1G^a?NX.?p0ekL@0f+gq1GU[>1c$j@NX.Bp1
,1UA0f"ap1,CXA0ekI=NX.?p1,L^?1GXsr1,1RA0ekI=NX.?q0f(R>1GXsr0f(O@0etL>NX.?o
1G^d@1GXsr1,:UA0etL=NX.?o1GggA1,=jq1,CX?1GL[?NX.?p1,:X?1GXsr1,CX@1,:U>NX.?
p1,C[@1,=jq1,CXA0f(O=NX.?p1,L^A0f"ap1,1RA0f(O=NX.?q0ekL>1GXsr0f(O>1GU^@NX.
?o1GL^@1GXsr0f(O?1,CX?NX.?o1GUaA1,=jq1,:U@1,CX>NX.?o1G^dB0f"ap1,CX>1bpg@NX
.?p1,1U@1,=jq1,CX?1G^a?NX.?p1,:XA0f"ap1,1R?1G^a?NX.?q0ekL@0f"ap1,:U>1c$j@N
X.?o1GL^B0f"ap0      f(RA0  ekI=N  X.?r0  f(  R>1      GOmq0f      1UA0etL
=NX.?p1G^d@1GOm        q0e  tOA0e  tL=NX  .?  q1,         :X?         1GOm
q0f(R@1,:U>NX.?  o1bpj  A1  GOmq0   f(RA  0f  (O=  NX.?o  1c$  mB1,4  dp0f
1U>1bgd@NX.?r0e  tO?1,  4dp  0et    O>1b  gd  @NX  .?r0f(  R@  0en[o0  etO
?1GU^?NX.?p1G^d  B0en[  o0f  (R>  1 bpg  @NX  .?q  1,:XA0  en  [o0ekL  >1b
pg@NX.?o1bpjC0e  n[o0f  1U>  1c$ j@  NX  .?p  1GL  ^B0en[  o1  ,1L@0e  kI>
NX.?o0f1X?1Gb$s        1GLU  @1, 1R  >N  X.?  o0f         :[@         1,Fp
r1GLUA0etL=NX.B         p0f(  U  ?1  GX  sr1  ,1L        ?1,:        U?NX.
Bp0f:[A0f"ap0ek  C<1bgd  BNX  .  Eq0 et R?1G  Omq  0ekC=1GU^A  NX.Eq0f(U@1
,4dp0ekC>1,CX@N  X.Eq0f  1XA  0 en[o    1,1L  <2)  -mBNX.Bp0e  tR@1,=jq1,1
L>1G^a@NX.?o0ek  O@1,Fp  r1G    LU=2    )6pA  NX.  ?o0etRA0f+  gq1GLU>1c$j
@NX.Bq0f:[?1GOm  q0ekF   @0ek   I>NX.   ?p0f  1X?  1GXsr0etI@  0etL>NX.Bp1
,UdA1,4dp1,:R?1         GL[?N   X.?o1  ,C^@1  GXs  r1,:R@1,:U  >NX.?o1,LaA
1,=jq1,:RA0f(O=       NX.?o1,  UdB0f"  ap0et  I=1  bgdANX.?p0  f(U@1,=jq0e
tI?1,CX?NX.Bp1,LaB0en[o1,:R=2)-mANX.?o1,1X@1GXsr1,:R>1bpg@NX.?o1,:[A1,=jq1
,:R?1G^a?NX.?o1,C^B0f"ap0etI<2)6pBNX.?p0etRA0f"ap1,1O>1c$j@NX.?p1,Ud@1GOmq
0f(O@1,1R>NX.?q0f:[@1,4dp0ekI@1,1R>NX.?p1,C^@1GOmq0etL@1,:U>NX.?p1,UdB0en[
o0f(O>1bgd@NX.?q0f(U@1,4dp0ekI>1bgd@NX.?q0f1XA0en[o0ekI?1GU^?NX.?o1GgjC0en
[o0etL=2)-mANX.?p1,:[A1,4dp0etL?1G^a?NX.?q0ekO@1,4dp0f(O>1c$j@NX.?o1GLaB1,
4dp0ekI>1c$j@NX.Bp0fCa@1GOmq0ekC?1,1R?NX.?o0fCaA1,=jq1,1L?1GL[?NX.Bp0f:^A1
,4dp1,1LA0f(O=NX.?o0f(X@1GXsr0ekC>1GU^@NX.?o0f:^B0f"ap1,1L=2)-mANX.Bp0f(XA
1,4dp1,1L?1G^a?NX.?o0ekR@1GXsr0ekC<2)6pBNX.?o0f(XB0f"ap0etI@1,1R>NX.?p0fCa
A1,4dp0ekF?1GL[?NX.?o1,UgB1,4dp0etI>1bgd@NX.?p0f1[A1,4dp0etI@1,CX>NX.?o1,:
^A1GOmq0ekF>1bpg@NX.?o1,LdC0en[o0etI<2DI!BNX.?p0etUA1,4dp0etI>1c$j@NX.Bp0e
kC<1Gt0u1bg^>0etO@NX.Nt0ekC<1GOmq0ekC;0f(RCNX.Eq0ekC=1,P!s2)-g?0f(R?NX.Bp0
ekC>0f=ss1bg^>0f1U@NX.Nt0ekC>0en[o1,1O=0ekLANX.Hr1,1L<1bt's1,:R=0etOANX.Hs
0ekC<1GXsr0ekF<0etOBNX.Eq1,1L=1Gb$s2)-j@0etO>NX.?p0ekC=1,Y't1GU[>0f(R@NX.K
t0ekC=1,4dp1,1O=0f(RANX.Hr1,1L>1,=jq1,:R=0f1UANX.Hs0ekC>0f"ap0ekF<0f1UBNX.
Eq1,1L?0f+gq2)-j@0f1U>NX.Bq1,1L<1c(-t1bpg@0ekL>NX.?o1GLU=1c13u1GL[?0ekL?NX
.Br0ekC<1Gb$s1c$j@0etO>NX.?p1,1L=1Gk*t1GU^?0etO?NX.Bp1GLU>1Gb$s1bgd@0etO>N
X.?q0ekC=1,P!s1G^a?0f(R?NX.Bq1,1L>1,Fpr1bpg@0f(R>NX.?o1GLU?1,P!s1GL[?0f(R?
NX.Br0ekC>0f+gq1c$j@0f1U>NX.?p1,1L?0f4mr1GU^?0f1U?NX.Bp1GLU@0f+gq1bgd@0f1U
>NX.Br1,1L<1bt's0etO>0ekL@NX.Er1GLU=1bk!r1,1U?0ekL?NX.Bs0ekC<1GXsr0f(R>0et
O@NX.Es1,1L=1GOmq1,:X?0etO?NX.?o1bg^?1Gb$s1GL^@0etO>NX.?r0ekC=1,Fpr1Ggg@0f
(R>NX.Br1,1L>1,=jq0etO>0f(R@NX.Er1GLU?1,4dp1,1U?0f(R?NX.Bs0ekC>0f"ap0f(R>0
f1U@NX.Es1,1L?0en[o1,:X?0f1U?NX.?o1bg^A0f+gq1GL^@0f1U>NX.Bs1,1L<1bk!r0f(U?
0ekL?NX.Bq1bg^>1bk!r0ekO?0ekL?NX.Bt0ekC<1GOmq0f1X?0etO?NX.Br1GLU>1GOmq0etR
?0etO?NX.Bp2)-g@1GOmq0f:[?0f(R?NX.Bs1,1L>1,4dp0f(U?0f(R?NX.Bq1bg^@1,4dp0ek
O?0f(R?NX.Bt0ekC>0en[o0f1X?0f1U?NX.Br1GLU@0en[o0etR?0f1U?NX.Bp2)-gB0en[o0f
1[@0ekL>NX.?p2)-g?1bk!r0f:^@0etO>NX.?q1bg^?1GOmq0ekR@0etO>NX.?t0ekC=1,4dp0
f1[@0f(R>NX.?p2)-gA1,4dp0f:^@0f1U>NX.?q1bg^A0en[o0ekR@0f1U>NX.Eq0etI<1c(-t
2)-g@0ekL>NX.Bp0ekF<1c13u1bg^>1,1U@NX.Bp0etI=1Gk*t1bg^?0etO?NX.?o0ekF=1Gt0
u1GLU=1,:XANX.Ks0ekF=1GOmq0ekC<0f(RBNX.Eq0etI>1,Fpr2)-g@0f(R>NX.Bp0ekF>1,P
!s1bg^>1,C[@NX.Bp0etI?0f4mr1bg^?0f1U?NX.?o0ekF?0f=ss1GLU=1,L^ANX.Ks0ekF?0e
n[o0etI=0ekLANX.Er0etI<1bt's1,1O>0ekL@NX.Hr1,:R=1bk!r1,:R=1,1UANX.Hs0ekF<1
bk!r0ekF<1,1UBNX.Bq0etI=1Gb$s1bpd@0etO>NX.?o1,:R>1Gk*t1GLX?0etO?NX.?p0ekF=
1Gk*t1GU[>1,:X@NX.?p0etI>1,P!s1GU[?0f(R?NX.Bp1,:R?1,Fpr1bga@0f(R>NX.Bq0ekF
>1,Fpr1bpd?1,C[?NX.?o1,1O?1,P!s1,:R>0f1U@NX.Hs0etI?0en[o0ekF=0f1UANX.Eq1,:
R@0f"ap0etI<1,L^BNX.Er0ekF?0f"ap1,1O=1,L^ANX.Hr1,1O@0en[o0f(O>0ekL@NX.Es0e
tI<1bk!r1,:U?0ekL?NX.?o1GU[>1c(-t1GL[@0ekL>NX.Br0ekF<1bt's0etL=1,1UANX.Br0
etI=1GXsr0etL>0etO@NX.Er1,:R>1GOmq1,1R?0etO?NX.?q0ekF=1Gb$s1G^a?1,:X?NX.?q
0etI>1,Fpr1G^a@0f(R>NX.?o1GLX?1Gb$s1,:U?0f(R?NX.?o1GU[@1,Fpr1GL[@0f(R>NX.B
r0ekF>1,=jq0etL=1,C[ANX.Br0etI?0f"ap0etL>0f1U@NX.Er1,:R@0en[o1,1R?0f1U?NX.
?q0ekF?0f+gq1G^a?1,L^?NX.Bq1,1O@0f"ap0ekI=1,L^ANX.Eq1GLXA0en[o0f1U?0ekL?NX
.Br1,:R=1bk!r0etO?0ekL?NX.Bp1bpd?1bk!r1,L^?1,1U?NX.?q1,1O=1bt's1,L^@0etO>N
X.?q1,:R>1GXsr0ekL>1,1U@NX.Bq1GU[?1GOmq0ekL?0etO?NX.?r0ekF=1GXsr0f1U?0f(R?
NX.?p1GLX?1GXsr1,C[@0f(R>NX.?p1GU[@1,=jq1,1U@0f(R>NX.Bs0ekF>1,4dp0f(R>1,C[
@NX.Bs0etI?0en[o0f(R?0f1U?NX.?o1bgaA1,=jq1,:X@0f1U>NX.?o1bpdB0f"ap0f1U>1,L
^@NX.Br1,1O@0en[o0etO>1,L^@NX.Bp1bgaB0en[o0f:[@0ekL>NX.?q1GU[>1bk!r0ekO@0e
kL>NX.?r1,1O=1bk!r0f1X@0etO>NX.?p1bga?1bk!r0etR@0etO>NX.?s0ekF=1GOmq0f:[@0
f(R>NX.?q1GLX?1GOmq0f(U@0f(R>NX.?o2)-jA1GOmq0ekO@0f(R>NX.?r1,1O?1,4dp0f1X@
0f1U>NX.?p1bgaA1,4dp0etR@0f1U>NX.?s0ekF?0en[o0f(U?1,L^?NX.?o2)-jC0en[o0ekC
=0ekLANX.Eq0f(O=1bt's1,1L=1,1UANX.Hr0etL=1bk!r1,1L>0etO@NX.Hr0f(O>1GOmq0ek
C;1GL^CNX.Eq0ekI=1bt's0ekC<1,:XBNX.Eq0etL>1GXsr0ekC=0f(RANX.Eq0f(O?1,=jq1,
1L<1GUaBNX.Hr0ekI>1GOmq1,1L=1,C[ANX.Hr0etL?1,4dp1,1L>0f1U@NX.Hr0f(O@0en[o0
ekC;1G^dCNX.Eq0ekI?1,=jq0ekC<1,L^BNX.Eq0etL@0f"ap1,1L<1GggBNX.Hr0ekI@0en[o
0etI>0ekL@NX.Er0f(O=1bk!r1,1O?0ekL?NX.Bq0etL=1bt's0ekF=1,1UANX.Bq0f(O>1GXs
r0ekF>0etO@NX.Eq1,CX?1GOmq0etI<1GL^BNX.Er0ekI=1bk!r0etI=1,:XANX.Er0etL>1GO
mq0etI>0f(R@NX.Er0f(O?1,4dp1,1O?0f(R?NX.Bq0ekI>1GXsr0ekF<1GUaBNX.Bq0etL?1,
=jq0ekF=1,C[ANX.Bq0f(O@0f"ap0ekF>0f1U@NX.Eq1,CXA0en[o0etI<1G^dBNX.Er0ekI?1
,4dp0etI=1,L^ANX.Er0etL@0en[o1,1O>1,L^@NX.Bq0ekI@0f"ap0ekF<1GggBNX.Eq1,1RA
0en[o0f(O?0ekL?NX.Bq1,CX>1bk!r0ekI?0ekL?NX.Br0etL=1bk!r0etL>1,1U@NX.Br0f(O
>1GOmq0etL?0etO?NX.Bp1G^a@1GOmq0f(O=1GL^ANX.?q0etL>1GXsr0ekI=1GL^ANX.?q0f(
O?1,=jq0ekI>1,:X@NX.Bq1,CX@1,4dp0ekI?0f(R?NX.Br0ekI>1GOmq0etL=1GUaANX.Br0e
tL?1,4dp0etL>1,C[@NX.Br0f(O@0en[o0etL?0f1U?NX.Bp1G^aB0en[o0f(O=1G^dANX.?q0
etL@0f"ap0ekI=1G^dANX.Bq1,:UA0en[o0ekI>1,L^@NX.Br0ekI@0en[o0etL=1GggANX.Bp
1GL[B0en[o0f1U@0ekL>NX.?p1G^a?1bk!r0f(R?1,1U?NX.?q1,CX?1GOmq0ekL?1,1U?NX.?
o1c$jA1GOmq0f1U>1GL^@NX.?r0etL>1GOmq0etO>1GL^@NX.?r0f(O?1,4dp0etO?1,:X?NX.
?p1G^aA1,4dp0f(R>1GUa@NX.?q1,:U@1,4dp0ekL>1GUa@NX.?q1,CXA0en[o0ekL?1,C[?NX
.?o1c$jC0en[o0f1U>1G^d@NX.?r0etL@0en[o0etO>1G^d@NX.?p1GU^B0en[o0f(R>1Ggg@N
X.?o1bgdC0en[o0ekC>0ekL@NX.Eq0f1U>1bk!r1,1L>1,1U@NX.Bp0f1U?1GXsr0ekC<1GL^B
NX.Eq0etO>1bk!r0ekC=1,:XANX.Eq0f(R?1GOmq0ekC>0f(R@NX.Eq0f1U@1,4dp1,1L<1bgg
BNX.Bp0etO?1GXsr1,1L>1,C[@NX.Bp0f1UA0f"ap0ekC;1bpjCNX.Eq0ekL?1GOmq0ekC<1G^
dBNX.Eq0etO@1,4dp0ekC=1,L^ANX.Eq0f(RA0en[o1,1L<1c$mBNX.Bp0etOA0f"ap0etI?0e
kL?NX.Bp1,L^?1bk!r1,:R?1,1U?NX.?o1,C[?1bt's1,:R@0etO>NX.?o1,L^@1GXsr0etI=1
GL^ANX.?p0f(R?1GXsr0etI?0f(R?NX.Bp1,L^A1,4dp1,:R=1bggANX.?o1,1U?1bt's1,:R>
1GUa@NX.?o1,:X@1GXsr1,:R?1,C[?NX.?o1,C[A1,=jq1,:R@0f1U>NX.?o1,L^B0f"ap0etI
<1bpjBNX.?p0etO@1,=jq0etI>1,L^@NX.Bp1,C[B0en[o1,:R=1c$mANX.?o1,1UA1,=jq1,:
R>1Ggg@NX.?o1,:XB0f"ap0f(O@0ekL>NX.?o1Ggg@1bk!r0etL?1,1U?NX.?p1,L^@1GOmq0f
(O>1GL^@NX.?q0f(R?1GOmq0ekI>1GL^@NX.?q0f1U@1,4dp0ekI?1,:X?NX.?o1GggB1,4dp0
etL=1bggANX.?p1,:X@1GOmq0etL?1,C[?NX.?p1,L^B0en[o0f(O=1bpjANX.?q0etO@1,4dp
0ekI=1bpjANX.?q0f(RA0en[o0ekI>1G^d@NX.?o1G^dC0en[o0etL=1c$mANX.?p1,:XB0en[
o0ekC?0ekL?NX.Bp0f1X?1bk!r1,1L@0etO>NX.?o0f(U?1bt's0ekC>1,:X@NX.?o0f:[A1,=
jq1,1L=1bggANX.Bp0f(U@1GOmq1,1L?1,C[?NX.Bp0f:[B0en[o0ekC;2)-pCNX.?o0etR@1G
Xsr0ekC=1G^dANX.?o0f1XB0f"ap1,1L<2)6sBNX.Bp0etRA1,4dp1,1L>1Ggg@NX.?p0f:[?1
bk!r0ekF?1,1U?NX.?o1,UdA1GOmq0etI>1GL^@NX.?p0f1X@1GOmq0etI@0f(R>NX.?o1,:[@
1bk!r0ekF>1GUa@NX.?o1,LaB1,4dp0ekF@0f1U>NX.?p0ekO?1bk!r0etI=1bpjANX.?p0f(U
A1,4dp0etI?1,L^?NX.?o1,1XA1GOmq0ekF=1c$mANX.?o1,C^C0en[o0ekC@0ekL>NX.?o0f1
[@1bk!r0ekC?1,:X?NX.?o0fCaB1,4dp0ekC<2)-pBNX.?o0f(XA1GOmq0ekC>1G^d@NX.?o0f
:^C0en[o0ekC;0etRCNX.Eq0ekC<1c(-t2)-g?0etR?NX.Bp0ekC=1Gk*t1bg^>0f(U@NX.?o0
ekC>1,Y't1GLU=0f1XANX.Ks0ekC>1,4dp1,1L<0f:[BNX.Hr0ekC?0f"ap1GLX>0ekO@NX.?p
0ekC<1c13u1GU[>0etR@NX.Bp1,1L=1c(-t1bga?0etR?NX.Bq0ekC=1Gb$s1bpd?0f(U?NX.?
o1,1L>1Gk*t1GLX>0f(U@NX.?p0ekC>1,P!s1GU[>0f1X@NX.Bp1,1L?1,Fpr1bga?0f1X?NX.
Bq0ekC?0f+gq1bpd?0f:[?NX.?o1,1L@0f4mr1GLX>0f:[@NX.?p1,1L<2)C6u1GU^?0ekO?NX
.Bp1GLU=2):0t0f(O=0etRANX.Es0ekC<1bk!r1,:U>0etR@NX.?o1GLU>1c(-t1GL[?0etR?N
X.Br0ekC=1GXsr0etL=0f(UANX.Er1,1L>1GOmq1,1R>0f(U@NX.?q0ekC>1,Fpr1G^a?0f1X?
NX.Bq1,1L?1,=jq0ekI=0f1XANX.Eq1GLU@1,4dp1,CX>0f:[@NX.?p1,1L@0f+gq1GU^?0f:[
?NX.Bp1GLUA0f"ap0f(R>0ekO@NX.Bq1GLU=2)1*s0ekL>0ekO@NX.?r0ekC<1bt's1,C[?0et
R?NX.?p1GLU>1bt's1,1U?0etR?NX.Bs0ekC=1GOmq0f(R>0f(U@NX.Bq1GLU?1GOmq0ekL>0f
(U@NX.?r0ekC>1,=jq1,C[?0f1X?NX.?p1GLU@1,=jq1,1U?0f1X?NX.Bs0ekC?0en[o0f(R>0
f:[@NX.Bq1GLUA0en[o0ekL>0f:[@NX.?r1,1L<2)1*s0etR?0ekO?NX.?s0ekC<1bk!r0f(U?
0etR?NX.?o2)-g@1bk!r0f1X?0f(U?NX.?p1bg^@1GOmq0f:[?0f1X?NX.?q1GLU@1,4dp0ekO
?0f1X?NX.?r1,1L@0en[o0etR?0f:[?NX.Bp0etI<2)C6u1bg^?0ekO?NX.?o0ekF<2)L=!1GL
U=1,1XANX.?o0etI=1c13u1GLU>0etR@NX.Bp0ekF=1c(-t1bg^>1,:[@NX.Bp0etI>1Gb$s1b
g^?0f(U?NX.?o0ekF>1Gk*t1GLU=1,C^ANX.?o0etI?1,P!s1GLU>0f1X@NX.Bp0ekF?1,Fpr1
bg^>1,La@NX.Bp0etI@0f+gq1bg^?0f:[?NX.?o0ekF@0f4mr1GLU=1,UdANX.Bq0etI<2):0t
0ekF=0ekOANX.Eq1,:R=2)1*s0etI<1,1XBNX.Er0ekF<2)1*s0etI=0etRANX.Er0etI=1bk!
r1,1O>0etR@NX.Bq0ekF=1bt's0ekF<1,:[BNX.Bq0etI>1GXsr0ekF=0f(UANX.Eq1,:R?1GO
mq0etI<1,C^BNX.Er0ekF>1GOmq0etI=0f1XANX.Er0etI?1,4dp1,1O>0f1X@NX.Bq0ekF?1,
=jq0ekF<1,LaBNX.Bq0etI@0f"ap0ekF=0f:[ANX.Eq1,:RA0en[o0etI<1,UdBNX.Er0ekF@0
en[o1,1O=1,UdANX.Br0etI<2)1*s0etL>0ekO@NX.Bp1GU[>2)1*s0f(O=1,1XANX.?q0etI=
1bt's0ekI=1,1XANX.Bq1,:R>1bk!r0ekI>0etR@NX.Br0ekF=1bk!r0etL=1,:[ANX.Br0etI
>1GOmq0etL>0f(U@NX.Bp1GU[@1GOmq0f(O=1,C^ANX.?q0etI?1,=jq0ekI=1,C^ANX.Bq1,:
R@1,4dp0ekI>0f1X@NX.Br0ekF?1,4dp0etL=1,LaANX.Br0etI@0en[o0etL>0f:[@NX.Bp1G
U[B0en[o0f(O=1,UdANX.Bq1,1OA0en[o0ekI=1,UdANX.?q1,:R=2)1*s0ekL?0ekO?NX.?r0
ekF<2)1*s0f1U?0etR?NX.?p1GLX>2)1*s0etO?0etR?NX.?q1,1O>1bk!r0f(R?0f(U?NX.?o
1bga@1bk!r0ekL?0f(U?NX.?r0ekF>1GOmq0f1U?0f1X?NX.?p1GLX@1GOmq0etO?0f1X?NX.?
q1,1O@1,4dp0f(R?0f:[?NX.?o1bgaB1,4dp0ekL?0f:[?NX.?r0ekF@0en[o0etO>1,Ud@NX.
Bp0f(O=2):0t0ekC<1,1XBNX.Eq0etL=2)1*s0ekC=0etRANX.Eq0f(O>1bk!r1,1L<1GLaBNX
.Bp0etL>1bt's1,1L>0f(U@NX.?o0ekI>1c(-t1GLU=1GUdANX.?o0etL?1Gb$s1GLU>1,C^@N
X.?o0f(O@1,Fpr1GLU?0f1X?NX.Bp0ekI?1GXsr1,1L=1,LaANX.Bp0f(OA0f"ap0ekC;1GgjC
NX.Eq0ekI@1,4dp0ekC<1,UdBNX.Eq0etLA0en[o1,:R?0ekO?NX.?o1,CX>2):0t0etI=1,1X
ANX.?p0f(O>1bt's1,1O?0etR?NX.Bq0ekI=2)1*s0ekF<1GLaBNX.Bq0etL>1bk!r0ekF=1,:
[ANX.Bq0f(O?1GOmq0ekF>0f(U@NX.?p0ekI>1bt's0etI=1,C^ANX.?p0f(O@1,=jq1,1O?0f
1X?NX.Bq0ekI?1GOmq0ekF<1G^gBNX.Bq0etL@1,4dp0ekF=1,LaANX.Bq0f(OA0en[o0ekF>0
f:[@NX.?p0ekI@1,=jq0etI=1,UdANX.Bp1,:UB0en[o0etL?0ekO?NX.?q0etL=2)1*s0f(O?
0etR?NX.?o1GU^?2)1*s0ekI?0etR?NX.?p1,1R>2)1*s0etL>1,:[@NX.?p1,CX@1GOmq0f(O
=1GUdANX.?q0etL?1GOmq0ekI=1GUdANX.?q0f(O@1,4dp0ekI>1,C^@NX.?o1G^aB1,4dp0et
L=1G^gANX.?p1,:UA1,4dp0etL?0f:[?NX.?q0ekI@1,4dp0f(O>1,Ud@NX.?o1GL[B1,4dp0e
kI>1,Ud@NX.Bp0f1U>2)1*s0ekC=1,1XANX.?o0f1U?1bt's1,1L=1GLaANX.Bp0f(R?1bk!r1
,1L?0f(U?NX.?o0ekL>2):0t0ekC<1GUdBNX.?o0f(R@1GXsr0ekC>0f1X@NX.Bp0ekL?1bk!r
1,1L=1G^gANX.Bp0f(RA1,4dp1,1L?0f:[?NX.?o0ekL@1GXsr0ekC<1GgjBNX.?o0f(RB0f"a
p0ekF?0ekO?NX.?p0f(R>2)1*s0etI?0etR?NX.?o1,:X?2)1*s0ekF>1,:[@NX.?o1,L^A1GO
mq0etI<1bgjBNX.?p0etO?1bk!r0etI>1,C^@NX.?p0f1UA1,4dp0ekF<1bpmBNX.?o1,:XA1G
Omq0ekF>1,La@NX.?o1,L^C0en[o0etI<1c$pBNX.?p0etOA1,4dp0etI>1,Ud@NX.?o0f1X?2
)1*s0ekC?0etR?NX.?o0etR?2)1*s0ekC=1GUdANX.?o0f1XA1GOmq0ekC?0f1X?NX.?o0ekO@
1bk!r0ekC<1c$pBNX.?o0f(UB1,4dp0ekC>1,Ud@NX.Bp0ekC<2)C6u1bg^>0etU@NX.?o0ekC
=1c13u1GLU=0f(XANX.Bp0ekC>1Gb$s1bg^>0f1[@NX.?o0ekC?1,P!s1GLU=0f:^ANX.Bp0ek
C@0f+gq1bg^>0fCa@NX.Bp1,1L<2DU9u1,:R=0etUANX.?o1,1L=2)C6u1GLX>0etU@NX.?p0e
kC=1c(-t1GU[>0f(X@NX.Bp1,1L>1bt's1,:R=0f1[ANX.?o1,1L?1Gb$s1GLX>0f1[@NX.?p0
ekC?1,Fpr1GU[>0      f:^@N  X.Bp1  ,1L@1  ,=  jq1      ,:R=0f      CaANX.?
o1,1LA0f+gq1GLX        >0f  Ca@NX  .Bq1,  1L  <2D         L3t         0ekI
=0ekRANX.Br0ekC  <2)1*  s0  etL=0   etUA  NX  .Bp  1GLU>  2)1  *s0f(  O=0f
(XANX.Bq1,1L>1b  k!r0e  kI=  0f(    XANX  .B  r0e  kC>1GO  mq  0etL=0  f1[
ANX.Bp1GLU@1GOm  q0f(O  =0f  :^A  N X.B  q1,  1L@  1,4dp0  ek  I=0f:^  ANX
.Br0ekC@0en[o0e  tL=0f  CaA  NX. Bp  1G  LUB  0en  [o0etO  >0  ekR@NX  .?q
1,1L=2)1*s0ekL>        0etU  @NX .?  r0  ekC  =1b         k!r         0etO
>0f(X@NX.?q1,1L         ?1GO  m  q0  ek  L>0  f1[        @NX.        ?r0ek
C?1,4dp0etO>0f:  ^@NX.?  q1,  1  LA0 en [o0e  kL>  0fCa@NX.Eq  0etI<2DL3t1
,1L<1,1[BNX.Bp0  etI=2)  :0t  0 ekC;    1,:^  CNX  .Eq0ekF=2)  1*s0ekC<0f(
XBNX.Eq0etI>1bk  !r1,1L  <1,    CaBN    X.Bp  0et  I?1GXsr0ek  C;1,LdCNX.E
q0ekF?1GOmq0ekC  <0f:^   BNX.   Eq0et   I@1,  4dp  1,1L<1,UgB  NX.Bp0etIA0
f"ap0etI=0ekRAN         X.Bp1   ,:R=2  DL3t1  ,:R  =1,1[ANX.?  o1,1O=2DU9u
1,:R>0etU@NX.?o       1,:R>2)  :0t0et  I<1,:  ^BN  X.?p0etI>1  bt's1,1O>0f
(X@NX.Bq0ekF>1bk!r0ekF<1,CaBNX.Bq0etI?1GOmq0ekF=0f1[ANX.?p0ekF?1GXsr0etI=0
f:^ANX.Bp1,:RA1,4dp1,:R=1,UgANX.?o1,1OA1,=jq1,:R>0fCa@NX.?o1,:RB0f"ap0f(O>
0ekR@NX.?o1GU[>2DL3t0etL=1,1[ANX.?p1,:R>2)1*s0f(O=1,:^ANX.?q0etI>1bk!r0ekI
=1,:^ANX.?o1GU[@1bk!r0etL=1,CaANX.?p1,:R@1GOmq0f(O=1,LdANX.?q0etI@1,4dp0ek
I=1,LdANX.?o1GU[B1,4dp0etL=1,UgANX.?p1,:RB0en[o0ekC=0ekRANX.Bp0etL=2DL3t1,
1L>0etU@NX.?o0ekI=2DSP\?'6usE+*d$FEo!5NW_'j0JSRj0JP79NW_'k0JJLi0JG49NW_'j0
eeUj0JP:9NW_'k0en[k0JG17?'6usEc6/2BlnD=Efp`l1Pc$e!HNtsP,Wd]Bp(ZC1G<\iBcqGP
!KsFFD0p51EbTW@+DI!3I=$tW0JG17I?ITn1G<6JEc6.E@q0R&Bo!%XCkr@[9Th1bF(96/G9C+
G!/L]4#CBrjEc6/b5)99'9TfI?FcnqE0p6@9!I^,%?'6usF(025>DNWB!Jgc4!/LZ3"+)\9P!5
$bE+*j1ATD[0+E/H<P"UTbP,XU;F(96/G9CX`99MqpLbP!kI?I0MP":B3L]LeE1MpQ@CPW"4@W
QmP!KpQ@!0TKlH\_]NI=$<s!.B9Y<K_u_P"CfUL]N[<OpR9ZP!5%OP!5%OEc6/2BlnD=BnukIs
,r/#G^Y`G05tWMF!+\C;0-;fBOtmjBQTDRH\_]NP(SPjL]MOP!g9O0056S5Ou%,sGA(Q%B4uC6
+EDCE@VKq*+DI!3OogehI?K5(AT2<oBkM+$H\`#UL]DjdK8<!DL]MpeK89MUP(S1G89/WmBOtm
jBQSSDEc6/2BlnD=EejaZWKKo;!g7\SP(SQfF(K<(ASGdjFHUHeL]MpeK3aWr4?P9;ASs.SEb0
-*@<?O(GV=#MG]P!HBm=\PE+sQALf#gEBm=nGE+sQ<P%'5EP#<rHASGdjF<GO:G]T$WLf'=5Le
*[e06_,@FD-J-Le*[e05kfO+E)4@Bl@m1+?ht3A8c@-A9)+&P&N'-Eb0-*@<?O(G`l$h3IR&#O
u"b$De*E93Kc@bA1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]H
E+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/code49 0.0 0
%%EndData
%%EndResource
% --END ENCODER code49--

% --BEGIN ENCODER channelcode--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Channel Code
% --EXAM: 3493
% --EXOP: height=0.5 includetext 
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp channelcode 0.0 0 0 0
%%BeginData:         41 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04S[(D  Jj  $%@rGm  hH\
`B!23JD%DfBf4Df  0WZ5*  @]T  @UX  : eDe  *FB  5*@  ]TA8c@  -A  9)+&+D  ,%u
F(LLj06:fFEcbo-  DId=!  +D,  %uF (L  Lj  055  <6C  is9"FC  f]  =+D,%u  F(L
Lj055<6Cis9"@q]        F`CE  R4t Ci  a0  N1G  <EQ         BkM         +$L]
NYpDfBf4Df0WZY:         js=E  b  TE  (F  Eqh  :P!        +/J!        Ko='%
<$3-Bl@m1H]kFA@  ;L!rP!  +/T  5  ^ee pO uSV6  P,4  <rNWD;+NHB  2`AWf3'OtDh
\P')pOOu%N5OtCc  rF_-^l  I?I  T YP%B    dtOu  Y16  E-,f4DKCt)  Ou%NL<,Z_tB
l@m1H]g15P"@<?A  SGdjF<  G7.    BkM+    $OtV  tS@  UX:eDe*FB@  Yb)KAn#1h@r
GmhP%'4PP#.<^HS  8iPBl   J#D@   q]:gD   ImWo  De*  EG@:W&CDJ+  ')NZpi(@;]s
oC`l)`A7Zm#F`VX         I@V$Z   ;+EVN  E2]uX  FB5  )I/0/%?SBl  disEcQ)=P!=
AX<+99V@rGmhH]g       @E0Tp%2  5);4^:  m,jG0  4K-  >E,[F>BOPd  rASbjpA7\)9
A4($=Ea`I"ATEeW6YKnGDImW,6Z6LH+Dl7BF<G(3DKK<$DBNk8Cj@.6BkM.%F"]1e@;0doATDg
0EfrY8P#Qjm8Rc+K@rGmhOt9gn)MS8<L(0u4!!')KKE);%Y_3""-&u7R@UX:eDe*FB@Yb)KWKK
o;:jXj)GA2#8/n8R'DJj$%@rGmh<,Z\ABkNGg<+ohc6YKnGDImW,6Z6LH+Eh10F_)\0F!,RCD]
iM'B-:f)EZfI;AKYl5D.7's+E(j7@q]:gDImX*0/%?SBldisEcQ)=P!=AX<%i-#G][DAOuSUaF
-8_M99MK%3+A%7L]N[<P"Us%OuRNG5)96&WKKo;5%9[=L]Wa=P"Us%Oo^^HOo^@AP#-L]!I]<N
!e$53L]NZ@@q]:gL]W_?P%K'(3/@Tk"Hll6@Yb,L=GR$A=H[ob"-QcL5*Dn$!KmJ>"HllC"-Qc
B!KmJ$AU&<<I?I-LH]g@E"-QcL@=)I>!g6ZA"HllMG]mM3F_)\;@<-!lFHSe605kuT+BsX(L]N
;=H]g@0P!5%%P!3?<5*AQeP"8l7!+T\NDMS@WCm%JT1OYEc06Uc?F_)\=@;L'tL]NY>Ou%NL<.
0p0P')q1P')q1I?G)'1G<WWG]\"ROuQrb@;^l&Oo^_XH\_]NH\_]c=FH?4L]N;6P$!'PL]W`AL
]W`AP'DcaP$!l2P,X6<Oo^@@P$!MAP#uU5G][DCP":aYP')q1I?G)'1G<<W@rGmhHS8lB@;_5l
Ou"b5@<-!lFHShN1G<o[Cis<F!0T,kDfp/Xs,o/k@N\m2!Jgc4!Jg`3!/LW2!/LW2!/LW2!*ta
D0687?L]E53L]N;3L]E52L]E52L]E52L]C_D1Lk*,DNZu8")_[pFE8RCF``%p%[&V$@UX:nASr
W"@<,jrA7^p5Ou"b'Bl7HmEZfF:DfTr3Bl7HmEdJp5L]N;4L]N;4L]Le0HQZOK!Jgc4!Jgc4!J
gc4!Jgc4!F:,:<K]-kA79Rg+C\c"@rGmhOt:'NEbo<)L]NY>ASu!rA7^o[04S[,@r!2k+C1-dB
l7EsF_#&nBOt[hHS95SA25q`>9I,m>p*>o>p*@-%>YFK"GdA?",Ht`+BsX2L]WA@L]`GGL_,@F
L]Ld(>DNZC&;UpS#`'1N"GdD@!f.#9!F6gPL]N;7L_,@TL]`GAL]WA<L^AkHL^&Y9>p*@-'Sm<
V(5NEU%u:XM"c*;;#`&eC'o2sJ#D`Cd+BsX'L^&YJL^8e;L]`G>L]iMBL^f.OL]WA:L_>LLL]L
d(>p*TbEbo<)P"UroL]E52L]M$pFCC>AL]N[<H]g@!@<>q@5*AQp!KsFF5&G4K1,G(WP"UsSOo
]uo8;J(FC5;t'DI[TqAM7P,ARfM=5*@^MP#O)U@WNYr+D,>*A7]eE!g7\:@<>q@!g7\9BOt[hO
ogeh?'6usFEhmM@UX:nAT!Y;Ou%moL]LsnEbo<)L]N[<HS9)r5*@^DG]Y'B+Bost@<,jrA7Zlt
L]NZ4L]E52NW=k8?'9G\P"7\t061WA0/%?WDJX$)ARTU4F(025F(02D@VBg*>9IurF-:!g!KmJ
>!g6H.BOtmjBQSZcK3^->@WNYr+EM"5P%'4JOo^@?P#?X_!.C#_>q^;EF<G[MF>%`IG]\1=Ch[
O"NWs!)DKKH105kfO+E)4@Bl@m1+?ht3A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b$BO
PdrASbjpA7^o`P%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbF
DtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/channelcode 0.0 0
%%EndData
%%EndResource
% --END ENCODER channelcode--

% --BEGIN ENCODER flattermarken--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Flattermarken
% --EXAM: 11099
% --EXOP: inkspread=-0.25 showborder borderleft=0 borderright=0
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp flattermarken 0.0 0 0 0
%%BeginData:         28 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04o$/F  ED  )7D..I  #AS
ujN'Tt>:%52X=FD  5Z2F-  8_M  1G<  3 GEa  s#u  AWf  6?1G<9  WD  KKE0@<  Wi+
@;L!rOu"b*DI[L*  A7]jo  G]Y  '?@ ;L  !r  Ou"  b5A  U&</Df  0Z  Za-&53  FCf
]=F(or3L^K;$06C        cMFE  qe: Ao  hO  *M#  !2i         05+         p2B4
uCE5+.h-Ou$QUEa         s#uA  U  BS  "L  bP!  (P!        4[^P        #.<^H
S8iPBlJ#DAo(mtF  CfK0@<  --p  D  F.c B6 YKnK  @:O  CjEfMJ9Cgh  F-ATDWrEbf6
(+Dl7BF<G(3DKK<  $DBNk8  Cj@  . 6BkM    .%F"  ]1e  @;0doATDg0  EfrY8P#Qjm8
T/QiBl@m1P-6N[F  E2)5B6  8E<    AWf3    'L]N  YrO  pu>KFD5Z2F  *j(NAmoLsAW
f3'P!FGY<0B5(@Z  mRN0o   c8tP   )XR(F   _-_!  H]f  tD5*C&O5*@  ^MH]ft&Eckr
V1OYEdI?J0)*g/N         :DfBf   4Df0W  Z5*@^  MP#  Q@=FD5Z2F*  j'+I?I/TFCf
]=AoDR/+EV1>FCo       H/FHS5=  1G<i]G  ]\"@H  =\4  @AU&<<BmO?  R09S+EFCf]=
H#I;,F(KG9FCf]=H#I;,F(KHV09S+EBOtmjBQPA1ASGdjFHS;?1Lad5@rGmhH]g@E0Tp%25);4
^:m,jG04K->E,[FACghF-ATDWrEbf6(6=FClBOPpi@ru:&N[@53@<?U&Ec#6*CLqB+D09oA+Cf
>-FCAm$+E).6Gp$X3B5)I/0/%?SBldisEcQ)=P!=AX<.0p$04f$2F!+\I">DMa30"+q0ekVI">
DSc2N@no1GLbI">DYe1l_\m2)-nI">D_g16)Jk2_d%I">Dei0TH8i3A<-mOu"b#@<,jk@<-FL$
8F:l1c70M3&r[U1G<3GEbo<)+C\c"@rGmhP%'S106:TD+C\c"Ch7L?"HmSaV33VfFEhmM@UX:n
AT!Y;Ou%moL]LsnEbo<)L]N[<HS9)r5*@^2@<,jrA7ZltL]NZ4@UX:eBOPq&P!5%gP')ps055<
7G`k7R1QlmDFY@<D@j#?#@ric,DIe!T99M)P@WNZ+L]ilWASu"@H$":Q+DDs&+C\c"@rGmh+DH
W4P"]SG$'K+HAU&<BDe<U&ATT&:AU&</Df0Y>FCf]=F(or3+C1.TI?I,`4>1_dDD*Y`ASu<uDI
m6s06:TD+Bot0@WQmP0TrD`P"Aq4@VBg*>9IurF-:!g!KmJ>!g6H.BOtmjBQSZcK3^->@WNYr+
EM"5P%'4JOo^@?P#?X_!.C#_>q^;EF<G[MF>%QOF<GL@FD5Z2F!*Y1+CoD.FC]E#GEQnu061WA
Ch[cu@<.N1Ou[rR%[&V$Ao(mtFCfK0@<--pDNZuBA1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\
&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/flattermarken 0.0 0
%%EndData
%%EndResource
% --END ENCODER flattermarken--

% --BEGIN ENCODER raw--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Custom 1D symbology
% --EXAM: 331132131313411122131311333213114131131221323
% --EXOP: height=0.5
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp raw 0.0 0 0 0
%%BeginData:         18 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  061KFH  \`  B!23JD  %Df
Bf4Df0WZ5*@]T@U  X:eDe  *FB  5*@  ] TA8  c@-  A9)  +&+D,%  uF  (LLj05  +p2
B4uCC!Ko6WE-,f4  DKCuE  06;  5UB l7  R*  H#R  >X4  aVtcOu  8C  3DfBf4  Df0
WCP,i2'Cia0N4aW        >WI?  IQm 30  Ia  6V3  3Qn         !Bl         U*FE
2M8P!+/T/Wr;\Fc         nqO1  O  XV  5/  Tc#  UAW        eitP        #ZpnA
We*t3A5;iFD5Z2F  -8_M1O  YEc  D  fBf 4D f0WC  Ou%  NL8M=agBkM  +$+D>>#B4uC
M09S,#@<,jrA7^+  N3/B;P  As,  ? 63Kd    4%Ed  KHK  GA2#8/okBE  6=FClBOPpi@
ru:&N[%G1G9CaFF  *&O7Df  0Z*    Bl5&    3DJX  S@A  8,[jFE8QZ+  EVNE3A3%+@;
0doATDg0EfrY8P#  Qjm8N   ]*gE   b0,A0   61WA  Ch[  cu@<+#B@WN  Yr+C\c"@rGm
hH\aA=WI9q$>q]Z         #F!+[   0@UX:  eDe*F  B@Y  b&J!Jgf?;L  <(gBkM+$I?K
4g04JC3+Bost@<,       jrA7^p5  L]NY>L  ]W`;H  \_Z  MP(R$nDfBe  @DfBf4Df0V=
5!C*"Df0Z-Eaa0TE%`kbASu<uDIm6sP#RT)I?G)'1G<cWGEOqKA1r(@/n8fPFCfK5H"(o:FDl%
L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/raw 0.0 0
%%EndData
%%EndResource
% --END ENCODER raw--

% --BEGIN ENCODER daft--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Custom 4 state symbology
% --EXAM: FATDAFTDAD
% --EXOP:
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp daft 0.0 0 0 0
%%BeginData:         24 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04\L'F  F/  fXOu8C  305
kfOBl@m1P!5$b04  J@1@r  Gmh  P!5  $ b04  ]!=  FC]  E#G9CL  +C  ia0N1G  <EQ
BkM+$MEWgP1QjP4  E-,f4  DKC  uE0 6;  5U  Bl7  R*H  #R>X4a  Vt  cOu8C3  DfB
f4Df0WCP,i2'Cia        0N4a  W>W I?  IQ  m30  Ia6         V33         Qn!B
lU*FE2M8P!+/T/W         r;\F  c  nq  O1  OXV  5/T        c#UA        WeitP
#ZpnAWe*t3A5;iF  D5Z2F-  8_M  1  OYE cD fBf4  Df0  WCOu%NL8M=  agBkM+$+D>>
#B4uCM09S,#@<,j  rA7^+N  3/B  t cD3@    )G3/  Bk`  D3@)G3/C%e  D3@)=<0D*]"
HinN"FDe2GA2#8/  nAC&F@  'DH    6YKn    K@:O  CjE  fMe@5t4frD  09oA+Cf>-FC
Am$+E).6Gp$U1@<  ,ddFC   fK6+   @Ib'5   qF-J  +CT  .u+B1!IEa`  ['AS#n&DfV"
*I?IQXP"@<9@<-0         qDBNC   sEas#  uAWgM  c1G  <3HF!+q#Eb  o<)OpR:-04J
U9+C\c"Ch7LI$'I       *#!/LYb  @<-0qD  MS=VW  I$:  4P!5$b04f$  2+C\c"@rGmh
+DHW4P"_#pASu"<!CW)6HX^H*+DHW3BOtmjBQTDRL^9/%P'CGLF!,1Q"__I]B4uCMCkr@[2Ni<
5P#Q"1@u^RUP!+/$@WNZ+L]_=%BkM+$P&,p[OuAJJ@VBg*Bnuq+ASGdjFHUHr#a.*/G^Y`SASu
"<!Ci58HX^H*+DHW3BOtmjBQTDRL^9/%P'CGLF!,1Q#\[d`B4uCMCkr@[2Ni<5P#Q"1@u^RhP!
+/$@WNZ+L]_=%BkM+$P&,p[OuAJJ@VBg*Bnuh(ASGdjFHUHr#a.*/G^Y`SI?I,`4>1_dDD*Y`A
Su<uDIm6s04JC3+C\f$04JU9+C]#*06:TD+BostBQK>GL]N[<H\t%t;='0)n"$b4P(SWV\5DTu
05kfO+E)4@Bl@m1+?ht3A8c@-A9)+&P&N'-Eb0-)Bl7KjEfsCb3IR&#Ou"b%@:jVE30If*F_`U
>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDt
YuCM@[!I?IP~>
% uk.co.terryburton.bwipp/daft 0.0 0
%%EndData
%%EndResource
% --END ENCODER daft--

% --BEGIN ENCODER symbol--
% --REQUIRES preamble raiseerror renlinear--
% --DESC: Miscellaneous symbols
% --EXAM: fima
% --EXOP: backgroundcolor=DD000011
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp symbol 0.0 0 0 0
%%BeginData:         26 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  06;DU@  W-  (0L_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  eif
E-,f4DKCuE06;5U  Bl7R*  H#R  >X4 aV  tc  Ou8  C3D  fBf4Df  0W  CP,i2'  Cia
0N4aW>WI?IQm30I        a6V3  3Qn !B  lU  *FE  2M8         P!+         /T/W
r;\FcnqO1OXV5/T         c#UA  W  ei  tP  #Zp  nAW        e*t3        A5;iF
D5Z2F-8_M1OYEcD  fBf4Df  0WC  O  u%N L8 M>.1  D.7  F"F!*S-04n  p8@='YK@WNY
rMEh^Q!/a#Q!!%m  A&-)]f  5r8  Q AMEh    ^Q!/  a'!  !!%mA&-)]f  5S*nqMEh^Q!
*taD04JU9+Bs^f+  92D!59  Kq+    ME`3    `!/`  u`!  !%m@+92CIO  u"b#@WNYrL]
E52L]E52L]C_D1O  YDr04   np8@   XBbL@   WNYr  MEh  ^Q!/a%o!!%  mA&-)]f5S*n
qMEh^Q!/a%_!!%m         A&-)]   f5S*n  qMEh^  Q!/  a%o!!%mA&-  )]9Ou"b#BQG
;#ME`3`!/`u`!!%       m@+92D!  59Kq+M  E`3`!  /`u  `!!$;f1G<3  HF!+\C!/LW2
!/LW2!/LV\Ou%NL%PMF.D.@oGF(025>DbZW!!%mA&-)]f5S*nqMEoeo!/a#Q!!%mAfDko/5S*n
qMEoeo!/a#Q!!%mA&-)]f5S*nq?'6us@VBg*>DbWf!!%m@+92D!59Kq+ME`3`!/`u`!!%m@+92
CIOu"b#@WNYrL]E52L]E52L]E52?'7!lOq'-WBl.C-06:TD+Bs^g&-)]f5S*nqMEh^Q!/a#Q!!
 %mA&-)]f5hH&:MEh^Q!/a%o!!%mA&-)]f5S*nqMEh^Q!/a#Q!!%mA&-)]9Ou"b#BQG;#ME`3`
!/`u`!!%m@+92D!59Kq+ME`3`!/`u`!!%m@+92CIOu"b#@WNYrL]E52L]E52L]E52L]C_D1OYD
r5!G,cF*VV3DesJ;@UX:eDe*FB@$5JU04K->E,[FNH#7#/CfP@gDJs`:;gE4hDetFR<GlSiDg-
(AF*VV3DepP6@;TQuE,ol?Bk1dc0/%?SBldisEcQ)=P!=AX<-*>%@W-((+C\c"@rGmhP"Us&4?
P9;ASs.SEb0-)Bl7KjE\DKCF!,O5F"_!9F!+q*F"_!3F!+q$F"_HNF<GL@FD5Z2F!*Y1+CoD.F
C]E#GEQnu061WACh[cu@<.N1Ou[rR%[&V$F*VV3DetRrP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=
E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/symbol 0.0 0
%%EndData
%%EndResource
% --END ENCODER symbol--

% --BEGIN ENCODER pdf417--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: PDF417
% --EXAM: This is PDF417
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp pdf417 0.0 0 0 0
%%BeginData:        310 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05tH61  bg  q9L_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  ei&
@rH4'@:OC%AmoLs  AWei&  ARf  OfG %G  KG  s,o  /k@  rH1+D/  OE  N!0T,k  Ec6
/CL]ESo061uTD09        Z:L]  `er 04  SL  %+D  ,%u         F(L         Lj06
1KF+D,%uF(LLj05         t??F  (  HJ  +@  ;L!  rOu        %#qF        D5Z2F
-<^[F*)G:DJ+':E  +P1qH\  _]c  2  3JD eE -,f4  DKC  /fX(GdVF(L  LtH]gXBP#RT
(P%'TNOthst4d(e  HEckrV  4aW  > DP!5    %OP!  5$b  I=%,/FE2M8  Ou%NL<IL$AO
rfcH05kfOBl@m1P  !5$bI?  IQJ    E-,f    4DKC  /f1  OYEX04eX0A  ThX$+D#&!AT
hX$Ot;bP04Sp:F_  u#;+C   f>+F   _u#;O   t;bP  061  uTF!,LAGB8  ouOu"b3Dg-&
@Cige?Dg-&@Cikg         nOu%&   cEcYf  =05Yc  C+C  \c"@rGmhP%  'TNOu"b+L]E
So@UX:eDe*F+NWE       ILNI-gJ  D0'?Q5  &-6EP  'N4  "C6AUR!KmI  :C6CcD1QlmD
3/@Qj"-Q?@/8]H@P!3W:!KsFF5*C/R30Ia,"-TX>"-Pj29RV8N3,N_LP!3WD5*C2S@VV&,05?Y
6Ou"b#@<,jrA7Zm#F(^:/C6D8R1Qk"OP#ZpnAUT_@Eaa0=04\L5@s;u:@UX:eDe*FB@Zh%\1G<
Hu!0T,kC5;kQ1OEgY@UX:eDe*FB@Zim$P!FGY<%ha*+C\c"@rGmh+DHW4Oo^@@P"_#iOu$WWFC
TN9+DN$/GER2(Bcq,G"HieK1G<JcC5;nR!Ko6eP%?:W@<?"'F!,"%FCTN9L]D1Q9Th2[HS8i:E
bo<)+C\c"@rGmhP%'S1@UX:nAT!;.P%odQP!+.FA79RiGB4m9@<-0qDMSL[;MYL>Ckr+T!KmbP
1Lsp9@s<!M!/:TGP'DD%04\L5@s;u:@UX:nAT!;.P#@)>P&+T9Ebo<)L^'#WOo^@>Oo^^POu$W
WFCTN9L]E/3Kp$\/P#[;<L]LsnEbo<)L^'#?L]N[<HS9)r5*@]TD0'0-+Bost@<,jrA7ZltL^'
#YL]`f6H[V&K?'6usD0'3.+Bot*F(03R!g7\h5)'(<P&-9^P!4O!!<<+_Cm"gT"+-1jL'**lC6
Cc8",)h8I?K4gOu"b-F(025>9IB`Eas#uAKY]C#*NeY"-N\@"-Q?)I?I0-Ou"b-F(986>9Ia'@
WR\6P')pOL&h:;Cm"g^5(in:!!&0uOo^@@H]g@C",)hPP!4U&KT]5]P(R&'1G<6^F,1!_$'I)\
F(99I!0TulF(99I!0U!0!BcN]Oo]':F,0sT!g6Z?",)hPP'D]`KT]5LF(99I!Kp*=!GumfF,0g
Z983M!P&-9^D0'3.L]NZ3L&jE"Cm"g/GB8QBL]W`AL'**lC6Egr",)h8Cia*-L]W`4Oo]E@@rm
G+P"UTFP&-9^D0'3.L]NZ3L&uphCm"g9F(99I!g632!BcN]Oo]':F,0mR!g6Z?",)hPP'D]`KT
]5LF(99I"-Q<?!GumfF,0j[98F:FCm"g9F(99I!g632!eHMNOo]':F,0jQ!g6Z?",)hPP'D]`K
T]5MF(99I!g634'U!9q!Fp=pL]E55M#WWnL'**lC6EgP@<?"'F!,1Q"d3\X!KmInGB8pmI?I,S
Eb0)1@UX:nAT!;.P%p.9Eb0*D!0V2GA79RiGB4m;@<?"'F-:!QASmU0>9IB`Eas#uAKYGjEbo<
)+ED%1P,WJ5D3@S>I?I0-P'MJ=<+BEJHS8o<FCTN9+BsR&Qt0WI@s<!W!g7\3Ou%NL<.0p005V
hB@<?"'F-:!q1M('4AThX$M#WW$HYnQeP$r\jARfOfG%GKG!g5?fP#Q:S.?[;?L&dm0@?Lb?04
eX0AThX$L]`erI?IQHL&dp18o9:`5a#Q="FDe5@r,_"ASd/*Ou%NL<,I?j6'=ie04eX0AThX$L
]rqtI?IQXP#O)O@<c?nCh7d$Ck`%bL]N[<D3Cl7DMS@1DNZo@/;O=iWKK&K@r,_"AS`K+@<c?n
Ch7d$Cm%VA04eX0AThX$+DkP3ARfOfG%GKQ1OYEc05H@FARfOfG%GKG!KmIpG]8fsOu$TdCisT
4F,0gZ4aShlDesQ5DK?q;+D[,@L]`euF)c5BP)5>QOu%NL<+Bi_F_u#;L]NZ2@rH1+D/OEN*g0
rp"FDe3+Cf>+F_u#;Ou%NL<%i87D'3VW!Jgc>!Fp%aF_u#;OuAI7Ot;bPEZfC@GB8pZEc6/CLg
#sMOp$+bEZfC@GB8p'I?IQML]`fPHS9Dq"-PHgP#O)O@<c?nCh7d$C`m41Eft6p!KsF!P,W88L
]VC1OuAISL]N[<L^8e<Or9EZH]gR@P#RTeOu$r`G\(B$AThX$+D#&!AThX$P#-KYARfOfG%GJ4
D..[#@r,_"ASdMc05H@FARfOfG%GKG!KmIpG]8fsOu%NL<%i,3@j#fTCho35Ou"b$GB4m:+EEW
]L]NY>OpR:-@s<!M!,dsE@s<!M!G#V\@s<!WH"2&>+Dlo8Oo\c0DBNeZWJCS<WI'@%KRK#9?'9
JCGB4mE+Bot(H\_ZMP(SPj?'9IdEcYZ*DeC1sL]N54TR2h]L]`fVL'+-4C427t?'6usEcZ&8B8
-M^OpR:-L]N;4L'+)qOuRK'@;KjpP!5%%P!3o-Ci<sB",Hu@LQZn1P"76HF)Z/<A:'+6Or9&UP
&6@GL]ETTOp$,PF)5c-P!5%%P!3o-Ci<sL5*AR%!JU]LP%o#Y@;KjpP!5%%I=%-"P')Q\I?ITY
Oq*X204Sp3AnH*,>DN;qH\_ZMP(R&'1Pc'f!Gd$8Bp(ZC1Lk?7AnH*,Bcpo(AS,Oq+DHW4P,XU
;P'C\s!KsF<s+g]&05?Y6Ou$TdAS,Oq+DN$/De3NmF!,4R!KsFF94MmOAnH*,C6D51F(&m'B-:
oO96,)mEc5KO!JU]MP%p/)I?I-2De3NmF,0g+De3NmF,0gZ96,)^Ci<r/Bp),0F)Z/<A<M1cP"
769De3NmF!+t2AS,OqL]Cq'AS,OqP%'4JP,XU<Ou$TdAS,OqP%'4JP,X9:L]Dd3De3NmF-8_C!
g4Fa983PBP!5&.P'DD<8;I8%!H*\oP,Wd]FHSgtGB8p2P"T;/F!,@`99K=1"/1lmOu%moL]M:I
!KsF/05?Y6Ou$TlF!,?CC6AU-GB4mE+DR&?L]NY>P"UN3Tl_DeDe3NmF!,6@C6GQP!KsFF99O+
G"/1lmP,XTFL'+-4C6EgiP":"a88a4aDBN_X!IKth@s<!W5)'05@s<!M"c32ALQY;nWJ1MKP%p
/)I?I,S@s;u:@s<!M!+U4oP%'4JP,XU<Ou"b$Cisf@ATDi7>9I.'!!1WcKE)&<n:UcBomDDm!S
$%\!!2A0KE)&G5(in:W5+&d!Ru(A!!0$+KE)$L5_K+<W%`l)!Djnl!!04;KE)&(n:UcBl[4?c!
Nb44!!1YqKE)&=5(in:=MTRi!N^6n!!-20KE)$Y^k;[gY4.)E!S;^P!!-?_KE)%UG_?%tf04if
!F0Ss!!05bKE)$Zn:UcBYC)!'!FC#(!!08eKE)$[I"VJ#p%j=A!RfnZ!!2>/KE)&F^4ZIeUqhW
`!Rbq?!!2=HKE)%K@"\L\dPum[!D#J/!!/lLKE)&$*/":m80EQc!MgQc!!,V%KE)%Mi.M(2ds-
NG!U7=O!!,d/KE)%ME.e2ldl`9`!DHmS!!/rVKE)&%*eXLo9JD,"!N$ii!!,jQKE)%NG_?%te%
UJ8!D[Te!!/u[KE)$J3.q84V]LKk!Ddrn!!0"3KE)$K4G3\8:EG/h!M[A_!!1JdKE)&:]S$7cU
0rWS!RWl[!!2;TKE)$@5_K+<U+h6#!RVm?!!,J1KE)%I(k_ki6kG"O!CR3H!!,R)KE)%JE.e2l
dCb,4!CgIM!!/iSKE)&#SqI(E7PKJq!M^Wf!!,P+KE)$B%"nT]7rX+]!Md;\!!,SLKE)%JSqI(
E7i[0^!CseU!!/d$KE)&"\:ah_k[&oB!CB&)!!/cIKE)&"S:gkC66Lp]!ML?`!!1H,KE)$>&;1
#aTaZSS!C@'F!!/btKE)$?@"\L\Tt#aU!RT\V!!,G@KE)%HS:gkC6PtIV!MPO,!!,FqKE)$?#(
usWU#(G&!CMm#!!,ANKE)%GY_2uWcs25(!C7i]!!/a[KE)&":4rTJ5nJ\L!MGC)!!,@kKE)%GL
4fO-5m2i@!C<rC!!,BQKE)$=N._035bNc1!RNHP!!/`dKE)%G7YCaB5_=Xh!Qs>R!!22+KE)&D
^4ZIePe_qP!QoA7!!21DKE)%;@"\L\auG%S!TbAU!!+K5KE)%;0SBE,-m40C!LDYs!!18fKE)&
7^4ZIe/AQo=!L@\X!!18*KE)$(@"\L\Q8jNt!A#pX!!+VfKE)$*i.M(2Q["/`!R&31!!+]kKE)
 %>4G3\8/i\La!A5@F!!+`tKE)%>^4ZIe00Fmf!AD0?!!1fhKE)&?E.e2lp:Q%Y!SUq7!!2IHK
E)&HSqI(EZp99E!ST5\!!2I,KE)%[+G9^qg),JC!UUAM!!0G<KE)&,%"nT]P/)_N!Qf;6!!2/n
KE)%]^k;[gP$iqC!Qd<S!!2/PKE)%]@"\L\gGjid!UZJ3!!-n$KE)#u+G9^qOr/iP!Qbh)!!-m
YKE)%](k_kiC_27"!@GU8!!/:&KE)%p]S$7cDSUo*!@D3-!!/9CKE)%pSqI(EDIA+t!Ok%A!!1
iGKE)$j0SBE,-5_C9!H&a-!!+HdKE)%:]S$7cDfC@0!@Kj[!!/:TKE)$k3.q84\"86Q!H/s2!!
+I[KE)$k]S$7c-_>tk!H4Q_!!1b\KE)&>\:ah_p0NCP!O=tD!!1b,KE)&>S:gkCZ64f#!SJ<C!
!2GHKE)%Y&;1#afaNN6!O;ua!!0A.KE)%8@"\L\aLHm'!T[R?!!0E6KE)%80SBE,aIIn`!G4TM
!!+8dKE)&+S:gkCaGtoR!G3I-!!+8TKE)%8%"nT]Ae9Uq!OE2f!!/2dKE)#s"G?aU,@H0)!Kjm
F!!10tKE)$c@"\L\,;=cN!Kin*!!-^dKE)%ZS:gkCOcG(p!G<7&!!+;QKE)#t#(usW,IiC,!Kl
5l!!-`BKE)#tS:gkCB:OVT!@*VX!!-_mKE)$chLkk0Ys<sB!SFW0!!2FkKE)%X+G9^qfU.<l!U
NR7!!0>9KE)&*N._03Ym?!_!SE-[!!0>-KE)%X!e^OS+[C\\!KaO=!!1/GKE)$_5_K+<+WuF<!
K`\%!!1/9KE)$_+G9^qZ'^1E!SG\N!!-R@KE)#r#_W0YOG8Dg!FlCg!!0?ZKE)$_"G?aU+g?V"
!Kc)i!!-T6KE)#rR"PG?ONrLZ!FqLM!!0@MKE)$_N._03+bkXM!Fpk;!!-TbKE)$_c@c/uYb6X
L!SCM-!!2F=KE)%WOG!T7fM$qu!O.B5!!1_AKE)%WKS0=+Y_%N.!?e%g!!/0`KE)%o/qa3*@A&
8R!?dJW!!/0TKE)$]OG!T7Yfqb#!K]d(!!-MaKE)#qKS0=+@>':6!?cuI!!+4pKE)$]fRs5*@E
aB)!Fa!$!!1_'KE)&*-A2@"YX4!C!K\jc!!+35KE)$\aFjNo@)R]u!FWct!!.tmKE)%lE.e2li
k0pE!K(9<!!1%uKE)#e5_K+<MD0\`!Q?%3!!*cVKE)%1(k_ki'G,ot!>Gfm!!*kNKE)%2E.e2l
`Opj(!>]'r!!/!;KE)%lSqI(E(,1CA!K.qN!!*iPKE)#g%"nT](N>$-!K4UD!!*lqKE)%2SqI(
E(EA).!>iD%!!*n-KE)%t@"\L\k.$'E!V9WN!!/NRKE)%t0SBE,k+%))!Lb-a!!1=]KE)&8Ne@
B5RLk,P!R2%+!!/MoKE)%t#(usWM-tu:!Q;L$!!2(cKE)%B@"\L\M(jS_!Q:L]!!+uCKE)#c+G
9^qc('Fe!Q:"O!!+u#KE)%B(k_kiM%#%;!B(LB!!*]<KE)$2#_W0Y'4?In!K"=>!!1$pKE)$3@
"\L\'/5(>!R9JS!!,#4KE)%BS:gkCM2m5h!B1jK!!*`AKE)$3%"nT]'=`\q!K#Zd!!,$gKE)#d
S:gkC2k5O$!>CKH!!*biKE)$3hLkk0h*?Vn!Ud1F!!2h!KE)&/+G9^qm[/Y-!V]?B!!1meKE)&
@N._03h$AZ6!Ub\q!!1mYKE)%@5_K+<bcla#!TmX?!!0\sKE)%@+G9^qmbEHq!Tm.1!!0\SKE)
&/R"PG?m`pIc!P8nr!!/JnKE)%sL4fO-]*O&i!SrK`!!/JhKE)#b5_K+<Lp2O4!Q85r!!+l@KE
)#b+G9^qLmWhq!Q7`d!!.:/KE)$/+G9^qR@&X-!R/iB!!.9dKE)%bR"PG?h9LZR!JlJ`!!.9TK
E)$/#_W0YR>-@p!I"g&!!*Z5KE)#bY_2uWLtmX`!Ags5!!*\!KE)%/c@c/uGHc`#!Ag*r!!/M5
KE)$sR"PG?]?Z'0!>1'>!!+m1KE)#bgk5Y.1YdW`!>3V1!!.<!KE)$/c@c/ugn9<#!Ua'C!!2g
HKE)&.OG!T7mS&96!SiKa!!2LWKE)&.KS0=+gk(1Z!LTO5!!1;GKE)&8/qa3*\Y+TU!LSt%!!2
M*KE)%`OG!T7grtEO!R+#d!!0WdKE)%?KS0=+\V,V9!LSIl!!0W^KE)#aTS*:GLff<1!Q6UD!!
+gIKE)#aOG!T7LeNI%!HXoe!!+g9KE)%?b_,rsLdm$t!HX?U!!0XSKE)#aKS0=+F,5JL!AT7\!
!*X_KE)$-JqO+)&D2X9!JkWH!!+h,KE)#ab_,rsF4c-G!AVfO!!*YNKE)$ob_,rs0uekH!>+[P
!!.0/KE)&.:kSfLmOX"k!Sg5!!!2L7KE)&.7"bO@gd6Yo!LQ]:!!1:pKE)%_d"DB"Qq2l1!R)m
D!!0UNKE)&.AqU-b\AX%#!LQ3,!!0UHKE)#a:kSfLLb+2Z!AMlR!!*X%KE)%/-A2@"ER9@=!AM
TJ!!/I!KE)$maFjNo\E8GE!>%SN!!.)XKE)$,_LqmiEPdA/!ANkn!!.*+KE)$mk(E^8mM:HU!S
elP!!1:ZKE)%?,_Q-uQm.1`!>$Z4!!+ceKE)$lk_&p:&0cc-!AIu9!!.d]KE)#[5_K+<KeS/[!
=Bs&!!.cjKE)%iNe@B5$4qjj!JLr8!!*E4KE)%,#(usW$XeVf!JS%:!!0snKE)#\0SBE,Kq*er
!=K`t!!.e6KE)#\%"nT]$O27a!=QDj!!.f1KE)#\S:gkC$]]l?!=Rb;!!/'EKE)%mY_2uWj'76
;!KA4T!!1*,KE)%4&;1#a`f,QN!K@A<!!1)oKE)%4"G?aU#sa.D!JI\1!!0rAKE)#l5_K+<#p=
m$!QNoJ!!0r3KE)#l+G9^qNL5A!!QNE<!!+#MKE)#Z#_W0YKSG-[!?2;t!!/(6KE)#Z!e^OS$*
]'_!JK6]!!+%CKE)#ZR"PG?K[,5N!?7DZ!!/))KE)#lN._03$&4*5!=@P7!!+%oKE)#Zc@c/u)
pX*:!R@?k!!27bKE)&EY(QcUcB*\Z!U!.0!!1B$KE)&97YCaBc@giN!R?:M!!/%OKE)%m=G-YT
SY1W9!K<+n!!1)5KE)%DOG!T7cHLqA!QIT^!!/XHKE)%3KS0=+SV2Xr!K;V`!!/XBKE)#YTS*:
GKNNm-!?%P`!!*@eKE)%mDM.uj4.q6,!?$uP!!/&&KE)%+7YCaB4-5*q!M.Gf!!*@YKE)$7LkG
a/)2*YC!=4:1!!*shKE)#YfRs5*KPlGC!?'OC!!*ALKE)$7fRs5*)9da6!=6\u!!,1*KE)#j`e
4<m#k!?G!?(<Y!!,1LKE)&A:kSfLpT0#J!UiR4!!2hkKE)&A7"bO@mm;[-!R=Mp!!276KE)&0d
"DB"mqdXW!Tte_!!1rtKE)&AAqU-bhSb'I!R=#b!!1rnKE)%3:kSfL`[lcC!M%Mi!!/$LKE)%m
-A2@"^!ME4!M%5a!!1AWKE)%daFjNohWBIk!K9?u!!0dOKE)%C_Lqmi]u#F&!=2MT!!.a(KE)#
id"DB"#Y9UK!JDeQ!!,+,KE)#iaFjNoN+R_C!IN1H!!,+$KE)%Ck(E^8#XX1E!IMn@!!0dqKE)
#i_LqmiHc1R;!=3Lp!!*r'KE)#YAqU-b3UDD!!>ssP!!.H5KE)$5k(E^8Hfft]!UhFi!!2h[KE
)&A,_Q-umimDb!R<*H!!26uKE)&0BS6?dml#h!!T%@?!!1@hKE)&0@Y=^^N$s>Z!QGn.!!/U'K
E)%3,_Q-u]]b"K!M!\R!!/$&KE)%cjFdL6S77-O!PIEF!!*?RKE)%+(5)Yg(heR&!K8pi!!,(C
KE)#iA:sp`#U4p%!I<m^!!,(?KE)#i@Y=^^H/sVY!BB(l!!.B)KE)#iG(]hrH1lmk!UgYS!!1q
5KE)&015#W.S2>m!!PEN-!!0`QKE)#i1kYi03-9fR!I46i!!.?8KE)#V5_K+<"X&Hu!J6\l!!*
67KE)#V#_W0Y"U'JY!<o]\!!*7jKE)#VN._03"bq[1!<q83!!*8KKE)%-TS*:GL6.&g!Q.Ta!!
.h1KE)%j7YCaBL4k3[!JZ2Z!!*4qKE)%)=G-YT%A8@S!J]6[!!.[FKE)#^OG!T7L<P;N!=aj<!
!.hoKE)#^KS0=+"G2:,!=aX6!!*5TKE)%)DM.uj%G6=6!J^#q!!*PQKE)#U`e4<m%E=&$!<hhD
!!*PsKE)%n:kSfLa%1j`!QRT]!!1,,KE)%-:kSfLNmNFZ!QT#0!!0taKE)%5aFjNoa(Bu)!KP*
O!!.g@KE)%5_Lqmi"AjaO!=[>.!!*3nKE)%)-A2@"*RKH>!=[&&!!*3jKE)#naFjNo%)df!!<b
`B!!++YKE)#]_Lqmi"Di_k!=\=J!!*47KE)#nm">?>%-E3C!?L<U!!28]KE)&9UkA^KkG!V0!Q
QUA!!1DZKE)&9[Y+V]cX_\/!QQC;!!1DTKE)%-."hR$_\Rn*!KLiH!!1+uKE)%Ek_&p:Nb!eC!
JVeO!!/\PKE)%5@Y=^^T&PD'!<ag(!!.ZeKE)#]BS6?dL,O\b!?C<V!!*L=KE)#U,(ops4m7P!
!?C0R!!*L;KE)$9jFdL6*9)VO!<b<6!!*LOKE)#mp4NDH4naO/!Vb)s!!2iBKE)&9P_9#;n$I`
J!U#W!!!2PoKE)%n'SHGecSU:T!QPh+!!1u!KE)&!15#W.hf=AM!JV;A!!/*:KE)%-&qg5cSof
Vc!KJpg!!0h+>p*@)!!2b#KE)&L\:ah_l9L"&!VJ."!!2qdKE)&<+G9^qob`>^!W%h0!!2?rKE
)&G%"nT]l3N%C!VHYM!!2?fKE)&=@"\L\osfYT!W(Z+!!1Y9KE)&=0SBE,opg[8!S/BH!!2C&K
E)&GNe@B5ee!K7!UC/I!!1XVKE)&=#(usWec^X+!S:_4!!2DqKE)&GhLkk0Y!@X?!S9#Y!!2DU
KE)%U+G9^qf,0/@!UGc!!!056KE)&)%"nT]XpB[\!S7O/!!05*KE)%V@"\L\f=6J6!UJTq!!-C
kKE)%V0SBE,f:7Ko!F?n%!!08?KE)&)Ne@B5?4_bi!Nuob!!-C3KE)%V#(usW?XSNe!O'"d!!1
^.KE)$[0SBE,YFL7G!FH[s!!09`KE)$[%"nT]?atah!O(@5!!-GsKE)$[Ne@B5ks0n%!VEUL!!
2q$KE)&;+G9^qoU(:3!W#QE!!2<qKE)&FN._03km2qB!VD,"!!2<eKE)&;!e^OSdm/Qd!U6hA!
!2`IKE)&%+G9^ql'R,(!VFZj!!1O[KE)&;N._03dg1U,!U5>l!!1OOKE)&%!e^OSVa,n8!Rn9+
!!2?>KE)%N+G9^qe!Pdg!U7m_!!/u/KE)&%N._03V[.qU!RldV!!/u#KE)%N!e^OS:I'R5!N3/
T!!1R(KE)$K+G9^qVjN,;!Ro>I!!,k,KE)%NN._03:C)UR!N1[*!!,juKE)$KY_2uWVqcq*!Df
)9!!0"CKE)$KN._03:PON&!DhL(!!,m@KE)&:TS*:GoN6bH!W"F%!!2;FKE)&F9S<BHk_Oll!V
Aj7!!2;:KE)&:JqO+)d@c-m!U/0h!!2_0KE)&#OG!T7kfe\[!RZ^V!!2<'KE)&#KS0=+d=R#O!
Mc<@!!1L"KE)&:mXtQ@UQC-/!R],E!!/jNKE)&#`e4<mUP+:#!Mb7"!!,T_KE)%JfRs5*dI)Yf
!Cr6)!!/k=KE)$CLkGa/UW.re!Cqfr!!,TAKE)$CfRs5*U[Ed8!Ct@e!!,U0KE)$CmXtQ@kYQp
4!V@pr!!2:SKE)&F-A2@"kX:((!U)k'!!1HnKE)&:CkMchd)^k?!U+-K!!1HbKE)&"_LqmiU!S
Gm!RU1d!!/e7KE)&"k(E^8Tu;Ta!MRA`!!,I6KE)%Hm">?>6cao\!MSY/!!,I*KE)$?_Lqmi6g
TI+!CQ"&!!2:3KE)&F(5)YgkTkf]!U(_\!!1G[KE)&:2M;&2ct%e0!RP;/!!/bVKE)&"G(]hrT
]Cb+!MJG*!!,CLKE)%Gp4NDH60*\!!C>^u!!29tKE)&:&qg5ccnpCU!RNTT!!/a7KE)%GEeFDn
jZnJ!!V3IJ!!2n#KE)&7+G9^qnsG(1!VoKD!!20mKE)&DN._03jTpM>!V1tu!!20aKE)&7!e^O
Sb<U^\!TgP=!!2ZGKE)%r+G9^qjd:]$!V4Nh!!17SKE)&7N._03b6Wb$!Tf&h!!17GKE)%r!e^
OSQU$3(!R%^#!!2      3:KE)  %>+G9  ^qbF!  q_  !Th      U[!!/D      tKE)%rN
._03QO&6E!R$4N!        !/D  hKE)%  >!e^O  S0  0k0         j!L         L$D!
!19uKE)$++G9^qQ  ^EF+!  R&  cA!!+   _aKE  )%  >N.  _030*  m42  !LJOo  !!+_
UKE)$+Y_2uWQe[5  o!ABg  n!!  /G3    KE)$  +N  ._0  308>,[  !A  E5]!!+  auK
E)&HTS*:GqcJLO!  Gh1X!  !2e  TKE  ) &M9  S<B  HC&  !>]!VV  >&  !!2sdK  E)$
dr.G%Np4S)!!VV+  u!!2/  RKE  )&D =G  -Y  Tq(  @=#  !UZP5!  !2  /BKE)&  MDM
.ujm>uu$!VX`j!!        2X[K  E)& ?L  kG  a/j  Fi0         d!U         YPn!
!2/4KE)&?JqO+)a         e4:e  !  T_  md  !!2  Y.K        E)&-        TS*:G
acM/U!T_IX!!1i9  KE)&?b  _,r  s  jMl iQ !S`E  `!!  12pKE)&-KS  0=+ab#0G!S`
3Z!!/:VKE)%pfRs  5*jR.[  $!O  n _T!!    /:FK  E)%  pb_,rs[uc7  C!SbhO!!13]
KE)%^LkGa/PD"Sh  !Om`8!  !/:    8KE)    %^Jq  O+)  -_Q+m!L)/h  !!140KE)$kT
S*:G-]iu]!L(`\!  !.#"K   E)%^   b_,rs   PK&7  U!H  3dI!!+I#KE  )$kKS0=+-\@
!O!@QNQ!!/;OKE)         $kfRs   5*-d7  5D!H6  28!  !+IeKE)$k`  e4<m-glWf!V
T?C!!2sJKE)$apk       /VJp.0i  :!W+3s  !!-X.  KE)  &H7"bO@A:B  13!VSj5!!2.
WKE)&D/;+!(m*LCc!TZe)!!2X;KE)&>aFjNop1AsX!URaX!!2.IKE)&>_LqmiaO#S?!T\'M!!1
d"KE)%oaFjNojCX&F!SPPI!!2HKKE)&+`.S*kaMNT1!SP>C!!/5/KE)%om">?>Zd=@*!KkHV!!
11'KE)%ZaFjNog#dqf!OK^t!!/5!KE)%Z_Lqmi,LD)D!Kl`%!!-`ZKE)#taFjNoOlh;s!GBK,!
!0FgKE)$c`.S*k,Jo*6!GB9&!!+>2KE)$cm">?>,NaXZ!GCPJ!!2dAKE)&M(5)Yg@f1lZ!VRdl
!!-PXKE)&H,(opsj=#Z]!V."Z!!2G"KE)&H2M;&2lstbL!TYGX!!2FqKE)%oBS6?dj>MYk!SHU
h!!1/OKE)&*jFdL6aC9f&!SHCb!!/2FKE)%oG(]hrZ06i@!SI+!!!0@cKE)%7ie.:4Z/UE:!?p
Z[!!/2TKE)$_k_&p:+ln:V!Ft2D!!+8&KE)$_ie.:4+ngQh!FthV!!2d-KE)$]IY7\%p(E#Y!T
XrJ!!2FCKE)&6&qg5clnX4o!Q[*N!!1_oKE)%o15#W.fQ)WF!K_DV!!0=rKE)%7EeFDnYk!GI!
?h#f!!-O#KE)#qnq6uD@If'O!VQkR!!2-fKE)&>)MA(ka;T^3!SBGd!!/0BKE)%WH@u8!ih1r)
!V'9F!!2ktKE)&4OG!T7nP"T9!TJog!!2UZKE)&4KS0=+idug`!QC^b!!2*3KE)&CDM.uj`K5`
Q!TM=V!!1&pKE)&4`e4<m`IrmE!QBYD!!/"NKE)%lfRs5*ipMI"!K3%m!!1'_KE)%2LkGa/`Q!
Q2!K2Va!!/"0KE)#hTS*:GMqE[_!QFJ[!!*mtKE)%2b_,rs(Pm_E!K4sN!!*mhKE)#hJqO+)(Y
FB@!K6B!!!*n[KE)#h`e4<m([cqV!V9-@!!2nsKE)$1pk/VJo14N7!VrUG!!+qSKE)&E7"bO@1
k()X!V8X2!!2(UKE)&C/;+!(k0Sb]!THY'!!2U:KE)&8aFjNoo4EXU!Tq=R!!2(GKE)&8_Lqmi
`6a/;!TIpK!!1?kKE)%kaFjNoib!iD!R8]=!!26EKE)%t`.S*k`570-!R8K7!!.r'KE)%km">?
>S'Zfg!K"mN!!1%#KE)%BaFjNoc/sZZ!Lq#\!!.qnKE)%B_Lqmi'@;C4!K$/r!!,%*KE)#daFj
NoM<9Hk!B8)Q!!/SOKE)$3`.S*k'>fD&!B7lK!!*c"KE)$3m">?>'BXrJ!B9.o!!2tqKE)$qn:
UcB])73]!W/[G!!.3:KE)%aIY7\%qkA`D!H`^B!!.1*KE)&E."hR$q3H[6!AaS+!!2h-KE)&M[
Y+V]G5R!n!A]+W!!2h)KE)&E,(opsG(,)E!V^&V!!2(-KE)&C(5)Ygk%KDJ!TGAX!!2NOKE)&I
G(]hriZa$U!Uf$%!!24kKE)&@ie.:4`+Xf(!TH"j!!1=-KE)%kA:sp`h<9Ll!R0VX!!1#IKE)&
/jFdL6bi49U!Suag!!.o>KE)%kG(]hrRHT;(!Jofi!!0^qKE)%@jFdL6LuO'f!P@EG!!/MIKE)
 %bie.:4&a4lJ!JpH&!!+n>KE)#bjFdL6GNa\[!Aiei!!*\kKE)$sjFdL61ZF&f!I*OV!!*]*K
E)$/p4NDHqila6!HRsg!!0WZKE)&MP(Wf9EdWN?!HLAW!!2[*KE)$-IY7\%pG@O'!V6qW!!..i
KE)&I15#W.iY7%G!Tl4l!!2'lKE)&@FG'Vpjt_Si!Uau]!!1"pKE)%sFG'Vp`%luG!Sm=#!!1;
aKE)&.nq6uDLie:M!LWM4!!.mrKE)%`oRm2FR.>n1!P.cS!!*Z'KE)$-oRm2F&FtJS!H[md!!+
hFKE)$onq6uDqhg%,!HEL?!!.('KE)&E$A8B[pDS\b!TFH>!!24#KE)&@3eRJ6`#=:/!R*TX!!
1l$KE)%/3eRJ6R!ODc!P%uZ!!*XWKE)$,qLehLEVb=g!H>c+!!2%TKE)&BXFpQSiCJV%!Uut>!
!2%HKE)&36A,=>_U*r9!T@jJ!!0sXKE)&3AqU-b_Sh*-!Q)^,!!.f#KE)%im">?>KueoI!Q*uP
!!.elKE)%,_Lqmi$daP,!JTln!!*JKKE)%,k(E^8$cI\u!=Qbt!!*JoKE)#\k(E^8nYh*@!Vk6
!!!+#9KE)&CUkA^K)Ld>>!V)n;!!2%,KE)&BQ@o5=j(O)G!T>;W!!2+jKE)&3,(opsj'mZA!Q&
N'!!2%:KE)%mk_&p:_IS<"!QO2R!!0rGKE)%mie.:4K]n'h!Q'#5!!/)CKE)%+jFdL6NT>`m!J
KHc!!/)=KE)#Zk_&p:K_C'!!?:6U!!*DeKE)#ljFdL6$0$U<!?:$O!!*E"KE)#lp4NDHq:(&t!
BU"/!!/X>KE)&KdY%T$3dcS\!BNDt!!2VSKE)#jIY7\%o<a/N!V)>+!!,01KE)&EZ@i2Yi=pqF
!TQ"i!!2$kKE)&9FG'Vpj"c8f!U"KV!!0qnKE)%mFG'Vp_D6cE!RC=j!!1)[KE)%unq6uDKQMk
I!K?Z(!!.anKE)%DoRm2FN:MW%!M/e7!!*AtKE)#joRm2F#kEWK!B]q,!!*u.KE)$7nq6uDHLQ
Rf!PNl6!!.CjKE)%d5(in:H9?i\!I>f?!!2o<KE)$5I"VJ#qq?]'!IK3I!!,)DKE)%"5(in:nV
Vu"!V;b5!!2i*KE)&3$A8B[iu3RN!TuLs!!2P7KE)%i)MA(k`]AbQ!R?"E!!1sQKE)%+3eRJ6N
-^-W!M'">!!0e0KE)#YH@u8!)#Amc!BL"0!!.@iKE)%c^4ZIeGs$`[!I5`>!!,'nKE)$u^4ZIe
GeA\0!I12h!!.=NKE)&2W.Y-Oi1u#+!T9]*!!0oLKE)&2[Y+V]_.83!!Pr5u!!.]8KE)%hG(]h
rK&hRb!J9<a!!*8eKE)%)p4NDH"lt=:!<qJ9!!*8sKE)&Be:[f&%=Ws1!V"Nj!!2#BKE)&3["J
D[i0&`n!TC>;!!0nmKE)%jFG'Vp_(pZD!Q/r2!!.[nKE)%-oRm2FJoZME!J^/u!!*5pKE)#^oR
m2F"S.3G!=eUQ!!2l[KE)#nI"VJ#*Bo,V!V"6b!!2WDKE)&2MM(s1iL5E"!TUbE!!0nSKE)%j3
eRJ6a*NC=!J3@c!!.h#KE)%5qLehL"F>_$!=\gX!!+,:KE)$9G_?%tT"]jX!BiPu!!,5(KE)#m
^4ZIe4hcRL!I\p?!!0gHKE)%$3.q84^7KuX!IYr@!!.KXKE)$8]S$7cICt45!Bcs,!!.M>KE)%
#\:ah_^0ZHm!IUDj!!.J-KE)$8?A&:ZI,9MV!IS.*!!.IBKE)%#/qa3*^pJap!Pl!o!!.XmKE)
 %(EeFDn!q_-G!<VhF!!2$3KE)%gRY1YA_7G:"!J*:b!!.^uKE)#SH@u8!#5WuQ!=lhs!!+.RK
E)#oSqI(E5.H7G!M<\O!!,9RKE)$:Ne@B5*aXL"!C#@n!!.PQKE)%f>_E(XI[Gcg!P_B_!!.P-
KE)%%L4fO-5$Wa@!IigW!!,8YKE)%%c@c/uITV7'!P^7?!!.OBKE)%%7YCaB4t_Kg!Iep>!!.O
"KE)%%-A2@"%pjnh!?YR"!!+0:KE)$;=G-YTT<<hI!C'82!!,;RKE)#p/qa3*5Al,S!C&,g!!,
;2>p*@)!!0.YKE)&'pk/VJ;o"%d!NGRA!!1UIKE)$Mi.M(2W;)#G!RuRO!!,pcKE)%OI"VJ#:j
@Wn!W(/r!!-<^KE)%Tpk/VJqT+<i!EnoF!!02!KE)&L`.S*k=SROL!N^a'!!2r5KE)$TI"VJ#p
!A?l!W)/9!!-C#KE)&GaFjNoqW<G2!F5PU!!2c2KE)$XIY7\%otl@^!UJ*c!!2cZKE)&=aFjNo
p#^o-!UI[W!!2E&KE)&)d"DB"lg09)!S>DG!!2EJKE)&)`.S*kf><1@!O'k'!!1^<KE)%VaFjN
ofB._d!O'Fp!!,a.KE)%Ln:UcBdenau!D24&!!/njKE)&$IY7\%8FV94!Mk*r!!,W8KE)%K5(i
n:83DP*!W$J_!!,g`KE)%Mr.G%NqIG6Z!DN9A!!/sGKE)&L@Y=^^9RMKn!DG\1!!2`UKE)&LG(
]hr:AfbF!VGH+!!,iDKE)&Fie.:4l0*d#!VH)=!!2?FKE)&;ie.:4e*)Gb!U9<2!!1R0KE)&%i
e.:4Vs&d6!Rpaq!!0"YKE)%Nie.:47Grh!!M]@B!!1JrKE)$@n:UcBU3qUo!CV0c!!/fXKE)$@
4G3\86lq!]!W"X+!!,RaKE)%JIY7\%qD*^(!ChHi!!,PQKE)&FFG'Vp7t-*k!VCDc!!2<UKE)&
:nq6uDdI`(l!R^Ik!!/keKE)%Jnq6uD6L]X.!MOmo!!,E2KE)%H5(in:69Ko$!C@i\!!2p7KE)
$?I"VJ#6U$/'!VAF+!!2;0KE)&"qLehL6$S%_!MI/[!!,AJKE)$=*eXLo6,&!P!C4;N!!,?VKE
)$'^k;[gQ10G,!Qt=n!!+P,KE)%;pk/VJb'o!D!@[Gj!!/=3KE)$$G_?%tPWja#!@U'`!!2n/K
E)$)n:UcBQMcC9!Vp8Z!!+YGKE)%=IY7\%q-o!W!A&VO!!+W7KE)&Dk_&p:q0%Dk!A=;'!!2ZO
KE)$*IY7\%o&><&!TiNu!!2ZaKE)&7jFdL6jl1pn!R'\[!!23TKE)%rjFdL6bMn0T!LN#'!!1:
:KE)%>jFdL6Qf<Yu!O^j=!!1gKKE)&?IY7\%Bu#B%!OV?L!!1f$KE)$di.M(2[!76(!ST_j!!-
bPKE)%[4G3\8BK1YF!ONo$!!-aQKE)$!i.M(2P5'\1!QfeD!!-rpKE)#un:UcBP'ho_!Gq7Y!!
0NUKE)%95(in:Cj:U5!@0d\!!-muKE)#u*eXLoC`\60!VnR*!!+GAKE)%:IY7\%qfIJk!VnL(!
!.!4KE)$"I"VJ#qf7>i!H*:<!!+E1KE)$j5(in:noTNb!@N>L!!2fcKE)&DEeFDnDgm?>!VZ);
!!20QKE)&?oRm2FjRRs(!U]H2!!146KE)&-oRm2Famt)b!Sd0u!!/;UKE)%:nq6uDA\`s!!OD3
J!!1c#KE)$`i.M(2Z?V$&!SKYi!!-VLKE)%Y4G3\8A2o5B!O<c"!!-UMKE)$`%YOf_,4L6c!Kh
b_!!-^$KE)#sG_?%tOZnEu!G6S0!!0DiKE)$b4G3\8+s)C;!G3C+!!2m6KE)#tI"VJ#q`9B1!G
?e5!!+<.KE)$c5(in:niDF(!VUhm!!2/,KE)&>qLehLaSLPi!SR=&!!/5YKE)$^i.M(2Z$:p%!
SG,>!!-PJKE)%X4G3\8@Q9#@!O3]!!!-OKKE)$^%YOf_+aAY?!Kb$K!!-SSKE)#r4G3\8@m#DE
!?iM;!!-RNKE)#r^4ZIeA%mTr!F]r#!!0=:KE)$]3.q84Yb$LJ!FZt$!!-L<KE)#q]S$7c@D%6
n!?dte!!-N"KE)$\\:ah_Y[2t_!FVFN!!-JfKE)#q?A&:Z@,?P:!FT/c!!-J&KE)#fi.M(2MYM
i)!QBM@!!*f'KE)%1I"VJ#'R592!K''o!!*crKE)#e*eXLopp>\S!>bH`!!/",KE)&JZ@i2Y(4
:c8!>[kP!!2V3KE)#hIY7\%nT'9_!TNa)!!2*MKE)%loRm2F`U\Z^!K6T'!!/#KKE)$1^k;[gR
dbt1!R6"F!!+q7KE)%AG_?%tbs$d\!AnbK!!/NNKE)$03.q84RN@+^!AkdL!!+ndKE)#cn:UcB
M0ssV!B0G#!!*^WKE)%05(in:2L'lT!Ll9+!!+u?KE)#c*eXLo2BIMO!Vi+:!!*a\KE)&K\qC%
a2gg8Y!>@YM!!,#BKE)&C3eRJ6o6Q&i!TJEY!!26YKE)%kqLehLc2*(n!K$Z+!!0[hKE)&/G_?
 %tm_4>S!Hc,1!!0ZMKE)&/4G3\8FC9b%!P17D!!1msKE)$p0SBE,\f?A'!H]03!!0Y@KE)$p%
"nT]1>mfc!L\1c!!1<XKE)$ri.M(212qmH!LZ''!!.7^KE)%b4G3\8R3%"]!HpGU!!+hpKE)$r
*/":m1(Js;!Hns+!!*[VKE)%/^4ZIe1O+QQ!>.GI!!.:gKE)$/4G3\8&KZT*!I$YZ!!+ksKE)$
s*eXLo&\`nu!AhHC!!.;XKE)$n^k;[g\T!3%!Sk>@!!.+JKE)%`3.q84gn'0!!HKlI!!0VMKE)
$n(k_ki\IO8m!HJU%!!.*EKE)$-E.e2lR(S(P!HW45!!+f6KE)%?SqI(EF#\gQ!P+eT!!.-\KE
)$-%YOf_Et3j'!>)ns!!+geKE)#aSqI(EF1d/+!AU1!!!./4KE)$m@"\L\\@@1l!Sh"7!!.'nK
E)%_S:gkCE>X?/!P"/C!!.'JKE)$m#(usW0Xuc9!LR2H!!.)LKE)$,S:gkCEL_[^!AKOe!!.)"
KE)#a?A&:Z0]%H_!HHtL!!.&CKE)%_>_E(XE0u:Y!OtmX!!.%tKE)$lL4fO-0O082!H?hI!!+c
KKE)$lc@c/uE*.bn!Osb8!!.%4KE)$l7YCaB0J8"Y!H;q0!!.$iKE)$l-A2@"$Li]K!JPoS!!*
FOKE)%,5(in:$9WtA!=Bm$!!*ITKE)#\5(in:n@F8Q!TA?X!!0t5KE)%,qLehL)W68K!KD>W!!
1*RKE)#kE.e2lNBDjo!?*qN!!/'#KE)#k*/":m)@hE#!=="(!!.beKE)#lG_?%t#s<k@!?4.S!
!*BIKE)#l*eXLo$,2&m!?8b+!!,-rKE)%DE.e2lcFef1!BOVA!!/WMKE)%uSqI(E3\Z3e!M(3`
!!,+tKE)%D%YOf_3XgZA!BLF<!!*sVKE)%3]S$7c4)fiQ!?!kM!!/%MKE)$73.q84)'";0!BV9
S!!*rIKE)$7%YOf_#eYfj!?&P'!!*@sKE)$7]S$7c)4lK]!BZm+!!0c@KE)&0\:ah_mp:YI!I@
"a!!0beKE)&0S:gkCH6@k@!PK>'!!1r:KE)%!&;1#a]aTPo!I>$)!!0b;KE)%!"G?aU3FIL?!M
$ZQ!!1AOKE)%"@"\L\3A?*d!M#[5!!.F#KE)%dS:gkCS;r7&!IGZ:!!,(gKE)%"%"nT]3<k-:!
IG$(!!*qHKE)%3?A&:Z3Oj_B!>q>[!!.GVKE)$5S:gkC(lj7L!IL>i!!,*?KE)%"Ne@B5#[W/a
!>s[H!!,+:KE)%"hLkk0GsI#_!PGXi!!1q]KE)$u+G9^q]U4?P!T$S)!!.?VKE)%cN._03GmK'
'!PF/?!!.?JKE)$u!e^OS33\&9!M!DJ!!.ALKE)$4R"PG?S5+_;!I:&c!!0aXKE)$uN._033/3
(d!I9EQ!!*pAKE)$4gk5Y.(f#_a!I<IR!!,()KE)$uc@c/uGbB]i!PDNf!!1q/KE)$tOG!T7]M
*tY!I0ER!!0`%KE)$tKS0=+G_1SK!B=27!!/TBKE)$tfRs5*3)"u*!I2hA!!,&KKE)$t`e4<m(
bUIA!B=tM!!.?4KE)$t:kSfL]I\^9!I..g!!0_ZKE)$t7"bO@GX@&`!B;W`!!.=\KE)$4-A2@"
G\2U/!I-#G!!0_JKE)$t,_Q-uGTqe@!B:jJ!!.=&KE)#VG_?%tK"cm<!<kT=!!*6EKE)#V^4ZI
e%<-t#!J\7?!!*NgKE)%-SqI(E%31$$!=]Nl!!*58KE)#^]S$7c"J18H!=bWR!!+*JKE)%5\:a
h_a'OE!!?EkI!!/+MKE)#n(k_kiNfJbm!?DT%!!+)EKE)#]\:ah_L0fN5!?J\'!!*LuKE)#nS:
gkC%$#u@!?I2R!!*4/KE)#]hLkk0*SuGL!Bi]$!!/[qKE)&!>_E(X4WoCX!M5[3!!1D@KE)$9&
;1#aSrA=&!Bg^A!!/[GKE)$9"G?aU4T^9:!?A=s!!/*bKE)$9Y_2uW*12BZ!KKp.!!,6MKE)%E
c@c/u4cG$o!??iI!!,6;KE)#]>_E(X*8H2I!=V_V!!,7<KE)#mc@c/u4jJ]\!PY4[!!1tZKE)&
AY(QcU^6"!J!T-S(!!0fiKE)&17YCaB^4_.>!PX/=!!,3TKE)%E=G-YTcRskN!I^Vo!!,3DKE)
 %E9S<BHI?9*^!PZd2!!/Z\KE)%$LkGa/4G8@f!I]WS!!,36KE)%$JqO+)**@jo!KJdc!!,47K
E)#m9S<BHIFs2Q!BeSZ!!+'/KE)%$b_,rs4N<$S!I_t@!!*K\KE)#mDM.uj4RRk&!IaBh!!0f1
KE)&1/;+!(^.<nW!T,5W!!0f%KE)%e6A,=>4A^\2!M1iq!!.JoKE)$88;$sDSgK*j!IVtA!!0f
GKE)%#`.S*k4@4]$!IVb;!!+&jKE)$8CkMch*%$==!IX6e!!,2oKE)%#k(E^8^*nX7!T+ZG!!0
eZKE)%e,(ops4=Gj_!M1'[!!.I\KE)$8,_Q-uHt7m1!B_QZ!!.IVKE)#m(5)Yg4>qim!IT'D!!
0eJKE)%e&qg5c4;<GK!IQ_W!!,1pKE)%#15#W.!ka0d!<SjG!!*;6KE)%*?A&:Z#+U>H!="R;!
!*.-KE)#WhLkk0%^:Td!Jap5!!*RsKE)%.:4rTJ%ZH&@!=jj;!!*:/KE)#_gk5Y.##9gO!=mD.
!!+.6KE)%6=G-YTa0('q!?R>U!!/-SKE)#oLkGa/O%+d&!?QoI!!+-mKE)#_=G-YTLG"5[!?Tm
H!!/-uKE)#ob_,rs%Ru*O!?T76!!*9VKE)#_DM.uj*q"[]!M<2A!!1EIKE)%F8;$sDc_c?q!M;
c5!!/]YKE)#o:kSfLO">qa!C"k`!!/^.KE)%6-A2@"50/BW!?OX^!!,:%KE)#o6A,=>5/MsQ!=
gZ6!!+-WKE)#_-A2@"54!q&!?Pj+!!,:GKE)&1W.Y-On(*-l!T0]+!!1uOKE)%F."hR$c^'4a!
P`<$!!/];KE)%fA:sp`T-Apg!P`)s!!+,hKE)%6(5)Yg5%oTL!?NM>!!.Q4KE)$:A:sp`*[67;
!Ij*_!!,8mKE)%%ie.:4%Mj]t!?O.P!!,9,KE)%%p4NDHhirco!T0&n!!/]+KE)%f1kYi0T+Ze
W!P^CC!!+,TKE)$:1kYi0*YO,+!If-D!!,8=KE)%%EeFDnhhm'e!M9^P!!0hQKE)#o$A8B[4rT
(S!Id(_!!*1,KE)#T:4rTJ#?ZWZ!J@P.!!*<uKE)#X7YCaB""o6,!=*Lq!!*U,KE)%.XFpQS%n
M?R!JdP*!!*TuKE)#`6A,=>#:tN.!=s""!!*<OKE)#`AqU-bO/R^3!QWcE!!/.VKE)%6U4`LI%
k*)2!Jcto!!+0TKE)%6[Y+V]+(U$)!=pB-!!+0NKE)#X(5)Yg%lT(@!?ZK<!!1EqKE)&!dY%T$
O-G:t!M?`P!!/.DKE)%FZ@i2Y%hsZs!?X.O!!*TCKE)$;FG'Vp+#8KL!C(UX!!1EgKE)%6MM(s
1T:1E5!=oNj!!+/[KE)$;3eRJ6"0@.U!<]3P!!*>'KE)%*eq=#(#Gd"Q!=,?P!!*1fKE)#X[Y+
V]LX^tW!Jf*V!!*=hKE)#`["JD[#Ej`?!=uJh!!1.*>p*F91G<6^FDkW&FE;dO@r-:/FCfK6P!
5%%P!5%%06WLBOu$<u&UT<6I?K5+L]WAEP,4<qH\aA=WI9q$?'711@YbVZWJD.L9RW'6Ou$TdD
/`onFF,Z]GA1TD&S$u?L_5dNL_5dNL]NY>Ou%N50628NA;Ch-P&,pdOo^@NOo^@NOo^@OOo^_%
I?IS`E+sQ<+ED[?A0>oUCm#*f1Pc$e!HNtsP,Wd]Bp(ZC1MMXIP%odQP!+.FCh%Z3BnukS;MZB
WCiY=4P,X6>P#@GDOu"b3@s9&0L]`f<L`V^qA!-kK!KsFF1OYEcBnukSC5;nR4aShu@s9&0L]`
f<L`V^qARfOfG%GKG"-RJ`!HNtsP,X6>P%p-\Ou"b3@s9&0L]`f<L`V^qEejaZWJCY>;N_'D1O
YEcBnukSC5;qS4aShu@s9&0L]`f<L`V^qA!-kK!KsFF1G<cYG9CUU"-QQ<*g1>N@r,_"ASd/)P
&-9^EejaZWJCY>C6AU\1OYEcE+sQ<+ED[?A0>TLCg2\rL]N;4L]N;4L]N;4L]N;3L]N;3L]N;3
L]N;3L]E52Ch%Z3BnukSC1DI0DdmF&F*i=u8Rlsc+CcO.P&+Wk9RCK0"-RD/GB@b4BlnECI?I0
MP"B/%D/`onFF/f      EI=$!  EG9CU  U"-RD  /G  B@b      4BlnEC      I?I0X!J
gc4!Jgc4!Jgc4!J        g`3  !Jg`3  !/LW2  !J  g`3         !Jg         `3!/
LZ(P#YeNH$tiH4?  P9;AS  s.  SEb0-   *@<?  O(  GV=  #MG]P  !HB  m=\PE  +sQA
+ED[?A1qn9G^1EP  05+p2  B4u  B0E    em8L  2K  E_[  D09Z:P  &)  dqBk2=  !+E
D[?A;Ed>2D8ufF<  GL@FD  5Z2  F!*  Y 1+C  oD.  FC]  E#GEQn  u0  61WAD.  .O,
Bm>e?Ou[rR%[&V$  E+EQ;  0fP  7TP %6  4g  CG'  +8/  p(ZFEd  ;,  :Ecc5;  /n0
$=E,Zq1AS,XoATD        @'Df  p)1 AW  h2  !3A  5Gb         FDt         YuCM
@[!P.H"'F`V,9E+         *6lB  l  7R  3P  #M~>  
% uk.co.terryburton.bwipp/pdf417 0.0 0
%%EndData
%%EndResource
% --END ENCODER pdf417--

% --BEGIN ENCODER micropdf417--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: MicroPDF417
% --EXAM: MicroPDF417
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp micropdf417 0.0 0 0 0
%%BeginData:        333 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  05YE5E  c5  o-Ai)5  $H\
`B!23JD%DfBf4Df  0WZ5*  @]T  @UX  : eDe  *FB  5*@  ]TA8c@  -A  9)+&+D  ,%u
F(LLj04Sp:F_u#;  L]ESo  061  uTF ,0  gZ  1G<  ceG  AVJ=FG  L!  ]1G<6J  @3B
/jCia0N1G<6J@N]        8kCi  a0N 1G  <c  WG9  CL+         Cia         0N1G
<]UEcYe7AmoLsAW         eifE  -  ,f  4D  KCu  E06        ;5UB        l7R*H
#R>X4aVtcOu8C3D  fBf4Df  0WC  P  ,i2 'C ia0N  4aW  >WI?IQm30I  a6V33Qn!BlU
*FE2M8P!+/T/Wr;  \FcnqO  1OX  V 5/Tc    #UAW  eit  P#ZpnAWe*t  3A5;iFD5Z2F
-8_M1OYEcDfBf4D  f0WCOu  %NL    8M=R    lCis  T4F  !+t2CisT4F  -8);1G<ceGB
4mIDg-8c/<VeBEc  6/=F_   l.BE   c6/=F   _l/_  09S  ,$@ps^;Eaa  /7FE2M8Ou%N
L<,c8dF(K\OD0'>         4@UX:   eDe*F  B@ZmR  N1G  <L!!0T-I@<  ,jrA7^+J!FC
qKH]g@*F(^Y"C6C       cDH'2WO  Oo^@>O  o[4NP  !5$  bP')pIL]E5  5P"_#iD0'?Q
5&,lSP,XU.P'E-LP%'4LP,X6>P!5%&I=%,:D0'?Q5&-6EP'N4"C6ATNC6CcD1G<3GEas#uAKYi
2B8?P&P"_#pP!FGY<IL$AI?IQM@<[&OA79RiGB4m9@<,jrA7^p5OpR:-0564BOu"b+L]ESoHYF
U3@<,jrA7^p5P!+/T5^eep04T2K@UX:eDe*E%BnueQ!Jgi@9Tgri1Lsp9@s;u:C*7#1P'AWo+D
HW7Oo^_%05;VEL]NY>Ou%NLAM7S&FCTN9+Cno&@s<!M!,@ZjOu%N504J@1Ch7K,@UX:eDe*FB@
ZiNV@<-0qDMSL[C5;kQ4aShm@<?"'F!+q#Ebo<)L^'#?L]rrXL]NY>OpR:-A79RiGB8Q?L'*s/
G^XolA79RiGB4m9@<-0qDMSL[;MYL>CgpgnCh7L?#*N_a!Jgc>!KmbP1Lsp9@s<!M!/:T0P'DD
<<JUX2!FfJXCh7L?#*Ml?!KsF/056S5Ou"b.F(025>9IB`Eas#uAKY]C#*NeY"-Q?)I?I0-Ou"
b.F(986>9Id(@WR\6P')pOL&h:;Cm"g^5(in:!!&0uOo^@@H]g@C",)hPP!4U&KT]5]P(R&'1G
<Qc@WNYr+C\c"@rGmh+DHW9P&,pVOo^@@P"^4NP"ArB1G<Qc@ribs+Dc+.F-6TfFcnqC!<A:!O
o^_0KE)#Q!0V/]!Jgi)OuS0uKT^)55)'/mP#?^kK3aWr04T3IL]rqJOu$oq@rmG+P"TY5@rmG+
P"UN14HaND!Fp=pL]iM8P$!G@KT^)5G_Q<RP#?+;@rmG,P"Ur=D0'3.L]ET2L&uphCm"g9F(99
I!Kp*1!BcN]Oo]':F,0pS!g6Z?",)hPP'D]`KT]5LF(99I!g63>!GumfF,0gZ98F:FCm"g9F(9
9I!Kp*1!eHMNOo]E@@rmG-P"UN14HaND!Fp=pL]WA6P$!G@KT^)5G_Q<RP#?+;@rmG.P"Ur=D0
'3.L]NZ3L_Q"gOo]E@@rmG-P"UN2JWai4!Fp=pL]N;5P$!G@KT^)5G_Q<RP#?.<@rmG-P"UTFP
&-9^@s<!M!/L`5s,r.l",)hPP'CMGFCTN9+DHW8P&,pTOo]':F-:fsP"76HASiQ!@<-0qDMSL[
C6CAnASm5'P&5PV@<?"'F!,"%FCTN9P%&HCD3Cl&+C\c"@rGmh+C\c"Ch7K,Eb0*NWH)QeP"^4
NP"ArBH$tiT@q/tp04\L5@s;u:>D<6IA79RiGB8oKP'(&n1OYEcI?IS`D.Rg0Bk)3,>9I.+!Jh
,>#D`D:!/Lqe+BsX&L^o4GL^8e:L^79/>DN<9&Vp[J,_uGV,[DNsL]N;GL^8eML]E5E>p*@-!J
hSK#`&eC!/M4m+BsX&L`D3VL`)!KL`p%H>DN?:#`&bB!Jg`3!F6gPL]WA?L^Ak<L]E5;>p*@-!
f.>B$&AkC!/Lnd+BsX'L_5FMLa7cVLa67K>DN?:'Sm-Q'8QXE'3u_bL]WAKL^f.HL]E5C>p*@-
!f.bN%u;0\!/Mk*+BsX(L^&YDL]N;4L]Ld(>DNB;#`&tH#D`V@#@/HVL]`G?L_,@QL_#:P>p*@
-",IAA&r7E])2K/9+BsX(L_#:VLa@j'La?=L>DNB;'SmZ`!Jh>D+^H3pL]`GOL`hKSL^AkL>p*
@-",J(U-AWCm*Jc"I+BsX(LaIp/L_#:`LbE$V>DNB;/;Q';!JhVL0jPo+L]iM:L^8eiL_GRp>p
*@-"Gd8<%#=q?!Jgb^+BsX)L^8eHL^/_@L^.3.>DNE<$A]7L%u:aP%p^;^L]iMBL_>L]L`)!d>
p*@-"GdSE'o4/l-&<jQ+BsX)L_PX`L]N;DL`p%H>DNE<)MfMl!Jh&<&R?M`L]iMVLaIomL`M9t
>p*@-"GeC\/;Ogm+,DRU+BsX)Lb+?;L]N;LLbW0X?'6us@q/qaATVs,@ribs+BsX'L]rS;LaRu
YL_F&:>DN?:#)ED<!Jg`3+^H3pL]WA;L]rSWL]E5>>p*@-!f.,<"c*G?!/N%/+BsX'L^AkAL^o
4@Lb;sU>DN?:$A\nB.u41](L8.fL]WA@L^/_ML]E5f>p*@-",I)9"GdGA.u5!I+BsX(L]rS<L]
N;TL^dW4>DNB;#)EJ>"c+I\&R?M`L]`G<L^/_HLbFQ'>p*@-",I5=#Da+N!Jhn)+BsX)L]`G9L
a\&nLbrB[>DNE<"Gd5;.u5!t"'m$RL]iM;L^&YfL`2'R>p*@-"Gd8<#DaR[%Yu`C+BsX)L^/_A
L`M9XLacUP?'7!R@ps^;D.Rg0Bk)3,@q/qaATVs,@rmehI?IP_F`MDEF!,LAGB8p'06LcCCi^_
/DesQ5DKCss0564BOu%G<D'3\,FE2)*F!,1[99M(a@j#WE!0U!<1G<bkD284U99M(aCERJM!g6
3>1G<cWE,6Y6L]`f5Ou"b3@;o^!D28=X99M(aEa`p-+Dlo<P"Uro05b9DF!,KGA!1YDP,XU#05
kW7Gp%3LF_-^lA79RiGB8pVDI[m3P#-KYDeid,+D,%uF(LLjI?IQPEc6/CL]ETTF`MDEF!,LdD
3>$K05kW7Gp$^-Cia0N1OYEcF^o?+F,0gZD09?,Ci^_/P&6?bHS9;Q@<iu-@;L!rOu%NL<,ZP\
H$b]>I?IP_Bcq,G!KmJH1OYEt05VhB@<?"'F-:!q1G<Vg@j#fTCho35Ou"b$GB4m:+EEW]L]NY
>OpR:-@s<!M!+]M[@s<!WH"2&>+Di6*+Dr<=P,We_",))cK3aXc@s;u:DBN.+CO:j;I?K5=!*t
b5062,BCi<r/>DN<7"/("(3/@["Ck`%cP%oE.K3aWr062,MDeFe,Too_F1Pc'f!JU]LH]g@/F(
&m'B9GHA99MJZF)5c-L]`G6P)#3FI?I,SEcZ2?De+3N!g4FW!0V2^5)93%D3>$KEcZ&8B9GHA9
9MJZF)5c-P!5%%Oo^:>TTX&1F(&m'B9GHA97;/MFcpm'!.C#1I?G)'1G<6VAS,Oq+BsX&CO:j;
I?K4gOu%mpL]M:<056S5Ou$TdAS,Oq+DDs.De3NmF!,1Q!KsFF99OO6L]N[<M#W83HS9,s5*@^
3De3NmF!,3?@rGpjAof)0L]N[<P"T;'AS,Oq+DR'4EcYZ*DeC2,P"Th:E,ol-Oo^:>Tos/RG^Y
`G@rGpjAoib.@rGpjAoib.P"Th:@;Kjp+DI!3EcZ2?De,#UI?I,S@rGpjAof))De3NmF,0g+De
3NmF-:!g!KsFF9Th2ADe3NmF-:!g!KsF<reLQ$@rGpjAoj,!L]W_WP"UN3ToqU&WKMLSP":B/L
]MCL!KsF/06E@@@s<!W5*AQKGB4mEP"Ur=L'+-4C6CB/!/LYkL]N[<HS9,s5*@^3GB4mE+DR&?
@s;u:DBN\W!Jgc>!Kp*1"/0fZ@rGpjAof)1+DR(=L]N[<P"UsSL'+-4C6GQZ!JU]MP%p/)I?I-
LP"9JH!H'#qOo]om3+I/RP!4U&Tjr:fL]rV7P)#2nP,X0<Tos/RG^Y`G04T3I+CfV:L]Cq/F-:
!g!KsFF9Th1b@r-:/FCfK6+BosmKE)&'^k;[glL9H,!VLhn!!1U-KE)&<G_?%tofe$/!N<ee!!
1SgKE)%O@"\L\:dB[6!N7]*!!,n=KE)%T^k;[gf'n=m!UG,d!!01ZKE)&(G_?%tlTTt%!Ed-j!
!00?KE)$T@"\L\?,2*n!NtpF!!1]!KE)$Xi.M(2Y'>U"!S9Mg!!->DKE)%U4G3\8?LWUJ!O$m(
!!-DNKE)%V5(in:?[RM,!VQ;B!!1O+KE)&;G_?%toY,tY!MmMa!!1MeKE)&;4G3\8UgSiU!R`r
\!!,VUKE)%K0SBE,dN!o?!D">d!!/l4KE)$D&;1#aVVm+-!Rl:H!!2>uKE)$H^k;[gVJq1g!Rj
/a!!,c$KE)%M3.q84diO/B!DG2#!!/r:KE)$Ji.M(2Vg*jp!Rnc9!!,i6KE)%N4G3\8:,mn,!N
-ul!!,l?KE)%N^4ZIe:HX:1!Dabi!!/h0KE)&#E.e2lke)QK!MWtT!!1J,KE)&:SqI(E6pQD*!
MV9$!!1IeKE)$@+G9^qU)8O`!CRKP!!,InKE)$B^k;[gUMtkd!R\Q5!!,PsKE)%J3.q84d@Q!k
!Cebr!!/i7KE)$B(k_ki7LXqM!Cq*^!!/k-KE)$C3.q84URm,=!Cn,_!!,U&KE)%H@"\L\d("`
/!U*jC!!,DOKE)%H0SBE,d%#ah!C@o^!!/c1KE)&"Ne@B564eeM!MKpT!!,ClKE)%H#(usW6XY
QI!MR#V!!1I'KE)$?0SBE,Tq$c9!CI]W!!/dRKE)$?%"nT]6O&2D!MSA'!!,HIKE)$=5_K+<TW
j(L!RP))!!,A.KE)%GR"PG?cq]5o!C79M!!/aOKE)$=#_W0YTSA+"!C6jA!!,BiKE)$=R"PG?6
&^Hs!C3<2!!1G!KE)%G9S<BHTLOS7!C26i!!17#KE)&7G_?%to"KbW!L1BQ!!15]KE)&74G3\8
P[K.E!QmBT!!21&KE)$$5_K+<PV@aj!@T(D!!/DDKE)%rG_?%tjh?BJ!A)$>!!/C)KE)%r4G3\
8/7=,2!L>]u!!+W)KE)$((k_ki0&VB_!LJ%a!!19WKE)$*E.e2lQTTp$!A6?b!!+\lKE)$+G_?
 %tQbJ+Q!A?Qg!!+aeKE)&,^k;[gm;R^Y!VX0Z!!1e]KE)&?3.q84p7?p;!OP+F!!1e-KE)&?*
/":mZlk#%!SSBD!!2HsKE)%[&;1#ag'iW7!Kt6O!!12\KE)&6]S$7c[_ROr!KpiD!!12$KE)&6
SqI(E[U=ag!S]Se!!2JYKE)$h5_K+<,Tqa?!Kn:Q!!11OKE)$h+G9^q[MXYt!Gi=#!!+F^KE)%
:E.e2lah39,!H,]+!!+ESKE)%:3.q84ae".c!H):u!!0PgKE)&-SqI(EDD6_D!@AY:!!-sSKE)
$#E.e2lPIuPK!H2q1!!+H,KE)%:SqI(ED`ECM!OnYR!!.!XKE)$#]S$7cDnL`'!@OIl!!.#0KE
)&+@"\L\m'q]K!VTiQ!!0AjKE)&+0SBE,m$r_/!O<i$!!1aiKE)&>Ne@B5Z4MZh!SIm7!!0A2K
E)%Y"G?aUO^NhB!Q_d(!!2.eKE)%Z@"\L\OYDFg!Q^da!!-[sKE)#s+G9^qfpm]q!Q^:S!!-[S
KE)#s&;1#aOUQmC!G2mr!!0D7KE)%8#(usW+p<Q!!@)!*!!/4lKE)%ohLkk0B4-Am!@':O!!/4
PKE)$c0SBE,Z^c[K!KiCq!!-^LKE)#t%"nT],6if$!@,+-!!/5=KE)$c\:ah_,FjDe!G@pU!!+
=)KE)$cNe@B5BAS:A!O4nC!!1`VKE)&>>_E(XYon]"!SEcm!!2F]KE)%X&;1#afSkI`!O2o`!!
1`,KE)%X"G?aUYl]RY!?j^]!!/1cKE)%o>_E(X@mG\I!?iS=!!/1KKE)%o:4rTJ@j$F)!O8#F!
!1`tKE)$_&;1#a+UE`$!K`%h!!-R8KE)%XL4fO-@g%Gb!?n\#!!/2:KE)$_Y_2uW+ddo_!KbT[
!!-SsKE)%Xc@c/u@uQ'@!?m2N!!-SaKE)$_gk5Y.A'T`-!O/5M!!1_SKE)&>/qa3*Y`OM<!SC)
!!!0<[KE)&*7YCaBY_7Z0!O.0/!!+48KE)%7=G-YTa=`,G!F_XS!!+4(KE)%79S<BH@??-B!O0
e$!!/0NKE)$]LkGa/+G>CJ!F^Y7!!+3oKE)#qfRs5*@G$55!Fa3*!!-NJKE)&*/;+!(fHu7O!O
+nD!!/04KE)#q8;$sD@*"!$!FWj!!!-KEKE)%1^k;[g`GgJ1!TLbF!!.sbKE)%l3.q84'L7<O!
K&Ra!!1%YKE)#e+G9^qMAV!H!>H)u!!*c>KE)#g^k;[gMf==L!QD^)!!*jCKE)%23.q84`L___
!>[AB!!.utKE)#g(k_ki((>ir!>f^.!!/"jKE)#h3.q84Mk5S%!>c`/!!*nKKE)#hSqI(Ec!Z2
)!TpnF!!2[tKE)%A5_K+<bqOeN!Too*!!/N2KE)%t(k_kik)P)p!LaRQ!!1=QKE)%A#_W0Ybm&
h$!Jt3;!!1$JKE)&4?A&:ZRp^mL!JrL`!!1$.KE)$25_K+<&g2i-!R7-f!!1#uKE)$2+G9^qRi
$eY!Jq5<!!+thKE)#c#_W0Y2@+s9!>Ajo!!.qdKE)%khLkk02dh:=!>@/?!!1@$KE)$30SBE,S
",-3!Juhi!!,"qKE)#d%"nT]2[k?>!>Dtr!!.r5KE)$3\:ah_':a^U!B6O%!!*anKE)#dhLkk0
2r92f!Sp"o!!2MlKE)&I>_E(Xh&q@N!Uc>.!!2ghKE)&/&;1#amYlf!!Sn$7!!2MBKE)&/"G?a
UR6ZE*!R.d$!!24eKE)%b5_K+<R37._!Ue`r!!24WKE)%b+G9^qh3`iq!Ue6d!!0\CKE)%@#_W
0Yb_CcN!P8Vj!!1o1KE)%@!e^OS&O;!L!Jmt5!!1#CKE)$/5_K+<&Kl`,!Jm+r!!1#5KE)$s5_
K+<1E_>N!L]=.!!1<hKE)$s+G9^q]9n6O!Su%S!!.n1KE)$s&;1#a1C/X6!L\[q!!.9LKE)#b!
e^OS&[6og!JoNa!!+m[KE)#bR"PG?LsCYR!I(c$!!+mCKE)%@c@c/uGF4$`!P?X1!!*[dKE)$/
L4fO-&_r$>!AiMa!!*\WKE)$sgk5Y.1X:XR!Sj?$!!2LiKE)&I/qa3*glR0h!U`X7!!1l2KE)&
@7YCaBgk:=\!Si9[!!/I[KE)%s=G-YTjt;;e!P+kV!!/IKKE)&@DM.uj\WDIE!SknP!!1;5KE)
 %`LkGa/R"U+m!P*l:!!/I=KE)%`JqO+)&>4[V!Jjj2!!1"jKE)$-TS*:G&<MPF!JjF&!!./6K
E)$-OG!T7R*:3`!Jj3u!!./&KE)%`b_,rs&;5]:!HX'M!!+g-KE)#aJqO+)0nP&Y!>*n:!!.mn
KE)$-fRs5*&Boe-!HZnH!!+guKE)#a`e4<mF3K:;!AVTI!!*Z!KE)$omXtQ@ge`Y(!U_Ll!!1k
GKE)&@-A2@"gdHeq!Sg"p!!/H`KE)%s/;+!(\Bom/!LQE2!!1:jKE)%_aFjNogh)3>!P$($!!/
HRKE)%__Lqmi&5\#[!Ji:[!!+e#KE)#a8;$sDLaIcT!HHJ>!!+dpKE)%?AqU-bEQEe5!P%9F!!
*WtKE)$m`.S*k0Z&JC!HGu0!!+e?KE)$mm">?>ETVoS!U^_V!!1k!KE)%s(5)YgQm@=b!LP'a!
!*WZKE)$,BS6?dE9MrT!>$H.!!+c_KE)%,@"\L\$:'7E!JN4\!!*ELKE)%,(k_ki_N'9L!=BBk
!!.c^KE)#[#_W0YKa*21!=N:g!!.e`KE)%ihLkk0$S[56!JR%s!!*HEKE)%,Ne@B5$Oh[g!=K*
b!!*J;KE)%,hLkk0$_2kM!=Op@!!*JaKE)%45_K+<`it*r!TRF<!!/'%KE)%mR"PG?N=^aC!QL
(O!!/&bKE)%mL4fO-N<Fn7!=;#E!!.bWKE)%i>_E(X)aK&V!=9m%!!1*pKE)%i:4rTJ)^'e6!K
EJ"!!1*bKE)#l&;1#a#mc1a!JH2\!!+#EKE)%4L4fO-#m,b[!=>u`!!.c.KE)#lY_2uW$(-AG!
JJaO!!+%+KE)%4c@c/u)iTFM!==L6!!*D]KE)#lgk5Y.$-n2(!?9=;!!1B<KE)&9=G-YTo<*`H
!R?d[!!27VKE)%uLkGa/k=1+)!R?@O!!1AsKE)%3TS*:G``Rlo!M,m:!!/%?KE)%m9S<BHSWJL
)!RAoB!!1)/KE)%DLkGa/N.cia!M+ms!!/%1KE)%DJqO+)#bZhN!JFR.!!*t1KE)#YOG!T7`bp
G0!BZs-!!*t!KE)%3b_,rsKLUUp!BZBr!!/Y7KE)#YKS0=+4,AOi!?$QD!!*@WKE)#jJqO+)#h
Xe1!JG?D!!*tiKE)#Yb_,rs44o2d!?'+7!!*AFKE)$7b_,rs)9.=0!=8+H!!*u*KE)$7mXtQ@m
neZ;!V`[K!!2OZKE)&IVM"pMmmMg/!Ui@.!!1AAKE)&9/;+!(hU$oU!UjiX!!270KE)&0aFjNo
mq.4Q!T(bJ!!1A3KE)&0_LqmiN)50-!QH[D!!/V:KE)%38;$sD`[6?=!PQj5!!/V2KE)%uAqU-
b]uYj,!T)sl!!/$FKE)%d`.S*kSAKpZ!PQ@'!!*@%KE)%+/;+!((smp9!=25L!!.a"KE)$5d"D
B"(s%@1!K:WD!!.GnKE)$5aFjNoSE>J)!=2#F!!.GfKE)%dk(E^8(rCq+!IMb<!!*@AKE)#im"
>?>#\J_i!BKM"!!*r!KE)%"m">?>3Tbtp!INs^!!2O:KE)&IQ@o5=mj*Pd!Uh4c!!1@nKE)&9(
5)YghIqQB!Uhq"!!1qeKE)%u,(opshI;-<!K8F[!!1(TKE)%CBS6?dN$O&V!PIWL!!/U#KE)%3
,(ops]]=_G!M!VP!!0alKE)#Y."hR$KGK4@!>oL'!!/$:KE)$4k_&p:(hA:"!=0m&!!.B/KE)$
4jFdL6(h/-u!I<aZ!!,(=KE)$uie.:4(j:Q4!I=Bl!!2O$KE)&01kYi0hD0`a!Lu!"!!0`SKE)
 %cEeFDn(c6mG!B>1S!!.?:KE)$tnq6uD"[I_@!<jU!!!.\=KE)#V&;1#a"UKb]!<iUZ!!*8-K
E)#VR"PG?"cS*7!<n42!!*8YKE)#Vc@c/uL7j2"!JZ\h!!0u2KE)%-LkGa/_a]:Z!JZ8\!!.h+
KE)#UTS*:GJlm[+!=b]T!!.i,KE)%)9S<BH%?Q5C!J\gO!!*ObKE)%-`e4<m%>9B7!<e"-!!*O
\KE)#UfRs5*Jo65A!=d\7!!.iBKE)#^b_,rs"NH)p!=d&%!!*5jKE)#^mXtQ@a&%Eh!QR`a!!1
,.KE)%n6A,=>L/<O'!KPN[!!1,VKE)%j-A2@"NlZkR!QSf*!!/+uKE)%-6A,=>Nl$GL!<c5P!!
*MTKE)#U8;$sDJgQ-N!?KO?!!*MLKE)#U7"bO@*QWm6!=Zo"!!*3hKE)#n`.S*k%)RYt!<d4l!
!*MpKE)#UAqU-b*UJFZ!=\+D!!+,&KE)&9W.Y-OkG3b2!U$21!!1+gKE)&!BS6?dkI-$D!RG;0
!!1+aKE)&!@Y=^^L+%]T!Q,\+!!/*nKE)%n2M;&2T'1h-!KL]D!!.fuKE)%EjFdL6NadYA!M8;
(!!*3NKE)%)(5)Yg$tt:o!JWLc!!+)'KE)#]A:sp`"<rL!!BoY"!!+)#KE)#]@Y=^^4lh7r!?C
*P!!*3\KE)#]G(]hr*;5$c!Bp.0!!2iDKE)&IdY%T$kELW"!UmCK!!28GKE)&AZ@i2Y`tX1,!R
ETU!!1+QKE)&1FG'VpcSC.R!T.pN!!.fgKE)%51kYi0L(].>!M4Cd!!/*8KE)%eoN`SDKE)&G@
"\L\qRD1Y!U;q'!!2aHKE)&LS:gkCl6(`[!VI:_!!2qVKE)&<&;1#aoaHKR!U9rD!!2`sKE)&<
"G?aUlX5AG!VNsU!!2rQKE)&(5_K+<lS*tl!VMt9!!1XnKE)&=(k_kioo=\*!S.g8!!2BoKE)&
(#_W0YlNW"B!S.C,!!1\ZKE)&=\:ah_p"k?%!Nn\@!!1\*KE)&=S:gkCXrrAt!S80A!!2DGKE)
 %U&;1#af*m<4!Nl]]!!1[UKE)%U"G?aUY@*"`!S=i7!!2EBKE)$Z5_K+<Y:tV0!S<ip!!-CKK
E)%V(k_kif8bLa!F?=j!!083KE)$Z#_W0YY6KX[!FK5f!!0:5KE)&)hLkk0?SI-5!O&#H!!-FD
KE)%VNe@B5?OVSf!FN?i!!0:[KE)$[S:gkC?]Kd>!U2k&!!2_rKE)&L>_E(XkobWZ!VDb4!!2p
kKE)&;&;1#aoSeG'!U0lC!!2_HKE)&;"G?aUklQM<!Rj;e!!2>gKE)&Fgk5Y.dia;D!U5u)!!2
`;KE)&%&;1#al&:8q!Rh=-!!2>=KE)&%"G?aUdfP1&!N/29!!1QQKE)&;gk5Y.V]^Wm!RmEh!!
2?0KE)%N&;1#adu8q[!N-3V!!1Q'KE)%N"G?aUVZMMO!Dbt6!!0"%KE)&%gk5Y.:EY;j!N2<<!
!1QoKE)$K&;1#aVi69/!D`uS!!0!PKE)$K"G?aU:U#KP!N4_+!!,l_KE)%Nc@c/u:Q0r,!DeH'
!!,mNKE)$Kc@c/u      kb*S/  !VBKI  !!2pK  KE  )&:      OG!T7o      Lso<!U,
>m!!2^]KE)&:KS0        =+k  ^nHf!  R[Qn!  !2  <9K         E)&         FDM.
ujd?'"]!U.a\!!1  K'KE)  &:  `e4<m   d=d/  Q!  RZL  P!!/j  fKE  )&#fR  s5*k
jF*(!Mba0!!1KkK  E)%JL  kGa  /dD    gh>!  Mb  =$!  !/jHKE  )$  CTS*:G  UY(
5"!R^=g!!,TOKE)  %Jb_,  rs7  u2f  u !Md  Yf!  !,T  CKE)$C  Jq  O+)8(`  Ip!
Mf(9!!,U6KE)$C`  e4<m8  +)$  1!U *@  5!  !2^  CKE  )&:8;$  sD  oHo4k!  U)q
)!!2:MKE)&"d"DB        "k\P  nP! RS  o@  !!2  :qK         E)&         "`.S
*kd)(G9!MRkn!!1         I5KE  )  %H  aF  jNo  d,o        u]!M        RGb!!
/e1KE)$?d"DB"U$  RF4!CO  q]!  !  /eU KE )$?`  .S*  k6c+KV!CQ4  ,!!,ILKE)&:
."hR$oG3)[!U(e^  !!2:-K  E)&  " BS6?    dkVe  (o!  RPA1!!1GUK  E)%Gk_&p:cu
t'B!MJM,!!/bPKE  )$=k_&  p:T    _=$=    !C>e  "!!  ,CFKE)&:'S  HGekRrOK!RN
ZV!!1G%KE)%GFG'  VpTQ5   \c!T   cS"!!   2YpK  E)&  K>_E(XjWK3  V!V2V2!!2mj
KE)&7&;1#anr/5%         !TaT?   !!2YF  KE)&7  "G?  aUjT:)8!R!  `]!!22cKE)&
Dgk5Y.b92H<!Tf]       %!!2Z9K  E)%r&;  1#ajc  "im  !Qtb%!!229  KE)%r"G?aUb
6!=s!LH')!!19IKE)&7gk5Y.QQUq]!R$j`!!23,KE)%>&;1#abD_)S!LF(F!!18tKE)%>"G?aU
QNDg?!A?]k!!/FjKE)%rgk5Y.0-GoJ!LK1,!!19gKE)$+&;1#aQ]-Rt!A=_3!!/F@KE)$+"G?a
U0<g*0!LMSp!!+a?KE)%>c@c/u08tPa!AB1\!!+b.KE)$+c@c/up7R'=!W,uP!!-m)KE)&HOG!
T7qb2YC!GV=^!!2eLKE)&M7YCaBB`*M`!VV2"!!2eFKE)&6TS*:GnlUPF!Vn@$!!2J[KE)&6OG
!T7qeh&e!UYu%!!2f;KE)&D7YCaBm>-Dq!T\oe!!2J?KE)&6JqO+)m=Kuk!Qh!f!!205KE)&DD
M.ujgRs3"!QgFV!!20)KE)&-OG!T7mEC4`!T_7R!!1i1KE)%pKS0=+gOt4[!QfqH!!1i+KE)%:
TS*:Gak27H!T`[%!!0R%KE)%:OG!T7aioD<!On/D!!1iuKE)%p`e4<m[to\;!L&1i!!0Q^KE)%
:JqO+)[t985!@OOn!!/;9KE)%pmXtQ@DkMa`!@Nt^!!/;-KE)$kOG!T7\'0L*!L(NV!!."oKE)
$#KS0=+DhNcD!@NJP!!+J"KE)%:mXtQ@DqK^C!@Q*E!!.#^KE)$#`e4<mDoRG1!@R;g!!2diKE
)&M/;+!(Ab^oY!VT';!!2sDKE)$`r.G%Np-aQ6!G$Y4!!2d[KE)&6:kSfLngoFo!US0d!!2.OK
E)&D-A2@"m)Xh[!VU,Y!!2H)KE)&66A,=>m)"DU!Q`W@!!2.sKE)&+d"DB"aN0#7!T[jG!!1co
KE)&>k(E^8fu/OD!Q`-2!!1ciKE)%8d"DB"aR"Q[!OL.+!!/5'KE)%ok(E^8ZcIe"!SQUg!!0F
EKE)%8_LqmiZbh@q!@,sE!!/5KKE)$cd"DB",KPN<!KlMt!!-`RKE)%Zk(E^8B>fH'!@,I7!!-
`LKE)#tm">?>BC(9O!@-`[!!-`pKE)&H."hR$q\Fhb!Fkt[!!2d=KE)$^IY7\%p*,.i!TYY^!!
2X+KE)&>BS6?dp,7R(!UO?M!!2.)KE)&>@Y=^^aCp5,!TZ.l!!1a9KE)%oA:sp`f]7\c!Q\`'!
!1a3KE)%7k_&p:aEE4:!O:jA!!1aGKE)%XjFdL6OQ(on!O:X;!!+8,KE)%7p4NDHA*ARG!?pNW
!!-TjKE)#rie.:4A)`.A!?q/i!!-U'KE)&H'SHGe@=Ek0!VR.Z!!2-pKE)&>1kYi0j:[+G!UMR
p!!1.tKE)&*FG'Vpa>/DK!SDFG!!/1'KE)%WoRm2FOE-!S!O2-J!!+57KE)$]oRm2F+S(0c!Fb
PP!!2d#KE)&6$A8B[ll(NW!QZ14!!1_5KE)%73eRJ6Y^1s&!TKc*!!2UlKE)&JY(QcUifJfn!V
&j:!!2)8KE)&C7YCaBie2sb!TJ]a!!1'3KE)&4fRs5*nSX![!QC.R!!2*'KE)%lLkGa/il6WO!
QB_F!!1&jKE)%2TS*:G`RohD!TNO#!!/">KE)%lb_,rsMhm#d!QE'3!!/"2KE)%2JqO+)(SHE]
!K5T`!!1(,KE)#hOG!T7Mp-hS!>gQF!!/"tKE)#hKS0=+(P7;?!>jCA!!/#GKE)#hb_,rs(WM+
.!>k0W!!2[fKE)&KXFpQS2>Dh)!V8j8!!2nmKE)$0r.G%No0e63!Ao7Y!!2[XKE)&4:kSfLnLT
=n!Tqa^!!2(MKE)&C-A2@"k/`2U!V9oV!!26#KE)&46A,=>k/)cO!Q<?<!!2(qKE)%td"DB"`5
mT3!TI^E!!1?cKE)&8k(E^8c,>88!Q;j.!!1?]KE)%0d"DB"`9`-W!LqGh!!.qtKE)%kk(E^8S
&g6_!R9b[!!/S-KE)%0_LqmiS&0gY!>Eh5!!.rCKE)$3d"DB"'?Gh,!K#rl!!,%"KE)%Bk(E^8
2oL@L!>E>'!!,$qKE)#dm">?>2sc1t!>FUK!!,%@KE)&MW.Y-OFmt%a!P82^!!2tmKE)$ppk/V
J\pf;4!W/UE!!.1hKE)$p5(in:o-f7l!Vr%7!!+kQKE)&IBS6?dqmM.X!I"Bo!!+j(KE)&IA:s
p`o-/hf!HrpF!!2h'KE)&4."hR$nJ6cX!Tn'K!!2()KE)&@k_&p:pND2i!TG;V!!2NKKE)&8@Y
=^^mc&m"!Q8Z)!!2(;KE)%sk_&p:`+4N$!Susm!!1=)KE)%k@Y=^^h;j4h!R0PV!!1p8KE)%/k
_&p:`--e6!L`/)!!.o:KE)%bk_&p:RH0#$!Jo`g!!0^mKE)%@ie.:4]AeJD!>4OK!!.oLKE)$/
k_&p:&`eTF!I*a\!!+n:KE)#bie.:4GN=DW!Ai_g!!.<'KE)#bp4NDH1\QJ%!W/+7!!.-8KE)%
`IY7\%qiZU4!HNR@!!.+(KE)&E'SHGe0n+cU!V\F(!!2[(KE)$oIY7\%pG.C%!TFfH!!24=KE)
&4&qg5cmW=*^!Tl.j!!2M.KE)%k1kYi0b]JL<!Q6aH!!1mIKE)%sEeFDnh"$*u!JkiN!!/JZKE
)%/EeFDn\b(OT!LWG2!!0Y$KE)#aoRm2F1%^,!!>+gT!!.05KE)$-nq6uDF7Ota!W.b-!!.(eK
E)$m5(in:o*U-N!V[Lc!!2'dKE)&8)MA(kmQ-"$!Q5n0!!1;)KE)&.H@u8!LcU1h!LS1d!!0V+
KE)#aH@u8!0`$G&!HIsh!!.&QKE)&3:kSfLn>q9C!T?S&!!2SdKE)&37"bO@iBi1t!Q*3:!!2%
pKE)%iaFjNoiF[`C!Q)d.!!0sRKE)%,d"DB"_X)pU!JSUJ!!0t!KE)%,`.S*kKu/KC!=R8-!!.
f?KE)#\aFjNoL$"$g!=Qi!!!*JEKE)#\m">?>$g**B!V*+A!!2lGKE)#kr.G%NnYCg<!?-E?!!
2VaKE)&3."hR$n<S_-!TRjH!!2%(KE)&5A:sp`i?EpT!TRXB!!0rMKE)&32M;&2`or'U!Q&B#!
!1+#KE)%i@Y=^^`o;XO!JKZi!!0r[KE)%4k_&p:K]Idd!KH/n!!.c4KE)%4ie.:4$0[$B!JL0"
!!+&&KE)#ZjFdL6)ruYP!=@b=!!+%uKE)#Zp4NDH)tnpb!Vt5u!!,.UKE)%DIY7\%q9jor!BPU
]!!,,EKE)&CP_9#;)1I5=!V<[O!!2VQKE)$7IY7\%o<O#L!T=`G!!2+:KE)&3&qg5ckB)@W!TP
qg!!28'KE)%i1kYi0`cQk6!Q$UF!!1C;KE)%mEeFDncLQVg!JGQJ!!/&NKE)%+EeFDnSb.R8!K
?T&!!/Y]KE)#YoRm2F)>&R^!=87L!!,1RKE)#jnq6uD47\%)!IF6g!!0c\KE)%!G_?%t]fq)L!
I?k]!!.BeKE)&Kb(K`q3IHJ[!W1T(!!.FoKE)$55(in:HTm)_!V)&#!!2\[KE)&I\qC%ai<k5<
!TP)O!!27DKE)&AH@u8!_A\(-!QI0R!!1AkKE)&0qLehLKK=bd!K;>X!!/VdKE)%dqLehL#^V.
(!>tZd!!,+VKE)$uG_?%t]Y9%!!I6e\!!.?dKE)$4^4ZIeH+nq3!I281!!.>9KE)$t?A&:Zi2D
;/!T9c,!!2#PKE)%hBS6?di3n:=!Pr<"!!0oFKE)%)k_&p:_01J3!J9Bc!!.]2KE)#Vk_&p:K(
ait!<qP;!!*8_KE)#Vp4NDHnC3*k!=aL2!!2T;KE)&2P_9#;iO"7<!T9,o!!2&aKE)%h1kYi0_
fUP3!PpOE!!0uXKE)%)FG'VpL@g-!!J5?F!!.iFKE)#UoRm2F%J5;R!<htH!!*Q"KE)&Jl@]-<
*INM?!?F@W!!2T3KE)&Cg4TG,i/30f!TBK#!!2,kKE)%h)MA(k_`EGN!QTM>!!.[4KE)%-H@u8
!Nr"D/!<d_%!!*N)KE)#nqLehL4a;V[!M7#Y!!,5FKE)$9*eXLo*57(+!Bn/M!!.LeKE)%e]S$
7cI5ll[!PY.Y!!.KfKE)%$%YOf_4M6=I!I_V6!!,3RKE)%$SqI(EI(4h0!PVln!!.J;KE)%#Ne
@B54C3[@!IWaW!!.IPKE)%#:4rTJHnL'P!Pl'q!!0m@KE)%(FG'VpJT?DD!<VnH!!*/lKE)&2g
4TG,^m]oV!Pu@#!!.X3KE)%*H@u8!!d]M"!=&CR!!*SDKE)#o]S$7c*hJ#b!C"#H!!/]uKE)$:
S:gkC5)t9r!?PR#!!,:?KE)%%Y_2uW^KcEl!IgDh!!0i0KE)%%N._03IYNLU!BsbA!!.Q(KE)$
::4rTJIa3TH!Ie.(!!0heKE)%%9S<BHIR\tj!Br,h!!.OdKE)%%/;+!(IO9^J!=rLi!!+0HKE)
#p:4rTJ5?NR=!M?NJ!!,;XKE)$;7YCaB+"i3H!C(IT!!,;8KE)$;-=%`uKE)%Ri.M(2ebFdt!E
6de!!0(gKE)&&r.G%N;;d*-!N>dH!!1SuKE)$Ln:UcBW-j6u!Dn#o!!2rCKE)$Wi.M(2Xn[PL!
W'lj!!-6lKE)%Sr.G%NqS\$e!Ef,M!!00MKE)&L_Lqmi=F>c%!VOfm!!2r_KE)$Ypk/VJouMdd
!W(r3!!-@&KE)&G`.S*k>^h>+!VO<_!!2E4KE)&Gm">?>lc=_Z!VPT.!!2E(KE)&=_Lqmif?f0
N!UK**!!1]mKE)&=k(E^8f>N=B!S>2A!!0:MKE)&)m">?>YK2@s!S?Ie!!0:AKE)$G^k;[gV=9
-<!Rgn!!!,[LKE)%Kpk/VJdXHiL!D)^5!!/mCKE)$DG_?%tUcsG3!D#>+!!2q0KE)$In:UcBVY
l)I!W$>[!!,dgKE)%MIY7\%qI5*X!DIlo!!,bWKE)&Fk_&p:qK@Ml!D`QG!!2`QKE)$JIY7\%o
\tN(!U8g$!!2`cKE)&;jFdL6l/I?r!Rp7c!!2?XKE)&%jFdL6e)H#\!N5.7!!1RBKE)%NjFdL6
VrE@0!Cbq"!!/hhKE)&#IY7\%7.>j0!MXsp!!,K4KE)%I5(in:6p-,&!CRu^!!2pQKE)$Bpk/V
JUOIjr!W"R)!!,Q:KE)$B5(in:oQ5`d!CqTl!!2_4KE)&:oRm2FkjjB,!R^Om!!1L<KE)%JoRm
2FU[j'<!CH:/!!/d@KE)$>G_?%tTg",0!CAo%!!,D-KE)&L)MA(k6[XOe!CK&(!!2^QKE)&:H@
u8!d/&Cq!C:s`!!/b,KE)$=4G3\85ot[Z!C=GQ!!,?tKE)$<SqI(E/&6f<!L</-!!17?KE)$%i
.M(2Pk]n3!QokE!!+M;KE)%;I"VJ#.!UCF!L,d$!!+K1KE)&KBS6?d/b"Dn!LEY:!!2n+KE)$(
pk/VJQ@=Je!Vp2X!!+WuKE)$(5(in:o&t`,!Vpnl!!+_MKE)&DjFdL6/q/HR!V56'!!23FKE)&
Dp4NDHjlD'p!Ti<o!!1:,KE)&7p4NDHbN+<V!R'JU!!/GMKE)%rp4NDHQfNf"!LMf!!!0LcKE)
&,pk/VJm=']g!GT?&!!0IrKE)&,I"VJ#B]+OD!OR*)!!1e;KE)$dE.e2lZoj!A!GFHG!!0GJKE
)$d*/":m-/aFV!L!52!!12jKE)$ii.M(2,k-He!Kqh`!!-p*KE)%]I"VJ#P!4O!!Gm"6!!+?-K
E)$h4G3\8,T_U=!Gig1!!2mPKE)$"pk/VJPCA/b!W-tl!!2mNKE)$jpk/VJ-@CIH!W-nj!!-tb
KE)$"5(in:DE`^R!V1>c!!+HrKE)&HoRm2FnoBB`!H3F?!!2faKE)&6oRm2FmIZ&3!T`g)!!2K
XKE)%poRm2Fg[p.!!Qjnc!!1jFKE)%:oRm2FPOaA,!G0'"!!0CpKE)&+I"VJ#ADi+@!O?s'!!1
b:KE)$`E.e2lZ93d?!G"0C!!0AHKE)$`*/":mA.F7m!@%#d!!/40KE)$bn:UcB,'\b@!KfR!!!
-\VKE)%Z5(in:Ait_H!?rS<!!-[QKE)&K)MA(k,CG.E!W+p2!!-_[KE)#t5(in:B0LtK!V/:)!
!2e>KE)&6H@u8!m.uA8!Qb+j!!1dLKE)%8qLehL@c2n>!O6m&!!1`dKE)$^E.e2lYrm[>!Fe$A
!!0>GKE)$^*/":m@Le%k!?l]@!!/1qKE)$_G_?%t+ZtDX!Fn6F!!+5aKE)$_*eXLo+hiU0!Fri
s!!-MIKE)%W]S$7c@5ro?!O//K!!-LJKE)$]%YOf_+M<@-!F`Wo!!+46KE)$]SqI(E@(:ji!O,
m`!!-JtKE)$\Ne@B5+C9^$!FXc;!!-J4KE)$\:4rTJ(#X`F!K-Z*!!1&fKE)#en:UcBML:'W!>
Kd3!!.s@KE)#e4G3\8'HVo-!Vj$T!!*l1KE)%2IY7\%pp,PQ!>^'9!!*j!KE)&CFG'Vp(Oh#;!
V(2`!!2*OKE)&4nq6uD`Unf`!QFV_!!/#MKE)%2nq6uD28FkF!LiM2!!1>lKE)$0i.M(2RWsJc
!R3f]!!+oqKE)%A4G3\81cU-g!Lb'_!!+nrKE)$0%YOf_'(CPS!Ju2W!!,"IKE)#cG_?%tM*?R
m!B,1U!!/QQKE)$24G3\8&fu]+!B)!P!!2k`KE)#dI"VJ#q7;4Z!B5CZ!!*`sKE)$35(in:nN)
='!V:Vj!!2)*KE)&8qLehL`;5,e!R:Io!!.rQKE)%ai.M(2h0=SQ!Ud[T!!.2WKE)%aE.e2lh)
p>j!H__&!!0YjKE)&/*eXLoF>/@J!P08(!!.0YKE)%a%YOf_F:<g&!A`Sd!!/L4KE)%s^4ZIeG
2S#R!A\VI!!/KMKE)$rE.e2l]0(`H!LY!^!!.7&KE)$.*/":mFrZ/8!AY.<!!.6QKE)#bG_?%t
Lq\NB!AetR!!*ZoKE)$sG_?%t1H^<j!>-B+!!.:+KE)$/*eXLoG92D;!>3&!!!+miKE)$s^4ZI
eEkm>.!P*0&!!1lfKE)$n@"\L\\N#6B!Sj9"!!.*oKE)%`*/":mEYsH0!P&\n!!.*KKE)$n#(u
sW0lVdG!LUNQ!!..[KE)$-3.q84R%As2!HU5R!!0X%KE)$o*/":m0b/j:!HSa(!!*YDKE)$-]S
$7c&>"OT!HYo,!!+gGKE)$oSqI(EEF=G"!P#Xm!!1k]KE)$m0SBE,\=A3P!HAs0!!0TiKE)$m%
"nT]E<_'r!AM$:!!/HnKE)$m\:ah_0V!dr!HFW_!!+d6KE)$mNe@B5&71"i!ANA`!!.)rKE)$l
Y_2uW\6O[e!H=EZ!!0T)KE)$lN._03E/'#G!AIc3!!.&oKE)$,:4rTJE6a+:!H;.o!!0S^KE)$
l9S<BHE(5K\!AH-Z!!.%VKE)$l/;+!(E$g5<!=J=L!!.e$KE)#[G_?%tKg(.i!=CrB!!*EJKE)
#\I"VJ#$U04D!V![R!!2&)KE)%iqLehLL&-H&!?0mL!!/((KE)%m^4ZIe)K:?0!KB3p!!*utKE
)%4*eXLo)B=D1!?)H$!!*CNKE)%+^4ZIe)gI#9!=:lA!!+$$KE)#Z*eXLo)]jY4!=?Jn!!+%QK
E)$6^k;[gST'5^!RA?2!!,,gKE)%D3.q84cCT[h!BMof!!/W1KE)$6(k_kiSIU;Q!BLXB!!,+b
KE)#jE.e2lN4afD!BY7R!!*rsKE)%3SqI(E4#hln!>ul1!!,/$KE)#j%YOf_3t?oD!=6>k!!*t
MKE)#YSqI(E41p4H!?%J^!!,0QKE)%d@"\L\hRJ4=!Uj?J!!.C2KE)%d0SBE,hOK6!!I>lA!!0
bMKE)&0Ne@B5H4Y`0!PJnp!!.BOKE)%d#(usWH3Am$!BFP@!!/V"KE)%u?A&:ZHXML,!BDie!!
/U[KE)%"0SBE,]ps`U!M#1'!!.E`KE)$5%"nT]HOPQ-!BC@;!!.ENKE)#i\:ah_N*_/;!BIZC!
!*q,KE)%"\:ah_3Lka&!>piM!!.G:KE)$5Ne@B5H]EaZ!=3"b!!*qnKE)$5hLkk0HesDU!I6q`
!!0a:KE)&0>_E(XGp%b?!PFeQ!!1qOKE)$u&;1#a]SqLD!I4s(!!0`eKE)$u"G?aUGliX!!B@<
:!!/TpKE)$uY_2uW31,@!!Luo<!!.A4KE)%cc@c/uH&RCV!B>ge!!.A"KE)#i>_E(X38B/e!>n
Rb!!.B#KE)$4c@c/uH-V'C!I18j!!0`7KE)&0/qa3*G`[RY!PD*Z!!.>#KE)%c7YCaBG_C_M!I
03L!!,&]KE)%C/qa3*Gh@ZL!B<c+!!.>gKE)$47YCaBGfGC:!>mGB!!,&sKE)$tmXtQ@GYj%n!
PBt:!!.=8KE)%c-A2@"GXR2b!I-qa!!,&1KE)$tCkMch3$s:Y!I/40!!.<mKE)%c(5)YgGU.qB
!I,fA!!,%pKE)$t2M;&2"aG\#!J8%=!!*6cKE)#V*eXLo"hoWi!=a"$!!.heKE)#^3.q84L7X%
u!=^$%!!*N=KE)#U]S$7c%D7>o!<f!I!!*P#KE)#n@"\L\Njs`B!QSN"!!+)oKE)%5S:gkC*>j
G0!KN1n!!+)KKE)#n#(usW%(Lrj!JXp6!!++MKE)#]S:gkC*Lqc_!=Y!A!!++#KE)#U?A&:Z%,
QX;!?L$M!!,5JKE)%EY_2uWcWl,'!BhQY!!/[YKE)&!:4rTJ4V38H!M57'!!,4gKE)%EL4fO-4
TpE<!BgL;!!+(DKE)%5>_E(X4g9S>!?@J[!!/*TKE)$9R"PG?T$Duh!BlBp!!+'oKE)$9L4fO-
$s\Gc!?BmJ!!*L'KE)$9gk5Y.*6s3;!Bn_]!!0g,KE)&1=G-YTn#h<D!PXYK!!1tNKE)%eLkGa
/haW8!!PX5?!!0fcKE)$8TS*:GSlgXG!REBO!!.M@KE)$8OG!T7SkOe;!I^&_!!0gXKE)%E7YC
aBI>EOV!Bc$g!!.M$KE)$8JqO+)I=d+P!?>3p!!/*4KE)$8fRs5**))"c!I`UR!!,4+KE)#m7Y
CaBIE[?E!BeAT!!.MfKE)#]/qa3**,^E0!Bfe'!!.N9KE)%e:kSfLh^jE\!PV*X!!1t(KE)%e7
"bO@^-[JQ!Ba23!!/ZBKE)%#d"DB"4@k,*!M1Wk!!.JgKE)%eAqU-bI)L[<!B`]%!!.JaKE)#m
/;+!(4D]ZN!?<G>!!.K6KE)$8AqU-bI--(^!PTt8!!1smKE)%e,_Q-u^*841!B_c`!!/Z,KE)%
#BS6?d4=#R[!ISF2!!,2+KE)%#@Y=^^*#=2-!B`8n!!.IjKE)%e'SHGe^(Q)!!B_'L!!.I(KE)
$8&qg5cHnp?T!<Toe!!*.mKE)#W\:ah_K3j32!=#'I!!*:aKE)#S?A&:Z#2Y"5!=l>e!!.j[KE
)#_R"PG?LJEL&!=k'A!!*RaKE)#W>_E(X%bu^;!<u;P!!*STKE)#oTS*:GO'%&8!QV?r!!+.&K
E)%69S<BH*f,IL!KT^'!!+-oKE)#oJqO+)%TnAa!J`:\!!+.nKE)%6DM.uj*mB9;!=hSP!!+.\
KE)#W/qa3*%W6q"!?UZ^!!/]gKE)&!XFpQST1FV8!RIWr!!/][KE)%F6A,=>*`.Li!KSdb!!,:
1KE)%FCkMchO!]M[!C"SX!!+-/KE)$:`.S*k*^YM[!C"AR!!*Q\KE)#oCkMch%OQi/!C#k'!!+
-QKE)$:k(E^8hl)2.!UnTm!!1uQKE)&1U4`LIT.#?m!RI'b!!0iJKE)%F,_Q-u^LVut!M:Qh!!
0iDKE)#o."hR$Nu!BK!Bt1M!!+,dKE)%%k_&p:5%K<H!?NG<!!.Q0KE)$:@Y=^^Ic?"\!=flu!
!+-!KE)$:G(]hrIeJEp!T0,p!!1u?KE)%F'SHGe^GLTD!M:!X!!0hiKE)#o'SHGe4u@om!?Ml,
!!.OjKE)$:15#W.IWC)A!T/cf!!/]!KE)%f)MA(k*X[Q#!BqET!!.O0KE)#T>_E(X"&=LL!=)_
[!!._TKE)#X9S<BH#=a@H!<Xs-!!*=BKE)#`:kSfLLTH./!=q_S!!.kPKE)#`7"bO@%mkpL!=(
0/!!*UHKE)#X-A2@"%q^Ip!KX14!!1-kKE)%6UkA^KO.q:-!=pT3!!.k@KE)#pBS6?dO1']A!?
Yj*!!*TSKE)#p@Y=^^#8Vsm!=q)A!!+0bKE)&!e:[f&cdIIH!KWIu!!/_!KE)%6P(Wf9T<a+M!
=olt!!+/uKE)#`&qg5c5BMPY!?X(M!!,<)KE)&!b(K`qO,ASj!M>g6!!*T;KE)#p)MA(k5<=Gt
!<]EV!!*2!KE)#X      W.Y-O  K@Y\U  !=,ER  !!  *>!      KE)#TQ      @o5=#I]
9c!Jf0X!!.l'KE)        #XP  _9#;&  %$ui!  =+  d@!         !*V         9KE)
 %nl<PN<Ou"b3@;  p91>9  I.  )"!WI   %U4r  cU  L''  2c"*0  +uH  A2M_L  ',#A
".FrHg4f^PL'*<f  !t'bb  )MS  >,L    '*Tn  "4  Do+  eqO:VL  '*  Zp"13d  bUk
SuKL'+T5"0@4ZW.  kC&L'  &u]  ""o  < 1-A  DU\  L'+  l="."Z  D(  5;o*L'  '8e
"*B8"A;11uL')=J  ")N\o  BSH  U[L '(  P4  "'g  Q_?  A8PWL'  (,  ("%7kG  7YV
"3L'(mj+BsR%c@u        BqL&  u7I !\  T3  /-A  DR[         L&r         -F!Y
U4h)MS;SL&s,b![         <@#@  Y  Or  )L  &u[  U!r        @WQn        qI5>L
&uOQ!d'.uA;1.tL  &si!!^  _VC  _  M/- OL '$Ll  !p#  (;m"PRXL&r  o\![rd)BSHT
PL'#GN!mHB#`.e?  5L'!*a  !fi  ! :N.q    D(L'  !`s  !k<sdY_E4@  L'#_V!`4UQ=
G?l^L'$.b!o@3*?  '6us@s  <$5    @VKq    *HQZ  g7F  `VY9Ec[C-P  "Us%P"RHOP!
5$b>DNl<L]DjdK6  E%PL_   5fHO   t_6=0   TrD`  P"A  rB30Ia,&X'  ,L&X#h9Oq*X
2061K?FDkW&FE;d         OEa`p   .P!5%  %P!5%  %06  WLBOu$<u$@  @R/I?K5+L]W
A>P,4<qH\aA=WI9       q$?'711  @YbASW  JCnE9  RW'  6Ou"b3GA1S  1>DOV^2i(@f
@pL3eL]N[<P"Uro@u(5M4_%u1Op$+bEd)5.Le*[bI?IP_E+sQ<+ED[?A0>oUCm#*f1Pc$e!HNt
sP,Wd]Bp(ZC1G<6SF*&O=+ECn0Cm"gT!KsF<"-RD^1N7&QF!,LIBk/?#P&+>F@u(/K4aUlcEa`
p'Oo^@>P,X6oP%odQEa`p/DdmF&F-6TfF^oW:+DI!3@r-4.+CfV;DdmF&F-6TfF_Mt=@;p7M!J
gc>WJEBoC5;k1@;p=,@VKq*OogehI?IQ>L]W`&HYFUC@;p%G!Jgc>WJEBoC5;k1@;p=,@VKq*O
ogeh@s;u:BnuhRCm%G$Cia\@@s<$5@VKq*Oogeh@s;u:BnuhRCkr+T!Kp)cCia\@@s<$5@VKq*
OogehBcqG)E,q*BL]N[<Lbt90L]DI(E--#-BlnEZ!g7\SP#PqI"-Pfo@q/r1E-l:AEa`p'Oo^@
>P,X6oP%odQEa`p/DdmF&F-6TfFa]EP@s;u:BnukSCm%G$Cia\@@s<$5@VKq*OogehBcqG)E+>
 %3L]N[<Lbt90L]MO)E--#-BlnEZ!g7\9GB4m@L]`fVL]NY>P"T;$F*&O7GB@b4BlnEZ!g7\9G
B4m@L]`fVL]W_?P"T;$F*&O7GB@b4BlnEZ!g7\?+ECn0EfpHZ!KsF<1m2U0!-2LeFDkW&FE<TH
P')29<+C^eP!+/++ECn0Cm"gT!KsF<1m2U0!-2LeFDkW&FE<THP'(8YF!,1Q"HmSa94MdZF<G(
;FDkW&FE<THP'(8YF!,1Q"HmSW!KmJH94MdZF<G(;FDkW&FE<THP'(I]Ea`osOo^@>P,X6oP%o
dREa`p/DdmF&F-6TfF^oW:+DHW7P&,pUOo^_=@r-4.+CfV;DdmF&F-6TfF^oW:+DHW7P&,pVOo
^_=@r-4.+CfV;DdmF&F-6TfF_Mt=@;p7M!Jgc>WJEBoC5;k1@;p=,@VKq*OogehI?IQc!F:k6I
?I,`4>1_dDD*Y`ASu?nFE2)?05tWMF!,F9G]PNWBm=kFEd)5.05tWMGp%,\BOtmjBQPA;Le*[e
Ec6/=F_l/_CbL!HA9;K-Ed)5.Le*[e05kfO+E)4@Bl@m1+?ht3A8c@-A9)+&P&N'-Eb0-*@<?O
(G`l$h3IR&#Ou"b.Bk)1%E+EQ;0fP7TP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD
@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/micropdf417 0.0 0
%%EndData
%%EndResource
% --END ENCODER micropdf417--

% --BEGIN ENCODER datamatrix--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: Data Matrix
% --EXAM: This is Data Matrix!
% --EXOP: rows=32 columns=32
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp datamatrix 0.0 0 0 0
%%BeginData:        102 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04\L5@  ;T  FpEbTc  FL_
Q"0Ops'_E-,f4DK  Ct)Ou  "b#  @<,  j rA7  ^of  Ou"  b%Df0Z  -E  aa/7Am  oLs
AWei&@rH1+D/OEN  !0T,k  Ec6  /CL ]E  So  04f  $2D  e*R"B9  !.  (F(8ou  Ou"
b3@<Wi+@;L!rOu"        b1@<  -F# +D  ,%  uF(  LLj         05t         ??F(
Js$@j#AlCia0N1N         .5SB  l  @m  1P  -6N  [FE        2)5B        68E<A
Wf3'L]NYrOpu>KF  D5Z2F*  j(N  A  moL sA Wf3'  P!F  GY<0B5(@Zm  RN0oc8tP)XR
(F_-_!H]ftD5*C&  O5*@^M  H]f  t &Eck    rV1O  YEd  I?J0)*g/N:  DfBf4Df0WZ5
*@^MP#Q@=FD5Z2F  *j'+I?  I/T    @rH1    +D/O  D;@  rH1+D/OEX/  <VeBEc6/C+E
DCEF-8);1N6cCF(  K\OD0   '>4@   UX:eD   e*FB  @Zm  RN1G<L!!0T  -I@<,jrA7^+
J!FCqKH]g@*F(^Y         "C6Cc   DH'2W  OOo^@  >Oo  [4NP!5$bP'  )pIL]E55P"_
#iD0'?Q5&,lSP,X       U.P'E-L  P%'4LP  ,X6>P  !5%  &I=%,:D0'?  Q5&-6EP'N4"
C6ATNC6CcD1G<3GEas#uAKYi2B8?P&P"_#pP!FGY<IL$AI?IP_@UX:nASrW"@<,jrA7^p5Ou%,
eGC(uSDI[TqBl7RD"*.goOu%NL<+TrWDe*R"B9!(7@<[ktHS8lQF!+q#Ebo<)OpR:-0564BOu"
b+L]ESoHYFU3@<-0qDN[/0P!FGY<%ha*+C\c"@rGmh+DHW4Oo^@@P"_#iOu$TlF!,3?@s=)\05
2PCL]ikAOu"b++DQ]5Oo^_%I?J.p@s;u:@s<!M!,@ZjOu%NL<%hj$0o5jm1M(H6De*R"B9!.(F
(8ouP!+.FAo;+%@;L!-4?SW,7SZ<*Ao9=G5!G,c05YcC+C\c"Ch7LI$'I(tBnubP1G<L!!0T-b
BcpknEbo<)P!+/T5^eep04S[(EZeh"Eas#uAKY]M99M)M@<-F#Ao;*$@q]:kLgH6-Op#JA@UX:
nAT!;,P,XUVOp$,@@<,jrA7ZltL]NY>P"UU;P&5P!@q]:k+D,M$G%#3.+C\c"@rGmh+DHW4Oo^
@AP"_$3Ou"b*+DHW7Oo^_%I=!V]+DHW4Oo^_%I?ITYP#Q:>B-:q3@q]:kP'AWo+DHW4Oo^_%05
;VEL]NY>Ou%NLAM7nAB-;&4B8?P&P"_#p05YcCCh7K,D0'?Q@ZiN#@s;u:D0'?+AT!;*P&-9fO
u"b*L]ESo05?:COu%H!+Dl14Ch7LI4aW>WI?IP_@q]:k+Dl14+DI!3Ou$T]@<*K&DD@;;HXh8@
+DQW2k`U0DBcq,G!KmJH1G<JcC5;nR!Ko6eHXg_tEelE48n2OCEel`=@?Lb-+Dl14Ch7L?!KsF
FAs*:DD0'>4BnueQ!Kp*=3/B8O8s2Ao3Kdg6"FFX&F!,3?D0'>4Bp),F0TrDk$Bf4BF(ZV0L]N
Y>P"UTbP,XTFL&cgg!Kq[\Bcq,G!g3SI1G<JcC5;nR!Ko6eHXh8@+DN$/BOPq;!KmJHGV<bRBn
ueQ!Ko5lC*78I!KmJH1OYEdI=#I;@<.0RP$r]IGB4mA+Cf(nEejaZ!Kq[\Bcq,G!KmJH1G<JcC
5;nR!Ko6eHXh8@+DQW2l]QL&GB4mAL]NY>@q]:kLjtSeP'AWo+DHW4Oo^_%05;VEL]W_?Ou%NL
<IL$1I?ITYP%?:VGB4m:GB8Q?C6D8R1OYEc05Y9BEbT$)+BosmL^JqFL]N;4L]rS8>p*@-%#>=
J!Jgc4#D`Cd+BsX3L^o4AL]N;=L]Ld(>DNiH&;U@C!Jh/?!F6gPL_>LVL]N;4L^o4A>p*@-'Sm
HZ!Jgc4&r6Qo+BsX;L_bdIL]N;GL]Ld(>DO,P(l/3K!JhSK!F6gPL`2'fL]N;4L`D3O>p*@-+G
_.r!f-o6,_uJ,+BsXILa7cXL]WA^L]Ld(>DO\`.#7q\!f/Od!F6gPLb+?5L]WA6LcC1k>p*@-0
ShE=!f-o67#1kL+BsXYLbsnhL]WB3L]Uj)>DPP#5_oQ!"Gh#Q!aQpQLe*=mL]iM:L&d<k"C3-S
Lern(L]iM:L&f#F"C3-SLffI8L]iM:L&g.f"C3-SLgZ$HL]iM:L&hjA"C3-SLhMTXL]iM:L&k,
,#$i?ULj4`#L^&Y>L&mZt#$i?UL&cm]!/-.4L^&S7n;%?U+BsR#OG3asL^&Y>L&u1I$=+cYL^8
eLL]N;4L^/_:>p*@-#`'UZ!Jgf5$]"gh+BsX1L`2'ML]N;AL]Ld(>DN]D,_uJW!f.JF!F6gPL_
,@fL]N;5L_tpK>p*@-&;W#r!Jgf5*/FW$+C1-d06M;RGB4mIDg-8c1G<l\DesJ;@rH1+D/OEX1
G<Hu!0T-b05VhKATVs,@ric,P"Uro061uTF!,=U!0U!<1G<6VCi^_9L]NZ3Ou"b3AS5[!D287V
99M(aEb/m,+Dlo:P"Uro062,DG9CaY"HlE@1G<ci@Vd0(L]rr7Ou"b.Ec6/C+EDCEF,0m<AS5\
>Cm(c\1G<TTDesJ;@rH1)L]VU.B6KGSP,XU#062)OGB4mDEc6/C+ED%+BTc8V1G<cYDesJ;D.@
L#F!,L7B6KG9Ou"b/@s;u:D/sQ=F!,=0DesKXCkr@[;K?hgGESqg1G<Z^@<iu;EckrV1LkWMP%
&<=GB8pDHS9;Q@<iu-@;L!rOu%NL<-<5"GB8Q?P&5>^Dg-7FEc6/CP&6?bHS9;Q@<iu-@;L!rO
u%NL<-;\hCibC4P&5>ODesJ;@rH1)P&6?bHS9;Q@<iu-@;L!rOu%NL<,ZP\H$b]>I?IP_Bcq,G
!KmJH1OYEt@s<!W@W#\"F-:-^04\L5Ch7K,@s<!W@ZiN#@s;u:>9IF"F*i=u8T&$^F!,"%FDPN
+P,We_!.fQ]K3aWrA79RrAT!;)Oo^@>DI[m3L]N[<HS9)r5*@^9L]NY>L&dL%Ck_rgP%odROo^
:;JW^%s3/.G4P#-L[!</.\I?IQ>GB8p2Bp(ZCG^Y`GI?IP_@s;C'+EDO4Cm#*f1G<<L@WNZ4F(
/sK$'I*#!/LYrF(/sA!KsF/056S5Ou$TlF-:!e"r<A=HS8lQ@WQ70AKYK,F-:!QF(/sK;N`haH
YJ9@P$r\j@s;C'BmO?F!1]3.I=!VWG@GW-H=_g2S!#RUP#Zpn<A.j+@N]0)@WQ70AWd@_1Pc$e
!Fp=_F(or3L]N[<HS9,s5*@^3G@D\0+CfV:+DN$>F(/sKCh]%5P"Us_I?I-2G@GV9Bcpo0@Zkt
I@q'L%BcpV&EcY`7+EDO4Cm%\CL]DjdK3aXbI?I,SEcYZ*DeC1sL]N51s*KngL]W`UOuS0s!0T
s$L&ilh_0qJGI?K4gOu"b3F)5c-L&h:;$'I*#!Jgc2!<7D/3-'(KCi<sL5*AR%5&t^\DeFk.L]
NZoP'DD<82#")E,ol-H\_`d)2J9UD3@)=!0V2^"FG01Ci<sL5*AR%5&t^\DeG4sP"Ur=L&h7:C
3"B(Ci<sL5*AQeH]iN7Fbg$GP#Zpn%[&V$@rGpjAof)!L]MO;@s9&9F(/sK;L=3"I?K4gOu%mp
L]MO;@s9&9F(/sK;L:'2P!5$b@rGpjAof)/+Cf>$AnH*,BnueQWKKo;G\Ms7P,X9;L]MiUC6Cc
D1Lk?7AnH*,C*7#)AS,Oq+DQ]5P,XU;@rGpjAof)0P"Th:@;Kjp+DI!3EcZ2?De,$IP'DD<87Q
RLAnH+?!+TqYAnH+?!0TuqF(&m'B-:oO96,)mEc5KOG^Y`G04Sp3AnH*,@rGpjAoib.@rGpjAo
j,EL]N[<P"_#pL]E53@s;C'P%'4JP,Wd]Bp(ZC1G<6^@N]0)@WNZ+P"Uro04eX&+D#%lF!,1[9
9M)e!/LYcG@H_EL]N[<HS9K(5%AeGP!5%%ARf2*!0U!<_3-Tc@q(U1L]N[<M#W82HS9,s5*@]T
E$/_%@Zk28P,X6<P,XU#ARf0lE$06F@rGpjAof)0P"Th:E,ol-P'C_t!0U0*ARf0lE$/_%@N]W
G!KmJH94_UB+E3K:P/3<+I?IQXP":"a8:?XlDI[m3L'AEV4aShn@q'L%>9IKe@WR>2L]W`5H[V
&KARf1jL]E5:P"^4NP"ArB1OYEc04T3I+BosuGB8+ZP"B\8@s<9U!.C#_?'7""!/LYrF(9EM!K
sF/056S5Ou$TlF!,@1GB4m@Oo]-(@WNZ++EDO4Cm&Or95,MhF(/sK;Na\9G^Y`G05YW<F_kW9L
]iP6P)#&'0JG170JG17L^90?Or9EBL]`J5P)"hpL^90?Ot`%YP%'4QP!5&.P!5%SL^/b9L]DdX
!KpQJ5*AQp0TrDu5(/SbP')QgM#EKlH]gUL!KpQ@!0Ur@P!3`'Dg-8c!KoX&"Dr0tGB8QCOo^@
EP%p/ZOo]uo<0B4s!0Ur@D.@L#F-6Qe5)9>Y@rH1)L]ikAL^9/YP,XTFP!4;W<0BF^@rH1)P&-
9^D/E^'P!4[*M#WWnP'DD<8UZa3Ou"b%D/LJ#H\_`d)2J?WWKKH$!g9OG5(/S(H\_`d)2J<VWK
KH$!g9OG5(/S(H\_`d)2J?WWKKH$!KsFF5(/S(H\_`d)2J<VWKKH$!KsFF5(/S(H\_`d)3R1>!
KsFF5(/S(H\_`d)2J?WWI9p>H\_`d)2J<VWI9p>H\_`d)1@YX?'6usA8Pg2+Bs18D/sQ=F,0j[
WJCP&Oq)hUEc6/CL]N[<L]Mpe%XW&5Dg-8Y!KsF<!e$4AH\_Z=@rH1)L]Wa=I?G(eL]D:%DesK
N!KsF1Oq)hp!Gu=bCibC5P,Wkm%XX!5D.@L#F,0j[WI9p>H\_c@@rH1)L]N[<I?G(GOu"b%D.>
=D>C.K0Ec6/CL]`g>L]Djd%XW&5Dg-8Y!g9O=!.C"?HYmeAGB8Q@P,X6;I?G(eL]D:%DesKN"H
oa4Oq)hp!,Z4aCibC7P,Wkm%XX!3D.@L#F,0m\WI9p>H\_Z=@rH1)L]N[<I?G(eL]M@&DesKN!
KsF1Oq(c\1G<9U@l#63HQ[0GDg-8Y"-TX>!.C"?HYmeAGB8QAP,X6;I?G(eD/sQ=F,0j[WJCP&
Oq)hp!,Z4aCibC6P,Wkm%XX!3D.@L#F,0j[WI9p>H\_]>@rH1)L]N[<I?G(eL]VF'DesKN!KsF
1Oq)hp")VOdCibC5P,Wkm%UG5R04\p01a$"L+Dl.;GB8Q@P,X6;I?G(eD/sQ=F,0j[WGQ-`Cib
C5P,Wkm%XX!3D.@L#F,0p]WI9p>H\_Z=@rH1)L]Wa=I?G(eL]D:%DesKN!KsF1Oq)hp!Gu=bCi
bC7P,Wkm%XX!4D.@L#F,0m\WI9p>H\_]>@rH1)L]N[<I?G(GOu"b.D..N/>9Id'Dg-7FD.@L#F
-:?dM#VmdK3aWr@s<!W@Yb&JWJLS1!./4"F-8_M97;soL]iM6H\_`d)2J9U4d&!GEc6/CP!+s2
HXpu'0d(=OA9D^"I?IQc!g4FW!0TL.5&G=YGB8QAP,XU-Op#W3DesKN"HmMU!0V2^"FFZr@ko0
DDe+!,AUT_@L]W_WL]ET$P!3`'Dg-8Y!g9OG4d#qb@rH1)L^9/YL]il(Op$,BD.>@ED/Ws-Ch8
$X</:U=)2J?W4d&!GEc6/CL]ikAP!+s2D.@L#F,1*bC5;kQ4d#qpA8Pg5+Dl%-F_kW;P#Qda!g
4FW!0Ts;5&G=YGB8pZOp$,f!g4Fa5&FeJCibbUOo]E:@<@YrP"UW2P!+/&D/LJ5De+!,AUT_@I
?IQc!g3SI5)99'WKKH$!g4F<@rH1)P%Kk@L]ET1Op$qeH]gXBP#QjmAV^GO!KoX&!KmJH5'r(e
Or8+HDesKXAs,?6!0Ts;"FGq+Or9EHD.@L#F-:@&!Gu[^FHShN98NV24aU^VDBNe7A9D^"I?IQ
XP#R5=P,XU.L]W_?P!4['Or9&UP"Lm$D/sQ=F-:-u"Hm_NP!FGY<.0p@L]NY>P!4[(Oo^_0L]W
_WD.@L#F-:-u5&G=YGB8pZP&c_)H]iN7Fco"<P#QjmASl9mF<GF@Dg-7FD.@L#F-:?q!KsFF98
NV24aV$_@<<W/Ec6/C+DkV,CibC5P,XU\L]Wa=>DN<9!*tb5D/E^'+Dl.;GB4mD@rH1)P&,pUP
,VZA!/LY]P'MJ=<%i3)G]P!JDg-7F@rH1)P&-9fOu"b$GAqJAL]ESoL]E53Ec6/CL]N[<HS9)r
5*@^9+EDL@GB8QAOo^_\L]ET$HZ3\DF!,0>@rH1)P&+>F@rH1)L]W`;H\_]Y!.C#_?'9J]P#Q-
<EcQ)BF,0m\!Kq2<Ec6/CL]NY>P!+/2Bm=\ABcpo(CibbU>9IEoCiarZ!I^,`?'9J]P#Q-<EcQ
)BF,0m\!Kq2R!0V25+EDL@GB8QAOo^_\EcQ)BF,0j[!Kq;_"FGq)L]M"(CibC5P,Wd]C6CcD1M
S%Q@rH1)L]W_?P%odQP!+/2Bm=\ABcpo(CibbUC6AUR!Kq\UP#Q0=Eas$(F,0m\!Kq2<@rH1)L
]NY>P!+/2Bm=\ABcpo(CibbUC6AU3L]W`SP'DD<<,*Or@rH1)L]W_?P%odQP&4qVEas$(F,0m\
!Kq2<@rH1)L]NY>P&6?bHZ3\DF!,0>@rH1)P&+lr!Gu[^F<G(;E,Tf\99ONQ@s;m1F!+t:E,Tf
R!KmJH1OYEcI?I-LP#Qjm83B!fEb0,A061WAD..O,Bm;:MBm=\AE+sQ<05tWMGT^L7Ci_7KBm=
nGEc6/C05+p2B4uB0Ec6/CL]W`ULe*[e06_,@FD)e,DesKN!g7AU8<PkaDfBe@DfBf4Df0V=5!
C*"Df0Z-Eaa0TE%`kbASu?nFE2)?P#RT)I?G)'1G<9IFCB#pFE2)?OuSV806M%_@rEuAATDg:@
Wc^5Df.1:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB
~>
% uk.co.terryburton.bwipp/datamatrix 0.0 0
%%EndData
%%EndResource
% --END ENCODER datamatrix--

% --BEGIN ENCODER qrcode--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: QR Code
% --EXAM: http://www.terryburton.co.uk/barcodewriter/
% --EXOP: eclevel=M
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp qrcode 0.0 0 0 0
%%BeginData:        286 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  06)#BD  e*  F+L_Q"  0Op
s'_E-,f4DKCt)Ou  "b#@<  ,jr  A7^  o fOu  "b%  Df0  Z-Eaa/  7A  moLsAW  ei&
AoD^,@<@M4Ap%p+  Ou"b7  ATD  j+D f1  R=  F`)  83F  HSF5AR  fO  fG%GKM  "a+
^(ATX(k04f$2De*        R"B9  !.< DK  BB  2Ou  "b3         @<W         i+@;
L!rOu"b1@<-F#+D         ,%uF  (  LL  jD  fBf  4Df        0WZY        :js=E
bTE(FEqh:P!+/J!  Ko='%<  $3-  B  l@m 1H ]kFA  @;L  !rP!+/T5^e  epOuSV6P,4<
rNWD;+NHB2`AWf3  'OtDh\  P')  p OOu%    N5Ot  Ccr  F_-^lI?ITY  P%BdtOuY16E
-,f4DKCt)Ou%NL<  ,Z_tBl  @m1    H]g1    5P"B  V$E  cYf=05YcC+  C\c"@rGmhP%
'TNOu"b+L]ESo@U  X:eDe   *F+N   WEILN   I-gJ  D0'  ?Q5&-6EP'N  4"C6AUR!KmI
:C6CcD1QlmD3/@Q         j"-Q?   @/8]H  @P!3W  :!K  sFF5*C/R30  Ia,"-TX>"-P
j29RV8N3,N_LP!3       WD5*C2S  @VV&,0  5?Y6O  u"b  #@<,jrA7Zm  #F(^:/C6D8R
1Qk"OP#ZpnAUT_@04J@1Ch7K,@UX:eDe*FB@ZiNY@r,_"ASdA1F`)83FHSe604eX0AThX$+D,P
4D..OH"D2dmCm$r.NWDk&H]A,#I?ITn1OYEcEaa0=04f$2De*R"B9!(7@<[kjI?IQ@DI[TqBl7
RD"*.goP!+.FD0'?!BlnD=@UX:eDe*FB1OXU'Ap%p+@ps=t+?Vb>DKTf-EbT#+4?P8j+BsXNLe
W\TL&ei?!<7cS6A>M]L&oPR![rd)N.qE;L')LO"9+#X9nif1L'<*^"q64j]nQc1L'S6C#e5TqB
ncsWL'mj5$h8r[dtS=FL(74<%n23a5)'Y8L([79'4ln4Kn^>1L)/!f(^Yp7:PKchL)[C'023Qn
La%X>Lh2;@Q%f:]L&h7.!@<I$D2&(qL&qC1!aLH]Z\AQ%L')(C"5eh93eddML'9nu"l+h:5_]K
EL'LP0#Rc@mN.qXCL'd@($B9cJ.>A5bL()ai%A&:aD2&QiL(G\d&GLnkm"Q.NL(gbF'Z#M=gg)
R1+BsX@LbOWZLi8"JOG3b@L&fPS!<\&W3/.HML&n?0!U5=?7"tb[L'#,E!saP_Ck`&!L'/lY"G
_^7aG'jnL'>5E"uM&=[Y>"qL'N]m#UP32Kn]mlL'ai6$>tS*onEj.L("BC%'50m=b[CsL(;Oa&
"-]V80D,m&VqWe3f$[iC5)_HL&dZs!6U#rl\5E_L&jr%!Hs1uX+gZ)L&r!B!a:<[U4ra7L''#^
".+`EabBp@L'1J1"O)T(#)3;DL'?Cf"tbQ6NJ7Z2L'MFI#NgaHD2&>pL']kp$/C7B6&#`ML'qp
S$h7LF5!CW.CiF&rDKTf-EbT#+4?P8j+BsX>LbFQYLiS4MRYCg[L&g.d!>gIk:PJn.L&oeY!Z-
RmCPDn[L'%('"'1-YWeLWlL'3'^"Q>(=8;7;TL'BJh#,m7]4ba3]L'Ub5#d8sh6&#]uL'i'X$Q
+U+_1iA:L(+rR%FKn?ObOBJL(F$5&BJ-19d!Yr'Sn)l4c!9tHA2EgL&eN6!8WA1#)3.;L&l1H!
MbAMj+[UHL&tJ3!g&-<hM)+dL'*Ei"3Q?$$\ee%L'6Fh"YPN5X+gf_L'D4D#/l6$089_SL'U)"
#el$"6&#]gL'gJ+$J^@D:50/EL('<$%6n,O;'9)!&;V?_08MuO=,:[KI>.`mL&eoA!8WA1",6h
)L&k\:!I0>"WeLQ*L&r$C!^;>?KSBQBL'$Ll"#kr:HA2O>L'/*C"@e+KP_K>0L'9&]"dOfGgP,
o1L'FH.#5a,[983\SL'STM#_e!=qM#;u>q\_k>DNWB'Smui15J2O</=h9HA2E\L&eB2!6Blpj+
[R:L&i6J!C;G@D2&(YL&o5I!UYUC/VX="L&um[!hb8Lk_90IL'(h<"-/*<^4labL'0Jj"Fc(.b
(^'=L';UP"darIqM#25L'DsY#4@3N4C''n4tgAjFCcRW4>0AN>DNlI+G_n2:5EY>!/?4.RYCgX
L&g@j!=snc6&#DYL&n9.!Qp,u#_iCQL'!$_!mZN&(kr,rL'+-("7([E6\Y`-L'7=,"]pE^\V::
_L'Cn;#/l6$0STh*L'SKJ#`OKDs+Ui0L'e$;$B'WGq1]96>q\np>DNcF)Mfl!5)<0oC5@1j!18
K@["\S2L&h+*!?[$s983I^L&mg!!Q'QlpkAi(L&u=K!h+iFa+a[(L'(S5"-80=jb<m_L'2(B"K
$nVn:h*ML'=Z5"p0M`>_WHoL'J<F#Btn-`J+XSL'XW1#od/';'9)!$]#LQ+G_Y+4GZUc<etRH!
.oq*Q\GLFL&fDO!:bdE!ep_$L&jVq!GmJkMM;/CL&p:g!W@`S2220BL'!Wp!m?<"mtLojL'(t@
",qs:eqO;3L'1V5"H\?@b_?9'L':)%"cnBAgP,n_L'E-501[3iL^/_GL_tplLb+?CLd6bqLgl0
aL&d'b!1S]CZ%`7qL&g"`!;_EN(kr&LL&k2,!Ifb(PD0+IL&oPR!WRlU(PVugL&u@L!g89>\qU
:KL'&3G"%n:MJqaBAL'-%^"<3'u7>:qdL'5DK"Sl=G5!CW8@;]go+?Vb>9H[Pq$A]CP+G__-6&
8Ep?\il[!0)^5VhP2kL&g4f!="8Z)MS8XL&l"C!KDg7\qU7LL&qp@!^)2=C5)e_L'#bW!t^1h8
qmG&L'+N3"6tUD.Y\(BL'4c9"SmcU6\Yc$L'?4a"t>92I>.sBL'JT%023QnL^8eJL`2'rLbsoR
LeEP0Li8"JK8'AqL&eK5!6g/thhD.1L&i$D!B,Z5=bZs-L&m`t!Od^`i._:EL&s)a!bR/gN.qD
@L'$.b!t'bb983OtL'+c:"6tUD,_cG)L'3lu"NZ<$%#+p`L'=&P02WirL^/_EL_PXbLa@j/Lc'
uTLern5Li%rrL&dKn!2"uG["\S#L&g.d!:tpG&;C37L&j>i!F1?[G_Q6cL&nf=!R?E#n:gu[L&
s#_!aLH]HA2L&L'#\U!q_3L(5;oVL')7H".P#Ib_?6#>q\_k>DNE<#`'"I'o3fb,`!h(1l+8M8
r-K'@#/ZUG_Q3SL&dZs!3LtU^P2a8L&gOo!;M9L%Yb!(L&jAj!D8(ID2&(BL&mQo!Nq.XabBiY
L&qR6!\&j*:5/gUL'!-b!hk>M]nQUVL'%um+?ht35!G,c05YE5Ec5GrE-!-a4>1SpD.Ra%@j!l
r02*KmL]rSAL_kjl>q\np>DW<8#`'+L*aLEr+Bs[%M#W;2L_X2K80D,ms+p]2s+p\\+?htB@;K
mr@;^4)ATDKp+?Vb>9H[Pqs+gl8%Ytj*023QnM#W87L^T"O>q]%t>DW<8s+p]2%:(VX+Bs[%M#
W;2M#Ua'5!CW/H$!U?4?P8j+Bs[%M#W8;L_!cE9d!Yrs+p]2#D`gp02WirM#W;2M#W8;>q\_k>
DW<8s+p]2s'6a24tg\[DJEl.4?P8j+Bs[%M#W88L^@??9d!Yrs+p]2"Gd=h02WirM#W;2M#W87
>q\_k>DW<8s+p]2s'6a24s3$QOu"b&DI[iuCi^^]4>1SpD.Ra%@u(+<@;Kmr@;^4)ATDKpL]K/
<H$!VR!\\=tDJEmA"$So31G<<W@ribT4>1SpD.Ra%@kVD2@r?F+ATDKp04A[9BOPe$D.Ra%@kV
D2@ps1mBOPe$D.Ra%@kV;:FCd+:DI[.$FCd+@@;]go04f$2CLM*qBcoT'Ou"b.Bk29->E/h?0J
G5A">DMa0TH8i0eb;A">MSa0O9ht05YE6F!*S-024/D>E/]>s+p]2s'79P1*Be]!AKN70o5jcs
'79P1E]n^!\c<g!\c?h!\lBh!\lE80248G>E/e>0JJLh0JG5A"#)G`NWUsi0jTS9L]N;[H\_`d
V2,JA5*@U:Bk2:5P"7c#Ou"b$@ki(D3?VO^$A]"E#`&alOu"b$@kfZZD_a3n>DN]D$]#@M$=/f
N04SKI2frsp0HaSU%YtRM&;Ua#Ou"b$@r,^oF!*S-024/D>DNB;s+p]2s'79P1*BeW"Gd/9s+p
\\0245F>DNH="Gd2:"'mQS1a$"Y#)EG="c*:eL]N;4L^AEa!g9C9$BdT90OnTIFDj0fP":B9L]
N;MH\_`dV2,JA5*@U0@kfZZD_a5!P":BJL]N;[H\_`dV2,JA5*@U0@koubD_s.rP"7c#Ou"b$B
OPpu@;q5Y0JP==1c70M3&s8k6UX@47n?3D92&&T:Jand;cHat='/U/+=&6_.kNA,3g)9P@q]:k
G%#3.Lb+]HOu%moL]N;_H]g?uBOPpu@;qAnP"Us%@q]:kG%#3.L]`G6P)#3FI?I,SASu!qF_t]
1Bk)KCBl9(tOu"b0F`\a?DN\Ib$Bf4]"-QQ<!KmJHV33VfBnubP1G<L!!0T-bBcq,-P%'S;H]g
XBP#Q-<Bl9)CL]Wa=P%K'$$8=.f0JG170JG2:$Bh6K)3QsnDBNYL"-Q?@/;O@`$Bh6K0TnDY@Y
bAS5*Dn.5*C1EBcq,G"-N\J1OXUa+DG_V@Yb)KWKKDkNX%6l0JG170SfssV32^Z3,*7QBnuhR9
Tgr_!f.)EV33Nq30Ia,#Eh96WKKH.GqWkSBnuhR!Ko6eH]A4_0JG2:"HoUE)3QsnDBNYL!Kp->
/;O@`"HoUE0TnDY@Yb/M5*Dn.5*C1EBcq,G!KmJH1OYEdI?ITn3,`q]P!3WD5*C2S@VV&,05?Y
6Ou%NLAT)^5L]D1Q9RW'6Ou"b&DI[*kE+iZtF_t]1Bk)KCBl9(tOu"b0F`\a?DN\Ib$^,=^!g6
H;!KmJHV33VfBnubP1G<L!!0T-bBcq,-P%'S;H]gXBP#Q-<Bl9)CL]N[<P%K'$$SX7g0JG170J
G17L^TBBOr9EB@q]:kG%#3.+DG^9Bp),P98G0_Ch%-eEctl-F!,17+DHW4Oo^_=P"Ur=L]WA?P
,4<qOuSV6L^TA0P,XU.P'J]p+DHW5Oo^_%I=$tY0JG170JJ:eP,4<ZOuQrb@<-O"Ci^_5DBNYV
99Mr(!f.&DV33Nq30Ia,#*M05WKKH.GqWkSBnueQ!Ko6eP#[Z)Dfp/b5&-6EP'N4"C6ATNC6Cc
D1OYEtDfp/X!,@ZjI?G)'1G<<W@q'_*AU?(EDN[2H1G<ZhF<G:8P%'4QP&-;XOu%moL]M4-P%'
4JP,Wd]Bp(ZC1QD_p0JG170JG2:#a2$I)3QsnDBNYV99Li^!f.,FV33Nq30Ia,#a.B7WKKH.H#
IhI+DHW;P&,pVM#WWnP'MJ=88iWmI?G)'1G<<W@r#LjC2&#JBl9(tOu"b0F`\a?DN\Ib!g6H;%
?bOjV33VfBnubP1G<L!!0T-bBcq,-P%'S;H]gXBP#Q.5+DI!3L&h:;Ch[c0BnueQ!Kp*=!KoEq
!!(qBP%K&o!!%R8I=$VI!5UpKP#[[EOuS9mOq39I^liMs5)'(;Op$pKNX[Zr0JG170JG170JG2
:%?dQN)3Qt8",Qu?LPQ"f%?dQN0TnDY@YbJV5*Dn.5*C2S3,`q]P!3WD5*C2S@VV&,05?Y6Ou"
b*+DHW5Oo^_%I?J/[F``%p%[&VZDI[TqBl7RD"a+^(ATX(uHS98ZD.Ra%@rH-kGp%3LF_-^l04
A[9BOPe$D.Ra%@rH-kGp%3LF_-^l05G!6C2%U%@<iu;EckrV1G<3_FCfB+@<iu;EckrV1Lad5C
h7L?!g7;S!0V2G05G!6C2%U%@<iu-@;L!rOu%NL</:O1!FfJXCh7L?!KsF/056S5Ou"b#@<,jk
@<*K"@<,jrA7ZltP"Uro@UX:eBOPq;0Tp$W@<,jk@<./aP#.<^HS98ZD.Ra%@rH-kGp$^-Cia0
N1OYEc@q]:kG%#3.+C\c"@q]:kP$jGlHS8fDE+iZtF_t]1Bk)'s@<iu-@;L!rOu%NL<,%-iP%o
dQP!+/$@<,jk@<.)&JWaVS@<,jk@<.)&T9<$6EaiHt@q]:kL&g.pAn#1h@q]:kL&gP&:m,j^"F
De;@;]goDeid,+D,%uF(LLjI?IQXP#Qjm87HjdAT)?mH$_2UDI[TqBl7RD"CcXuAWeitP#Q4*D
JEm(CLML804f$2De*R"B9!.2@;]goOu%NL<+0T^BOPe$D.Ra%@rH-kH$_2UDI[TqBl7RD$t3sk
BOPe$D.Ra%A!/WrP#Q=AD.Ra%@rH-kH$_2UDI[TqBl7RD#B"[$ATDKpOu%NL<.0p/05boL@q]:
kF!+q#Ebo<)+D#G#De*R"B9!.2@;]goP!+/J!g6H0P#RT#G%G]8Bl@mL"a+^(ATX(uHS8l;E-!
.6DfT]'FH-K9F_klW4aUd`Ci!TiE-$GS+Dkh&Ec5GrE-$Gj<Fp&XDe*R"B9Go!@r,_"ASdN&Ou
"b*L]NYpHZ!tC@q]:kF!+t$E-!.9L]N[<P"UsHH]gXBP#O)K+DHW4Oo^_%I?J.pG%G]8Bl@l3B
o!+P!g9CC0Tn5(DfT]'FH-NABk)1%P!+.FG%G]8Bl@mL!_jen!g9CC)3Qt&ATDj+Df1@3P!5%S
Ou%NL<.0p/04SF0F!,(5Ec#6,NW`s:Ci#7tHY.D:Ch$mmF+&BXD/!L#De!3pF+'3OASu!rA8,p
oP"Uro06UoIG%#20AoD^,@<@M4Ap%p+P!+/8ATDj+Df1^hL]N[<I=$-KEcYr5DMS=V98G<cWI9
q0Ou$ZZCh7d$ClSNiP!+/0F_tW%@<-E3@ps=t027U&G%G];@;M*"P$r\jARfOfG%GKM!DS_5I?
IQXP#Q"&Ch7d$ClSNjP!+/0F_tW%@<-E3@ps=t02[m*G%G];@;M*"P$r\jARfOfG%GKM!E#"9I
?IQXP#Q"&Ch7d$ClSNnP!+/0F_tW%@<-E3@ps=t01_7!G%G];@;M*"P$r\jARfOfG%GKM!D&A0
I?IQXP#O)OBk/?'Bk29-G%G]8Bl@mP94`!NG%#3.+D#G#De*R"B9GoN99M(a@q0=dDBNG!Ch7L
*+Eh=:F(oQ1P"TA(@s29sF!,%3@rGmlDJ,,*P"Uro04f$2+C\c"@rGmh+D#G#F!,%3@rGmlDJ,
,*P%9_?Ou&+00JG170JG170JG170JG17L]CppCh7LI9OhRKAT![-Or9EB@UX:nASrW%DI[TqBl
7RD"`%OaC2&hoH\_`d;LO^-Ot;Cj@q0=dDN^iZ0TnDY@UinaAT!YpP,XU.P'J]jA!0$=1G<TdB
4>RsF!,=6A<LD3@r,^oOo]-3A!1;a!Ks:B1Mq2G@VKq*L]D:+A<M4TF(\rrFE8RABk3B9@q1[I
D0'?!BlnD=D/!OD@UinaAT!Y3ASu"@H$tiU05Y9BEbT$)+BosmNWj96@rcLJ!_kD*$]&8J@u)C
7L]WBBLgu6N>p*@-!Jg`3s+p]2s+p]2s+p\\+C-*oNWj96@rcLJ!_kG+%>\JL@u*rcL]rS=Lgu
6N>p*@-!Jg`3!Jg`3s+p]2s+p\\+C-*oNWj96@rcLJ!_kJ,%u=\N@tju:>DNK>#`)uH@pL3]L]
N;3L]N;3M#W;2M#W;2>p*Dq>E/l(Bk)1%NWMp3L_5GPLgu/>^fuU#L^JqJLgs^5>DN<9!/LZ3!
/LZ3!/UZ2s'6aQ+Bsj/Ap%p+NWCkj'o6=T@tk!1>DNN?$A].I&R?M`L]N;3L]N;3L]N;3L]N;3
>p*Dq>E/huF_klS!A]HKL_>MRL&kpkL^JqLL_bdd>p*@-!Jg`3!Jg`3!Jg`3!Jg_]+C-*oNW`s
:Ci#+41Pd'-(5QIT!]O>>%u;-[,`"!W+BsX&L]E53L]E54L]E54L]C^'>p*@3"D2dmClSNQL`q
QmLgu/A-X2B@La7d5Ld55g>DN<9!/L]4!/L]4!/Lc6!*p^Q+Bsj/Ap%p+NWD"n-&<Uu@tk+F>D
O2R0Si8U=C!%RL]N;3L]WA4L]WA6L]WA6>p*Dq>E/huF_klS!B,`_La%XbL';3oLa7dALgZ$X>
p*@-!f-i4"Gd&6"Gd&6"Gd%`+C-*oNW`s:Ci#+42i'&A(5O;l"s@-+.#:EMCk_qA>p*@-!f-i4
"Gd&6!f-u8"Gd(a+C-*oNW`s:Ci#+43/B;F(l0Yr#EW/G0Sihc!/-(,S6[7AL]WA4L]WA6L]iM
8L]iM8>p*Dq>E/huF_klS!BGrnL`2(%L'\u,LcgK2L&dm$!5Mk_>DN?:!/L`5!f-u8"Gd2:"C3
-U+Bsj/Ap%p+NWLphLcL82Lba\lcs);sL&cg[!5O<hi*@I0L]WA6L]iM7L^&Y:L^&Y:>p*Dq>E
/huF_klS!\lEc4bt/82MMX5>DQ+1!1&?>i._7<>p*@-"Gd&6!Jgl7"Gd2:",I4g+C-*oNW`s:C
i#+50f"PNL`hL7L(9;LLgYr;Y_E/]L&j,:+BsX'L]WA:L]WA8L^&Y?L]h!+>p*@3"D2dmClSQO
1PeJU,)AF;&>36`BSHN,L&iEO!FT1U>DNE<!/Lo:!Jh#;"GdJB"C3-U+Bsj/Ap%p+NWLplLe3C
@Lb=Dp.pIgSL&fk\!C2A?J6a:%L]`G6L]iM;L^T"BL^T"B>p*Dq>E/huF_klS!\lQg9o'^D0SU
9g>D<-2L&g^t!GI2gY[&AUL]rS8L]rS<L]rS>L^T"D>p*Dq>E/huF_klS!\lTh;2?-H156S1>D
<->L&i-G!LSTBi*@I0L]rS8L^/_<L_#:CL]`GB>p*Dq>E/huF_klS!\lWi<JV]P2MN)r>D<-VL
&j,c!PjEk'O;hcL]N;8L^Jq=L]N;BL]WAE>p*Dq>E/huF_klS!\lZj=bn,T3//D'>D<-bL&k2,
!VhBN9O/cFL]rS8L^Ak?L_5FDL]WAG>p*Dq>E/huF_klS!\l]k?&0PX3ee^Q>D<-rL&l+F![<@
#MHq?/L]`G9L]`G@L_5FGL^AkK>p*Dq>E/huF_klS!\uHc@>H+`5)(6H>D<.9L&ms%!a(0Y]Nl
XaL]`G:L]`GBL_#:FL_#:K>p*Dq>E/huF_klS!\uKdAV_=^157&">D<.9L&nl?!ec:0mTgr>L]
iM:L_5FCL_5FIL_GRK>p*Dq>E/huF_klS!\uNeBo![`157/U>D<.UL&p(a!j[O_0O5f*L]WA;L
_5FCL^/_ILa%WT>p*Dq>E/huF_klS!\uQfD296h2MN]W>D<.gL&q((!q(dFKO#^)L]iM;L]iMD
L^T"KL_,@P>p*Dq>E/huF_klS!\uTgEJPTj2MNgu>D</0L&s&`""K$-^g/'eL^&Y<L^&YFL^T"
ML`V?R>p*Dq>E/huF_klS!\uWhFbh/r3efAb>D</<L&t&'"(m8j)I4IiL^8e>L^8eGL^/_OL_b
dU>p*Dq>E/huF_klS!\uZiH&*Mt3efLk>D</TL'!$_"1X'g<a?hPL^Jq>L_GRIL`D3TL`qQW>p
*Dq>E/huF_klS!\u]jI>B)'5))'C>D</lL'##B"8mlVY[&AUL^8e>L_bdKL^8eTL^](Z>p*Dq>
E/huF_klS!\u`i!.fqELba]I$X8>dL5#c^L'/EL"RKD:>DNB;$A\e?(Pi3M+,C;\+'g!p+Bsj/
Ap%p+NWLsrL&cp`*f)_/5T<p^!MkGP&;C=0L':%P+BsX,L^/_NL^/_:La@ijL`0PA>p*@3"D2d
mClSQQ0STRaL`2(+L."[=L&o/G""]00Y_E=S>p*@-"c*MA'8R!O%u;*Z(Pir7+C-*oNW`s:Ci#
+51GOUaNJJX33/0tn>D<1:L'(t@"U]tfqHY4JL^f.BL]WAQLan2]L_kje>p*Dq>E/huF_klS!]
)Td!0N']LcgDd$X8>dre:NFL':&$##nkN>DNlI!/Lu<(PiES,D["h,@)Et+Bsj/Ap%p+NWM!mL
&dKp*f)k3;4CdE!ZZpse:n."L'Fed+BsX6L]N;AL_Y^dL_GRPLb;sU>p*@3"D2dmClSQQ1kl!u
La%X=L/prOL&sDj":U"gqM#4\>p*@-%>Y4E%YtpW/;OOe4,<oC+C-*oNW`s:Ci#+51GsmeSVS>
C2MPAm>D<2?L'/oZ"u_2@@U1*\L^](EL^](XLaRugL_bdq>p*Dq>E/huF_klS!])`h!252cLba
]kcs)5+=G?rdL'E`o#J==b>DNK>%Yt=F,)@k-$A\b>5[>L<+Bsj/Ap%p+NWM!qL&e'+*/HM-A)
LRG!d9;$["\eML'TVA+BsX6L]iMSL^o4qL^JqTLb;sU>p*@3"D2dmClSQQ3/.F4L`hL7L1q3'L
'!To"RLjJ7"tuK>p*@-"Gd\H%>Z-_0Sg3p.Yo3Q+C-*oNW`s:Ci#+51HC0iXb[mO2MQ*W>D<4+
L'8iW#G-YV#$i?UL_PXJLa\&aLb"8sL^Jr*>p*Dq>E/huF_klS!]2Tc!3q>$LcU93cs)5+mY1m
ML'RL.$%?/&>DNrK#)EnJ+,D+s,)?qh4^B19+C1-d04eX0G%#3I"ADNe87c:IAThX$P)YWIP%'
S<P')pOP')pD0564BOu%G<D'3\,FE2)*F!,1[99M(aAo_a1+Dlo7P"Uro06UoIF!,=U!Kp*=1G
<f`H=\49L]W`4Ou"b"F)WlWD28:W99M(a@<6BD+Dlo;P"Uro05bWFA0>`F"d2NA1G<WUGB4mED
/Ws@#a/)K1G<cXBlkJ8D/Ws@#a/qc1G<QS1h%S>@;L!rOu%/nH=_m?P!*l#H=_mCP!+tKHS98H
GB4mE@s<!M!KmJH1G<cXBlo.2Ou"b-@l.X;FE2M8Ou%NL<%hfmGB4mDL^'#8ARfP"@;M*"Ou"b
 %@s;u:DI[m3+D#      &,F-<  Mc1G<  9UDe'  u$  @s<      !M#a0"      ?@l.YAL
]i-QL]Djd<Ka>E1        G<<  L@PK!  BL^0)  9A  RfP         "@;         L`$P
&-:SOu"b&@q%29D  28F[9  4_  ULG%#   3C!g  7A  U!K  mJH99  M(a  Deid,  +EVX
HAWei]DfT]'F<G1  9D01q  XHS  9;Q    @<iu  -@  ;L!  rOu%NL  <-  DhnF(o  Q1N
WjQCF(KHVD0BK2F  (oQ1+  Eh=  :F-  : C'"  FDe  ?CL  MK2Amo  Ls  AWeitP  #Q:
>B4>RsF-:!CD/Ws  J:jXj  6CL  MK2 Am  oL  sAW  eit  P#Q"&@  PN  ]=P!*A  d@P
Wc>P!+tKHS9;Q@<        iu-@  ;L! rO  u%  NL<  ,ZP         \H$         b]>I
?IP_Bcq,G!KmJH1         OYEt  0  4o  -C  D..  N/A        o_a1        Ou"b7
ATDj+Df-\@ATDjT  1G<9KE  +0r  #  @s; u: ARf1  (+D  #%l16M[$;N  `ghARf[g+Dt
\5F!,%(@PK!:@q%  3V!Kp>  k@r  P n?WK    K%jF  CfK  0F!*S-0240  ]"#)D_0243^
"Y_Va0JG.S1QD\o  0JG170  JG.    S1l_    kr0J  G17  0JG175!G,c  06CcGD'3q3E
c#k?G%G]8Bl@mP@  !d!,E   c#k?   G%G]8   Bl@m  P97  ;/I">DM`0R  ]*aOu"b5ATD
W1FCfK0L]Ct&De'         u-F(\   rrFE<  USP,W  P7E  c$tKL]W_WP  #-Lg5(/SnP'
)p]Ou$rrB4>RsF-       :!SATDX  N@ZgbT  V33fo  !,Z  di@VKq*P'N  3MD0'?!BlnE
Z@WZ1%D3B/tD0'?!BlnEZ5*@]TE+*9"A8Q6qP,4<tL]E53E+*:?@Yb&JWI&SmA<K-40Tp[/P"9
P#A;C5&F(\rrFE<Uj05t?1F*)GD+Bsj30ekC:0ek@9NX.<m0JP780JQjr1G<]UA8ZO,L]ESoD0
'?!BlnEZ@Yb;Q2NeW-#a0"e/;ORBD/Wr-Ch#;2H\_iRH\_]NP#[[EHZ3D(P!3hnA92j5F!,F1A
8ZO,P"Us`05t?1DKTe=E+*9pF_up8Oo^@?P%p.9I?I,S@s;u:A7Kh)OpR:-L]E53@s<!W@Yb&J
WI$:.P!5$b04Jm1GDHNf1MgPX@N]/'@s<!W@Yb&JWKKE-"FDe2E+=*J"HkQhP#O)EG@D\6@:UK
jL^9/[@W5h$P"_#p04T3^!0T-o!/LYbE+=*J!KsF/056S5Ou"b$G9CC>L]V%)@s9&0P,X6<P,W
#;E0;b^G@D\/P"UTbP,XU\Oo^_%I?I-2GB4m:+CfVYG^Y`G062,BCi<r/>DN<7!<7D/3/@X!Cm
$c4!<A9TH\MPAP/2R0<.0p^?'6usEcZ&8B8-EeOpR:-L]N;4L&h7#OuRK'@;KjpP!5%%P!3o-C
i<sB",Hu@LQZn1P"76HF)Z/<A:'+6Or9&UP&6@GL]ETTOp$,PF)5c-P!5%%P!3o-Ci<sL5*AR%
!JUUSP%o#Y@;KjpP!5%%I=%-"P')Q\I?ITYOq*X204Sp3AnH*,>DN;k@rPn(L]DjdK3aWrL]E5
3ARf[gL]N[<HS9)r5*@^3De3NmF!,1Q!KmInDe3NmF!,1[99OO6M#W83HS9,s5*@^3De3NmF!,
3?@rGpjAof)0L]N[<P"T;'AS,Oq+DR'4EcYZ*DeC2,P"Th:E,ol-P/3<+I?I-2De3NmF,0g+De
3NmF,0gZ96,)^Ci<r/Bp),0F)Z/<A<M1cP"769De3NmF!+t2AS,OqL]Cq'AS,OqP%'4JP,XU<O
u"b3F(9-!ATN2OEcY`7F-8_M1G<ciDIal1F(9E8P%'S1062,DGB4m2+EDO5GB8+ZP"B4pE+40M
!.C#_?'7""!/LYrF)GNE!KsF/05Zk9Ou"b,+EDO5GB4mDP"UroL]E53ARf[gL]N[<HS9,s5*@^
BF(9E8+Di69Oo^@>Oo]'2AS,Oq+D#&%@N]EKWJCS<WKKni+EDOBEc5J2EcY`7F!,<BC6AUR!Km
JH99R,SG^Y`GI?I-AF(9E8+EDO@A0>GnE+4u(I?G)'1G<9KGB749ARf1(+D#%l16M[$$'I(tAR
fq*@N]5l@PK!:@q%3V!KmbP1Pc$e!G,bM0o,jnWI$:4P!5$bA7Kh)@N]A-@s;u:BcpqrE+4uHA
7KRfP"_$`ARfq*@N]A-A7Kh)@N]BJ96,)`De*F#P'DD<8;I8%!G,bM15GsoWI$:4P!5$bA7Kh)
@N]5l@PK!>Oo]':F!,%(@PK!9@rPn?ChY#&@rPn5!KmJHCm"g0@rPn5!KmJH9TjX3@s<!'+D#%
l0d(1n!G#\aF(-8'@q%/8Bp&L[96,)`De*F#P'DD<82"IsF!,@1GB8oROu"b$GDH6^1Pc$e!G#
\Z@XBbBP!5$bL]E53ARf1(+D#%l16MZo!KsF/05?Y6Ou$epA7Kh)@N]EK99NbIAp\$3F!+t:+C
nu+F(-8,P"TMP99ONQ@s9&*GDH9_!Ko6eP#Qjm8:?XlL]E53ARf[gL]N[<HS9)r5*@^X!/LYe@
q%/8ARf1)Oo^@>P,Wd]C6CcD1LkWM+CfU<ARfq*@N]EK950P^P'AWiG9CC>L]NY>Ou%NL8:?Xl
Eaia)L]ET7HS9>HA0>B+F-:!g!KmJH$'I)`@:Y/o@s<!WH#R2&+E1b"P%'4JP,X6;P'AWiGB4m
G@:YNWI?IQG@l.YA+Cnu+F,0j[WJCRm@s<!M!g9O0056S5Ou$TlF!,0>@s;u:Bp),F&!@'O"Hj
:YG[kr=+DDs.GB4m@L]NY>P"UW/Oq3?ZOp#9=F!,1[99O=YG^Y`G@s;u:DI[m3L]N[<@s;u:DI
[m3L]N[<P"UTAOp$RDOq3_#I?IP_E+sQ<+Bot0BmO>5F(or3P&,K$s*^&_?'6usEG]lG+EM7CA
Wgkm!I^+@Ou"b'E+*i2>9I.+!Jgc4!Jgc4!Jgc4!Jg_]+BsX&L]E52L]E52L]E53L]C^'>DN<9
!/LZ3!Jgc4!/LZ3!*p^OL]N;3L]N;4L]N;3L]N;3>p*@-!Jg`3!Jgc4!Jg`3!Jg_]+BsX&L]E5
2L]E52L]E53L]C^'>DN<9!Jgc4!Jgc4!Jgc4!*p^OL]E52L]E52L]E52L]E52>p*F91Pc$e!G6
:ZFHU*h!KsF/06r^EOu%moL]M+,@<@;*P"UsIL]N[<HS9W,5*@]TAoM3%AoM1#+F0,CG`k^_1N
7&QF!,]MGp%*DFs(C9@ZktJDfT]'FH-K9F_klW4aV-^G]P!KBmO>5G`o%^!KsF-+E;7A+D,S%P
'Cq[G]P!P+EM7CAKZ8]WJCS<WGucu+D,S%P'DD<<.0p#I?I,S@;KRoE+*i2>9I.+!Jgc4!Jgc4
!F6gPL]N;3L]E52L]Ld(>DN<9!/LZ3!/LY]+BsX&L]E52L]E53>p*@-!Jgc4!Jgc4!F6gROu"b
1F`_&.B5VZsFF,Z[H'1@S1G<]lP!5$bL]E53L]i&XE+4toOu%moL]N;7HS9>HP!5$bE+sQ<+E2
QJE++n1E-WRF@Zgb3D0@%1ChIX)@<<W2@ZjB'@?O9HG^Y`GI?I-LOq*X2@<6BCL]Wa=@<6BD+C
T>116SVXBmO?H%?d];056S5Ou$g."E8L*@;KRoE+*jE"DJutF`_&.B5VZsFFB<C@<6BCL]Wa=@
<6BD+CT>116SVXBmO?H$'M9706iXDOu$NfE&*4NP,Vl2E&/VFF)WmtWH2d"AV^YUWI$:DP!5$b
GT_8SE-682ChIX)@<?p\8:?XlAoD^,@<@M4Ap%p+P!+/J#`&M&BmO?H$'M97056S5Ou%&kG]P!
AL^%j9Fs(LT!KmJ>!g7;]G]7AAF,1$7+E;7A+DHW4Oo^@?P%p/)I?I-LH\_r`!HVt$AV^AMWI$
:4P!5$bE+sQ<+DHW3EG]kABnueQ!Jgf?C6Eg\Bm=]T!,3QqD0@%9L]NY>L]W`SP'DD<8:?Y$Ao
D^,@<@M4Ap%p+P!+.FAoD^,@<??pE$/@->9I.+!/Lnd+BsX-F(or3L]N[<>p*Dq>9I.+!Jh"e+
BsX-F(or3L]Wa=>p*Dq>9I.+!f.+f+BsX-F(or3L]`g>>p*Dq>9I.+",I4g+BsX-F(or3L]im?
>p*Dq>9I.+"Gd=h+BsX-F(or3L]rs@>p*Dq>9I.+"c*Fi+BsX-F(or3L^'$A>p*Dq>9I.+#D`X
k+BsX-F(or3L^0*B>p*Dq>9I.+#`&al+Bot0BmO?H#a20C#[JQY+BosmL^8eA>p*>oF(or3L^0
*BL^79/>p*>o>DNQ@"^N6T+EM7CAV^PRWJCgc+C-*o+BsX-L]h!+>9J!$H=_m9P,X6C>p*Dq>9
I.+#`&Rg+Bot0BmO?H"Hoa?#[JQY+BosmL^8e<>p*>oF(or3L]`g>L^79/>p*>o>DNQ@!F6gP+
EM7CAV^DNWJCgc+C-*o+BsX-L]C^'>9J!$H=_m5P,X6C>p*Dq?'7!lHS8uLEc#6,D..B+>9I,m
>DN<9#[JQY+BosmL]WA<>p*Dq>9I.+",I4g+C-*o+BsX)L^79/>p*>o>DNH=#[JQY+BosmL^&Y
@>p*Dq>9I.+#D`Xk+C-*o+BsX-L^79/>p*>o>DNQ@#@/HX+BosmL^8e@>p*Dq>9I.+#`&Xi+C-
*o+BsX-L]h!+>p*>o>DNQ@"'m$T+BosmL^8e<>p*Dq>9I.+#`&Le+C-*qOu%NL<G$/iD..O'@;
pR?H[V&KEG]kAE+sQ<P!4[%P'DD<8UZanF(or3Lb4c^HS9PREcYr5DJ`g$+Bosm+Bot0BmO?H$
'M9D"^N6TL]qj6H=_m=P,V_0>p*>o>9J!$H=_m>P,X6@>p*@-"`nC(AV^\VWEgWP+Bosm+EM7C
AV^_WWJC^`+BsX*F(or3L^TBF>p*Dq>9I,mF(or3L^B6DL]h!+>DNE'BmO?H$'M8n+C-*o+Bot
0BmO?H$BhBE"C3-SL]hd5H=_m>P,V_0>p*>o>9J!$H=_m?P,X6?>p*@-"ES:'AV^_WWEgWP+Bo
sm+EM7CAV^YUWJCX^+BsX(F(or3L^B6D>p*Dq>9I,mF(or3L^K<EL]^p*>DNB&BmO?H$BhAo+C
-*o+Bot0BmO?H$^.KF"'m$RL]_^4H=_m?P,V_0>p*>o>9J!$H=_m=P,X6=>p*@-!cr(%AV^YUW
EgWP+Bosm+EM7CAV^\VWJCU]+BsX'F(or3L^K<E>p*Dq>9I,mF(or3L^TBFL]Uj)>DN?%BmO?H
$^.Jp+C-*o+Bot0BmO?H$'M9D!F6gPL]MR2H=_m=P,V_0>p*>o>9J!$H=_m>P,X6<>p*@-!HVt
$AV^\VWEgWP+Bosm+EM7CAV^_WWJCR\+BsX&F(or3L^TBF>p*Dq>9I,mF(or3L^B6DL]C^'>DN
9#BmO?H$'M8n+C-*o+Bot0BmO?H$BhBE!*p^OL]DL1H=_m>P,V_0>p*>o>9J!$H=_m?P,X6;>p
*@-!-;k#AV^_WWEgWP+C1-dI=!VjATDj+Df0E#E$/@-?'7!lP#Z[:EcYr5DJ`g$H[C*fP"BY1F
s(a<G]T$3L]ET_I?I0MP"B8(Ec#6,NW`s:Ci#7tHZ3\DF,1*CBmO?H#a20,D0C^9P'DD<<+^&h
D..OH"D2dmCm$r.05Y-=CM%^,@ribsH]eDc!g7;HOq)i%5*C&E!g7;HOq)i%Fbg-_C426TH]eD
c"-RDIOq)hp!g6HE5)9<(;N_':!g7;HOq)i%Cm$c6!g7;]5)9<(C6AUGOq)i%Cm$c6!g7;]5)9
<(C6AUR!g7;HOq)hp!g4FaCkr1VC5;tJ!Kr5$!Jgf?C6AUR!g7;HOq(c\1OXU'D..L$Ap&!$F!
+\6P!5%OL]W`SI?G(eL]W`;P!4[(P#@GDL]W`SI?G(eP&-:@L]W`SP!4[(P%p-\L]W`SI?G(eL
]W_WP&,pVP%odTL]NZoOo^@?P%p-\L]W`SI?G(GOu%NL<A/2tF),h>D..L$Ap&!$F-:!q$'I*#
!/LYm@<64*P%'4JP,Wd]D3@)G1G<TRF))n>BmO>5F(or3P&-9fOu%moL]MR2H=_m5P,Wd]C6Cc
D1Pc$e!HVt$AV^AMWI$:4P!5$bBcq.5D..L$Ap&!$F!,=_99MMq!0TKaBm=\ABcq.5EG]l^98N
V24d#qpL]MpNL]Djd<Gc/cCER=6C*7M5G)-6Vs,r/#G^Y`GI?I-<@<64*+Di6<@<64IG^Y`G05
tiNGT_'AH=_m5P,XU#05tiNGp%0BH=_m5P,XU#04\d;M#WVo04Sp:L]NYp05boLL]ESoHZ3nEG
_c?_Ap]\+I?IQKBm=\AE,TfB+E27?Gp%*DG*5LSs,oNl@s;u:DKTfP#a/)K98EgjF_up?P%p/Z
P&?EnL]NYAE+sQ<+E27?GT^sDF*SmJD0C^;M#WWnP'AWtF_r7=F_up8Oo^_%I?IQ>Det41P!+.
F@rH1>!0T,kE,TfB+E27?G_cB`WKK&cHS8lICkr+T1G<]cF*JgHDf^/Z!KmJH1G<]cF*SmIDf^
1HA8-(I!Ko6XDf^2[!0Ur5Df^1HF(or3P"LmXHS8oDEZen,EesaYCm$S-E,TfC+E27?Gp$X3Ef
pHd1G<]cF*JgHDf^/Z!g9OG1M1QGD..OH"D2dmCm$r#Df^/Z#*M-4"FDe@Df^.GE,TfBL]N[<O
u%NL<.0p/I?ITYP%?:XG%#3!F_kl30lAdo06:WDCh8bnOu"b4@ra;[!-;XjCh7sV3/@a$8pc^%
L]Wa=OuRlQ<0DBPP"Cfm06:WD1Pc$o1Pc-h!cqjlCh8c=L]`g>HS9,s5*@^C@rcBs+DR'4L]`f
TL]ET$HS8u>@rri7@rcBs+DR'4L]`f<Ou%/hEbo;0C5;qSWJC_@9RCA[@s!ksI?I0b"Hks3Fcl
lj"FFm>"-Pf^L]ikAF(96,AWgMc8s44A06:WD1E^aKE\iM"Oo^_%I=$$FEbo;0C5;tTWKKo1"H
lAu@rcBs+DQ]7Oo^_=L]il5P&bn&F(95H+EM%51PdHB!Ko6eP#Qjm<IL$0I?IQXP"9Y(E\S\X@
raAROq*X204f<8Ch@g+CjRgVH#8^.Ou"b/0o,gm1G<W$L]ESo05`S%!0T,kEbo;0F(or3L]NY>
OpR:-05P'<FDtZ&EcW@EBmO?R$'I(tFD,B0E+*I$F!,O<H=`6GOu"b4BmO?!A7RD;F(or3L]NY
>Ou%moL]MR2H=_m5P,Wd]Bp(ZC1MpQ@CPVtH!,3QsBmO?R30H7aCkr+TWI&]3D3@)G99MJp!Kp
QJ4aW>UL]NY>P!4;@L]NZ&I?ITYP":aYEbo<C!0S:W!g9OG9TfcpG%#3!F_kl30lAciDDRFV05
`S/5*@^>0p2PjDD@;<Ou&8D06;DUEc6.EF*VUFBcqJ2H=`7UF(or3P"_#pD..I#L]E52F*VVCD
g-Pk5)96&=HYgoP!4[&Oo^_0I=$bNP!4;W<IL$%P'(e]AV^>L)i+QYWKKr<$Y=KiCh@g+Ci1tF
1E^QkOo[4R1Qjqb1N"q1!AA=FP!5$bP'&Eo@<6O0@;0b'+EV:2F)YQ%EcWmUBPDO,@;0b'+DbJ
-FDtZ&Ec[C"Ou%0)D/sQ=L]ET2L]NZ%H\_ZMH\_]NP#ZRKD/sQ=H]gRK!KpQJ!KoWpP"CgZFD,
B0E+*I$F-6ooF_QX3P#-LB@<--+CghC,E+*I$F-6TfF`_;2F)YQ%Ec[BFP'(Xt+EM7CAUBS(F(
or3@:Wn'P$!kJL]`eCL]ET$H\_ce!I^,1I?K49DDIA=Ou&77I?IQXP"76:@<-.>!-<F&H]eDXP
"Cfm05`ThA79LoLh)ZbF(or3OuSV@OuA+OP,XTEL]rr"Ot;CrP&-:;DD<8O16MZU1QhcV1m.lf
Oq*X204f<8Ci*lrEc6:XF*VVc5*@]TA8?4!F,0gZ1G<9S@W-@E!0T-o!JgbtBmO?H!KsF/056S
5Ou"b%CN=*0+Co8.BQG;;H#4[FBmO?H!KsEr+E;7AP"Ur=Ou"b%CLV4(+Co7sDfd+CH#4[<+EM
7CAV^AMWGucuP"Ur=Ou%NL87ZLVBQG;,CLV4(P$r]JCN=*0L_,_cA8>XmFHQZfDLHkBCLV4(L_
,_cA8?4!F-6QeDLI[JI?G)'1G<3KF*)J5DfTEB4.=:kOu%moL]M@$F),i[@Yb&JWI$:8P!5$b0
5Y-=CNFc<+EM7CAKZ&.H=`7UOpR:-L]E53F(or3+EM7CAWgkc!KsF/056S5Ou$r`F),iBD'3O8
E+sQ<+DI!3D..L$F!,=_950P^P/3<+I?I-5DfT]'FH-K9F_klW4aV$SF),iBD'3D5@;KOuChtb
G@rHC!P!5$bI=#g>F),iBD'3D5@;Kdp@rcK@F(9-/AWf6?1OYEdF(9-/AKYGnF*)J5DfTEPApZ
1?ATMs7H#4[@@<64*H#8^#04JL6FDYH-CNa-&+Dm8t04JL6FE:r1Eb-A7@rHC!Ou%NL<.0p#05
tWMF!+q'F*)JKD3?\eDfT]'FH-K9F_klW4aShoD00r0Ci^_'L/\e?;'gs'I"kiuL.1om5gG*[Q
\J,*L3LRjEq>$6WePbhL1W)n@i0r:6&')sL),W#'>B2@kCsl$L'M1B!`asa%#,$LL,E=m0PH2*
0nq^nL*X-\+bPM%g4h-F?'6usARfFbNW`'M85Wr.Ch7d$Cm'd@Fcp3s5*C&O5*C&O1G<?WFEV)
/+D,J4G%#3.+D#%sA;C>N%q9*kFDYH-CNa-&Oo^_=Ou%N504o'CG%#3.+BsRg7>=*KL/'7R9,r
[dY(fc@L0q`N>5*baPD3PBL2HmDBZc'QG_U98L3sbkGp.nHhM)-sL((;@$&=6O222_FL)jKQ(i
4pQ#_jHdL+d.n.T(pWj+];<L-CTO41\^\1G<fpD/!N'>9I.+!*p^OL]N;5>p*@-",I(c+BsX*L
^&Y?>p*DqF(or3L^TBFL]W`;P"T@rCj'6'P"Uro04o'CG%#20Ao2X5@;L!-F*VV:A;C;M%q9*k
FDYH-CNa-&Oo^_=Ou%NL<JUX2!G67jD..O'@;qB=L]N[<HS9)r5*@^6DfT]'FDYH*+DI!3HZ3\
DF-8_6I?I0AD0@%6D00r0CkrR8P,XU^Oq3?LOp$qmI?I0MP"9Y.H=_maP"L'SG%G];@;L!->D@
NiKE)"+]S$7bR[Jg/!2S(s!!'Y)KE)"m@Y=^]fLLSp!9O`D!!)gCKE)#\G_?%t'O?@l!@en=!!
+r4KE)$EVM"pM<eH&*!GKT.!!.<1KE)%5`.S*kOl:rn!O&PW!!0<aKE)%s)MA(kdm&Kc!UY#_!
!2XeKE)&[eV!o((B&md![tX5!!5*OKE)'H$\SK]<%`h(!bu8!!!7:/KE)(4BjHlX06UoIG%#20
G%G];@;L!-F(or3L_5fLL]il=L^0*BP"UroL]E53G%G]8Bl@m+@;qB=L]N[<HS9)r5*@^FATDj
+Df0E#E$/kX97(VlG]T$3H[V&KEG]kAG%G];@;L`3Bp,HYDNYNd!KmSKG^Y`HI?I-LP#OP+061
WA0/%?WDJ`g(EbTbOE+sQ<+E2%>F"_KHG^(?PBmO>DE+sQB+EM7CAM7_.BkM+$+EM7CAV^DNCk
tWF2D98gA9;K-F(or3L]W`ULe*[e05kfO+E)4@Bl@m1+?ht3A8c@-A9)+&P&N'-Eb0-*@<?O(G
`l$h3IR&#Ou"b2Eas#uAWf$9A1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'
P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/qrcode 0.0 0
%%EndData
%%EndResource
% --END ENCODER qrcode--

% --BEGIN ENCODER maxicode--
% --REQUIRES preamble raiseerror renmaximatrix--
% --DESC: MaxiCode
% --EXAM: [)>^03001^02996152382802^029840^029001^0291Z00004951^029UPSN^02906X610^029159^0291234567^0291/1^029^029Y^029634 ALPHA DR^029PITTSBURGH^029PA^029^004
% --EXOP: mode=2 parse
% --RNDR: renmaximatrix
%%BeginResource: uk.co.terryburton.bwipp maxicode 0.0 0 0 0
%%BeginData:        157 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nG  \M#'F  E2)?
OuP+;CG'+8/p(ZF  Ed;,:  Ecc  5;/    n0$=  E,  ^uo  P'E-!0  5Y  -BBk)'  lAU
B4IOu8C305kfOBl  @m1P!  5$b  04J  @ 1@r  Gmh  P!5  $b04]!  =F  C]E#G9  CL+
Cia0N1G<T`A7^Ss  Ou"b4  @;U  i#O u"  b1  @<-  F#+  D,%uF(  LL  jDfBf4  Df0
WZY:js=EbTE(FEq        h:P!  +/J !K  o=  '%<  $3-         Bl@         m1H]
kFA@;L!rP!+/T5^         eepO  u  SV  6P  ,4<  rNW        D;+N        HB2`A
Wf3'OtDh\P')pOO  u%N5Ot  Ccr  F  _-^ lI ?ITY  P%B  dtOuY16E-,  f4DKCt)Ou%N
L<,Z_tBl@m1H]g1  5P"@<D  De*  E %D/W    rrOt  ;bP  06:Q=+ELt.  Ot;bPE+*d.A
U?(IF(ZV)@<,jrA  7^p5P,  4<t    05?:    COu$  QUE  as#uAUBF<?  BU:pOuR<"B9
GGnP!5%SP%&0h!J  gc>!A   A2N5   *@^bF   cn_?  !/L  `?9TgrDF(^  Y"C5;nRWKKH
.G`k%L@Yb,LWJCY         >5*AT   fH]g@  *F(^Y  "C6  CcDH'2WOOo  [4NP!5$b04J
@1@rGmh+Dl14L]D       1Q9Th2p  5^eeqI  ?J/iP  #O)  OF(ZV)@<,j  rA7^o[05YcC
Ch7K,D0'?Q@ZiNaDe*F8!g5]`De*F8"-Pg1EdMYEB8?PD#Ehc@#?rW@*\];hP!+.FAnbcuD0'?
G!/LrE9Th1bD0'>4D0'?G$#O`rCh7L?$'M9N9Th2[HS8uFA<$YQ1OYEdD0'?M!?I>_P'&Es@rG
mhP!5$bP')cc*KlDFFY@67De*FB5*@^bFcHJCP)YWI06:WAA7^ofOu&8D05YcCP!5$bD0'?Q@V
0=bP%'RTP,4=$L]D%$A<M5$3+cl8P%&9LB9INnD0'?Q5*@]TD0'?+ASrW-F(^YFOu%NL<%hfmB
o)eP1G<]UA;L5J1G<WeM#EJm05P'Qr/rihCgr4tOu"b4@>OcC1G<fYM#!2i06:WZpl[EdF(C+$
Ou"b4AVg&C1G<fX15PUd1G<fX1Pk[d1G<Q[@u0`>1G<Q[A;Kf>1G<Q[AVfl>1G<]X15PF_1G<]
X1PkL_1G<6O@<-3nE-!.++BsX2NWEOB!5O<hi.qA=+Bsj,6&ktSL&f&E!9&_7>p*@3!CDeI@YO
m"L&g4h!aQpQNWDM-!Fpia_hJ0OL]^p*>E/_PNWE[F!5sTljG3qE+Bsj,7?.C[L&f2I!9K"?>p
*@3!Ci(MAqg<*L&g@l#$i?UNWDY1!G@,ea+aTWL^.3.>E/_TNWEgJ!6Blpk_KLM+Bsj,8WEgcL
&f>M!9o:G>p*@3!D8@QC5)`2L&gLp$=+cYNWDe5!GdDibD$#_L^RK2>E/_XNWEsN!6g/tm"c'U
+Bsj,9o]6kL&fJQ!:>RO>p*@3!D\XUDMA/:L&gXt%UC2]NWDq9!H3\mc\;GgL_!c6>E/_\NWF*
R!76H#n;%W]+Bsj,;2tZsL&fVU!:bjW>p*@3!E+pYEeXSBL&ge#&mZVaNWE(=!HWtqdtRkoL_F
&:>E/_`NWF6V!7Z`'oS=2e+Bsj,<K7*&L&fbY!;2-_>p*@3!EP3]G(p"JL&gq'(0r%eNWE4A!I
'7uf7j;"L_j>>>E/_dNWFBZ!8*#+pkTbm+Bsj,=cNN.L&fn]!;VEg>p*@3!EtKaHA2FRL&h(+)
I4Ii+D#%s+D#%s+D#%s+D#%s+D#%s+C-*oL`D3jL`D3jE+*9">p*@-*Jb_l*Jb_T@:UKd+BsXC
L`V?nL`V?k>p*>oDK?q<F!,@A+Du6CDK?q++Bsj,+H?JLL&ft_!;hQl>p*>oE+*9"E+*:3!8N;
/r.lA!+Bsj,,)u\PL&g%a!<%]p>p*@3!@*U*IYIjZL&h4/+'g!nNWCD]Itds\L&h7.!2!O>>E/
_1NWD4r!31bRTnWQ?>p*@3!@Eg-4GEj;L&e0,!2<aA>E/_3NWD:t!3q7YX+gVL>p*@-.#n<lL&
eN6!3_+WUg5*ILae>b5DB0EL&eH4!2WsD>E/_6NWE@=!4@O]["\RX>p*@3!@rt2L&ec=!4R[_V
d1ELNWC\k!F:E[\qU3pL&e2Y+Bsj,/WKj<L&el@!5!scX^*&RNWCbm!FLQ]]nQO%L&eA^+Bsj,
09-&UL&erB!/cL2[Tt"[NWCho!A&s*J;+&^L&dKE+Bsj,0oc8eL&cdZ!/uX4Q<bV;NWCnq!AB0
-Jqa8bL&dQG+Bsj,1QDJsL&cj\!02d6QsCh=NWCts!C2A>KSBJfL&dWI+Bsj,23%\\L&cp^!0D
p8RU%%?NWD%u!ITV%L5#\jL&d]K+Bsj,2fN:_L&d!`!0W':S6[7ANWD+\@5<Q;LkYnnL&dcM+B
sj,3HJUbL&d'b!0i3<Sm<ICNWD1[A2>?E@3BAp+DbI/>p*>oF(-85@?(@2NWC8_!?bYj>9Ius+
EM$8ChmN'F(6>6@j#&">9Iut+EM'9F(?D0CLeQ/A0>/#>9Iuu+EM*:F(HJ8AKYf)AKY8$>9I`k
+DbI/CgnN'@N]Jr+C-*qOu"b$BOPq)@;L!->DPP-22FM\22FM\22FM\22FM\2-lA$L]E53@q]:
kD..C)P%'4JP,Wd]Bp(ZC1G<<W@ric&BOPpu@;p91Bp),P1Pc$e!Jgl*05?Y6Ou$Ze@ric-P"U
rtP-6N[FE2)5B68E<AWf3'L]ET2I?IQ>BOPq)@;L!-C6D5Q5&$1)I?I-LP"76IATV?'@q]:kG%
#3.L]ET2Ou"b4ATVB(@q]:kG%#3.L]NZ3Ou"b4ATVE)@q]:kG%#3.L]W`4Ou"b4ATVH*@q]:kG
 %#3.L]`f5Ou"b4ATVK+@q]:kG%#3.L]il6Ou"b/F(K>6>9Id(B5D-sL]NY>H\_ZMP(R&'1Mq2
GCh7L?!KsF<s+gZ%056S5Ou$rrB-:oO99M8j0To%k5);4^@?Lb?DKBB/+DDs9F(K>6BnueQ!Kp
*3!KmJHG^XpVF(K>6BnubPG^Y`TI?I,SDKBB/+Du73EJOU3F(]<#DN[\V1G<]fAS,Y$Bl8!'FF
/fDH\_`d)3R1H@Zj?1P!FGY</:U=)3RXK"-QcL5*B<#L]NY>I=%,BI?ITYP%Be?P')pOP')29%
[&V$ASu")P!5%%Dfp/b5&-6EP'AWp+DQ]5Oo^_%I?G)'1G<ZhFG9dWOpR:-0564BOu"b+L]ESo
04T'7FH-KFATV@D1OEgYD0'?+AT!YoHXh,.FH-KFATV@DD.@WuFH-KFATVCED3>$KCgeGrF(KH
VA7]Xg04T'7FH-KFATV@D1OYEcP!FGY<-rM(AT8i,P"UT;P"L(<F(ZV0L^B5<Ot;ClH]g@E5EZ
/45)B&u%t0Un@rl4'P%8HOP"UT2L]WA>H]hKZP":B5OpR9ZL^/_:P)"htH]iN"P(R[qFHSh&P!
5%S052PCL^B4FOu"b++DQ]:Oo^_%P!FGY<%h`p@<+(FD0'>4Bp),P1G<6O@<++GBnueQ!GumjC
h7LIAp\B9B-:oE!KmJH97;/CSUHZ$Ou"b$BOPp;+DHW5Oo]E@B5D-sP%K&XF(ZV0L]W_?P"U4M
Ln/sW<K].JF(KHVA7K:]E\W_bHXg_tE\S\HF(KHVA7]Xg052PCL]NY>Ou&7dI?IQ>F(KHR"ES-
r@?NcpATVB(@q]:k0p5q-"FG3$FCHA&BOPp:P$iWQ@N]`'FC?;'DIY>0F(KHR"ES-r@ZiNqHZN
X=F(KH%+D#G#+Cf(nE\S\XATVB(ASu!2Bcq,G!KmJH1OYEdP!FGY<+Bu\FH-KFATVCE4`b1V@3
B&n@<+)c@$1Y>05r%TATV?'D0'>4Bnun/F(]<#DBNYVWJCV=)3RgCP!4;W<0DBe9Q5#`AncL(D
KBB2Ou%'5!KoTmF($24ATVB(ASu!#@q]:k0d(OKFC?;'DIY>6+DHW4Oo^_%I?IQKL]W`&HZNUN
+EM+9@N]6"@j#8p@<+(FF(KH%+D#G#+Cf(nE\\bYATV?'ASu!2Bcq,G!g3SI1OYEcE/4UZ4aV6
Y1E^aMFCHA(DIXf!BOPp9+EM+9@3B-!@j#8p@<++GF(KH%+D#G#+Cf(nE\ehZATV?'ASu!2Bcq
,G"-N\J1OYEcE/4X[8pbA_+EM+9@N]6"@kV>5ATWq8F(KH%Ou%NL<0BLpP#QL6FC?;%BOPp9P$
iWQ@3B'$ATX)GASu!2@rl4'NWaE7FCC=gP!FGY<-)Vm@N]/o@<+)c@!c^!+CfJ(FHU0GDIY>0F
(KHR"ES-r@ZiO15^eepF(KH'+Cf(nE\W_bHS9GOFEifKF(KH'Ou"b4GT_';Ou"b-CNpt<CL`M`
I?IQNATVH*@q]:k0p5pk06:]HG`DoJATVIG1G<fo+EM(V1G<Q[GT^g<A<J`sP#QL6FCcS)BOPp
9P$iViF(KH<NWaE7FCgUk06;@\F(LLj05PEK+Dbh)Ou%NL<%i25F(KH<P%8ENB-:oE"Dr3mCh7
K,Bp,HO!g4Fa:j\?hI?IQmFcoF;Eb/isG\M&:ATX(kE/4OX4aV6p+CfJ(FHU0GDIXf!BOPp9+E
M+9G`lTKDIY>6+DHW4Oo^_%I?IQKL]W`&HZOES@rl4'P%8-A@j#8p@<+(FF(KH<P%8-A@j#i;+
CfJ(FHU0GDIXf!BOPp:+EM+9G`lTKDIY>6+DHW5Oo^_%I?IQKL]`f'HZOES@rl4'P%8-A@j#8p
@<+(FF(KH<P%8-A@j#i;+CfJ(FHU0GDIXf!BOPp:+EM+9G`lTKDIXf1GT^L;ATX)GASu!#@q]:
k1E^aMFEisZASu!2Bcq,G"-N\J1OYEcE/4X[8pbW(+CfJ(FHU0GDIXf*CNptCATW0[A7]Xg04T
'7F<GX9FEis)I?IQm5^ef,I?J.pASu!pF(ZV6F``E>C6D8R1G<]UA9MBt+CfJ(FHU0R@:YNoOu
"b4@;T^$>9I471NQuAM#WWTHS9GKD/"e-OpR:-F(&p"L]DL-FC?;2@:YNoP'D%VD/"e,F(&pA$
Be;C!KsF<#a0"F@;Uf-P%odRP,XTFP'DD<<%hg#@r6:"+Bot0@;T_A!g7\;DI[O)B9E=ZF^:.d
D/WrrL]W`&D/WrrL]`f'P&bn&D.I+9">DM`0SfjpV32^Z3,NSEAWeU#!f-uBV33Nq30Ia,"Hks
3WKKH.H'0s:@q/u.$8=.f0JG170JG2:$Bh6K)3Qsh@rGmhOt;CjL^K<AOt`%YP%'4SP!5&.P!5
 %SOu"b4@q(H*0JG170JG170JJ:iP,4<ZOuRMmDe*FB/;O@`$Bh6K0TnDY@YbAS5*Dn.5*C2S1
G<]W@ZD]f0JG170JG170JG170JG170JG170JG170JG170JG170JG2:,a,!e)3QdmDe*F8!g5]n
E+<?"E+<fsAWgMY!f.&DV33Nq30Ia,#*M05WKKH.H#R8&+E1h/A7^oTL]WARP,4<qOuSV6La8-
IP,XU.P'MJ&05tE2G9C+M"s>$2+<Ve_#*PgG)3Qt8!,uFdA7^p5L^'#=HZ3J5A7^PsL^'#9I=#
pCDe*F-P#[ZjHZNb?@?Ng;97;sp?'7""!/LZ3"a_n:P!5$bE+<?"E+<C%+DI!3L]WA:P,4<qOu
SV6L^%RVCkr:Y!KoX0WKKH.H$tiHI?IS`F(9'C4HcP(1NR&CL]VF(@Zl"X@r7#KE+<@5!/Lc@9
Tj[B@r7#CE+<@5"Gd8F9Tj[B@r7#=E+<@5$A\nL9Tj[B@r7#7E+<@5&;UOR9Tj[B@r7#1E+<@5
(5N0X9Tj[B@r7#+E+<@5*/Ff^9Tj[B@r7#%E+<@5,)?;`9Tj[B@r7#Y@q/u(!/L]>9Tj[B@r7#
O@q/u(!f.&D9Tj[B@r7#I@q/u(#`&PF9Tj[B@r7#[F(8[8!/LiB9Tj[B@r7#UF(8[8#)EDF9Tj
ZSE,oY8>DN98!/LW2!/LW2!/LW2!/LW2!*taDL]E53Lc]r:Bp(ZC1G<]g+DHW9P#@H!04f*Y!f
."oL^'#WP,W#;E0;bn@r3?&P"UTbP,XU\Ou%&tBcqA9+E2@8+E2Cb94`(*!Kq\UP"76IARcieL
fA_?@:XOiCjhJ!?'7!bARgMrASu!pF(^Y]I?IQHDe*F8"HkobDe*F8"d2$3Ec#`*AV^PR4d'i&
De*F8s,oO.EdMYAA7^SsP!+.FD/Wrr+D#G#D0'?Q@YdaA@=*e6I=$bQI?ITn1OYEc04T3I+Bot
*De*F8"d2#qLe`AFLgGLm<I8[nA9MBtI?K4gOu$TlF,0g5De*FBG[kr=L]M()@r6:"P'J^"EbQ
Y+GB8Q?L^K;=Ou"b4ARcimGB8QI@s<!W@YbASWKKr<1OYEc062,BCi<r/>DN<95C8PQL]W`UOu
S7_P"L(W6^#96P#QjmK3aWr062,MDeFkkOpR:-L]N;4Ld-6L3-'(KCi<sL5*AR%5&t^\DeFk.L
]NZoP'DD<82#")E,ol-H\_`d)2J9UD3@)=!0V2^"FG01Ci<sL5*AR%5&t^\DeG4sP"Ur=Ld.&;
EcYZ*DeG4sP"U4MP')q1L]Djd<IL#?Ou"b3F(9-!ATN2OEcZ,@D3@)G1G<6^@Zip<1G<6VAS,O
q+BsX&EcZ,@D0q'=I?K4gOu%mpL]MO;DKTfC056S5Ou$TdAS,Oq+DDs.De3NmF!,1Q!KsFF99O
O6L]N[<M#W83HS9,s5*@^3De3NmF!,3?@rGpjAof)0L]N[<P"T;'AS,Oq+DR'4EcYZ*DeC2,P"
Th:E,ol-P/3<+I?I-2De3NmF,0g+De3NmF,0gZ96,)^Ci<r/Bp),0F)Z/<A<M1cP"769De3NmF
!+t2AS,OqL]Cq'AS,OqP%'4JP,XU<Ou"b&@q$Qb+EDO@F_uJ]!.C#_?'7""!/LYcG@H_EL]N[<
HS9K(5%AeGP!5%%ARf2*!0U!<_3-Tc@q(U1L]N[<M#W82HS9)r5*@]TE$/_%@Zk27P,X6<P,XU
#ARf0lE$06F@rGpjAof)/P"Th:E,ol-P'C\s!0U0*ARf0lE$/_%@N]WG!KmJH94_UB+E3K:P/3
<+I?IQXP":"a87c:?I?G)'1G<f\@rEJoL]E54F(JjE@Yb&JWI&\tA!0$=97;so?'6usF(Jim+B
sX&L]VX/A!1;W!KsF/F(JjE5*AQeP"8lA1G<fZDe*F#+EM+(P%'5HP!+/J'Rb=a*.<uMOu"b4A
RfXgBPS`3ARfX$F(9-!ATJu7F(9-!ATO"j06:]7ARfCh+EM+(AKZ&(De*F#+EDO5De*F#Ou"b4
ARf4`CEQi;!/LYs@rGmhF,0j[WI'dfF(Jj"@q]Y@5*AR%5'(:FARfChP!5%%I?I-,Ou"b$De*F
'DfTB0+Bot-EbU[<P'(_aBo!+:F(9-!ATO"9P'(hWA!-nVF`V,(@q]Y@!g7\3Ou"b.De*o3>D<
5fH\_ZMP(R&'1Pc$e!JUT8HS9)r5*@]T@s9&"+Cf>#ATr'5A9/l-P"UT4L^'$=Ot_6=0TrD`P"
ArB1Mq&@F,1$7P&,pY@s=)FP,XTF@s=)]I?I,SD/Ws%@;m>nL&ohZ!YL.f*ej\XL&kM5!Et3ZT
nWWAL'#,E!ksBjLP>l+L&i6J!?-[n3JIPoL&l=L!b-lcC5)b9L&lUT!L\ZCR"bXNL'#2G!l0Nl
089O&L&t&'!c*Mkb(]s%L&um[!kj<iUP8iEL&i<L!??gp4,*bsL&j2e!E=dT'8?N2L&iEO!C);
>?%rAbL&oAM!To+<"bm']L&on\!S2u+EJ=L5L&m?i!KMm8XbHkXL&rZU![NL%6\YY/L&te<!ap
`aM1u(fL'"9-!iC\R`J+H4L&ujZ!e,k*SV@39L'"uA!kO*e(PVr+L&j/d!AoN3;hb<NL&l^W!I
TV&Rt^s4L&ni>!P!jc0no``L&t/*!`"IOD2&+.L&rTS![<@#6&#G+L&t_:!a^T^Dh\:1L&m9g!
K;a6X+gYTL&iNR!@!7!6&#D*L&kY9!FCK^MhV:jL'"?/!iUhTa+aZ8L]N;3L`_EoLcpPVL]`G7
L`qQsLd-\ZL]rS;La.^"Ld?h^L^/_?La@j&LdQtbL^AkCLaS!*Ldd+fL^T"GLae-.Le!7jL^f.
KLb"92Le3CnL_#:OLb4E6LeEOrL_5FSLbFQ:LeW\!L_GRWLbX]>Leih%L_Y^[LbjiBLf&t)L_k
j_Lc'uFLf9+-L`)!cLc:,JLfK71L`;-gLcL8NLf]C5LinMqL&dEl!0W':Z%`7_Li\AmL&d?j!0
Dp8YD*%[LiJ5iL&d9h!02d6XbHhWLi8)eL&d3f!/uX4X+gVSLi%raL&d-d!/cL2WJ1DOLhhf]L
&d'b!/Q@0VhP2KLhVZYL&d!`!/?4.V1nuGLhDNUL&cp^!/-(,UP8cCLh2BQL&cj\!.oq*TnWQ?
Lgu6ML&cdZ!.]e(T8!?;Lgc*ILjt50L&dd!!1\jPLgGmcLjXpWRt^p3Lg>gALjOr(L&dWr!18R
HLg#U[Lj4XSQ\GL+L&eW9!47I\dtRkNL&gau!:Y^C[tXmkL&fbY!7Z`'o7d89L&ec=!4[a`f7j
:VL&gn$!;)!G]7p<sL&fn]!8*#+pP&\AL&eoA!5+$dgP,^^L&h%(!;M9K^P2a&L&g%a!8N;/qh
>+IL&f&E!5O<hhhD-fL&h1,!;qQO_hJ0.L&g1e!8rS3s+UOQL&f2I!5sTlj+[QnL&h=0!<@iSa
+aT6L&g=i!9Ak8",6gXL&f>M!6BlpkCs!!L&hI4!<e,WbD$#>L&gIm!9f.<#DN6`L&fJQ!6g/t
l\5E)L&hU8!=4D[c\;GFL&gUq!:5F@$\eZhL&i`X!@W['7tq%6L&kk?!G$oc-\_XKL&j_t!CVY
C@tk"nL&iTT!@3C#6\YV.L&k_;!FUW_'nu`'L&j)b!A]B1;2,*JL&hsB!>:+f0no]_L&k))!D\
@M&V^;tL&ir^!A9*-9ni[BL&hg>!=jhb/VX9WL&jr%!D8(IBncY%L&m'a!JZ=0V1o#HL&l(E!G
[>iM1u%eL&n3,!N(SPD2&(-L&m3e!K)U4WJ1GPL&ldY!Ifb(SV@08L&no@!P4!dJVF2UL&mp$!
M5#H]nQR#L&lp]!J6%,TnWT@L&o&D!PX9hh1bscL&q1+!W%NP)2820L&p%`!SW8/q1\qFL&r0G
!Z$LkfnKO[L&q%'!VV6L'nuc(L&o>L!QKipjb<fsL&qI3!Wn)W`J+E3L&p=h!TJh8!JUXUL&o2
H!Q'QliJ%BkL&q=/!WIfT*JOV8L&sGk!]l&;=bZu[L&rHO!Zm't4ba##L&tS6!a:<[+bg%@L&s
So!^;>??%rDcL&s/c!]#K3;2,-KL&u:J!cE_o222/hL&t;.!`FaSEJ=O6L&s;g!]Gc7<JCQSL&
uFN!cj"sObNq!L'"Q5!j77Zc%Z;DL'!Ej!fi!:XbHnYL'#PQ!m66!NJ7LnL'"E1!igtVabBl<L
&udX!do_(Rt_!5L'"o?!k<sdH\MTJL'!ct!gn]D[tXsmL&uXT!dKG$Q\GR-L'"c;!jm[`GD60B
L'!Wp!gJE@Z\AOeL'#bW!mlZ'mtLo3L'%m>!t9ncdtRqPL'$n"!q:pH%u(/rL'#n[!n;r+o7d>
;L'&$B!t^1gf7j@XL'%%&!q_3L'8?T%L'$%_!n`5/pP&bCL'&0F!u-IkgP,d`L'%1*!r.KP(PW
#-L'$1c!o/M3qh>1KL'&<J!uQaohhD3hL'%=.!rRcT)hnG5L'$=g!oSe7s+UUSL'&HN"!!$sj+
[WpL'%I2!s"&X+,0k=L'$Ik!p#(<",6mZL'&TR"!E="kCs'#L'%U6!sF>\,DH:EL'$Uo!pG@@#
DN<bL'&`V"!iU&l\5K+L'%a:!sjV`-\_^ML''l!"%7kG@tk(pL'*!]"+Z+.6\Y\0L'(k="(6ic
Ite&SL''_r"$hSC?\SYhL')jY"+5h*5DB8(L'(_9"'gQ_H\MWKL''Sn"$D;?>D<5`L')^U"*fP
&4,*huL'(S5"'C9[GD63CL''Gj"#u#;=,$fXL')RQ"*B8"2hhDmL'(G1"&t!WF+sd;L'';f"#P
`7;hbBPL')FM")rts1PPueL'(;-"&O^SDh\@3L''/b"#,H3:PJsHL'):I")N\o089Q]L'(/)"&
+FOCPDq+L''#^""]0/983O@L').E")*Dk.u"-UL'(#%"%\.KB8-M#L'*-a",)C2UP8lFL',8H"
2KWnLP>ncL'+9,"/LYR_hJ91L'*9e",M[6VhP;NL',DL"2oorMhV=kL'+E0"/pqVa+a]9L'*Ei
",qs:X+g_VL',PP"3?3!O+masL'+Q4"0@4ZbD$,AL'*Qm"-A6>YD*.^L',\T"3cK%PD01&L'+]
8"0dL^c\;PIL'*]q"-eNBZ\ARfL',hX"42c)Q\GU.L'+i<"13dbdtRtQL'*iu".4fF[tY!nL',
t\"4W&-Rt_$6L'+u@"1X'ff7jCYL'+!$".Y)J]7pF!L'-+`"5&>1T8!H>L',,D"2'?jgP,gaLc
U>pLffIVL&dKn!0i3<ZA&A,L&fST!:GRB%>FllL&icY!D/"H8;7.WL&m!_!JH1.U4r]bL&o)E!
T&P3rIt@NL&r9J!]bu:3/.K8L&uLP!d'.uP(j%CL'"T6!mZN%m=k]/L'%d;""As,.#%gnL')"A
"([,gJqaB$L'+*'"29Klh1c$e?'6usE+sQ<L'(hH$'I(tC5;kQ1Pc$e!GuacF-:!g!KsF/056S
5Ou$rnA9/l-P"UT3P!+/2Bm=\AC*7A3A8Pao+DI!3P'AWp+DQ]5Oo^_%I?IQXP"76FBm=\A>9I
m!G]SZ@C6D8;I?I0X*/GVi!>pOl)28/NL&oDN!U,7=oS*D[L'!s$!ka6hV1o&h?'7!+4>1_dDD
*Y`ASu?nG\M#'FE      2)?05  tWMF!  ,F9G]  PN  VE-      *4@E-,      f4DK?pa
4s4BSDKKE0@<[lR        0/%  ?WDJ`  g,Bl.  :#  EbT         c]<         0B7i
Oq*X205Y-BBk)'l  AWf$9  A1  r(@/n   8fPF  Cf  K5H  "(o:F  Dl%  L@WuO  *E$/
\&Anc-oEb0<1F`L  u'P')  pJ0  6:]    HE+*  6l  Bl7  RH\pKT  _F  (KH4@:  O(e
DJ+B\;u~>
% uk.co.terryburton.bwipp/maxicode 0.0 0
%%EndData
%%EndResource
% --END ENCODER maxicode--

% --BEGIN ENCODER azteccode--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: Aztec Code
% --EXAM: This is Aztec Code
% --EXOP: format=full
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp azteccode 0.0 0 0 0
%%BeginData:        117 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04B0KA  Rf  4gA7^+  D'T
t>:%52X=FD5Z2F-  8_M1G  <3G  Eas  # uAW  f6?  1G<  9WDKKE  0@  <Wi+@;  L!r
Ou"b'DfT]'FH-NI  DKBB2  Ou"  b3A RT  +\  EbT  E*F  <G1(Ci  a0  N1G<QQ  H"D
#;M#WVo04eX0ATh        X$L_  l41 04  eX  %A7  T1`         @<-         FF"-
PGnEaa/7AmoLsAW         ei&E  +  *d  .A  KYS  nCi        a0N1        N.5SB
l@m1P-6N[FE2)5B  68E<AW  f3'  L  ]NY rO pu>K  FD5  Z2F*j(NAmo  LsAWf3'P!FG
Y<0B5(@ZmRN0oc8  tP)XR(  F_-  _ !H]f    tD5*  C&O  5*@^MH]ft&  EckrV1OYEdI
?J0)*g/N:DfBf4D  f0WZ5*  @^M    P#Q@    =FD5  Z2F  *j'+I?I/TC  ghU#EcW@>@<
lF)F-8);1G<<LCh  7d$C`   m;!C   h7d$C   m$H7  1G<  <L@:WnYBOP  q&+D#%kA7T1
`@<-FP/<Vf.@<-F         #HS95   WB-:Y  lEas#  uAW  gMcV33VfC5  ;kQ1Lad5@rG
mhH]A,5P)XgO3,N       _LP!3WD  5*C2S@  VV&,L  ]NY  >05?Y6Ou&8  DOuS6tL]`f6
Ot:HkB9GGnL]N[<P!5%ROuSV6L]`g>L]`f(P"^:NOuR<"B9GGnP!5%SP%&0h!AA2N5*@]T@UX:
eDe*E%D0'?G!,@ZjOu&7dI?ITYP%B')<%i*0B4>RsF,g6`1M1QGD..OH"EJX&AWgnN@<[k;HS9
5WB4>RsF!+q#Eas#uAWeitP#Q%3Ec#6,NWaBFDInuJEaa0TE0:?N04J@1Ch7K,@UX:eDe*FB@Z
iNV@<-0qDMTBt@=+"<0JG170SfmqV32^Z3+?<:Ch7L?!f.#CV33Nq30Ia,"d2'4WKKH.GqWZ;P
!5$bI=$tc0JG170JG170JG170JG17L_,`GOr9EB@UX:nAT!;GP,X6=L_,`GOt`%YP%'4YP!5&.
P!5%S04SLT5*@^MP#X/F@r,^o+CeoE@ZiN#D0'?!BlnEP"_2%YAT!Y3@UX:nAT!;0P&-9^P,4<
tD0'?!BlnEP!0.4;0ekC;P'LncB4>RsF,1!0A!2+n!/LYb@<-0qDMS=VWI$:4P!5$bNX.<m0JG
170JJ:gP,4<ZOuQoZEas#uAKY]M99Li^!f.,FV33Nq30Ia,#a.B7WKKH.H#7V8@VKq*L]q9uCh
7LI!GR>qP&-9^L]`J5P)#3GI?I-LP#O)OATVs,@ribs+Bsj/Ecl82L]E52L]E58>p*@3#@h[hE
+*6uL]N;4L_5FI>p*@3"D2dmCkr+J!JhJH#$i?UNX''4D/`onFGL!S!/N%Z#$i?UNW`s:Ci"n/
L]N;cL^%-->E/quDf'H%@s!M/L]E5eL^79/>E/huF_klM",Hu64GX8K+Bsj2@rH4'@:OD8"Gd&
69S`s[+Bsj/Ap%p+L]iM7LffH=>p*@3"D2dmCkr7N!JkuV#[JQWNW`s:Ci"n3L]N51S;7GV+Bs
j/Ap%p+L^/_:L&f/J#[JQWNW`s:Ci"n5L]N51n;%?U+Bsj/Ap%p+L^Ak<L&g@l$=+cYNW`s:Ci
"n7L]N52&;U[!+Bsj/Ap%p+L^T">L&jDm$=+cYNW`s:Ci"n9L]N52CkrF(+Bsj/Ap%p+L^f.@L
&ms'$=+cYNW`s:Ci"n;L]N52eqaZ=+Bsj/Ap%p+L_#:BL&qpB$=+cYNW`s:Ci"n=L]N539Sa$]
+Bsj/Ap%p+L_5FDL'!<i$=+cYNW`s:Ci"n?L]N53d"i$7+Bsj/Ap%p+L_GRFL'&3I$=+cYNW`s
:Ci"nAL]N54@#,.q+Bsj/Ap%p+L_Y^HL'+N5$=+cYNW`s:Ci"nCL]N54r.k\c+Bsj/Ap%p+L_k
jIL'*g!$sau[NW`s:Ci"nEL]E/3i.qeI+Bsj/Ap%p+L`)!KL'/u^$sau[NW`s:Ci"nGL]E/4G_
cc6+Bsj/Ap%p+L`;-ML'5SR$sau[NW`s:Ci"nIL]E/5)Mef-+Bsj/Ap%p+L`M9OL';OP$sau[N
W`s:Ci"nKL]E/5aG:71+Bsj/Ap%p+L`_EQL'AiX$sau[NW`s:Ci"nML]E/6J;=V>+C1-d0564B
Ou%G<D'3\,FE2)*F!,1[99M(aAo_a1+Dlo7P"Uro05YNNEZf4T!Kp*=1G<HP@;m?+L]W`4Ou"b
/@s;u:D28:W99M(a@W5h$+Dlo;P"Uro05boLARfp,DI[m3+D#&!AThX$P&,qbOu?l]@:WnYBOP
q&Oo^^WOt;bPD0'?!BlnEZ@Yb#I4aSi"F_t]"GDH6^1OYEc05boLA7Kg+DI[m3+Du==ARfqIWK
K%jDeid,+EVXHAWei]DfT]'FH-NIDKBB2P&4fLEc#6,+D,Y2FHUL("FDe?CLMK2AmoLsAWeitP
#QI5@:WqiBl7X,+DG=oE/4OXD3>$K05kW7Gp$^-Cia0N1OYEcCghU#Ec[':P&5#DH"D#;+Dkq?
Eft:&"FDe?CLMK2AmoLsAWeitP#Q:>B4>RsF-:!AE+=*T2NeW7/8fTIA7KhH:jXj6CLMK2AmoL
sAWeitP#Q@8@<m3_5^eep052PCL]NY>Ou%NLAM7k.H"D#;+Dkq?Efr43AoD^,@<<W(Ec#o]1G<
0QCjKZ5DgRX,P%'F[0JG170JG170JG17L]E55M#WWnP"_$%I?G)'1G<0QCi=3&F*j'0P%'F[0e
kC;0ekC;0ekC;L]E55M#WWnP"_$%I?G)'1G<6^F!,@1GB8oROu"b.L]ESo04Te<Ou%H%F(\rrF
E<USD3A=SP!FGY<,H\h@VKq*P%&9kWFBgVGEPRF04T38+Dl14@VKq*+Di61E+=*J!KsFF9Th1b
@s;N-D0'?!BlnD=D'3;,@s=(:L]N[<L]NZ4Ou$Tl@N])qCjKZ5DgO-IG@lj90p4=GD'3\O!KsF
F1OYEc@s;B)@;KauDImm904T3<NWChs1G<SfD284UWKK&cP#R5GP,4=$L]Cq/@Zl#"3+?i:GDH
9_WFL-aP'Mi`@W5h$P"[N=G@H_!Ou%N504T38+Dl14@VKq*+Di6<F(\rrFE<USD3Cl]9Th1b@s
;CB$o'Ik0ekC;0ekC;0o-7$V32^Z3/@QEG@H_\L]Cn'@s=)0Ou$Tl@N])qCi=3&F*f$>G@D\)G
@H_EL]N[<NWChsH$tiTI?IS`@s<_/Ou%moL]Lt(@s<_0P,Wd]Bp(ZC1G<6^+CfVO!b-+YG9CU_
WJCS<WF^<nOt:*e@N]BJ98G9bWKM(\!Ko6eP"9),F!+s8@s=)\05VhK+C];"GEMui1G<5\@u(/
K!Ko6eP%?:VGB4m:GB8Q?A!0NK1G<ci@rGmhF*fQ\F)YuZ5*@]TEcYl*P!5$b062,OA!0$=1G<
ci@s<!W5*@]TEcYZ*DeC1sL]MO;B4cr#P,Wek3/@X!Cm$buF(]*J8pbT"E,CcSI?IQXP(R&'1G
<ciCi<r/EcYl*OpR:-L]N;4EcYl*L]N[<H]g@/F(&m'B9GHA99MJZF)5c-L]`G6P)#3FI?I,SE
cZ2?De+3N!g4FW!0V2^5)93%D3>$KEcZ&8B9GHA99MJZF)5c-P!5%%Oo]TEB4cr#P,XUZEcYZ*
DeG4sP"U4MP')q1L]Djd<IL#?Ou"b$De3NmF!+\C!HN7!@sa"3I?K4gOu%mpL]MO;DI\#HBp(Z
C1Lk?7AnH*,Bcpo(AS,Oq+DHW4P,XU;P'C\s!KsF<s+g]&05?Y6Ou$TdAS,Oq+DN$/De3NmF!,
4R!KsFF94MmOAnH*,C6D51F(&m'B-:oO96,)mEc5KO_30%kP"9)$AS,OqL]Cq'AS,OqL]ET2Ec
YZ*DeC2,P"Th:E,ol-P'DD<82"jk+EDO5GB8pVOu"b3F(9E8+Bot/F(9E8H[V&KEcZ,.H\_ZMP
(SPj?'7""!/LYnA;C8LWI$:6P!3o-@s<!W5*AQZF(9E8+Dt_Q99R,S1Pc$e!HN7!@u(/KWI$:5
P!5$bEcY`7F!,@2+DR&?EcY`7F!,@2+DR&?L]NY>P"TR5@rGpjAof)8F)GJ1C6GQP!KsFF96,)
mEc5KO_30%kP":"a89/c]GB8Q?EcY`7F-:!g!KsFF9RW'6Ou$]gEc#6,NW`s:Ci#7tHS95SA7Z
m"@<lF)F,0j[WJCqF%qBg)P%'4JP,XTFOu%,i@:WqiBl7X,HS95SA7Zm#De*F6"9=U*Ou%NL<%
i*,A7Zlf+Dl%-AV:$`n,SUSM"Hi@D/WrrL(=9I"Gli9%rH5qAVL3SOp$U=Oq2DJA7^Q-Op#'R1
G<T`A7Zm#De*F8#)EhH'68/(De*F#Ou%NL<+^&hD..OH#@h[hE+*6uP!+.FD/Wrr+DbJ3ATDjJ
!KsF<#*KL,GB8pVL]N[<Oo^_%Eb/ZiATDL&Bln\TD/Wrr+Dl%-AV_IlEfr5,P#O)ODe*E%>9Id
$A7^Jqn<*p1r/qS-De*F8&!@'$Ou"b.De*E%D/WrrL]rSGL_FfM@rGmhF-8>-P#Q%3Ec#6,NWa
BFDIntoHS95SA7Zlm@<,jrA7^oTOu"b.De*E%>9Id$A7^Jqn<*p1r/qS-De*F8&!@'$Ou"b.De
*E%D/WrrL]rSGL_FfM@rGmhF-8=4D/Wrr+Bot*De*F+L^K<]I?I0-Ou%NL<%i*,A7]4aFE8RAD
e*FB@Yb/MCm(WX1Pc$e!GuacAR]@qF-:!g!KsF/D/Wrr@VKq*P!4m,0Tp^0P":B/L]M@2A7^p5
L]N[<HS9)r5*@^=De*EgBlnD=D/Wrr+DI!3L]WA8P,4<qOuSV6L]il)P,X6?Bp*:q!KoX0H$ti
H062,Q@<,dnF!+[0>9I2o>9I2o>9I2o>9I2o>9I2o>9I2o>DPP#6X:g=+C-*oL&h:/!A.S">9I
2o>D<7\L'.fg+Boso+BsR3!/;&!>p*F91G<6^F!+t:F!,@1GB4m:GB8pVP,WJCE+*cqD0$h/E+
=*T97))M8TJl^De*F#Ou$]gEc#6,NW`s:Ci#7tHS8o<FCAWmFE8R@@<lF)F!,:-H"D#;P&,pcP
&+rCH"D#;LiAMnOo^`BOu%N504\L5@:EqmF!,:-H"D#;+DbJ3ATDjTCkrXcCi!O*ATDjJ=H[K`
!Ks:B1OYEdL]E53A79Rg@VKq*P%'4JP,We=@<>peBlnEZ5)oXtP'MJ=8;I8%!H)CkF,0j[WI$:
4P!5$bA79Rg@VKq*+CfV:+DI!3L]V%)@s=*4Ot`%YP%%m>@s=)"P,Vo0@s9&0P&-9^A79Rg@VK
q*P%&<=GB4m9E+=*TCm(c\!KoX0H$tiH04SjBHQ[BDH=`7UP,W;4A<HtAOq*X205PKKHS92EBl
oM%Ou"b-CjC&a5*@]TCj0T(+D,g?Ci"B;L]ilWOo^_%05P05EZf1-Blo.4P#?+?Bk3B)Ou$obB
l]"0P!+/.GA1TD!KsF<!g6HEDMS=V!Gl4ZFGL!];J^PkA<L\j!G6P3!KsF<!g6GtCjC&W!g7A_
!Gl4ZFGL!]C6AU-D0C>j<,?)ZEejaZ4aUdbL]W`;Ci"B;L]W`UOo]B.Blo.4P%p-\Cj0T(L]N[
<L]W`;L]N[<Cgq+#L]W`;Cj0T(P%p/Z@r6C;P#Q7.Bl]"2P!+/.GA1TD!g6HEDMS=V!Gl4ZFGL
!];J^PkA<L\j!Kq>4GDH<`;J^/pEejd[Cm"g8@VKq?!g7;]!Kq>1D0C>j<,?)ZEejg\4aUdbL]
N[<L]W`;Ci"B;L]W`UOo]B.Blo.4P%p-\P&>)[Bk3#$P#@):P,W8,Blo.4P#?+?Bk3BAP,XU^@
r6C;P#Qjm%[&V[DfT]'FH-K9F_klW4aShoGDHZj1OXU'Ap9%;Ou%NL<A/E-H=\42G9C^1H"D#;
L]ilWOo^@?Oo^_%05tWMF!+[0F(or3+EM7CAWgkVM#VmdK3aWr05YE6+EM7CAV^AMWJCV=;KHP
uAWgkNBmO?H!KsF<!g6HE!Ko5lBnubP1Pc'f!Gl1iATDj=05P'BATEqtOu%moL]M+3+DbJ3ATE
S0P&-9^L^9/[L]N[<HS9>VF-8_M1N7&QF!,:-H"D"=E,Te?Ci+><A79Rg@VKq*+Cno&@:EqmF-
:!HP,X6<P,XU;LbP!kP'AWo+DHW4Oo^_%I?I-LP"92'Ec#6,NW`s:Ci#7tHS8uTL^fM'06:iRA
KYT/+DbJ3ATDjJ"HmSa!Jgf?!Gl1iATDjL5pu^5Oo^G*n,NHO2M_BsWKJfg!g7A_!Ko5lD/!N'
F(or3+EM7CAWgkc!g6HE1G<WbBm=\A>9J!$H=\4?BmO?RCjV!;I?K4gOu%moL_+WAH=_m6P#?W
[Bp(ZC1Pc$e!HVt$AV^AMWI$:5P!5$bDK'<7F!,O<H=_m6P#@H\C6AU3+Cf83+Bot0BmO?H!g6
GrOo]9[!Jgc>!Jgf?C0d!JDK'<7F!,O<H=_m6P#@H\C6AU3P&=cHFs(!3F(or3L]W`;C6AU3Oo
^@>Oo^@?P%n9cH#@S8G]P!A+EM7CAV^DN;Nbp4Oo]'0Fs(!3F(or3L]W`;C6AU3Oo^@>Oo^@?P
 %n9cH#@S8G]P!AP&>>TH=_m6P#@H\C6AU-D0@%++EM7CAV^DN;JM?qBp&LQ!KmJ>!g7;(P'MJ
=8:?Xl05?:COu%moL]MC4Bm=]^@Yb&JWI$:4P!5$bDK'<7F!,1[98NS14aV'cBm=\ABcqA/G]P
!BP"Us_05;VEL]NY>Ou%NL<.0p#05tWMF!,@>Bm=]^1OYEc04oDNAp9%4P#@H!Ap9DUL]M+3HS
9)r5*@^6GEQj"!G6P&05?Y6Ou%&kG]P!A+DN$/D0@%9OoT6[!0U0*Bp&IEHYS]DI?ITd!KmJ>!
g7;]G^Y`GI?I-*+Bot#GDH9_!Kq>4GDH9*+Bot#GDH9_!Kq>4GDH9_!Jgb^+Bot#GEQiUGDH9_
!Jgb^+Bot#GDH9_!G6P3!KmJ>!F6gP+D,hR!KmIqGDH9*+Bot#GDH9_!G6P=DMS=!+Bot#G9CL
AL]NY>L]C^'>9IO%L]NY>Ap9%3Oo^_`L]C^'>9IO%+D,hR!KmJHDMS9u+Bot#GEQiUGDH9_!Kq
>V!*p^O+D,hR!KmJHDJ"*K!KmJHDMS9u+Bot#GDH9_!Kq>4GEQj"!*p^QHQ[9AG]T$3H[V&KL]
`G6P)!OaG*5%PG^Y`HAoD^,@<@M4Ap%p+P!+.FD/WrrD..B+>9I.+qhPJ_+Bs["L^.3.>DW66#
@/HVM#N28>p*@-s+gnc+BsX&L^.3.>DN?:#@/HVL]`G<>p*@-"Gd:g+BsX*L^.3.>DNN?"^N6T
L^/_=>p*@-#D`If+BsX,L]Uj)>DNN?!F6gPL^/b9>p*@-#Di@b+BsX,M#CU%>DNN?r*:FLL^/b
5>p*@-"c2t[+BsX)M"t=!>DNB;q->+IL]WD.>p*@-!JpPW+Bs[%M"t=!>DW97q->+IM#E/*>p*
@-r.t/S+Bs[!M"t=!>DW*2qct=KM"ul)>p*@-q2"uT+BsZtM#L[&>DW*2s'6aOM"ui->p*@-q1
o)X+BsZtL]^p*>DW*2"C3-SM"ui1>p*F91OXU'D/WrrD..B+>9I.+rJ1V_+Bs[$L]q',>DW<8"
^N6TL]E57>p*@-!Jgnb+BsX'L]q',>DNB;"^N6TL]rS:>p*@-"c*4c+BsX*L]Ld(>DNH=!*p^O
L]rV7>p*@-"c3.`+BsX*M#CU%>DNB;qct=KL]WD0>p*@-!JpVY+BsX%M#1I#>DW<8qct=KM#N5
->p*@-rJ:>V+Bs[!M#CU%>DW04r`pXNM#3#.>p*@-qhP5X+Bs[!L]Ld(>DW04!aQpQM#2u1>p*
F91OYEdL]E53D/WrrD..CH@Yb&JWI$:4P!5$bE+sQ<+Dl%-ASkjp+DI!3H[V&K@r6B3D/Wrr@V
Kq*+DI!3LbP!kP'DD<83B!fEb0,A061WAD..O,Bm;:MBm=\AE+sQ<05tWMGT_'AH=\aKBm=nGF
(or305+p2B4uB0F(or3L]W`ULe*[e06_,@FD)e<BmO?H!g7AU8<PkaDfBe@DfBf4Df0V=5!C*"
Df0Z-Eaa0TE%`kbASu?nFE2)?P#RT)I?G)'1G<0_FCerlDe*FB30If*F_`U>D_?-CEcQG7F`MS
BDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/azteccode 0.0 0
%%EndData
%%EndResource
% --END ENCODER azteccode--

% --BEGIN ENCODER codeone--
% --REQUIRES preamble raiseerror renmatrix--
% --DESC: Code One
% --EXAM: Code One
% --EXOP: version=B
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp codeone 0.0 0 0 0
%%BeginData:         82 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-!  04Sp2A  T)  HtH\`B  !23
JD%DfBf4Df0WZ5*  @]T@U  X:e  De*  F B5*  @]T  A8c  @-A9)+  &+  D,%uF(  LLj
06UoIF(oQ1NWjQC  F(KHV  1G<  <W@ rG  ml  DJ+  t5@  <5pmBp  (8  *Eaa/7  Amo
LsAWei&E+*d.AKY        SnCi  a0N 1N  .5  SBl  @m1         P-6         N[FE
2)5B68E<AWf3'L]         NYrO  p  u>  KF  D5Z  2F*        j(NA        moLsA
Wf3'P!FGY<0B5(@  ZmRN0o  c8t  P  )XR (F _-_!  H]f  tD5*C&O5*@  ^MH]ft&Eckr
V1OYEdI?J0)*g/N  :DfBf4  Df0  W Z5*@    ^MP#  Q@=  FD5Z2F*j'+  I?I/TF*)\HA
KZ/-EcYr5DMS:K!  Kp-:!E  5.E    Ou%0    $H#R  >A0  61KF+EVXHA  WeitP#QC/Ec
Yf=05YcC+C\c"@r  GmhP%   'TNO   u"b+L   ]ESo  @UX  :eDe*F+NWE  ILNI-gJD0'?
Q5&-6EP'N4"C6AU         R!KmI   :C6Cc  D1Qlm  D3/  @Qj"-Q?@/8  ]H@P!3W:!Ks
FF5*C/R30Ia,"-T       X>"-Pj2  9RV8N3  ,N_LP  !3W  D5*C2S@VV&  ,05?Y6Ou"b#
@<,jrA7Zm#F(^:/C6D8R1Qk"OP#ZpnAUT_@04J@1Ch7K,@UX:eDe*FB@ZiNf@<[&OASu!rA8,p
oNWX<1GEOb1P#Q"1@rGmlDJ+t3Eaa0T4aShlGB4m9@<-0qDNY<h1G<Hu!0T,kC5;kQ1OEgY@UX
:nAT!YoH]gXBP#O)EG9C@'Eas#uAKY]C!KmJ>"-Q?@/<Vf!GB4mA+CfVYGV<bRBnunT!Ko5lC*
78I!KmJH1OYEt04T3I+CfV:L]D1Q9Th2[P#Q"1@rGmlDJ+t5@<5pmBp(W+04T3I+C\c"Ch7L?!
g7A_$'I(tBnubP1G<L!!0T-bBcpknEbo<)P!+/T5^eep04S[(EZeh"Eas#uAKY]M99M)@BOPq;
0To%<BOPq;3Kdg6"DJuf@<-0qDMS=VWKLkV"FFTdEas#uAKY]C!KmJH99M8j0To%k5);4^@?Lb
?@s;u:C*6toEas#uAKY]C!g66?/;=.VOo^_j052PCL]W_?Ou"b++DQ]5Oo^_%I=#IJF!,3?@q]
:kL]NY>P'AWo+DHW4Oo^_%05;VEL]NY>Ou%NL<IK4(BOPq;J!+5e@s;u:C*7#"@<./)Oo^_j05
2PCL]NY>Ou"b++DQ]5Oo^_%I=#IJF!,4P!:,em@s;u:C5;nR!FoeOEeo4.WKMKZBcq,G!KmJH1
G<JcC5;qS!Ko6eP#Zpn<IL$A04T3I+CfV:L]D1Q9Th2[P#O)OATVs,@ribs+Bsj,6&6).&r7*T
$A]%F!Jgl7@u(=p+Bsj,6AQD5(5NZ\'8R3U!Jgl7@u(Cr+Bsj,6\l_<+G_"n/;P4#!Jgl7(5N?
(+Bsj,7#37I.Yo@+>DOhd!Jgl7&;Um'+Bsj,7>NdV2Ma&A!4I\QL]N;7L_bd^>p*@3!Chl7LeN
UmL&l=L!/u^8L]iMLL`]nF>E/_SLhMTRLffB5gkGhHL]iM<L_Y_!>p*@3!D%qFP_K0mLj4XXaG
'aML^8e@L_PY6>p*@3"B-m,0Sg!j$]#.G"Gd2:!Jk6A@u+W#+Bsj/;_9aYL^8eOL_PXNL^8e;L
gu6NLgs^5>E/hb/Mf):#`'RY*f(5\%#=q?@u+WN@pL3]NW`<50fFh!L_5FSL^JqFL]N<ALgu6N
>p*@3"B6s/15HKt+c%7s(l/`Z!Jk6A@u+W#+Bsj/<%TpdL_,@sLbOW3L_bdILgu6NLgs^5?'6u
sBnubP1OCcl+Dk\3EbT$)+DI!3Ou"b7ATDi7D281T99M(aEc6/C+Dlo8P"Uro04Sp:F!,=U!g6
3>1G<9KDepP5L]`f5Ou"b%@s;u:D28=X99M(aEcY`7+Dlo<P"Uro062,CC`mSN#*MWB1G<c_F)
N1<L^0)9Ou"b3Bldu2D28I\99M(aEbTT2+Dlo@P"Uro04\R3@N]2kGB4mIF(/sK;N`ghARf[g+
EDO5G9CpI@Vh3*Ou"b0CLMK2FE2M8Ou%8mEcYr5DN4mCDKBB2P&5AREcYr5DBO+6Ec[C\Op$+b
Deid,+D,%uF(LLjI?IQ>GB8pVA7Kh)P#-KYDeid,+D,%uF(LLjI?IQJCLML8P!FGY<%hr.Bnue
Q!Ko6eP%A]VH#R>XE-j6JGB4m2+CfV:OogehA7Kh)+CfV:P%'TRH\MNOI?K4gOu%NL<%ha*@WN
Z4F(/sK$'I(tARf1j+EDO4Cm#*f1Pc$e!HN6jCkr+TWI$:4P!5$b04T38+Cnu$@Zh%\1Pc$e!G
#\Z@Yb&JWI$:5P!5$b@s;B)C*7#1F!,3?EcY]+P&+iq!Kp*=G^Y`G@s;C'+DDs.G@H_[I?I,SB
4`9-FEqh:H\`emH\MP$I?ITn1G<BQ/MSA\Ar$JNWKK%jE,?_=FEqh:H\`trH\MPQI?ITn1G<ci
@;Kjp+BsX&B4`_MH]g@E!g7A_3+lid8pbMoP/2R0<.0p^?'6usEcZ&8B-:i!OpR:-L]N;4B4`_
MH]g@/F(&m'B9GHA99MJZF)5c-L]`G6P)#3FI?I,SEcZ2?De+3N!g4FW!0V2^5)93%D3>$KEcZ
&8B9GHA99MJZF)5c-P!5%%Oo]3-/MWE'EcYZ*DeG4sP"U4MP')q1L]Djd<IL#?Ou"b$De3NmF!
+\C!G,b[@XEn2I?K4gOu%moL]M'sE+4V(P,Wd]Bp(ZC1Lk?7AnH*,BnueQ!Fp%ZAnH*,Bp),PG
\N!6L]MiUC6CcD1Lk?7AnH*,C*7#)AS,Oq+DQ]5P,XU;@rGpjAof)0P"Th:@;Kjp+DI!3EcZ2?
De,$IP'DD<87QRLAnH+?!+TqYAnH+?!0TuqF(&m'B-:oO96,)mEc5KOG^Y`G04Sp3AnH*,@rGp
jAoib.@rGpjAoj,EL]N[<P"_#pL]E53@s;C'P%'4JP,Wd]Bp(ZC1G<ci@s;u:>9IF"@WNZ+P"U
r>P'(>GE+40M!.C#_?'7""!/LYd@rPn5!KsF/05Zk9Ou"b,+EDO5GB4mDP"UroL]E53ARf[gL]
N[<HS9,s5*@^BF(9E8+Di69Oo^@>Oo]'2AS,Oq+D#&%@N]EKWJCS<WKKni+EDOBEc5J2EcY`7F
!,<BC6AUR!KmJH99R,SG^Y`GI?I-4@q'L%BcqG;@s;u:A7KRf+D#&%@ZjEJG^Y`G04T3I+Bosu
GB8oKP'(ed@s<9U!.C#_?'7""!/LYrF(9EM!KsF/056S5Ou$TlF!,"'GB4m@Oo]-(@WNZ++EDO
4Cm&Or95,MhF(/sK;Na\9G^Y`G05YQ7F<G+(GB4mIF(9EW!HW@.E+OBP"at`R#^qk9P&-9fOu"
b3L]ESo04Te<Ou%moF*)\HAUB47I=$bNI?IT?GB8pVL]N[<HS9)r5*@^CFEqh:P&Pc.#V[qd0J
G170Sg!tV32^Z3+I/R+DI!3L]WA<P,4<qOuSV6L^9/-P,XU.P'L8p5'r)>P,Wkm8R7K=L]E56P
"[NNDfCk'Ou%msL]il704JjAP!5$bI=$tX0JG170SfmqV32^Z3+I/R+DI!3L]WA9P,4<qOuSV6
L]rr*P,XU.P'L8p5'r)>P,Wkm8R3uZ0p4_`1QDVm0JG17L]rs<Or9EB@s;u:BnueQ!Kp*3!f.#
CV33Nq30Ia,"d2'4WKKH.H!?FqH\aA=WI9q$>q]\CP!5$b06D,O+Bosu0o,gc"-Q?@!g7\915G
pd!g66?!g7\3Ou"b#Dfd+++Cd-^",I#A9TfI?F^m1_!f-rA9TfI?F^:.dI?ITID..N/EZen&De
tSQA!-k7DfCkbD/E^'+EE8=Oo]*'DetSQA!-k%Dfh.f04Q,7+EVO@P%'RTOu$SjA7KOoP!+.F@
u(,J1G<bkEejd[!Ko6eP#Qjm82"gsG'b?ADesKXCm"gIOq*X205tWMF!+[0Ec6/C+Cf>+F-:?d
M#VmdK3aWr04AmCBkCd`F<Fe7+Cf>+F*i]CI?K52Oq)hKDesKAL]MpeK7/mmH\_Z3DesKN!g9O
0L]MpeK89MUOq)hp!/LYcDesKN"Hoa2L]DjdK89Pa!.C"?HXgu1F,0j[WJCV=;L=6"I?K5=!Fp
 %aF,0j[WJCV=;L=6"I?K52Oq)hKDesKN!KsF<!g6H.M#VmdK89M;DesKN!KsF<!g6H.M#VmdK
7/mmH\_]4DesKN!g9O0L]DjdK89PVOq)hp!Jg_cDesKN"Hoa2L]MpeK89M`!I^+@?'6us@rPju
+?Vb>6&l.(1,1RA1G;(T#Ve(h1GgmE1G;+U#Ve(h1,1RA1G;.V$8F:j1GgmE1Ggm@7?.^01,1O
=1GgmE1G;4X$8F:j1,1O=1Ggm@7ue!41,1O=1GgmE1Ggm@8<+*51,1O=1,1RA1Ggm@;iV,@2E!
HJ1,h0G</qMI2E!HO2E!HO2DHsG3&`f\4s5#[Ec[$:L]NZ4P"UroE+sQ<L]DI6GB4m:E+*jO@Z
m^H!g6GuD0@%++CfA!FF,-=Ecc#-@:ODB5):qVWKKo;5CJ\d?'9Jh!/LYrBle*H!KsF/056S5O
u%,mF)N1ABldu2@rH1)L]N[<HS9,s5*@^+L]M4G%$G@]!0TKlL]MpNL]Djd<F(bIE+sQ<+DN$5
+Dkt=L]`J5P)#3GBcqG1F)6X5P,XU]HZ3\DF!+t2Ci^_6P,X6=P,WJ?GB4m@P,X6<P,W;8G)-6
Vs,r/#H$t%&Fa]EQI?I-LP"7\t00p^b+BsX1L]q',>q\Me>9I.+&;UQs+C-Wf+BosmL`2'X>p*
E+6m,\V>q\Vh>9I.+)Mf28+C-Wi+BosmL`2'l>p*@-7Yi0m+BsX?La$+I>DPb),$c<s01R-h+B
sX@LbN*W>DP_(0O5f,01[3i+BsX?LdkYm>DPV%7U7-@Lh_`8>p*@-)Mgpi+BsXgLe(eo>DR$M8
6m?D02jGW0HaRB>q],.1,'hT+BsX/L]h!+>q],.1GBqU+BsX4L]h!+>DNfG#$i?W02sMX2BZ3H
>DNQ@$=+c[02sMZ1*BdD>DNiH$=+cYL_,@N>p*E+<%Tpd+BosmL_tpT>p*@-(l/T++BsX=L^m]
5>p)<p+Eh=:F-91CE+sQ<P!5$1P'(VYG)-0^G^Y`H05?:COu%moL]MI/G]T$WL]N[<HS9)r5*@
^@Bm=\ABp),Fs,oNlE+sQ<+DDs8D..N/C6D5QGV<eSC5;nR!Ko6eP#Qjm83B!fEb0,A061WAD.
.O,Bm;:MBm=\AE+sQ<05tWMGT^L7Ci_7KBm=nGEc6/C05+p2B4uB0Ec6/CLe*[eL]W`U06_,@F
D)e,DesKN8<Ple!g7@QDfBe@DfBf4Df0V=5!C*"Df0Z-Eaa0TE%`kbASu?nFE2)?P#RT)I?G)'
1G<6VA7][sAWf$9A1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]
HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/codeone 0.0 0
%%EndData
%%EndResource
% --END ENCODER codeone--

% --BEGIN ENCODER gs1-cc--
% --REQUIRES preamble raiseerror renmatrix micropdf417 pdf417--
% --DESC: GS1 Composite 2D Component
% --EXAM: (01)95012345678903(3103)000123
% --EXOP: ccversion=b cccolumns=4
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp gs1-cc 0.0 0 0 0
%%BeginData:        152 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  05tH61  bg  qP3%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  k$>  D/!  L#DfB6  !1  bgqP3%  oDi
/n8fPFCfK5H"(o:  FDl%L  @Wu  O*E 0A  q<  G`i  LhB  6,dZ@q  0k  A'Tt>:  %52
X=FD5Z2F-8_M1G<        3GEa  s#u AW  f6  ?1G  <9W         DKK         E0@<
Wi+@;L!rOu"b$@s         2F(F  (  oQ  1N  WER  O1G        <6J@        rH1+D
/OENs,o/kCh[d/H  #R>T!0  T,k  C  h[d 2B k2=!  M#W  VoDfBf4Df0  WZY:js=EbTE
(FEqh:P!+/J!Ko=  '%<$3-  Bl@  m 1H]k    FA@;  L!r  P!+/T5^eep  OuSV6P,4<rN
WD;+NHB2`AWf3'O  tDh\P'  )pO    Ou%N    5OtC  crF  _-^lI?ITYP  %BdtOuY16E-
,f4DKCt)Ou%NL<,  Z_tBl   @m1H   ]g15P   "@<:  @q0  FnF_u#;+Ce  nkDesQ5DKCs
lOu"b-Bl8-/A9;K         -Ch[d   2Bk2=  !Ot;b  P@q  0"eCisT4F,  9jZ4aT:R04e
R00f+Ug06M5D@>G       %>ARTI9  L]];QE  +<I8!  \\2  -0eG+83$;^  @G%G]8Bl@mL
!Fq:0H\_fQHYdD6GA1T0BS\L.WJD.L;LO^.04\L5@:EYcDf'B+L]fAA@<>pe@<-F2@:O(aA;C:
?A79Rg@UX:uFCAZpARo^rDJ=n.04\L5@:EYcFE2MA@psIjA;C@AA79Rg@UX:nBl.R+ARpT!04\
L5@:EYcAU&0&DId<hL]fAA@<>pe@<,q(E+*WpARok(@:O(aA;C@P4s4ZUDKL/CAWf\>@q0"eCi
sT4F-8_M1OYEc04fBI@;]V&055<e5*@]TDfp.EBl9)CP,4<t05?:COu$fiH]A,5P)XgO3,`q]P
!3WD5*C2S@VV&,L]NY>05?Y6Ou&8DOuS6tL]`f6Ot:NoFHSh&L]N[<P!5%ROuSV6L]`g>L]`f(
P"^:NOuRB&FHSh&P!5%SP%&0h!AA2N5*@^?F``E>C6D8R5^eeqI?J/iOq*X204AR9+BosoOu"b
"Bm*p$L]W_sOu$QUEas#uAWf$9@Yb&JWJCS<5*ATdOuSI%P!+/T5^eepNWCSlNKSFI5*C&O5)o
XlP)XgO5*C&O5)9;s!Kr4dH]A)^",Hu@LOG=c>9I?gF-6TfFcm]"!g3SI=C!RgBlfG$Ou$N\G%
#3C",Hu@LLk^L@;]V=G^Y`dP'&ElF*2G@ATE-\3/Bk`8s2Ao>*<<W"FZFCOu"b*F)H,;0RJsBL
bOuaP!4[^P$sLVI?G)'1G<H`DKTeNH]g@E0p5.l5);4^@?LbAOq*X2HXUW0P%'4JP"L(0Blf(1
P"Uf:0eebR@;0e=!0U!8!\lEm4d'hoBlf(1P"Uf:0fP7YP&bo*s,I.80Tn\LP#Qjm<+0K^P%'4
JP"L(0Blf(1P"Uf:3A?UZHS9Ob@;0mnClSQW0To(l1NnpjL]NZ2HZk2FP"TM1F`;;2EdNTBNWL
piP!FGY<.0p/G*6<j!g60&G)--]95/HbF_riUG)-0^95/HiE,]B/Op$,f!KI490p4eMP#Qjm<-
FF6L]`f4HZk2FP"TM1DKTeN+EiPAP"TM1DKTeMOp#ra!g62jF*2G@ATEq:H\_``!\lEm5^eepI
?IQQP%'4MP"L(EL]ET2Ble07D)!/VL]NZ3Ble07D(q+UG)-3_95/HbF_rgq"EoS'P"TM1F`;;2
EfpQPL]`Y=0enhVI?IQXP#Qjm<.0p/M#WJ90Tn\LP%?:`ATVU(A<K->1G<WbEb1CtOu"b'DIYD
Ws,o/kCi4B4ATDKpM#NPn05P'5E+iZtF_t]1Bk)ttOu"b-Ble2N1cC0fOu"b5DdmEuH]k4g30I
a,!KsF<!0TO%!KoWnL]NZ@P!4[UP'DD<8<Prg",Qu?LPQ"f!g6ZK@ZmRN0TnDY@Yb)K=H[-V5*
Dn.5*C2>Oq*X204A[9BON#G4GZ:Z!Jjp+OuS7`P,X6@FDkW&DLI[=LbOVcLcKgF3/@^#!Jgr%D
dmEuI?I-5DIYD]"Yh_d0ekjUOu"b/F_t]1Bk&8J4GWun!JkrHOuSI'0JJ:aP,4<ZOuS7"M#WWn
L^T"?P,4<qOuSV6L]W`'P,XU.P'N3ML]ET2Ld@1eH]g@E!/OsEG^Y`SOuS6uP"UTsP!+/T3/@T
k?BTP]P#RT.L^9.ENX%6l0JG170SfssV32^Z3/@Zms,r.n!f.)EV33Nq30Ia,#Eh96WKKH.H$t
iHCgh.!BOPe$D.Ra%@u^[G0JG1E5*@]T@;Kmr@;^4)ATDKp+?VcB0Sfac3I?oKLb"XfL]qm=@V
K_.P"92&@kiuI0JP::0o/,O!Jjp+OuS7@P,X6AFDkW&DLI[=LanDh0ekC:0eeD7L]N;bH]g@E&
!?sL#'=cmBl8?^88N0dD.Ra%@u^XF0JI<WF)Nrn2N@qp0JP785!G,c055KG2Dd<74?SERL]N;l
H]g@E/!?lf"a"ZlBl8?^87laL0ocDk0ekC;Ld?gtLg#.g3/@TuWJCe$DdmEuI?I-W@>Fr?H@(f
7L^0*BL^/$?@VK_.P":BPNX.?o0eb=90JJ;,NX.?o0eb=90JSA0L]N;bH]g@C!6(*%L^8*@@VK
_.P":BiL]N;rH]g@C!5"BpL^8*@@VK_.P":C9NX.?o0ekC:0enJ,NX.?o0ekC;0JI<\F_t]1Bk
*/*0JG1s@;Kmr@;^4)ATDKpNWh*j0eb:F5*@^=ATVU(A<$^G0TnSG@;0e=!0U!8!\lEm4^i&GL
]ET2NWLpoP!+tKHXUW3@;I&pBlf(1P"Us2OuS6tL]W`5Ot;=gJ<F`35*@m]!f-o@9Tgr_!KsF<
+HgQ(5)9>t!g66?/<U$s!KI^F0JG170JG170JG170JG2:&<`lQ)3Qt8",Qu?LPQ"f&<`lQ0TnD
Y@YbSY5*Dn.5*C1qL]N;3L]iP6P)"C?0TrD`P"B(rF,0gZ99''.0p4\HL]DjML]Mpe<F%7fA7g
ugOu"b"BlbD*Blf(2@;0eG@Yb&JWKKr<1OXU'@q90o>DN<9!/LZ3!F:jEI?IT=BlfGHL]ETTHX
UW0L]ET2NWLphP!+.FB5hH*>9I?gG%#3I!\lBl97))M8R7K8@;0eG@Yb&J:jXj.E+U4s+D5Y*O
ogehAo;*5+C1-dI?IP_@;0d*@;0e=!F]\`P%'4JP,XU<Ou%N505#69+Bot#DIYCD?'7!lP#ZpW
04SO)+BosuA7gu+P')Q\L]E52L]E52L]N;4L]N;4?'6usB5hH*>9I471OYEd05YW<AW@"5F_t]
1Bk*;^I?IQHATVU(A<$^G0p4\H04SO)+BsX&L]LeE1G<0N3A;RaBm*p$NWM3pP"UroDK'W-L]N
Y>@;._UP%'SkHXUVK0Hb7PEb1%-Oo]!*3A?V*DK'W-P,X6<P,XU<I=$tSI?IS`@;._UEb0*N5*
@]TDII@#BOQ\s@;._UEb0*7OuS7`P"Lm$Lg#sMOp$,f!KmJ3P#Qjm8Wkk_DJjT6F,0g)BfRkfA
SldW3/B8O8s2Ao3Kdg6"FGq*Oo]uo<.0p$Ou"b.De*E%DII@#BON$$DKTf;P#-Lc"^u4dBOQ=9
NX'HED.Ra%@ssM?Ou$uaCiF&r+Du(>D0(j@@;._UEb0*N@ZkST05YW<AW@1-CiF&rDKTf-EbT$
H1OYEc04SO)+BosuA7gu+P'(V[A7^c0@;Kmr@;^4)ATDKpP!+/J!.C#0D/WrrNX'HED.Ra%A!0
!%L]N;3I?IQHDe*F>"^u4dBOR&eH\_]Y!I^,1?'6us@;0d;+CSu*P%'4JP#-L6Blf(2P"U4MM#
Vmd<K].HBlc"h!\uKn4^i&G0ocAr0JG>H4d'i404SO)+BosuA7gu+P'(2IF"r[V1,4qTH\_]Y!
.B3M!Jgc)P#YeN1OXU'@q90o>9IEdAs*4YFbg$'Ou%NL<A/65@;I'(E,oNG!0V2G@;._UL]D=3
Eb1D-Ot;$.L]Djd<K].u&4/cU8P2WL:/Fec;cHe">%),*0Hb7PEb1%-P"_$uH]hj$5*C&O5*C%
A@<Q'qP!5$bI=%-"04B$4Cl&+S1OYEdDK]H)L`_dl@<Q'qM#WWTOp$,l"Y_Va0JJ:dP,4<ZOuR
?&@;L`$L]rs<Ot`%YP%'4NP!5&.P!5%S>EV0sLbP!kI?I0-05b65FE<U/Ou&+$0JG17L]im;Or
9EB@<Q'qL]WA8P,4<qOuSV6L]il)P,XU.P'L8p5'r)>P,Wkm8R3uX@VKq*P!5$b04SO)+BosuA
7gu+P'(YOBlnEZ!g7\7@VKq*Oogeh?'7!lH]AFe0JG170JG170Sg(!V32^Z3,WnJCkr.K$Bh6K
0TnDY@YbAS5*Dn.5*C1qP!45K0TrD`P"Aq4DIR=%F-8_M1QDVm0JG17L]rs<Or9EB@;._U+Du.
=AWf]B6'A4'!f.#CV33Nq30Ia,"d2'4WKKH.H!?FqH\aA=WI9q$>q]VqBlnEZ5*@]T@q90o>9I
EdAs*4YFbg'S!Jgc4!Jgbo@VKq*Oogeh@:EqmF-6TfF^:.dI?ITIDe*F>#B"[$ATDKpP!+.FB5
hH*>9I?g3A>JbD0p\o8RZ=SP%'4JP#-L;DIYDLP#P_M1OXU'ASu"!+Dl%-AW?q&CiF&rP!+/#C
iF&rI=!)FCiF&rDKTf-EbT$3P#[Z$055;H>9I?g3A>JbD0p\o8RZ=SP%'4JP#-L;DIYDLP#P_M
1G<ZhF<G:8P%'4OP&-9fOu"b+L]ESoL]E53Bl9)CL]N[<HYIA\5*AQMDI[aN5*AR%3*VP0H\aA
=WI9q$>p+'.FHSh&P!5%SP%&0h!AA2N5*@^MP"769A7crg+CeqoOogehDfp/X!,@ZjOogeh?'6
usB5hH*>9I471LY!=P%'4JP#-"6A7^c)@;Kmr@?PJjEdKHVDe*F>#B"[$ATDKpOu%NL<.0p004
AR9+CSu*L]LpuF-:!g!KsFF9Th2?BlfGHL]ETTHXUW00oc;j0p4\.Blc"h"?8(h1m1"bEdKHPE
+U4s+D5Y*Oogeh@;0mnC`m/#F"rhNH[V&K?'6us@;0d*@;0e=!F]\`P%'4JP,XU<Ou$N\F-:!g
!0V2G05#69+Bot$E+Y77P'(AS@kf*3Ou%NL<.0p/I?IQXP#Q:0FD,T'NWChs4aShlA7crgL]C_
D1G<B[Aft;#?'6usD/WrrNX'HED.Ra%A!/WrP#O)CBkD((ARpT5Ou8CY>DN98!Jgl*I?I-,H]A
.]0SfdnV32^Z30H7W!Jgo8s,r.n0TlI"G[Y;uBm=3"L]`G6P)#3FI?I0+L^T">L_P2aP":BFL`
_ERLa7=qP":BX?$hA7L]Wa9Ot`%Y@;0=fG\(EA",Hu@LQZn1P"CH0L]LpuF-:!g!KsF/056S5O
u"b"BcphuF!,1[99M(aG%#20@;0mnC`m/#P"UroB5hIG@UWu6@Zgb8@;M*9Oo^^POuS6tB5hIG
H'1."E+Y8B@;-igP!45@P"ArBH'1."E+Y8B@;1m6Oo]`7C`lrF5'q^@8R7L)05#69P!5$bBcph
uF-:!g!KsFFD..-jBm=3"+CSu?!/L]>9TieHE0:?NB5hIG@Yb&J!KmbP3/@QIE+Y8YOuR)nAs-
V8DIYDaGV<]KAs,?@1OYEcI?I,SEb0)sBlnEC06M>IA<K->1Ljp<ATDj+Df1R9A!1\U4?P9*+B
osmL&e-+!/cSULhqlLLe`af>p*@+!2kPOMMQG3@Ydcb+BsR#`J+AjL&d*eCkthl+C-X0+BosmL
&k,*!@W['!/:L#L&dm&BS\WR+BsR&!/:Q2L&r3H!MG/J0STSSL&dTsE/7&@+C-*oL'40("8ITQ
8;72=L&pdu!FUW_#_i?+L&dTs@#-dJ+C-*R4s4?FG%G]8Bl@mP94MIADesQ5DKCU8P,XU;04JX
;@ps=tP!5$bM#UpuFCS`uF*j'0F`V,)P"L(a5(/SnP')298Wl&hs,q5GF`V,)P,Wkm<.0*U4>1
3#s#rUh@q0[nEcYr5DN[YUFY@SSF`V,)L^9/%Oq<d-OuS7%P#@)>P&-:FL^'#WOo^_%D29U'@=
*e9I?IQHLaeKZD2&%`P$sLVH\`5]P#Q:Q!25QJD2&'VP$sLVH\`emP#Q:Q!C;l@H\aq8P#O)G@
q0_(P!5$b05VhK+D#%mGB8oJL]`e@Ou"b$+Dbb0GA1T0BS\L.WJD.L;N`hQ+CgR4Lg#s<HS8kO
@u(/K!Ko6eP#O)T+Di62OuAI7Ot;bP06CiK+CcO7P&+]>@s<!WWJCY>WKK5s"d2c>#*Nec5)9B
*C6AUR#a0"e1NdbMA;24?P$r]ZB658=F(JmFWI9,Ls*^&1I?ITn3/ITt4aW?7@q0[nEcYr5DN4
a+P!+.F@q0[nEcYr5DN4a,Ou%N5@q0[nEcYr5DN4a,P!*VqDKL/CAW@".F"o7$1,tF[Op$+b@q
0[nEcYr5DN4a-Ou"b$@q0FnF_u#;+Dbb0GA1T0BS\L.WJD.L;N`haHS8l=G%G]8Bl@mFs,o0dP
#Zpn<HW@oA0>o(D.74$F+'3NI?G)'1G<<W@rGmhH]g?AEaa0TD0qF0P"U4MP')29<EkVMH\aA=
WI9q$?'711@ZiofE+W[!A!0#jP!5%S05?Y6C6AU\1OYDrOu"b/F_t]1Bk)1+DK?q)+D5Y*P%&c
o!.C#_L]E82?'6us@;Kmr@;^4)ATDKpEcl8@+Bot$E+Y8BH\_ZMP(SPj?'6usDIn'7Ble2N1cB
8iCj@.-+D5Y*P%&co!.C#_L*mL;Ou$`iAs-VZ!KsF<s+gZ%056S5Ou$`iAftfN99''-0SfdnV3
2^Z3/@QIE+U5,P"UrtAo;*5P!+/TFbj@PP#RThBcq&-As-VZ!KsFFAp]\#L]M.-AftfD!KmJH9
9M8HDIYDa4aW?7LgGLm<0DKSP#Q=AD.Ra%A!0$=@!cd6D.Ra%@rc^0F!,0>DKTf-EbT$(F`)7C
BnuhR!Kp*3!g3SIG^XpVF_t]1Bk)1+DK?q7L]ET_I?ITn3+6WBBOPe$D.Ra%A!0$=@!c<uE+iZ
tF_t]1Bk)1+DK?q7+CT)*BOPe$D.Ra%@rc^0F!,1Q!KmJH98EV3!Kq\UHXU`0BOPe$D.Ra%@rc
^0F!,1Q!0VSTP#[Z)Ble2N1cCL\P$jG:@;Kmr@;^4)ATDKpP!5%:P&QQeHZ!D>FD5f72Dd=1DJ
XS@BnubPG^XpVAU&<2F)Nrn2K*JLGp$fDDIn'7Ble2N1cB8iCj@.;L]NY>P"UT3Oo^_jI?ITYP
"76=E+W[!@tl+>OpR:-0564BOu"b+L]ESoHYFU8E+Y8BP!+/T5^eepHYm\3AW@"5F_t]1Bk*;h
HYFU8E+Y8BL]Wa=P$r]n!g9CC3/@QIE+U5,P"UrtAo;*5P!+/TFbj@PP#RThOuS6uB5hH*Bnue
Q!Kp*=3+d&<0p4\HP')ReI?IQmG`k%(F_t]1Bk*;iP$iWSF_t]1Bk&8sDI[TqAM7a?BnuhR!Ko
7%5^eepP'(SLCiF&rDKTf-EbT#+DKTf-EbT#+ASu!rA7[E2De*F>$t3skBOPe$D.Ra%A!/X25^
dulE+U5,P"UrtLbP!(P!4[^P#.<^HYd,,E+iZtF_t]1Bk&9'F_t]1Bk&8sDI[TqAM7n=A7^c0@
;Kmr@;^4)ATDKpOu&7dI?IP_Eb0)1@q927@VV&,Eb0)sBlnEZ1NI&DL]il5Eb0*D#*NDX"FH.5
0JG170JJ:eP,4<ZL]DI,D3@SU3+m2B+DI!3LbFpjL]WA8P,4<qOuSV6L]il)P,XU.P'J^$@<Wi
*DI[TqAM7a?BnueQ!Ko7%5^e!8!g9CC3/@QIE+U5,P"Us_OuS6uLgH6hDKTf-EbT#+ASu!rA7[
E.+DHW4Oo^_%P!FGY<IL$1I?IQHDe*F>$t3skBOPe$D.Ra%A!0!%B5hH*Bp),$DIYDa4aUdY@k
f*7CiF&rDKTf-EbT#+ASu!rA7[E2De*F>#B"[$ATDKpOu"b*+DHW4Oo^_%P!FGY<+g/^+DI!3O
uR/sD`0F1P!5%:P!3;jE+iZtF_t]1Bk*;iP$jGlOp$,JBle2N1c?IbCiF&rDKTf-EbT#+ASu!r
A7[E2De*F>#&/-s2Dd=T1Qk"OP#Q=AD.Ra%@rc^0F!,1[98Ee88pbAlF_t]1Bk&8oCiF&rDKTf
-EbT#+ASu!rA7[E2De*F>#B"[$ATDKpOu&7dI?IQIF_t]1Bk)1+DK?q7P"UrtL]il5P!3TC!G?
@`P%'S;Op$,JDKTf-EbT#+@;Kmr@;^4)ATDKp+D#G#De*E4D/WrrNX'HED.Ra%A!/X25^eepB5
hH*Bp)+tCiF&rDKTf-EbT#+ASu!rA7[E.+DHW4Oo^_%P!FGY<,HPaAW?t/F)Nrn2Ng4MB5hH*B
p),$DIYDa4aUdY@kf*?F)Nrn2BZRK@rGmh05YW<AW@"5F_t]1Bk*;^052PCL]NY>Ou&7dI?IQI
F_t]1Bk)1+DK?q7P"UT6P"KV'G][Y@D`0F1Df0B:+DI!3L^K;;Op$,JDKTf-EbT#+Ble2N1c?I
fDI[TqAM7n=A7^c+DKTf-EbT$H1Qk"OP#Pk+E+iZtF_t]1Bk)1+DK?q7P"UT7P"KV'G][Y@D`0
F1Df0B:+DI!3L^K;;Op$,J@;Kmr@;^4)ATDKp+DGn82Dd<7ASu!rA7[E2De*F>$t3skBOPe$D.
Ra%A!/X25^eepB5hH*Bp),'F)Nrn2BZRK@rGmh052PCL]NY>Ou&7dI?IQXP%B')AM7\8Aft`*A
n>jiL]D1Q9Th1bE+*9"@q927@V9XlP%'RTEb0)sBlnEZ$'I)`@:YO1L]ET7H\_ZX"`Rm\P%'4J
P,Wd]Bp(ZC1N6c5+DDs&L]E52L]N;3L]C_:!,u@WP%&-gWJC_6!g4Fa:j\?hI?IQmFcoF]H$ti
HD/WrrNX'HED.Ra%A!0!%05t?1+BsX%L]E52L]DC&A<I"WF^9e'E+*:?@ZjEJ1OYEcD/WrrNWi
j-E+i[C4aSi$@:UKbL]N;4L]N;4L]MI'A<I"WF^9e'E+*:?@ZjEJ1OYEcI?IP_@VKq*+BosuA7
gu+P'(DVAs*4YF`:c"Oogeh?'7!R@s2F(F(oQ1NWERO4aSi$GB,]!3$;EJ>DN98!/LW2!/LW2!
/LY]LdZTG#EfCAP(R&'1Pc'f!Jj-j05?Y6Ou"b7L]ESoL^&\8L]MiUBp(ZC1G<noE-H=_1,pCk
L]N[<P"TMP98EY4Cj(O8TTW39!Ko6XGB,]!3$;t!95,MlL'+*3C6EgiP"9P9E]Gm7+DR'4L]DC
<E]Gm7+DQ]5P,XU;L]ET2L]W`UG(p*lP#@GDP'DD<82"IsF!+\C*.*JAI?K4gOu"b#L]ESo04T
e<Ou%Go+C]&,F-:!q4aW>WI?IP_@WNZ$BlnD=@YdH^BlnEZ@UbM"L]W_WP#-Lg5(/SnP')p]Ou
"b#F)2t.F-:!q1G<6Z+CfV:+CcO'F)6X>P#@):Oo^_>Ou"b$F)2t/F-:!q1Pc$e!Fg+dL]N[<H
S9)r5*@^X!/LYcF)6X5P,Wd]C6CcD1LkJKC5;qS)3RX3GB,]!3$;pu9597fOo]'6Cm(c\94Drb
@WQ?.Bp,HO!KsFF99O+S!Kq\UP":"a87Q^WL]N[<M#W83HS9)r5*@^3F!,1Q!KsF<!g4Fa94N#
cBp),D"/(fTOo^_j@ric,L]W_WP"UN3TTX&QG^Y`G04H&5+C]D.Oo^_%04Q,7+CfJ/Oo^_%I?J
.p@s;u:@s<!M!+V0cOu"b#@<,jrA7ZlnGB8pVL]ilWP,4<tL]E53@s<!W@Yb&JWI$:4P!5$bNW
`Z2+<ZICP,4<ZOuQrqF!,1[98Eq2"HoUE0TnDY@Yb/M5*Dn.5*C2#@<,jrA7ZltL]ilWL]`J5P
)#3GI?I->E-,f4DKCgDA8c@-A9)+&FE2M8P'CnaFD5Z2F,g?4@psJ"F_-_\DfBf4Df0WV#@h[g
F_u#;@q0"eCisT4F-:c$@<-"%+C\c"@rGmh+E)4@Bl@m10/%0V@rcL,A7dYQ2j-Cg1OYEc@q0[
nEcYr5DN4a,P!+.F@UX:eDe*E%@VKq*P%'4QP#@I>Ou%moL]LsnEas#uAWgMY!KsF/056S5Ou$
Q]FE8R=L^9/[L^9/;L]ET%H]eDc!g7AJP"CH2P#>atEas#uAWf5kP!5%RI?I->E-,f4DKCgDA8
c@-A9)+&FE2M8P'CnaFD5Z2F,g?4@q'P#F_-_\DfBf4Df0WV#@h[gF_u#;@q0"eCisT4F-:c$@
<-"%+C\c"@rGmh+E)4@Bl@m10/%0V@rcL,A7dYQ2j-Cg1OYEc@q0[nEcYr5DN4a-P!+.F@UX:e
De*E%@VKq*P%'4QP#@I>Ou%moL]LsnEas#uAWgMY!KsF/056S5Ou$Q]FE8R=L^9/[L^9/;L]ET
 %H]eDc!g7AJP"CH2P#>atEas#uAWf5kP!5%RI?I->E-,f4DKCgDA8c@-A9)+&FE2M8P'CnaFD
5Z2F,g?4@q0V$F_-_\DfBf4Df0WV#@h[gF_u#;@q0"eCisT4F-:c$@<-"%+C\c"@rGmh+E)4@B
l@m10/%9TAi)5$P!>*cI?IQ<EbBG9A8c@-A9)+&P&N'-Eb0-*@<?O(G`l$h3IR&#Ou"b(F"o7V
A!/g7A1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7R
H\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/gs1-cc 0.0 0
%%EndData
%%EndResource
% --END ENCODER gs1-cc--

% --BEGIN ENCODER ean13composite--
% --REQUIRES preamble raiseerror renlinear renmatrix ean5 ean2 ean13 micropdf417 pdf417 gs1-cc--
% --DESC: EAN-13 Composite
% --EXAM: 2112345678900|(99)1234-abcd
% --EXOP: includetext
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp ean13composite 0.0 0 0 0
%%BeginData:         22 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  ++@;[  eUO  uP+;C  G'+8
/p(ZFEd;,:Ecc5;  /n0$=  E,^  uoP    'E-L  05  #>\  /Rr:R3  %o  Di/n8f  PFC
fK5H"(o:FDl%L@W  uO*E0  Aq<  G`k  $ >Eb  0-)  Bl7  KjEfrC  8F  _`U>D_  ?-C
EcQG7F`MSBDD#CB  BlJ$S  g6-  ]D3 %o  ;`  DJ`  g(E  bTc]3%  oD  i/n8fP  FCf
K5H"(o:FDl%L@Wu        O*E0  Aq< G`  iL  hAR  TI2         1Lk         ??E,
Tf3FCffT'Tt>:%5         2X=F  D  5Z  2F  -8_  M1G        <3GE        as#uA
Wf6?1G<9WDKKE0@  <Wi+@;  L!r  O  u%# qF D5Z2  F-<  ^[F*)G:DJ+  ':E+P1qH\_]
c23JDeE-,f4DKC/  fX(GdV  F(L  L tH]g    XBP#  RT(  P%'TNOthst  4d(eHEckrV4
aW>DP!5%OP!5$bI  =%,/FE  2M8    Ou%N    L<IL  $AO  rfcH05kfOB  l@m1P!5$bI?
IQJE-,f4DKC/f1O  YEX@U   X:eD   e*F>!   IU&i  HS9  2LDIm6sP!5  $bP'&EfDf'H
V5*@^MH]iN"P#[Z         ?DfBf   4Df0W  V#Ae*  lFE  qh:NWj!&DD  <r1G].PCBl@
m1NX9E;CNFH8ART       ,0!AK[]  DfBf4D  f0WV#  \7j  kFC]E#GB@k  JAWh:SBl7Kj
EZf:>FD5Z2F"]1X@;[eUP!:TQEb0-)Bl7KjEfrYCs+j4/L-.ROEb0,A061WAD..O,Bm;:MBm=\
A>DN98!Jk$.L]DjdK89Pa!/LZ3!/Op-L]DjdK89M`!Jg`3!Jk$.L]DjdK89Pa!*q6sBm=lY@4u
S6G^5)I05+p2B4uCC#)Gg52D98gA9;L@@>II;2D8ufF<GL@FD5Z2F!*Y10/%?WDJ`g(EbTc]5D
];p#*O^NDf'G9DfBf4Df0VL05#>\/Rr:R5;+[1ASu?nFE2)?P!>+(Ou[rR%[&V$ARTI21Lk??E
,Tf3FCgUpP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYu
CM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/ean13composite 0.0 0
%%EndData
%%EndResource
% --END ENCODER ean13composite--

% --BEGIN ENCODER ean8composite--
% --REQUIRES preamble raiseerror renlinear renmatrix ean5 ean2 ean8 micropdf417 pdf417 gs1-cc--
% --DESC: EAN-8 Composite
% --EXAM: 02345673|(21)A12345678
% --EXOP: includetext
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp ean8composite 0.0 0 0 0
%%BeginData:         22 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  ++@;\  &f3  %oDi/  n8fP
FCfK5H"(o:FDl%L  @WuO*  E0A  q<G    `k$>  B6  ,dZ  @q1Z]0  6M  %_@rEu  AAT
Dg:@Wc^5Df.1:GA  2#8P1  l(D  OuP  + 8AS  u<u  DIm  6sOuP+  ;C  G'+8/p  (ZF
Ed;,:Ecc5;/n0$=  E,^uo  P'E  -L0 61  WA  D..  O,B  m>e#06  M%  _@rEuA  ATD
g:@Wc^5Df.1:GA2        #8P1  l(D Op  s'  U@;  \&7         Df'         H3F(
o`-H\`B!23JD%Df         Bf4D  f  0W  Z5  *@]  T@U        X:eD        e*FB5
*@]TA8c@-A9)+&+  D,%uF(  LLj  D  fBf 4D f0WZ  Y:j  s=EbTE(FEq  h:P!+/J!Ko=
'%<$3-Bl@m1H]kF  A@;L!r  P!+  / T5^e    epOu  SV6  P,4<rNWD;+  NHB2`AWf3'O
tDh\P')pOOu%N5O  tCcrF_  -^l    I?IT    YP%B  dtO  uY16E-,f4D  KCt)Ou%NL<,
Z_tBl@m1H]g15P"  B+kEa   s#uA   W?e=P   )XfA  Ch[  cu@<.MpOu&  8D04Sp;E0<D
J1OXV5Fa]EQP"oq         7FD5Z   2F,gK  ABl8$  <E+  P%4ARTI9P'  CnaFD5Z2F,g
Q@DJO<4Eb/ZiNWC       hsG].PC  Bl@m1N  X006D  KKE  0@<Zg6F_-_  \Ch[cu@<*K/
E-,f4DK@HaARTI9P!:TQEb0-)Bl7KjEfrYCs+j4/L-.ROEb0,A061WAD..O,Bm;:MBm=\A>DN9
8!Jj$gL]DjdK89Pa!/LZ3!/NpfL]DjdK89M`!Jg`3!Jj$gL]DjdK89Pa!*q6sBm=lY75&UoG^5
)I05+p2B4uCC#)Gg52D98gA9;L@7>OKt2D8ufF<GL@FD5Z2F!*Y10/%?WDJ`g(EbTc]5@\VKE$
0(<FD5Z2F"]1ZF"o7VA!0'>30",\Bm=lc98H$"5*Dn$#*O]o061WAD..O,Bm>e*P"h*"I?G)'1
G<<JDE)-ED/aE7BlmpL30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgG
OuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/ean8composite 0.0 0
%%EndData
%%EndResource
% --END ENCODER ean8composite--

% --BEGIN ENCODER upcacomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix ean5 ean2 upca micropdf417 pdf417 gs1-cc--
% --DESC: UPC-A Composite
% --EXAM: 416000336108|(99)1234-abcd
% --EXOP: includetext
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp upcacomposite 0.0 0 0 0
%%BeginData:         22 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +;E+<  =>3  %oDi/  n8fP
FCfK5H"(o:FDl%L  @WuO*  E0A  q<G    `k$>  B6  ,dZ  @q1Z]0  6M  %_@rEu  AAT
Dg:@Wc^5Df.1:GA  2#8P1  l(D  OuP  + 8AS  u<u  DIm  6sOuP+  ;C  G'+8/p  (ZF
Ed;,:Ecc5;/n0$=  E,^uo  P'E  -L0 61  WA  D..  O,B  m>e#06  M%  _@rEuA  ATD
g:@Wc^5Df.1:GA2        #8P1  l(D Op  s'  eE+  <<d         Df'         H3F(
o`-H\`B!23JD%Df         Bf4D  f  0W  Z5  *@]  T@U        X:eD        e*FB5
*@]TA8c@-A9)+&+  D,%uF(  LLj  D  fBf 4D f0WZ  Y:j  s=EbTE(FEq  h:P!+/J!Ko=
'%<$3-Bl@m1H]kF  A@;L!r  P!+  / T5^e    epOu  SV6  P,4<rNWD;+  NHB2`AWf3'O
tDh\P')pOOu%N5O  tCcrF_  -^l    I?IT    YP%B  dtO  uY16E-,f4D  KCt)Ou%NL<,
Z_tBl@m1H]g15P"  B+kEa   s#uA   W?e=P   )XfA  Ch[  cu@<.MpOu&  8D04Sp;E0<D
J1OXV5Fa]EQP"oq         7FD5Z   2F,gK  ABl8$  <E+  P%5ARTI21Q  m!$E-,f4DKC
gEBl7^-E,oMuA<$       [EP'Cna  FD5Z2F  ,gN:D  f0Z  -Eaa06Eckr  VG\h)3ARTU%
DfBf4Df0VL06M5D@?Ni.061WACh[cu@<.MqM#W9%P(l(]061WA0/%?WDJ`g(EbTbOE+sQ<+BsX
 %L]N<;H\_ZMP(SPkL]E53L]E6:H\_ZMP(SPjL]N;3L]N<;H\_ZMP(SPkL]C^6E+sQALg_rUBm
=oZ"#">!BkM+$L^&Z+Ou=t;Bk2=!Lgc*1Ou=t3E-*4@E-,f4DK?pa4teR0ASu?nFE2)?P!=d%L
^'#s@rH4'+E)4@Bl@m10/$sZ0eHmFP!:TQEb0-*@<?O(G`k:S9p.MbOq*X206M5D@:O4mE,Tf3
FCgUpP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[
!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/upcacomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER upcacomposite--

% --BEGIN ENCODER upcecomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix ean5 ean2 upce micropdf417 pdf417 gs1-cc--
% --DESC: UPC-E Composite
% --EXAM: 00123457|(15)021231
% --EXOP: includetext
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp upcecomposite 0.0 0 0 0
%%BeginData:         24 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +;E+<  IB3  %oDi/  n8fP
FCfK5H"(o:FDl%L  @WuO*  E0A  q<G    `k$>  B6  ,dZ  @q1Z]0  6M  %_@rEu  AAT
Dg:@Wc^5Df.1:GA  2#8P1  l(D  OuP  + 8AS  u<u  DIm  6sOuP+  ;C  G'+8/p  (ZF
Ed;,:Ecc5;/n0$=  E,^uo  P'E  -L0 61  WA  D..  O,B  m>e#06  M%  _@rEuA  ATD
g:@Wc^5Df.1:GA2        #8P1  l(D Op  s'  eE+  <Hh         Df'         H3F(
o`-H\`B!23JD%Df         Bf4D  f  0W  Z5  *@]  T@U        X:eD        e*FB5
*@]TA8c@-A9)+&+  D,%uF(  LLj  D  fBf 4D f0WZ  Y:j  s=EbTE(FEq  h:P!+/J!Ko=
'%<$3-Bl@m1H]kF  A@;L!r  P!+  / T5^e    epOu  SV6  P,4<rNWD;+  NHB2`AWf3'O
tDh\P')pOOu%N5O  tCcrF_  -^l    I?IT    YP%B  dtO  uY16E-,f4D  KCt)Ou%NL<,
Z_tBl@m1H]g15P"  B+kEa   s#uA   W?e=P   )XfA  Ch[  cu@<.MpOu&  8D04Sp;E0<D
J1OXV5Fa]EQ06:]         D+?Vb   >Eb0,  A061W  AD.  .O,Bm;:MBm  =\A>DN98!Ji
IWL]DjdK89Pa!/L       Z3!/N@V  L]DjdK  89M`!  Jg`  3!JiIWL]Dj  dK89Pa!*q6s
Bm=lY2(ro_G^5)I05+p2B4uCC#)Gg52D98gA9;L@22Fed2D8ufF<GL@FD5Z2F!*Y1Ou&7rDfBf
4Df0WV#Ae*lFEqh:NWaKD@qCgJDfBf4Df0WV$#+9mF)Z/2@:YB!0Tp[!E-,f4DKCgDA8c@-A9)
+&FE2M8P'CeWDIm6s+E)4@Bl@m10/%He@qCff0/%?WDJX$)ARTVB5D]>q8<S]i4>1_dDD*Y`AS
u?nFE2)?05tWMF!+\C!/LZ30me]VI?K5=!Jg`3!Jg`30me]VI?K5=!/LZ3!/LZ30me]VI?K5=!
Jg_]05tWMG_e41E+sQBL]];DASGdjFGL-W8<PkaGA1T0BS\O%8<PkaDfBe@DfBf4Df0V=5!CVQ
Eb0-*@<?O(G`k:IreLcAL1>.=E$0(<FD5Z2F"]1ZF"o7VA!0&0061WAD..O,Bm>e*P"h*"I?G)
'1G<li@qB.gD/aE7BlmpL30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qC
gGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/upcecomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER upcecomposite--

% --BEGIN ENCODER databaromnicomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix databaromni micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Omnidirectional Composite
% --EXAM: (01)03612345678904|(11)990102
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databaromnicomposite 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +*@<>  pe@  <-:'D  J>7n
06M%_@rEuAATDg:  @Wc^5  Df.  1:G    A2#8  P1  l(D  OuP+-F  "o  7VA!/f  )F_
`U>D_?-CEcQG7F`  MSBDD  #CB  BlJ  $ Sg6  -]D  3%o  ;`DJX$  )A  RTVB3%  oDi
/n8fPFCfK5H"(o:  FDl%L  @Wu  O*E 0A  q<  G`k  $>E  b0-*@<  ?O  (G`k$>  F_`
U>D_?-CEcQG7F`M        SBDD  #CB Bl  J$  Sg6  -]D         %52         7#FC
AWeEc5f4Bk)'uE,         Tf3F  C  ff  T'  Tt>  :%5        2X=F        D5Z2F
-8_M1G<3GEas#uA  Wf6?1G  <9W  D  KKE 0@ <Wi+  @;L  !rOu%#qFD5  Z2F-<^[F*)G
:DJ+':E+P1qH\_]  c23JDe  E-,  f 4DKC    /fX(  GdV  F(LLtH]gXB  P#RT(P%'TNO
thst4d(eHEckrV4  aW>DP!  5%O    P!5$    bI=%  ,/F  E2M8Ou%NL<  IL$AOrfcH05
kfOBl@m1P!5$bI?  IQJE-   ,f4D   KC/f1   OYEX  @UX  :eDe*F>!IU  &iHS92LDIm6
sP!5$bP'&EfDf'H         V5*@^   MH]iN  "P#[Z  ?Df  Bf4Df0WV#A  e*lFEqh:NXK
B+FCAWeEc5f4Bp*       ^ZE-,f4  DKCgCC  h[d&@  :s.  nEckrVG].P  CBl@m1NX9E;
CNFH8ART,0!AK[]DfBf4Df0WV#\7jkFC]E#GB@kJAWh:SBl7KjEZf:>FD5Z2F"]1W@<>pe@<-:
'DJ>7uOuSI(F(03R9.t*qDKB9.P!5$bOuSI(@VBhG98ES298H-%CbKU=DJ3TqB4uCM5*@]T061
WACh[cu@<.Mq06:]DAnc-nATE,NAoNnsOu$]hL]M+,L^]FIHS9)r5*@^2Dfd+9P"UT2P!+/$Df
d+9L]N[<P"UT3P!+/J!I]<9AT/c+L]N[<P"UT2P!+/J!I]<N!.C#1I?ITYH\_ZMP#ZR7E0<D!P
!5%RI?I,SAhtQ6L]N;4L]N;4L]N;4L]N;4L]N;3L]N;4L]LeE1N[Y[AV^>B!Jh/2OuQohFHSh"
E0:6b99MJN1Qjqb99MH$"FZG(HZNb;+D,R8>DN98!/LW2!/LW2!/LW2!/LW2!/LZ3!/LV\P'MJ
=<.0o>Ou$r`EbgI2Ch[d.@WQmP!KpQ@!KoTmH\_ZMI=$<s!I]BZ<K_u_P"CfUL]N[<OpR9Z04J
jAP!5$bP')q106:]D+BostDfg>^!KoX0WI9q$?'7!bAT3G*>DN98!/LV\P'M+[E$045E0=[d"H
o`gL]E52L]E52?'9Jh&p%W'Anc-nATESlF(K<&Bl7HmEej^3Bl7TqBkM+$P(l(]061WA0/%?WD
J`g(EbTbOE+sQ<+EM+505tWMGT_'=E0=Z`E+sQBL]K/BASGdjFGKsR8<PkaGA1T0BHVA-E0=[d
8<PkaDfBe@DfBf4Df0V=5!CVQEb0-*@<?O(G`k:IqhP99L1>.=E$0(<FD5Z2F"]1ZF"o7VA!0&
0061WAD..O,Bm>e*P"h*"I?G)'1G<9IFCAWeEc5f4Bk)'uE,Tf3FCgUpP%64gCG'+8/p(ZFEd;
,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#
M~>
% uk.co.terryburton.bwipp/databaromnicomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER databaromnicomposite--

% --BEGIN ENCODER databarstackedcomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix databaromni databarstacked micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Stacked Composite
% --EXAM: (01)03412345678900|(17)010200
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarstackedcomposite 0.0 0 0 0
%%BeginData:         28 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +*@<>  pe@  <-F2@  :O(a
A<Jo*F_`U>D_?-C  EcQG7  F`M  SBD    D#CB  Bl  J$S  g6-]D3  %n  oc0eHm  FOu
P+;CG'+8/p(ZFEd  ;,:Ec  c5;  /n0  $ =E,  ^uo  P'E  -L061W  AD  ..O,Bm  >e#
06M%_@rEuAATDg:  @Wc^5  Df.  1:G A2  #8  P1l  (DO  ps'T@<  >p  e@<-F2  @:O
(aA7KOpE,Tf3FCf        fT'T  t>: %5  2X  =FD  5Z2         F-8         _M1G
<3GEas#uAWf6?1G         <9WD  K  KE  0@  <Wi  +@;        L!rO        u%#qF
D5Z2F-<^[F*)G:D  J+':E+  P1q  H  \_] c2 3JDe  E-,  f4DKC/fX(G  dVF(LLtH]gX
BP#RT(P%'TNOths  t4d(eH  Eck  r V4aW    >DP!  5%O  P!5$bI=%,/  FE2M8Ou%NL<
IL$AOrfcH05kfOB  l@m1P!  5$b    I?IQ    JE-,  f4D  KC/f1OYEX@  UX:eDe*F>!I
U&iHS92LDIm6sP!  5$bP'   &EfD   f'HV5   *@^M  H]i  N"P#[Z?DfB  f4Df0WV#Ae*
lFEqh:NXfT.FCAW         eEcZ>   2@r#X  dP'Cn  aFD  5Z2F,gKABl  7]pB4Z1*F_-
_\DfBf4Df0WV$#+       9mF)Z/2  @:YB!0  Tp[!E  -,f  4DKCgDA8c@  -A9)+&FE2M8
P'CeWDIm6s+E)4@Bl@m10/$jEFCAWeEcZ>2@r#XdP!>*hNWa<8G]T$@L]E54P$!_IE+sQAP"Us
304JjAP!5$bOuSI)E+sQBP"RHEBl7TqBkM+$P!5$b0/%?WDJ`g(EbTc]5;.(hE+Wg%A7]e.04o
0d5*@^6E/4O,E/4pc!IHJ6P!5$b@W-?2Bp),F!0TKl@W-?2BnueQWKKo1!KoTmL]MpNF(K;5Bn
ueQWKKo1!0TKlL]MpNL]Djd<IL$1I=$bMI?ITOAT3erBp(ZCG^Y`G04m!_>DN<9!Jgc4!Jgc4!
Jgc4!Jgc4!/LZ3!Jgb^Ou%3#F_-@/L]N;?H]g?tDfh.+AoNn6P"Us%Ai#T6P"Us$Op$2r8:,Dh
E$/b3+BsX%L]E52L]E52L]E52L]E52L]E53L]E52?'9J]P#Qjm%[&V$F(K;5>9IBnFF/fEP!5&
.I?I0-Ou%/jE/4KuL]E52L]E52?'9JSAT/c5AT3fAL]im?>DN98!/LW2!*tb5L_=c?E+Wg%A7]
e;!,Q@eBOtmjBQTDl4?P9;ASs.SEb0-*@<?O(GV=#MG]P!KAT0;ABm=kFF(K<R@P;\7G^5)G05
+p2B4uCC!Jj:02D98gA9;K-F(K<R@YdR<2D8ufF<GL@FD5Z2F!*Y10/%?WDJ`g(EbTc]5DT>r!
Kr1IDf'G9DfBf4Df0VL05#>\/Rr:R5;+[1ASu?nFE2)?P!>+(Ou[rR%[&V$A79Rg@UX:uFCAZp
ARo:hD/aE7BlmpL30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1
:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/databarstackedcomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarstackedcomposite--

% --BEGIN ENCODER databarstackedomnicomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix databaromni databarstackedomni micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Stacked Omnidirectional Composite
% --EXAM: (01)03612345678904|(11)990102
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarstackedomnicomposite 0.0 0 0 0
%%BeginData:         28 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +*@<>  pe@  <-F2@  :O(a
A8c=&Bp(G/F_`U>  D_?-C  EcQ  G7F    `MSB  DD  #CB  BlJ$Sg  6-  ]D3%no  c0e
HmFOuP+;CG'+8/p  (ZFEd  ;,:  Ecc  5 ;/n  0$=  E,^  uoP'E-  L0  61WAD.  .O,
Bm>e#06M%_@rEuA  ATDg:  @Wc  ^5D f.  1:  GA2  #8P  1l(DOp  s'  T@<>pe  @<-
F2@:O(aA8c=&Bk)        'uE,  Tf3 FC  ff  T'T  t>:         %52         X=FD
5Z2F-8_M1G<3GEa         s#uA  W  f6  ?1  G<9  WDK        KE0@        <Wi+@
;L!rOu%#qFD5Z2F  -<^[F*  )G:  D  J+' :E +P1q  H\_  ]c23JDeE-,  f4DKC/fX(Gd
VF(LLtH]gXBP#RT  (P%'TN  Oth  s t4d(    eHEc  krV  4aW>DP!5%O  P!5$bI=%,/F
E2M8Ou%NL<IL$AO  rfcH05  kfO    Bl@m    1P!5  $bI  ?IQJE-,f4D  KC/f1OYEX@U
X:eDe*F>!IU&iHS  92LDI   m6sP   !5$bP   '&Ef  Df'  HV5*@^MH]i  N"P#[Z?DfBf
4Df0WV#Ae*lFEqh         :NY5l   2FCAW  eEcZ>  2@r  #XdDf'B+P'  CnaFD5Z2F,g
KABl7]pB4Z1*F_-       _\DfBf4  Df0WV$  #+9mF  )Z/  2@:YB!0Tp[  !E-,f4DKCgD
A8c@-A9)+&FE2M8P'CeWDIm6s+E)4@Bl@m10/$jEFCAWeEcZ>2@r#XdDf'B+P!>*hNWa<8G]T$
@L]E54P$!_IE+sQAP"Us304JjAP!5$bOuSI)E+sQBP"RHEBl7TqBkM+$P!5$b0/%?WDJ`g(EbT
c]5;.(hE+Wg%A7]e.04o0d5*@^6E/4O,E/4pc!IHJ6P!5$b@W-?2Bp),F!0TKl@W-?2BnueQWK
Ko1!KoTmL]MpNF(K;5BnueQWKKo1!0TKlL]MpNL]Djd<IL$1I=$bMI?ITOAT3erBp(ZCG^Y`G0
4m!_>DN<9!Jgc4!Jgc4!Jgc4!Jgc4!/LZ3!Jgb^Ou%3#F_-@/L]N;?H]g?tDfh.+AoNn6P"Us%
Ai#T6P"Us$Op$2r8:,DhE$/b3+BsX%L]E52L]E52L]E52L]E52L]E53L]E52?'9J]P#Qjm%[&V
$F(K;5>9IBnFF/fEP!5&.I?I0-Ou%/jE/4KuL]E52L]C_DH#mP9+EM+5P%'4MP,VZA!/LW2!/L
V\P'MirF(K<&Bl7HmEej^3Bl7TqBkM+$P(l(]061WA0/%?WDJ`g(EbTbOE+sQ<+EM+505tWMGT
_'=E0=Z`E+sQBL]K/BASGdjFGKsR8<PkaGA1T0BHVA-E0=[d8<PkaDfBe@DfBf4Df0V=5!CVQE
b0-*@<?O(G`k:I!Jgc>L1>.=E$0(<FD5Z2F"]1ZF"o7VA!0&0061WAD..O,Bm>e*P"h*"I?G)'
1G<9IFCAWeEcZ>2@r#XdDf'B+@rH4'Df]W7AWf$9A1r(@/n8fPFCfK5H"(o:FDl%L@WuO*E$/\
&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/databarstackedomnicomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarstackedomnicomposite--

% --BEGIN ENCODER databartruncatedcomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix databaromni databartruncated micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Truncated Composite
% --EXAM: (01)03612345678904|(11)990102
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databartruncatedcomposite 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +*@<>  pe@  <-I1F  `(\t
FCf!G3%oDi/n8fP  FCfK5  H"(  o:F    Dl%L  @W  uO*  E0Aq<G  `k  $>B6,d  Z@q
1Z]06M%_@rEuAAT  Dg:@W  c^5  Df.  1 :GA  2#8  P1l  (DOuP+  8A  Su<uDI  m6s
OuP+;CG'+8/p(ZF  Ed;,:  Ecc  5;/ n0  $=  E,^  uoP  'E-L06  1W  AD..O,  Bm>
e#06M%_@rEuAATD        g:@W  c^5 Df  .1  :GA  2#8         P1l         (DOp
s'T@<>pe@<-I1F`         (\tF  C  eu  mD  f'H  3F(        o`-H        \`B!2
3JD%DfBf4Df0WZ5  *@]T@U  X:e  D  e*F B5 *@]T  A8c  @-A9)+&+D,  %uF(LLjDfBf
4Df0WZY:js=EbTE  (FEqh:  P!+  / J!Ko    ='%<  $3-  Bl@m1H]kFA  @;L!rP!+/T5
^eepOuSV6P,4<rN  WD;+NH  B2`    AWf3    'OtD  h\P  ')pOOu%N5O  tCcrF_-^lI?
ITYP%BdtOuY16E-  ,f4DK   Ct)O   u%NL<   ,Z_t  Bl@  m1H]g15P"B  +kEas#uAW?e
=P)XfACh[cu@<.M         pOu&8   D04Sp  ;E0<D  J1O  XV5Fa]EQP"  oq7FD5Z2F,g
KABl8$<E+P%@A79       Rg@UX;!  Ecl80@  <?'kP  'Cn  aFD5Z2F,gK  ABl7]pB4Z1*
F_-_\DfBf4Df0WV$#+9mF)Z/2@:YB!0Tp[!E-,f4DKCgDA8c@-A9)+&FE2M8P'CeWDIm6s+E)4
@Bl@m10/$jEFCAWeEcc>EDI[*sARprgOuSI(F(03R9.t*qDKB9.P!5$bOuSI(@VBhG98ES298H
-%CbKU=DJ3TqB4uCM5*@]T061WACh[cu@<.Mq06:]DAnc-nATE,NAoNnsOu$]hL]M+,L^]FIHS
9)r5*@^2Dfd+9P"UT2P!+/$Dfd+9L]N[<P"UT3P!+/J!I]<9AT/c+L]N[<P"UT2P!+/J!I]<N!
.C#1I?ITYH\_ZMP#ZR7E0<D!P!5%RI?I,SAhtQ6L]N;4L]N;4L]N;4L]N;4L]N;3L]N;4L]LeE
1N[Y[AV^>B!Jh/2OuQohFHSh"E0:6b99MJN1Qjqb99MH$"FZG(HZNb;+D,R8>DN98!/LW2!/LW
2!/LW2!/LW2!/LZ3!/LV\P'MJ=<.0o>Ou$r`EbgI2Ch[d.@WQmP!KpQ@!KoTmH\_ZMI=$<s!I]
BZ<K_u_P"CfUL]N[<OpR9Z04JjAP!5$bP')q106:]D+BostDfg>^!KoX0WI9q$?'7!bAT3G*>D
N98!/LV\P'M+[E$045E0=[d"Ho`gL]E52L]E52?'9Jh&p%W'Anc-nATESlF(K<&Bl7HmEej^3B
l7TqBkM+$P(l(]061WA0/%?WDJ`g(EbTbOE+sQ<+EM+505tWMGT_'=E0=Z`E+sQBL]K/BASGdj
FGKsR8<PkaGA1T0BHVA-E0=[d8<PkaDfBe@DfBf4Df0V=5!CVQEb0-*@<?O(G`k:IqhP99L1>.
=E$0(<FD5Z2F"]1ZF"o7VA!0&0061WAD..O,Bm>e*P"h*"I?G)'1G<9IFCAWeEcc>EDI[*sARo
:hD/aE7BlmpL30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:AT
Vm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/databartruncatedcomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER databartruncatedcomposite--

% --BEGIN ENCODER databarlimitedcomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix databarlimited micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Limited Composite
% --EXAM: (01)03512345678907|(21)abcdefghijklmnopqrstuv
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarlimitedcomposite 0.0 0 0 0
%%BeginData:         25 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +*@<>  pe@  <-0uD  /"*'
A<Jo*F_`U>D_?-C  EcQG7  F`M  SBD    D#CB  Bl  J$S  g6-]D3  %n  oc0eHm  FOu
P+;CG'+8/p(ZFEd  ;,:Ec  c5;  /n0  $ =E,  ^uo  P'E  -L061W  AC  h[cu@<  .Mj
06M%_@rEuAATDg:  @Wc^5  Df.  1:G A2  #8  P1l  (DO  uP+8AS  u?  nFE2)?  OuP
+;CG'+8/p(ZFEd;        ,:Ec  c5; /n  0$  =E,  ^uo         P'E         -!04
\L5@:EYcCh[a#FC         eumD  f  'H  3F  (o`  -H\        `B!2        3JD%D
fBf4Df0WZ5*@]T@  UX:eDe  *FB  5  *@] TA 8c@-  A9)  +&+D,%uF(L  LjDfBf4Df0W
ZY:js=EbTE(FEqh  :P!+/J  !Ko  = '%<$    3-Bl  @m1  H]kFA@;L!r  P!+/T5^eepO
uSV6P,4<rNWD;+N  HB2`AW  f3'    OtDh    \P')  pOO  u%N5OtCcrF  _-^lI?ITYP%
BdtOuY16E-,f4DK  Ct)Ou   %NL<   ,Z_tB   l@m1  H]g  15P"B+kEas  #uAW?e=P)Xf
ACh[cu@<.MpOu&8         D04Sp   ;E0<D  J1OXV  5Fa  ]EQP"oq7FD  5Z2F,gKABl8
$<E+P%>A79Rg@UX       :nBl.R+  ARpsKD  fBf4D  f0W  V#Ae*lCLLj  eFE2M8P'Cna
FD5Z2F,gQ@DJO<4Eb/ZiNWChsG].PCBl@m1NX006DKKE0@<Zg6F_-_\Ch[cu@<*K/E-,f4DK@H
aA79Rg@UX:nBl.R+ARprgOuSI(F(03R9.t*qDKB9.P!5$bOuSI(@VBhG98ES298H-%CbKU=DJ3
TqB4uCM5*@]T061WACh[cu@<.MqD..I#L]M=+DKB9.H\_]c=GQs?4aVO3!I]BCH\_ZMI?ITnK7
/nSOrK2XP,XTNOp`paAT3erOu&8DP'(hWE/4KuL]E52L]C_DH#mP9+EM+5P%'4MP,VZA!/LW2!
/LV\P'Mi`Ch[d#ASGdjFHVA@4>1_dDD*Y`ASu?nFE2)?05tWMF!,O8E%c0EG^(?PAT3fA05tWM
H&)JSBOtmjBQT%2Le*[e06_,@FD)e<AT3fALe*[e05kfO+E)4@Bl@m1+?htB061WAD..O,Bm>e
*@rH4'+E)4@Bl@m10/$sZ0eHmFP!>*hNWa<8G^,BELe*[mP,X6<P(kVCEb0-*@<?O(G`k:S9p.
MbOq*X204\L5@:EYcCh[a#FCeumDf'H3F(o`-OuSV806M%_@rEuAATDg:@Wc^5Df.1:GA2#8+C
o%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/databarlimitedcomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarlimitedcomposite--

% --BEGIN ENCODER databarexpandedcomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix databarexpanded micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Expanded Composite
% --EXAM: (01)93712345678904(3103)001234|(91)1A2B3C4D5E
% --EXOP:
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp databarexpandedcomposite 0.0 0 0 0
%%BeginData:         28 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +*@<>  pe@  <,q(E  +*Wp
ARpr`06M%_@rEuA  ATDg:  @Wc  ^5D    f.1:  GA  2#8  P1l(DO  uP  +-F"o7  VA!
/f)F_`U>D_?-CEc  QG7F`  MSB  DD#  C BBl  J$S  g6-  ]D3%o;  `D  JX$)AR  TVB
3%oDi/n8fPFCfK5  H"(o:  FDl  %L@ Wu  O*  E0A  q<G  `k$>Eb  0-  *@<?O(  G`k
$>F_`U>D_?-CEcQ        G7F`  MSB DD  #C  BBl  J$S         g6-         ]D%5
27#FCAWeEb0K7@;         ]UeA  7  KO  pE  ,Tf  3FC        ffT'        Tt>:%
52X=FD5Z2F-8_M1  G<3GEa  s#u  A  Wf6 ?1 G<9W  DKK  E0@<Wi+@;L  !rOu%#qFD5Z
2F-<^[F*)G:DJ+'  :E+P1q  H\_  ] c23J    DeE-  ,f4  DKC/fX(GdV  F(LLtH]gXBP
#RT(P%'TNOthst4  d(eHEc  krV    4aW>    DP!5  %OP  !5$bI=%,/F  E2M8Ou%NL<I
L$AOrfcH05kfOBl  @m1P!   5$bI   ?IQJE   -,f4  DKC  /f1OYEX@UX  :eDe*F>!IU&
iHS92LDIm6sP!5$         bP'&E   fDf'H  V5*@^  MH]  iN"P#[Z?Df  Bf4Df0WV#Ae
*lFEqh:NXoZ/FCA       WeEb0K7  @;]UeA  <M1UE  -,f  4DKCgCCh[d  &@:s.nEckrV
G].PCBl@m1NX9E;CNFH8ART,0!AK[]DfBf4Df0WV#\7jkFC]E#GB@kJAWh:SBl7KjEZf:>FD5Z
2F"]1W@<>pe@<,q(E+*WpARprgOuSI(F(03R9.t*qDKB9.P!5$bOuSI(@VBhG98ES298H-%CbK
U=DJ3TqB4uCM5*@]T061WACh[cu@<.Mq06:]DAnc-nATE,NAoNnsOu$]hL]M+,L^]FIHS9)r5*
@^2Dfd+9P"UT2P!+/$Dfd+9L]N[<P"UT3P!+/J!I]<9AT/c+L]N[<P"UT2P!+/J!I]<N!.C#1I
?ITYH\_ZMP#ZR7E0<D!P!5%RI?I-LOq*X2D..I#L]D7*DKB9.H\_]c=GR!@4aVO3!.B9BH\_]N
I?ITnK7/nSOrK2XP,XTNOp`pPDfh.+Ou&8DP'&F!AT/br+C]82H\_]c5*DmnP"ArB1NR,HL]CY
8!/LW2!*tb5F(K;5F(K<R@Yb/MWEY/YL]E52L]C_DH!?(;Lgjh3FHU*h%?d];I?I-W7>PD^Dfh
.OL^fNHH[V&J?$d]8AT26qDId=!I?I0X!,Q@eBOtmjBQTDl4?P9;ASs.SEb0-*@<?O(GV=#MG]
P!KAT0;ABm=kFF(K<R@P;\7G^5)G05+p2B4uCC!Jj:02D98gA9;K-F(K<R@YdR<2D8ufF<GL@F
D5Z2F!*Y10/%?WDJ`g(EbTc]5DT>r!Kr1IDf'G9DfBf4Df0VL05#>\/Rr:R5;+[1ASu?nFE2)?
P!>+(Ou[rR%[&V$A79Rg@UX:gG]7)/A7]:]Df'H3F(o`-OuSV806M%_@rEuAATDg:@Wc^5Df.1
:GA2#8+Co%qBl7L&ATMd4Ear[DFcna<F(KH4@:O(eDJ,-DH]iMmATVm"@r#drB75qB~>
% uk.co.terryburton.bwipp/databarexpandedcomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarexpandedcomposite--

% --BEGIN ENCODER databarexpandedstackedcomposite--
% --REQUIRES preamble raiseerror renlinear renmatrix databarexpanded databarexpandedstacked micropdf417 pdf417 gs1-cc--
% --DESC: GS1 DataBar Expanded Stacked Composite
% --EXAM: (01)00012345678905(10)ABCDEF|(21)12345678
% --EXOP: segments=4 
% --RNDR: renmatrix renlinear
%%BeginResource: uk.co.terryburton.bwipp databarexpandedstackedcomposite 0.0 0 0 0
%%BeginData:         28 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +*@<>  pe@  <,q(E  +*Wp
ARok(@:O(aA<Jo*  F_`U>  D_?  -CE    cQG7  F`  MSB  DD#CBB  lJ  $Sg6-]  D3%
noc0eHmFOuP+;CG  '+8/p  (ZF  Ed;  , :Ec  c5;  /n0  $=E,^u  oP  'E-L06  1WA
D..O,Bm>e#06M%_  @rEuA  ATD  g:@ Wc  ^5  Df.  1:G  A2#8P1  l(  DOps'T  @<>
pe@<,q(E+*WpARo        k(@:  O(a A7  KO  pE,  Tf3         FCf         fT'T
t>:%52X=FD5Z2F-         8_M1  G  <3  GE  as#  uAW        f6?1        G<9WD
KKE0@<Wi+@;L!rO  u%#qFD  5Z2  F  -<^ [F *)G:  DJ+  ':E+P1qH\_  ]c23JDeE-,f
4DKC/fX(GdVF(LL  tH]gXB  P#R  T (P%'    TNOt  hst  4d(eHEckrV  4aW>DP!5%OP
!5$bI=%,/FE2M8O  u%NL<I  L$A    Orfc    H05k  fOB  l@m1P!5$bI  ?IQJE-,f4DK
C/f1OYEX@UX:eDe  *F>!I   U&iH   S92LD   Im6s  P!5  $bP'&EfDf'  HV5*@^MH]iN
"P#[Z?DfBf4Df0W         V#Ae*   lFEqh  :NYZ/  6FC  AWeEb0K7@;  ]UeA92j$@r#
XdP'CnaFD5Z2F,g       KABl7]p  B4Z1*F  _-_\D  fBf  4Df0WV$#+9  mF)Z/2@:YB!
0Tp[!E-,f4DKCgDA8c@-A9)+&FE2M8P'CeWDIm6s+E)4@Bl@m10/$jEFCAWeEb0K7@;]UeA92j
$@r#XdP!>*hNWa<8G]T$@L]E54P$!_IE+sQAP"Us304JjAP!5$bOuSI)E+sQBP"RHEBl7TqBkM
+$P!5$b0/%?WDJ`g(EbTc]5;.(hE+Wg%A7]e.04o0d5*@^6E/4O,E/4pc!IHJ6P!5$b@W-?2Bp
),F!0TKl@W-?2BnueQWKKo1!KoTmL]MpNF(K;5BnueQWKKo1!0TKlL]MpNL]Djd<IL$1I=$bMI
?ITOAT3erBp(ZCG^Y`GI?G)'1G<f\E$/@-@W-@8L]NZ&P,Wkm8R7K8F(K<H!*b6ZL]E52?'9JS
AT/c5AT3fAL]im?>DN98!/LW2!*tb5>DNrK@Ua7tP%'4VP,WeVP":BuLgjh3FHU*h%?d];I?I-
,HQ[B@E+Wg%A7]e0P"CH0Ch[d#ASGdjFHVA@4>1_dDD*Y`ASu?nFE2)?05tWMF!,O8E%c0EG^(
?PAT3fA05tWMH&)JSBOtmjBQT%2Le*[e06_,@FD)e<AT3fALe*[e05kfO+E)4@Bl@m1+?htB06
1WAD..O,Bm>e*@W-@E!0U!2!0TKlL]W!OL]Djd<JU[=L1>.=E$0(<FD5Z2F"]1ZF"o7VA!0&00
61WAD..O,Bm>e*P"h*"I?G)'1G<9IFCAWeEb0K7@;]UeA92j$@r#Xd@rH4'Df]W7AWf$9A1r(@
/n8fPFCfK5H"(o:FDl%L@WuO*E$/\&Anc-oEb0<1F`Lu'P')pJ06:]HE+*6lBl7RH\pKT_F(KH
4@:O(eDJ+B\;u~>
% uk.co.terryburton.bwipp/databarexpandedstackedcomposite 0.0 0
%%EndData
%%EndResource
% --END ENCODER databarexpandedstackedcomposite--

% --BEGIN ENCODER gs1-128composite--
% --REQUIRES preamble raiseerror renlinear renmatrix code128 gs1-128 micropdf417 pdf417 gs1-cc--
% --DESC: GS1-128 Composite
% --EXAM: (00)030123456789012340|(02)13012345678909(37)24(10)1234567ABCDEFG
% --EXOP: ccversion=c
% --RNDR: renlinear renmatrix
%%BeginResource: uk.co.terryburton.bwipp gs1-128composite 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        U=2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +-F"o  7$1  ,tFV0  6M%_
@rEuAATDg:@Wc^5  Df.1:  GA2  #8P    1l(D  Ou  P+-  F"o7VA  !/  f)F_`U  >D_
?-CEcQG7F`MSBDD  #CBBl  J$S  g6-  ] D3%  o;`  DJX  $)ARTV  B3  %oDi/n  8fP
FCfK5H"(o:FDl%L  @WuO*  E0A  q<G `k  $>  Eb0  -*@  <?O(G`  k$  >F_`U>  D_?
-CEcQG7F`MSBDD#        CBBl  J$S g6  -]  D%5  2@8         0eG         +83+
HlDE,Tf3FCffT'T         t>:%  5  2X  =F  D5Z  2F-        8_M1        G<3GE
as#uAWf6?1G<9WD  KKE0@<  Wi+  @  ;L! rO u%#q  FD5  Z2F-<^[F*)  G:DJ+':E+P1
qH\_]c23JDeE-,f  4DKC/f  X(G  d VF(L    LtH]  gXB  P#RT(P%'TN  Othst4d(eHE
ckrV4aW>DP!5%OP  !5$bI=  %,/    FE2M    8Ou%  NL<  IL$AOrfcH0  5kfOBl@m1P!
5$bI?IQJE-,f4DK  C/f1O   YEX@   UX:eD   e*F>  !IU  &iHS92LDIm  6sP!5$bP'&E
fDf'HV5*@^MH]iN         "P#[Z   ?DfBf  4Df0W  V$#  +9mF)Z/2@:  YB!0Tp[!E-,
f4DKCgDA8c@-A9)       +&FE2M8  P'CnaF  D5Z2F  ,gN  BBl7]pB4YL  nEckrVG\h)3
ARTU%4?Oa)E-,f4DKC/QP"@i$0/$sZ0eG+830HLd"*7pmP"UT2P!45U!I^,&05P??GA1T0BTbQ
B1N.5SBl@m1NX'B7DKL/CAW@".F"o7$1,tGADfBf4Df0WV#]+3mGA1T0BP_C#GA1T0BTdUMDf'
G9DfBf4Df0VL05#>\/Rr:R5;-MbD/aQAD3@)G1Lk??E-$;ANWa<8G^,BELguT2H]A,8I=$tT@s
sM?05P??CNOi@AWf6?1MgcCCNOi@AW?e"P!+/1E-,f4DKCgDCh[d&@:s.[FE2M8P'CnaFD5Z2F
,gNBBl7]pB4YRb@;L!rP'DD%DfBf4Df0WV#]+3mCLLje@:iqaF(LMZDfBf4Df0WV#]+3mCLLje
@rua6AWh:dP#Z=4DIm6s+?Vb/DfBf4Df0WCI?I/c4teR%F"o7$1,tF]OuSI(F(03R9.t*qDKB9
.P!5$bOuSI(@VBhG98ES298H-%CbKU=DJ3TqB4uCM5*@]T061WACh[cu@<.MqD..I#L]M=+DKB
9.H\_]c=GQs?4aVO3!I]BCH\_ZMI?ITnK7/nSOrK2XP,XTNOp`paAT3erOu&8DP')Q\Ch[d#AS
GdjFHVA@4>1_dDD*Y`ASu?nFE2)?05tWMF!,O8E%c0EG^(?PAT3fA05tWMH&)JSBOtmjBQT%2L
e*[e06_,@FD)e<AT3fALe*[e05kfO+E)4@Bl@m1+?htB061WAD..O,Bm>e*Ch[d&FEqh:NWERO
4aSi'+Dbb0GA1T0BSZ_QWJCqF;N`ghE$04X$'M9D!g6HE1G<tqF!,FbWJCS<WJCqFCkrF]!H<h
pP!+/J!g3S4P#R6IP,XU#G_cB`L4+E)q1o'7L4,4b@rH4'F*VUU061WAD..O,Bm>e*P"h*"I?G
)'1G<B^0eG+83+HlDE,Tf3FCgUpP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Df
p)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/gs1-128composite 0.0 0
%%EndData
%%EndResource
% --END ENCODER gs1-128composite--

% --BEGIN ENCODER gs1datamatrix--
% --REQUIRES preamble raiseerror renmatrix datamatrix--
% --DESC: GS1 Data Matrix
% --EXAM: (01)03453120000011(17)120508(10)ABCD1234(410)9501101020917
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp gs1datamatrix 0.0 0 0 0
%%BeginData:         31 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04\L5@  ;T  FpEbTc  ]3%
oDi/n8fPFCfK5H"  (o:FD  l%L  @Wu  O *E0  Aq<  G`i  LhB6,e  <@  <>pp@<  ?O(
G^G5\Ou8C305kfO  Bl@m1  P!5  $b0 4J  @1  @rG  mhP  !5$b04  ]!  =FC]E#  G9C
L+Cia0N1N.5SBl@        m1P-  6N[ FE  2)  5B6  8E<         AWf         3'L]
NYrOpu>KFD5Z2F*         j(NA  m  oL  sA  Wf3  'P!        FGY<        0B5(@
ZmRN0oc8tP)XR(F  _-_!H]  ftD  5  *C& O5 *@^M  H]f  t&EckrV1OY  EdI?J0)*g/N
:DfBf4Df0WZ5*@^  MP#Q@=  FD5  Z 2F*j    '+I?  I/T  AU&0&DIe)I  Bl9(tOu"b0F
`\a?DN\IlV33VfC  5;kQ1M  L`R    NWEI    LNI-  gJD  fp/b5&-6EP  'N4"C6AUR!K
mI:C6CcD1QlmD3/  @Qj"-   Q?@/   8oZQP   !3W:  !Ks  FF5*C/R30I  a,"-TX>"-Pj
29RV8N3,`q]P!3W         D5*C2   S@VV&  ,05?Y  6Ou  %$!FGKp3P"  _$(I?ITYP%B
')%[&V$@;0d*>9I       471G<0N  G%#3C!  g5F(1  Lad  5@rGmhOuSV  6L]N[<L]NZ&
P"^4c30"!%4aW>WI?IQi!@a1kP')pOP')pONWCPkNI-gPP')pOL]`G6P)"I4NW=k;L]NZoI?IT
7+CSu*OogehOrK2YOo^_J>q]W#F-8_M1LY!@@;L`%L]NZoAU&0&DIeoTI?J0)FY@0;AncL$A;D
 %b23Kb"L]E53L]i'QP"8l*NWLmgL]Wa9Or9EBOuS6uL]rV7P)"iIOo^_j@;0=fG\(EA",Hu@L
QZn1P"Al6$]"h>'RP7k8;J(<+,BrR,^Xs&8;J^#H\`#b!g9CC0TnD(BkD((ARpT!L]NZoP'DD<
8M=[n@kif>Ou"b%D01"F>9INq@kf*3Ou%moL]LpuF-:!g!KsF/056S5Ou"b"BcphuF!,1[99M(
aG%#20@;0mnC`m/#P"UroA8QF5P%%j6P%'RTG%#3M@ZgbT$'I9(!+]qgG`m?83+QlJG`lNEBcp
WC5'q^@8R7L)OuQuhFEisX@;1m6Oo]`7C`lrF5'q^@8R7L)04\pAG`k7R1MIt?BlfGHL]N[<P&
4WAAncL$A0>;pL]E54P"_$HP&QQeHXpu8G`lNl!KmJH$'I9(!+]qgG`m?83+QlJG`lNJDIYDaG
V<TEFEis4Ou%NL<.0p#04J@1@rGmh+Co>2G`lNl!KmJ>"d3\bV33VfBnubP1G<L!!0T-bBcpr'
FEisXP!+/T5^eepA8QF5+DI!3OuR&k@kj-0H]iM\@<,jrA7ZluNWi`Y:.$b!GqWnTC5<"U!Ko6
eHX^E(@rGmhP!3WD5*C/=P#X/L+DHW4Oo^_%05;VEL]NY>Ou%NLAM7M$Eas#uAKYGjEas#uAV^
>$P"_#pDfBf4Df0WV#\7jkFC]E#GB@kJAWh:VE-,f4DKCgDE+*d.AS,giFE2M8P'AWgEbBG9@U
X:eDe*E%DfBf4Df0VL04\L5@;TFpEbTc]5E[g2EbBHR")i.#DfBf4Df0WZG[YW*F!,"3DKKE0@
<[lR0/%?WDJ`g(EbTc]<0B7iOq*X205#>\A79RgD..O,Bm>e#P%64gCG'+8/p(ZFEd;,:Ecc5;
/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/gs1datamatrix 0.0 0
%%EndData
%%EndResource
% --END ENCODER gs1datamatrix--

% --BEGIN ENCODER hibccode39--
% --REQUIRES preamble raiseerror renlinear code39--
% --DESC: HIBC Code 39
% --EXAM: A123BJC5D6E71
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp hibccode39 0.0 0 0 0
%%BeginData:         36 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MZ  ?03%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  iLh  BPC  pc@rGm  h1  HBf<'T  t>:
 %52X=FD5Z2F-8_  M1G<3  GEa  s#u AW  f6  ?1G  <9W  DKKE0@  <W  i+@;L!  rOu
"b5AU&</Df0ZZa-        &53F  Cf] =F  (o  r3L  ^K;         $06         CcMF
Eqe:AohO*M#!2i0         6CcM  F  Eh  _9  Aoh  O*L        ]ESo        06Uc?
Bk1XoARfCb@r!3!  @;L!rO  u%#  q  FD5 Z2 F-<^  [F*  )G:DJ+':E+  P1qH\_]c23J
DeE-,f4DKC/fX(G  dVF(LL  tH]  g XBP#    RT(P  %'T  NOthst4d(e  HEckrV4aW>D
P!5%OP!5$bI=%,/  FE2M8O  u%N    L<IL    $AOr  fcH  05kfOBl@m1  P!5$bI?IQJE
-,f4DKC/f1OYEX0  6CcMF   CoH/   F<G[:   G][P  9DK  M$nOu"b5AU  &<<BmO>5FCf
]=F(or3OtVtS06C         cMFEq   e:Aoh  O*+EV  1>F  Eqe:AohO*O  tVtS06CcMFE
h_9AohO*+EV1>FE       h_9AohO  *OtVtS  04J@1  @q]  :kF,hb)0et  OA2)[BQ3C,u
!6q'R884cEH9MJ8X:f1+h<)lt#=BSfZ/g)Dm.j^?704S[(Ectl-F,2?023KbO!/LZ3.XPZ=@<-
O"Cibb'OuQoZEarckEc[C-L]NZ4P!5%RI?I-W!/LYb@<,jrA7^p5L]N[<HX^E(@rGmhP!4[&P"
]A!@<-O"Cibb'P$jGlHS8iPBlJ#DBPCpc@rGmh1HAoQA4($=Ea`I"ATEf284c-8+@C'XAKWch+
Dl7BF<G(3DKK<$DBNk8Cj@.6BkM.%F"AGD@;oq&@;I'&ATW$*EcWcSF)YPtATJu&DIal3BOr<-
H#7#/Ci^^N/gN)#,qgol@;0doATDg0EfrY8P#Qjm82"F\Ebo<)+C\c"@rGmhP%&TCCh[EgFCer
qARfM&L]N[<I?IQm1G<6OARfLsF_up7Ou%moL]LsnEbo<)L]N[<HX^E(@rGmhP!4[&P"]A!@<-
O"Cibb'P"T:uARfLsF`!9B04S[,@r$..D3@)G1OYEW04S[,@r$..D'3>%ARfLsF_upbP%p.9G%
#3$A79Rk@q]F`CO715@<,jrA7Zlm@<-0qDN[Y%@<,jk@<-E3@q]F`CNFW8P"UsTHS8iPBlJ#DB
PCpc@rGmh1HAoQA4($A@r"JHB5)IJ.nOVgDfTl0@rrha8O>ce6Z6LH+>Z##@q]F`CER/%B5)H1
E,ol?Bk1dc0/%?SBldisEcQ)=P!=AX<%h]hEas#uAKYGjEas#uAV^=q@<-0qDN[\V1OYEc04J@
1@rGmh+C\c"Ch7L?!g3SIV33fo!FfJX@rGmhP'N3H@UX:eDe*F8!/N.gG[b*%@rGmh+C\c"Ch7
L?!KmIm@<,jk@<-E3@q]F`CNFW8P"Us_06CcMF<G%$Ebo<)L]ikAP,4<tFCf]=L]E5\P'D([G]
\`B@UX:eDe*FBH$!VBF<G%$Ebo<)L]W_?@UX:eDe*E%@UX:nAT!;)Oo^_=OuS7?P!+/TFbjCQP
#RThFCf]=+C\c"Ch7L?"-N\@.[#$pE-,f4DKCgDA8c@-A9)+&FE2M8P'CnaFD5Z2F,gZCDI[L*
A7]7aARfLf@;L!rP'CnaFD5Z2F,g]Q@;KXg@<?'jBOt[hAmoLsAWh9k@<-"%+C\c"@rGmh+E)4
@Bl@m10/$gRA7[PWP!>*c@<-"%NWXBJFB]kl+EV1>F<G[:G]\1KAnH*qF<G[:G]\4LAnH*qF<G
[:G][P9DKI"CAU&<<BmO>5>p*F9G[YW*F,gTLAU&<A@;KXjDN4p2ASuU$EftZUEbBHR")i.#Df
Bf4Df0WZG[YW*F!,"3DKKE0@<[lR0/%?WDJX$)ARTVB<0B7iOq*X205,'/@q0FfAMZ?030If*F
_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hW
FDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/hibccode39 0.0 0
%%EndData
%%EndResource
% --END ENCODER hibccode39--

% --BEGIN ENCODER hibccode128--
% --REQUIRES preamble raiseerror renlinear code128--
% --DESC: HIBC Code 128
% --EXAM: A123BJC5D6E71
% --EXOP: includetext
% --RNDR: renlinear
%%BeginResource: uk.co.terryburton.bwipp hibccode128 0.0 0 0 0
%%BeginData:         35 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  <uD  Im6sO  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2A  MG  r"OuP+  ;CG
'+8/p(ZFEd;,:Ec  c5;/n  0$=  E,^  u oP'  E-!  05,  '/@q0F  fA  MGr"H\  `B!
23JD%DfBf4Df0WZ  5*@]T  @UX  :eD e*  FB  5*@  ]TA  8c@-A9  )+  &+D,%u  F(L
Lj06CcMFCoH/FHO        V,1G  <i] G]  \"  @H=  _m>         Ou"         b5AU
&<BDe<U&ATWb(Ou         "b5A  U  &<  AD  e<U  &AT        W_.O        u"b7@
;KXg@<?'jBOt[h+  D,%uF(  LLj  D  fBf 4D f0WZ  Y:j  s=EbTE(FEq  h:P!+/J!Ko=
'%<$3-Bl@m1H]kF  A@;L!r  P!+  / T5^e    epOu  SV6  P,4<rNWD;+  NHB2`AWf3'O
tDh\P')pOOu%N5O  tCcrF_  -^l    I?IT    YP%B  dtO  uY16E-,f4D  KCt)Ou%NL<,
Z_tBl@m1H]g15P"  @<KAU   &</D   f0Y>F   Cf]=  AoD  R/OtDhQ06C  cMFE;/BAKZ)
+G]\"@H=`6mOu"b         5AU&<   BDe<U  &ATT&  :AU  &<BDe<U&AT  X(gOu"b5AU&
<ADe<U&ATT&:AU&       <ADe<U&  ATX(gO  u"b#@  <,j  k@<-FL.ki\  51GgsI2`Nf`
6:4.07Rp!@8kViP:/=\`;H$Op<``C+=tM?L,VLYoOu"b$BOPq)@;L"@/!;cQ1Pc$e!Ji4P@q]:
kG%#3.P!5$g@UX:eBOPq&P!4[&P"_$&P'DD<8;I8%!FfJX@rGmhP%'4JP,We;@<,jrA7^ofL]N
Z4@q]:kG%#3.P!5%:P&Pb$@WuO*E%Yg<@UindA7[JN3+?<,6YKnK@:OCjEfO0k8O>ce6Z6LH+>
GW2+Dl7BF<G(3DKK<$DBNk8Cj@.6BkM.%F"AGD@;oq&@;I'&ATW$*EcWcSF)YPtATJu&DIal3B
Or<-H#7#/Ci^^N/gN)#,qgol@;0doATDg0EfrY8P#Qjm82"F\Ebo<)+C\c"@rGmhP%&TCCh[Eg
FCerqARfM&L]N[<I?IQm1G<6OARfLsF_up7Ou%moL]LsnEbo<)L]N[<HX^E(@rGmhP!4[&P"]A
!@<-O"Cibb'P"T:uARfLsF`!9B04S[,@r$..D3@)G1OYEW04S[,@r$..D'3>%ARfLsF_upbP%p
.9G%#3$A79Rk@q]F`CO715@<,jrA7Zlm@<-0qDN[Y%@<,jk@<-E3@q]F`CNFW8P"UsTHS8iPBl
J#DBPCpc@rGmh0et^t@:V`=ARfLDBkM.%N\!b>@rHC.ARfg)84c-8+@C'XAKW]_3$;^EARfKuA
8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV"*I?IP_@UX:eDe*E%@UX:eDe*F8!+KAWCh7LI9Th2[
P#O)D@<,jrA7Zlm@<-0qDMS@W!Ks:B3/@TE@<,jrA7^pLOu$QUEas#uAV^>B/!>-d@<,jrA7Zl
m@<-0qDMS=V!FfJX@q]:kF!+t+ARfLsF`!:7P'AX%AU&;>@UX:nAT!;,Oo^`BOu%2kG]\`ALan
R4FCf]=L]LsnEas#uAWh=\AU&;>@UX:nAT!;*Oo]$#Eas#uAKYGjEbo<)L]NY>P"UrtL`hjDH]
iN-?[\):P'D([G]Y';@<-0qDMSCX!Ji4gG].PCBl@m1NX006DKKE0@<Zg6F_-_\DfBf4Df0WV%
<c/rBk1XoARfCb@r#[bCia0NGV<KGB6,2)@<,jrA7Zm%E-,f4DK@Ha@rGmh0et_O5E[g2EbBHR
"*Ad0>9I,mFCf]=+EV1>FEh_9AohO*+EV1>FEqe:AohO*+EV1>FCoH/F<G[:G]\"@H=\4)+C1.
T@<-"%NXBl>G]\1=Ch[O"NWs!)DKKH1P'CDUB60(8DfBf:E-,f4DKCtc@<-"%+CoD.FC]E#GEQ
nu061WACh[cu@<.N1Ou[rR%[&V$BPCpc@rGmh0et_O30If*F_`U>D_?-CEcQG7F`MSBDD#CBBl
J#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/hibccode128 0.0 0
%%EndData
%%EndResource
% --END ENCODER hibccode128--

% --BEGIN ENCODER hibcdatamatrix--
% --REQUIRES preamble raiseerror renmatrix datamatrix--
% --DESC: HIBC Data Matrix
% --EXAM: A123BJC5D6E71
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp hibcdatamatrix 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04\L5@  ;T  FpEbTc  ]3%
oDi/n8fPFCfK5H"  (o:FD  l%L  @Wu  O *E0  Aq<  G`i  LhBPCp  cA  79RgD.  .O,
Bm=u\'Tt>:%52X=  FD5Z2  F-8  _M1 G<  3G  Eas  #uA  Wf6?1G  <9  WDKKE0  @<W
i+@;L!rOu"b7@;K        Xg@<  ?'j BO  t[  h+D  ,%u         F(L         LjDf
Bf4Df0WZY:js=Eb         TE(F  E  qh  :P  !+/  J!K        o='%        <$3-B
l@m1H]kFA@;L!rP  !+/T5^  eep  O  uSV 6P ,4<r  NWD  ;+NHB2`AWf  3'OtDh\P')p
OOu%N5OtCcrF_-^  lI?ITY  P%B  d tOuY    16E-  ,f4  DKCt)Ou%NL  <,Z_tBl@m1H
]g15P"@<9@<,jk@  <-FL.k  i\5    1Ggs    I2`N  f`6  :4.07Rp!@8  kViP:/=\`;H
$Op<``C+=tM?L,V  LYoOu   "b$B   OPq)@   ;L"@  /!;  cQ1Pc$e!Ji  4P@q]:kG%#3
.P!5$g@UX:eBOPq         &P!4[   &P"_$  &P'DD  <8;  I8%!FfJX@r  GmhP%'4JP,W
e;@<,jrA7^ofL]N       Z4@q]:k  G%#3.P  !5%:P  &Pb  $@WuO*E%Yg  <@UiqWFCB#p
FE2)?6=FClBOPpi@ru:&N`enE6:2k`@<>p#9jr-aBm:b;F`VXI@rH7,@;0U%Df0B:+Co2!BlnD
I+Cei!Blmd"+DbV2FCfK6/0K"Q@:Nki+CT.u+EV:.+EMgF@W-((+>#2k0.S>%061K8F(Jp'Ec5
u]5CJ\oI?I,S@UX:nASrW"@<,jrA7^p5G%#3$A79Rk@q]F`CO:j<P,Wkm<0B$j@q]F`CNFW8L]
ESoL]E53@UX:nAT!;)P,We;@<,jrA7^ofL]NZ4@q]:kG%#3.P!5%%@q]F`CNFW8Oo[4GBOt[hF
*2>_5*@^MP"769BOt[hF*2=B@q]F`CNFW8Lb"X'Ou%8iCh[EgFCerqARfM&+C\c"@rGmh+C\c"
Ch7LI94D=M@q]:kF!+t+ARfLsF`!:7P&5P!@WuO*E%Yg<@UiqWFCB#pFE2)?6=FClBOt[h6tp:
JFH/"GDI[U*Eb/a&+@o'j6Qed*FC?:d@<?O(GT^L0ARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS#
n&DfV"*I?IP_@UX:eDe*E%@UX:eDe*F8!+KAWCh7LI9Th2[P#O)D@<,jrA7Zlm@<-0qDMS@W!K
s:B3/@TE@<,jrA7^pLOu$QUEas#uAV^>B/!>-d@<,jrA7Zlm@<-0qDMS=V!FfJX@q]:kF!+t+A
RfLsF`!:7P'CnaFD5Z2F,gN:Df0Z-Eaa06EckrVG].PCBl@m1NX^/?Ch[EgFCerqARfLf@;L!r
P'AWgEbBG9@UX:eDe*E%DfBf4Df0VL04\L5@;TFpEbTc]5E[g2EbBHR")i.#DfBf4Df0WZG[YW
*F!,"3DKKE0@<[lR0/%?WDJ`g(EbTc]<0B7iOq*X205,'/@q9"i@;TFpEbTc]30If*F_`U>D_?
-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM
@[!I?IP~>
% uk.co.terryburton.bwipp/hibcdatamatrix 0.0 0
%%EndData
%%EndResource
% --END ENCODER hibcdatamatrix--

% --BEGIN ENCODER hibcpdf417--
% --REQUIRES preamble raiseerror renmatrix pdf417--
% --DESC: HIBC PDF417
% --EXAM: A123BJC5D6E71
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp hibcpdf417 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  05tH61  bg  qP3%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  iLh  BPC  pcE+EQ  ;0  fOH8'T  t>:
 %52X=FD5Z2F-8_  M1G<3  GEa  s#u AW  f6  ?1G  <9W  DKKE0@  <W  i+@;L!  rOu
"b$DesQ5DKCU8Ou        "b7@  ;KX g@  <?  'jB  Ot[         h+D         ,%uF
(LLjDfBf4Df0WZY         :js=  E  bT  E(  FEq  h:P        !+/J        !Ko='
 %<$3-Bl@m1H]kF  A@;L!r  P!+  /  T5^ ee pOuS  V6P  ,4<rNWD;+N  HB2`AWf3'Ot
Dh\P')pOOu%N5Ot  CcrF_-  ^lI  ? ITYP    %Bdt  OuY  16E-,f4DKC  t)Ou%NL<,Z_
tBl@m1H]g15P"@<  :DesQ5  DK?    q1De    sQ5D  KCs  lOu"b#@<,j  k@<-FL.ki\5
1GgsI2`Nf`6:4.0  7Rp!@   8kVi   P:/=\   `;H$  Op<  ``C+=tM?L,  VLYoOu"b$BO
Pq)@;L"@/!;cQ1P         c$e!J   i4P@q  ]:kG%  #3.  P!5$g@UX:e  BOPq&P!4[&P
"_$&P'DD<8;I8%!       FfJX@rG  mhP%'4  JP,We  ;@<  ,jrA7^ofL]  NZ4@q]:kG%#
3.P!5%:P&Pb$@WuO*E%Yg<@Uj@fAi)5$6=FClBOPpi@ru:&N`8P@6:2kl6q0!f2]us[F*&O7Df
0Z*Bl5&3DJXS@A8,[jFE8uU@ps=jFCAu.Ch7^1ATDiC+EML1@qB^(@;]TuFD,5.F*VV3DesJ;/
M8;%.jZi%Ea`['AS#n&DfV"*I?IQXP"768@<-0qDBNCsEas#uAWgMG@;KXg@<?'jBOt[hH\_]c
WI9q/Ou"b$BOt[hF*2>U!0T-o!/LYb@<-0qDMS=VWI&)_Eas#uAWf65!Kp,dBOPq)@;L"J5*AQ
KBOt[hF*2>_!A@qrARfLsF`!:*Ou%NL82"IdARfLsF_r72BOt[hF*2>U/!=Y11Nm2CBk1XoARf
Cb@r$E6@UX:eDe*E%@UX:nAT!Z(@UX:eBOPq&+Cf(r@r$..D3@PTD0mpFGA2#8/nes.@rPsj1b
gpU@:V`=ARfLDBkM.%N[dV<@rHC.ARfg)84c-8+AbHq1bgp3@q]F`CER/%B5)H1E,ol?Bk1dc0
/%?SBldisEcQ)=P!=AX<%h]hEas#uAKYGjEas#uAV^=q@<-0qDN[\V1OYEc04J@1@rGmh+C\c"
Ch7L?!g3SIV33fo!FfJX@rGmhP'N3H@UX:eDe*F8!/N.gG[b*%@rGmh+C\c"Ch7L?!KmIm@<,j
k@<-E3@q]F`CNFW8P"Us_DfBf4Df0WV#\7jkFC]E#GB@kJAWh:VE-,f4DKCgC@rH1+D/OE)Des
Q5DKCtcDfBf4Df0WV%<c/rBk1XoARfCb@r#[bCia0NGV<KGB6,2)@<,jrA7Zm%E-,f4DK@HaE+
EQ;0fP7[Ou$NeB60(8DfBf:E-,f4DKCtc@<-"%+CoD.FC]E#GEQnu061WAD..O,Bm>e?Ou[rR%
[&V$BPCpcE+EQ;0fP7TP%64gCG'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!
3A5GbFDtYuCM@[!P.H"'F`V,9E+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/hibcpdf417 0.0 0
%%EndData
%%EndResource
% --END ENCODER hibcpdf417--

% --BEGIN ENCODER hibcmicropdf417--
% --REQUIRES preamble raiseerror renmatrix micropdf417--
% --DESC: HIBC MicroPDF417
% --EXAM: A123BJC5D6E71
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp hibcmicropdf417 0.0 0 0 0
%%BeginData:         31 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  05YE5E  c5  o-Ai)5  $Ou
P+;CG'+8/p(ZFEd  ;,:Ec  c5;  /n0  $ =E,  ^uo  P'E  -!05,'  /@  r5piEc  5o-
Ai)5$H\`B!23JD%  DfBf4  Df0  WZ5 *@  ]T  @UX  :eD  e*FB5*  @]  TA8c@-  A9)
+&+D,%uF(LLj04S        p:F_  u#; L]  W_  q06  Uc?         Bk1         XoAR
fCb@r!3!@;L!rOu         %#qF  D  5Z  2F  -<^  [F*        )G:D        J+':E
+P1qH\_]c23JDeE  -,f4DK  C/f  X  (Gd VF (LLt  H]g  XBP#RT(P%'  TNOthst4d(e
HEckrV4aW>DP!5%  OP!5$b  I=%  , /FE2    M8Ou  %NL  <IL$AOrfcH  05kfOBl@m1P
!5$bI?IQJE-,f4D  KC/f1O  YEX    04Sp    :F_u  #;+  Cf>+F_u#;O  t;bP04J@1@q
]:kF,hb)0etOA2)  [BQ3C   ,u!6   q'R88   4cEH  9MJ  8X:f1+h<)l  t#=BSfZ/g)D
m.j^?704S[(Ectl         -F,2?   023Kb  O!/LZ  3.X  PZ=@<-O"Ci  bb'OuQoZEar
ckEc[C-L]NZ4P!5       %RI?I-W  !/LYb@  <,jrA  7^p  5L]N[<HX^E  (@rGmhP!4[&
P"]A!@<-O"Cibb'P$jGlHS8iPBlJ#DBPCpcD/!L#DfB6!1bgpU@:V`=@<,ddFCfKQ=\)+N6Qf*
;@rcKa6q0!f2]us[F*&O7Df0Z*Bl5&3DJXS@A8,[jFE8uU@ps=jFCAu.Ch7^1ATDiC+EML1@qB
^(@;]TuFD,5.F*VV3DesJ;/M8;%.jZi%Ea`['AS#n&DfV"*I?IQXP"768@<-0qDBNCsEas#uAW
gMG@;KXg@<?'jBOt[hH\_]cWI9q/Ou"b$BOt[hF*2>U!0T-o!/LYb@<-0qDMS=VWI&)_Eas#uA
Wf65!Kp,dBOPq)@;L"J5*AQKBOt[hF*2>_!A@qrARfLsF`!:*Ou%NL82"IdARfLsF_r72BOt[h
F*2>U/!=Y11Nm2CBk1XoARfCb@r$E6@UX:eDe*E%@UX:nAT!Z(@UX:eBOPq&+Cf(r@r$..D3@P
TD0mpFGA2#8/nes.@r5piEc5o-Ai)5$6=FClBOt[h6tp:JFH/"GDI[U*Eb/a&+@o'j6Qf*;@rc
Ka6q0!f2]uUDARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV"*I?IP_@UX:eDe*E%@UX:eDe
*F8!+KAWCh7LI9Th2[P#O)D@<,jrA7Zlm@<-0qDMS@W!Ks:B3/@TE@<,jrA7^pLOu$QUEas#uA
V^>B/!>-d@<,jrA7Zlm@<-0qDMS=V!FfJX@q]:kF!+t+ARfLsF`!:7P'CnaFD5Z2F,gN:Df0Z-
Eaa06EckrVG].PCBl@m1NX''4CisT4F(9-)F_u#;P'CnaFD5Z2F,g]Q@;KXg@<?'jBOt[hAmoL
sAWh9k@<-"%+C\c"@rGmh+E)4@Bl@m10/%0V@rcL,A7dYQ2j-Cg1LY<:F,g?@E--#;FD5Z2F-:
cVEbBG9A8c@-A9)+&P&N'-Eb0-*@<?O(G`l$h3IR&#Ou"b)BjtRhBk)1%E+EQ;0fP7TP%64gCG
'+8/p(ZFEd;,:Ecc5;/n0$=E,Zq1AS,XoATD@'Dfp)1AWh2!3A5GbFDtYuCM@[!P.H"'F`V,9E
+*6lBl7R3P#M~>
% uk.co.terryburton.bwipp/hibcmicropdf417 0.0 0
%%EndData
%%EndResource
% --END ENCODER hibcmicropdf417--

% --BEGIN ENCODER hibcqrcode--
% --REQUIRES preamble raiseerror renmatrix qrcode--
% --DESC: HIBC QR Code
% --EXAM: A123BJC5D6E71
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp hibcqrcode 0.0 0 0 0
%%BeginData:         29 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  06)#BD  e*  FB3%oD  i/n
8fPFCfK5H"(o:FD  l%L@W  uO*  E0A  q <G`  iLh  BPC  pcEH5Q  -A  7^+D'T  t>:
 %52X=FD5Z2F-8_  M1G<3  GEa  s#u AW  f6  ?1G  <9W  DKKE0@  <W  i+@;L!  rOu
"b7@;KXg@<?'jBO        t[h+  D,% uF  (L  LjD  fBf         4Df         0WZY
:js=EbTE(FEqh:P         !+/J  !  Ko  ='  %<$  3-B        l@m1        H]kFA
@;L!rP!+/T5^eep  OuSV6P  ,4<  r  NWD ;+ NHB2  `AW  f3'OtDh\P'  )pOOu%N5OtC
crF_-^lI?ITYP%B  dtOuY1  6E-  , f4DK    Ct)O  u%N  L<,Z_tBl@m  1H]g15P"@<9
@<,jk@<-FL.ki\5  1GgsI2  `Nf    `6:4    .07R  p!@  8kViP:/=\`  ;H$Op<``C+=
tM?L,VLYoOu"b$B  OPq)@   ;L"@   /!;cQ   1Pc$  e!J  i4P@q]:kG%  #3.P!5$g@UX
:eBOPq&P!4[&P"_         $&P'D   D<8;I  8%!Ff  JX@  rGmhP%'4JP  ,We;@<,jrA7
^ofL]NZ4@q]:kG%       #3.P!5%  :P&Pb$  @WuO*  E%Y  g<@UjCu@rG  mh6=FClBOPp
i@ru:&N`AVA6:2km;BS>FA7Zm#F`VXI@rH7,@;0U%Df0B:+Co2!BlnDI+Cei!Blmd"+DbV2FCf
K6/0K"Q@:Nki+CT.u+EV:.+EMgF@W-((+>#2k0.S>%061K8F(Jp'Ec5u]5CJ\oI?I,S@UX:nAS
rW"@<,jrA7^p5G%#3$A79Rk@q]F`CO:j<P,Wkm<0B$j@q]F`CNFW8L]ESoL]E53@UX:nAT!;)P
,We;@<,jrA7^ofL]NZ4@q]:kG%#3.P!5%%@q]F`CNFW8Oo[4GBOt[hF*2>_5*@^MP"769BOt[h
F*2=B@q]F`CNFW8Lb"X'Ou%8iCh[EgFCerqARfM&+C\c"@rGmh+C\c"Ch7LI94D=M@q]:kF!+t
+ARfLsF`!:7P&5P!@WuO*E%Yg<@UjCu@rGmh6=FClBOt[h6tp:JFH.kCDI[U*Eb/a&+@o'j6Qf
6(+@C'XAKYJrARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV"*I?IP_@UX:eDe*E%@UX:eDe
*F8!+KAWCh7LI9Th2[P#O)D@<,jrA7Zlm@<-0qDMS@W!Ks:B3/@TE@<,jrA7^pLOu$QUEas#uA
V^>B/!>-d@<,jrA7Zlm@<-0qDMS=V!FfJX@q]:kF!+t+ARfLsF`!:7P'CnaFD5Z2F,gN:Df0Z-
Eaa06EckrVG].PCBl@m1NX^/?Ch[EgFCerqARfLf@;L!rP'AWgEbBG9@UX:eDe*E%DfBf4Df0V
L06)#BDe*FB5E[g2EbBHR")i.#DfBf4Df0WZG[YW*F!,"3DKKE0@<[lR0/%?WDJ`g(EbTc]<0B
7iOq*X205,'/@rZO!De*FB30If*F_`U>D_?-CEcQG7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@q
CgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?IP~>
% uk.co.terryburton.bwipp/hibcqrcode 0.0 0
%%EndData
%%EndResource
% --END ENCODER hibcqrcode--

% --BEGIN ENCODER hibccodablockf--
% --REQUIRES preamble raiseerror renmatrix codablockf--
% --DESC: HIBC Codablock F
% --EXAM: A123BJC5D6E71
% --EXOP:
% --RNDR: renmatrix
%%BeginResource: uk.co.terryburton.bwipp hibccodablockf 0.0 0 0 0
%%BeginData:         30 ASCII Lines
currentfile /ASCII85Decode filter cvx exec
06:]HE+*6lBl7RH      \pKT_  @s)g4  ASuU/  @:  O(e      DJ()6E      ckq9F(K
H4@:O(eDJ+B\</:        R<2  3KpPE  a`['A  S#  n&D         fV"         #06M
 %_@rEuAATDg:@W  c^5Df  .1  :GA2#   8P1l  (D  OuP  +8ASu  ?nF  E2)?O  uP+;
CG'+8/p(ZFEd;,:  Ecc5;  /n0  $=E    ,^uo  P'  E-L  04Sp2@  :F  %k@r#\  >3%
oDi/n8fPFCfK5H"  (o:FD  l%L  @Wu  O *E0  Aq<  G`i  LhBPCp  c@  rGmd@V  fsm
CM%pL'Tt>:%52X=  FD5Z2  F-8  _M1 G<  3G  Eas  #uA  Wf6?1G  <9  WDKKE0  @<W
i+@;L!rOu"b7@;K        Xg@<  ?'j BO  t[  h+D  ,%u         F(L         LjDf
Bf4Df0WZY:js=Eb         TE(F  E  qh  :P  !+/  J!K        o='%        <$3-B
l@m1H]kFA@;L!rP  !+/T5^  eep  O  uSV 6P ,4<r  NWD  ;+NHB2`AWf  3'OtDh\P')p
OOu%N5OtCcrF_-^  lI?ITY  P%B  d tOuY    16E-  ,f4  DKCt)Ou%NL  <,Z_tBl@m1H
]g15P"@<9@<,jk@  <-FL.k  i\5    1Ggs    I2`N  f`6  :4.07Rp!@8  kViP:/=\`;H
$Op<``C+=tM?L,V  LYoOu   "b$B   OPq)@   ;L"@  /!;  cQ1Pc$e!Ji  4P@q]:kG%#3
.P!5$g@UX:eBOPq         &P!4[   &P"_$  &P'DD  <8;  I8%!FfJX@r  GmhP%'4JP,W
e;@<,jrA7^ofL]N       Z4@q]:k  G%#3.P  !5%:P  &Pb  $@WuO*E%YX  =A78q`De!Qp
6=FClBOPpi@ru:&N`enE6:2k_De*9cCi<g!+@[JjF`VXI@rH7,@;0U%Df0B:+Co2!BlnDI+Cei
!Blmd"+DbV2FCfK6/0K"Q@:Nki+CT.u+EV:.+EMgF@W-((+>#2k0.S>%061K8F(Jp'Ec5u]5CJ
\oI?I,S@UX:nASrW"@<,jrA7^p5G%#3$A79Rk@q]F`CO:j<P,Wkm<0B$j@q]F`CNFW8L]ESoL]
E53@UX:nAT!;)P,We;@<,jrA7^ofL]NZ4@q]:kG%#3.P!5%%@q]F`CNFW8Oo[4GBOt[hF*2>_5
*@^MP"769BOt[hF*2=B@q]F`CNFW8Lb"X'Ou%8iCh[EgFCerqARfM&+C\c"@rGmh+C\c"Ch7LI
94D=M@q]:kF!+t+ARfLsF`!:7P&5P!@WuO*E%Yg<@UindA78q`De!Qp6=FClBOt[h6tp:JFH/"
GDI[U*Eb/a&+@o'j6Qea7A78q`De!Q*7Nc2SARfKuA8,[jF<GOCDg#i*ARmGIEa`['AS#n&DfV
"*I?IP_@UX:eDe*E%@UX:eDe*F8!+KAWCh7LI9Th2[P#O)D@<,jrA7Zlm@<-0qDMS@W!Ks:B3/
@TE@<,jrA7^pLOu$QUEas#uAV^>B/!>-d@<,jrA7Zlm@<-0qDMS=V!FfJX@q]:kF!+t+ARfLsF
`!:7P'CnaFD5Z2F,gN:Df0Z-Eaa06EckrVG].PCBl@m1NX^/?Ch[EgFCerqARfLf@;L!rP'AWg
EbBG9@UX:eDe*E%DfBf4Df0VL04Sp2@:F%k@r#\>5E[g2EbBHR")i.#DfBf4Df0WZG[YW*F!,"
3DKKE0@<[lR0/%?WDJ`g(EbTc]<0B7iOq*X205,'/@q0Ff@:F%k@r#\>30If*F_`U>D_?-CEcQ
G7F`MSBDD#CBBlJ#6A7]@eDImj"F)Q2A@qCgGOuY1:ATVm"@r#drB9KiQP'(hWFDtYuCM@[!I?
IP~>
% uk.co.terryburton.bwipp/hibccodablockf 0.0 0
%%EndData
%%EndResource
% --END ENCODER hibccodablockf--

% --END TEMPLATE--

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMTT12
%!PS-AdobeFont-1.0: CMTT12 003.002
%%Title: CMTT12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT12 known{/CMTT12 findfont dup/UniqueID known{dup
/UniqueID get 5000833 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT12 def
/FontBBox {-1 -234 524 695 }readonly def
/UniqueID 5000833 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT12.) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D05DA0555DF933BB0
7B42D264831116C06C79335D519461E7B0E870A6715E3D74A08D1BCF86E3BCC3
A43FC6BAD1C68BD9D4AFCC06D845FD1F1E70D7A47F0BBCAECE8396E04591E5E3
4797F646AFEEB7DB548183F0B74C9BB6BA2AA04E7F5950EC8AE97C741D4B2C5C
A8E7A8DF5A36A30B5A7592D95E1DBC63EF33C92FE459792CED29E2B8B6919251
75EF62089BD7D44A6E1F9B62EC802FBE62B821DA1C3B2DDED45D27964AD29ED0
9FB7868F3A8FEADA87A8E42D52C1EB7229D7C79B60BDA263F2BDB025AE14A507
098FA274206BACFB4A0A7257D5998EE8F0FDCA79CB61DD1FC59DADD11E16BF02
ECDFD706CDA1E72054D4EB55AF7BA9F19955886BC0BD6E0E3FE3769C94AF3581
DFB2BCD67FE2892AF07E858A01280194D8DD7332B3D0A585C87FAB056C2EAA9B
5AD48D1C9F00CEF8EF0D1408DBE1C03D04B231D7B8D5D998FE0CD7EE19828EF2
F988EBF6DDBFEE00F04A4A1F4E1A55DED7EF3AACEAB5005F1962C724A017C914
2936E2E0DF26A55ACD7DD836C6035CBF07981C1BCE3615064F0540A1034C69B4
E3908E76EF8925D486DF0B4A8E1F02D8AA99585A7C31847AB9382F83880C1C21
C496AB2DF8E7BD4643B28B704B5F6B53429D3EE940A79135F5BF0396E5B46F23
42AF406C26D12BEA7A41F332AEB75DF43C15334CF4651A99F602036946B1B91D
4BB0D2E51C20216D892C8173241AC8FD15A37C3CDD8AB4FB67D8565AFA61C068
95E3D6E46D7C09BBD09428207D506AD43C693F3C3D787F6A5C39084AE45E81C9
830900DB50DAD10A17E118FB5E9680B5194716A788FF7514A1167DD1A305FBE6
67497236B571BEAE378AA9B2AF7868B878036C6EC2CD97D084964B30C2248D56
C9FD5C7C9D966924F124641FC99A84DDE5D5FF995D6B82ACD9F53AAFF2692126
B4FADF4FA64AE02BFB5505446BD39B61882791FBD3D0C08B8C765118B92C2A5B
63978E50C74C43E30C3627ABE7BBB3A7B4C1A498B33CA161CE90FA34E9C85636
E79B482AD33DA5F0E0E54A39325730A438A6EBB464931847D4AE034EAC20E15E
45079F16873B5839C3823687DAD29CEA4A4A57E1FDA4437978818B4C8EB83E1D
C4203744C86A1FE55F5369B12A05851331961635D267D135532232FE5F02F3EE
B5DA8E4B3F9DAB89307AB0297B75E73D446B758A2463FFE6E6CA231CBA3D576E
4C2DC157A851E0F433AEFAE3877F017F011D6D78BC791A0272070806FA551AEC
E632BC1F89C460ACFD109B10654C186B6A8791C740EEEDF4379DADA9B084EBC7
DB79A887A15B8604A3A269DED8C1D1837D1372F81653624C2DAF2EF6A66B248E
F1D61D873CF47BDBB9FE363AC6DBAA2DE24323253CA57421449105CF9C6A6AD0
EED76EC7E045C95D4055B600E21C69A4795FDD98A19EED4C3B1E2BA025DA8B7D
39B297BCCD78D2380A32306324EB3A58A60E0896FA5FAFF2FD74D81365184891
F11B9C82506ADCB28995C0B230144E58050B6EF4FB2579F6123DEFDEC4080B74
3F787D683E054C34899BF6B4A43AB64A380BBE01B27FF4950BD28B67807BA9ED
DA077959511598B2C36D1E381053ED8906131E8EFAE4FDB78C018486FF29806E
2ECE34B8434D78DF031FEA2793855ACA7E340D22CCDB3F3F76561AA2511AD2DA
23C46D4508A556AF6E5707B5AA59E8300E1E34F3227759C2BD3595B20DFC7099
630E3CB868B458285DB89B407E29FB18CF0ED08075615009A49EF680B1A15542
F395F8F95628AFB50524C0D42B2AF0B7DD2761838AFFC1E50F88FF0DA91E1B92
6EDE1B798CA9ACD310FB2CCDEDE478F82399662C8DD5190AD03A49312FF46C5B
7353C845E7F1C1378A77D865D1FFB89EE5673E2B27E58A091717960FADE88934
F9AA679BFBBBFF63A5C77FF575E8716F1488B6528943D3F217BF67C93DB0FEE0
64846658E5EBC0EDA1B3B29FD2ECE9A4A760136F3CC4B250665D65A6325E244B
272258AEB78826F9DBC0341633350F66A410FF2388304F8B0207AA925A0D7F0D
9B1DAAA3995B9F450982B7BDBE8B53275EEACB998E442A129FD18BD597D3FE94
880B1E37DAC88221534C0768E583B04C09EEA5EA2B8B9A8F6B425ED2CB279F41
F685E3056602499B7C5E14280011289E160A21486580262393B6EFDEB3734DC1
4DB3BFC1C1A359B5FCD553BAB240A08523B4A8E2F845A3137D69128C54D55356
1EEACB9223BEF848889C5A075737E9C96237F4F5998D2E58D6AB09A95626A193
DAECF1BDF6C16BD3F14372E4778DC5594D45A232F17BB079B8CF28BFD3088FDF
DB2CE9404889D8B741F52445421CA8886AACB9A829655D81661361CF436DD2EC
381925BB0398FC965D1D523AA3466E92D02A72B5DE78060AF0323C2B9C13B945
BBBBB916E2D4A80DB1F36F417C81588E51792E7031E9038CEFC41BA1729444A9
FD159B52E352F51DD939EC9BBD6FE4FB8C8FD7BAADD6385E4EB48B8B3D299A9A
6CDB54B70A2A67777BC93FDC074D18CC9378E4B6AF5512A955F5777D2D554BDF
FCB0359C7A8AE029C30B4E8DABC1072051FBD6752525F7BCAEE393A459DE20FE
2B81A3F66A060CB31B8C7ABC5BA94DB0CB43D243FA030CB6C1081574347BAD2E
6124BDD9DDE106BAAEAA4853054622793F58ED90F7E167B8602675882285825D
9CB32DC2E0ABECF094007A9C687003465B4FC00F08C4F8F2320414C03C40B1FA
69EF165015AEA187015893A7A6AEF42730F0052A622709623C62BF8F475AA5E9
6DFF57C239A8E7CF174EB3D74860CC19E5CB349531D53CC575AAF47587EBBC99
FBE96FACD004A35B1506F10F032EC0F02F2FC003A9D56F802F05B77D924D78DA
56EB7D6685F542D8CC00F279F441DB4FE69340600E56408EDC1516159DED1ED5
66E1530DCA70DCFB96BFA91338E9F50B0700D91BB375C6B6AA85850C3282E79F
C0E1C61CAB7E22C33E301965E1876B223B74FA257B5B645E371B48008B91B161
EDD14B32F9A85E0229C7F34130DF9558A51938E4B9AD1E1BB15F49AC3B144BB6
D7FDD79493B6398F396B47C5F723669F1447938B0E97F31D6C2A98E6A6FE559C
C2686CF28F095C5217C757CB902EFCD165CF8439E59BF4AF093D269171EF8BCF
54BF25F2E0EDA9D296AD9BAC1E27A9CDEC3098A173C9C40D615A2BF18EEAC5C4
1A9BB2AD0B71EE760E1D96F84F19752BBC8A4A695118288A28A14413D6C6113F
20544E6753289BECE1ABEA3D1D6225BF1C367F986B2CD0774C1A3CA5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7846985ABD6DB9B1404A5E1EE79A612F3F94DE12F21661
BE7E591D7947341AAD30F1FE76501224D644A36F805D33FAF448F1924563210A
E3A16A2A43888775646288E228A16F187998265F9861902FD93DB17DC1A0DE35
57997B95387966353736C5764EB5B351FC2F71C40BB26726AD672D8ACC72A4B7
0B89CDDCAED202BDA7E803F7745E7E978D666971730057B4A64742140C81DB51
6E547C662B898F6536AD1ED8CBED4CBA5E2BAB2689EF6D16FEBF80410280B323
F02BD6A726EBA19D288B30376787DCCC4197F3E95CBE949EF4B833D951CE840F
1F0F037DDBED1DA53DAC2D1E354118C14F4D27F1890A7406C5CC8B9E8C4D75D7
49E9F8D63C2A9F50B06FFD7A2D3A786E14C0F626A419B2F8AC69352D3E3D4BC4
20ECCE3D36136463E4E64855B0216736A5BA9D0E950D788643BDAF8651F6FAC5
344878F0F207712A3114A9C6D97F67238B5A4EE84563172731C175E7ACB31D26
4F8288DE6C041B9E70DE3F5ECED3278DE310879EDC4C895D0E949B77FA1AAC44
52EE1E9AAAE4C087B9F30BF816005CD886B55AB44FC3E99FAB64AB4A3DE2EF91
AD278EC54549F5047612CE0B311AD1771234EDD3A335AABE0E0856308747CA85
AA1BD93538C37C48D945B4C92D51B3C30672438A3BD185E01A6C3BE1FACC6BD9
1E27A2F261AC5557A602EAA20C58FF415373B1AC9542C1E3E475C20366ECA0CC
56D4FFA90CE1B97C0F29D25C8320E8D6C7D8C651E17A370B7414A7271D6F367F
C4654D17F6CCCFC23EB63B1E18D3A988C9CB8F6E053894012B9A6EE6BC4DFCD1
F6F1052FCB5B935B47869208440353F60E9FEA7869EE01D169FC6A21F15C186C
0618FBEDC1942A8ED228A0548CD9CE67C618E342EE82030ED68C53CE6FCBDD69
66785A7F1F300497680955CC31C13740C841DE652B96F20AAB35EE262F46F5AD
30FC7C69E3F381D2CF57E840F056D70DAE34F1BD017C6000594318618B3C33AB
C452421EC8748024803B9DC4401BAABAA9BD6B18751C24EC1C8BDCBD004DAEE1
9B3BD961A895F2C8C6E0D9C40D084C26E91FE8C13B4DCC5AA19DB29998A30FFA
6722FA5FE2D548759C73B08A835F9761E764FFA72EFB062AF8B93D264DF8435E
646688941CC7668EC6C49017B8AC252E0F4127D1975F2CFD4D097214087D532F
80E72EFDC7267BEFE151C518A6BAB96EE0F6E74A5A1CC800B2092F70CBB0C005
358ECE6F0B45C075018E66068B929E806E91506EEA5FB75F3A016FE6F18AFEC5
349171DC9022D457C1596BC92BDCAC6AE8C8F7A597E07F2C8641F6B341800971
BF429F5BE0A7A549845DE5781CB2CAFCD024EE40043F4D780E9A34F1C75FF76D
AB5A3D7ED00A867AD80716F3F3FCED771BDE14ACA25B4E37D2664A295F4FA7FD
8E330D39E7D640105F3FE76D5E7848563BCDEFE3928BAAB659DEB9C7A4C75B8E
FE439A62282E1B51C5C8A6DEDA1B7481AAC5D3E801FF1E600D52BE2AEE1E3F23
2BFA36C21F5C8E7686746397DFE40B8B4F36E097EF935255701E09069BD34F31
6E0E8327B4FD8122998472650FC9C5F180618BB04B765781953CE53A6F20F1A8
899D165DE1417CC312E8D87F26890AAAB50C4F7546B40BD9B6026BC5B3C51E92
8374ED5B7B4E0E3FCB438A90EE9BDDB4707F7B2CB0366A3C531F18AD83240B04
D84F95E458E1D4DD2FE1F9908BA0941B7C83B64A61F70027162B35F7804E1A66
E8E5F38A2E38B84F7BDB7A66B917AACA0BDA0FBC55BD7700DA54111D03EA8601
B45356F8231B1B18AFA0DCF7AF82048B3E19B47CEE6133A6ADC0AFC088A139A1
CF8C1F7364E7340AC948DAE1F38606B932D068EE8178CC60D682440BBAC73332
5B22B3ECAD7CABF27A39C431821357D8E49F885CB87D33A75FD9A02495823F8E
815E85880771C60D6191A718E2F93D1DB14C26C3905C14979D53F055064DB092
D0AC410173EF60F969CC2F605CD338717547F7C326962720A629E27479E029BE
C7A71C7AFC0A8F4F864AEFB9A1970ED1195074A72396E416ABDBA0399BD4D5CA
41E10CFF5C14B057B4C17190B2AC976F0A2F4870DB3EBAA82365202F06F276E1
BE2DB86F0F94CB22428BD35A79B6D6106C1668396AA606AC54C263AD83BF2EA5
8B5CEC0B1D30D5DEECB7688D73A3DA52B52408E3E8BC944C81142E6C31B318A4
4A26ADCE7E25E7FA78B45FA0AF9A5769C6FED3F509E2033B728F913695F5F3AE
7A53FF885C9FA476F738E1739B13077384B0856BA9B9795328216087CAD5816F
4DF98E7EBC7B42276C8BE22FACE24EB07D4428C01C3735E8E06B89F33B4678CA
0505D728EA363AF841F9E3D2D60202738E4A5AA468EEAE2B8B9E85A21F13C565
710F41EABE76E79A803427F6AF576532D0AD64713F820D94D2CD15EB51616BDC
F69B0ED46CF009FC101D25BE33B9DFD185EB8176FD2F52875FEEF5336A15B1AE
E47510B64A1329228C00F72BD5C067C0F62C092D531B4E81D009B4A43482D2E3
EE9D1D1606744A28C0168FFED3E5F3015F6BF98874865DE66B9CE6636EDE9BB8
3E676F498A8BAFF921877577AFF466A222811915C4A3E52417B42639F5978B0B
565AC98D11A37227B82360B75C686FB67384E783E6CFDA8E6A4C07B6F4F51571
D8F2F93206F6217DA7F04985A53A3DFE7F66B98F9F45C2ED724B7DDBED1DBD04
245E2382CA38FF6F87E4ACA521F2E1C154E98B4ADD86BF5099FB6773423FAE4B
751F423FFB73B1A033DD765E25367760CD66E3A9B9177982AC8A29081967242C
7AC1C5B16FDE1100EBC047E18E31C012CFC20DED9CAC5AA74D82ECF4043DD069
530A65EBCB6ADBADA6EF594B9E850E098CBC3E05CA29BA72F042C71BDC5E1EC9
2BDB4E7DFEAF66DE7A589A07DE6882163C312976040390C766FEEF7EC4FB8C99
125131CD08053F922766474EBA14B85384238471AD59CA1A51A3BE9E426DD977
E113F5400404B6CC664D8C8FC0C1062E74A9824AEB28B94558DF90F52ABD6969
85FBDFDA6D3FBB1298F17C7AA419FB6AEDFD76BDEF2E00B8DE774E6422A72E68
78B1996A964DD794D52A6546D69D2ED1201C1C2014C47A0A3BFAF774176C666D
2CC29BFF3A9D0010780772064C63F18447490B82EE2336619597E78AE0256DED
A7DE5FA183AE55F9F811F0F7C8B6199281A8642FC9AE7103026450F700C5B186
808F89627396FFC456D3D6A346AC7534BDA7130D7EE87C28D3EEC2776D4DDE2E
FAD94776482416C07A513A50CA2EBC544AC6553C6F542815F27A571CE9457E73
A07A355266C0F579B59309F9141D432524FF9BF6FD5FBC8B1C54F5FABC872BB7
CB9F49B72DCBE4668B7974D4F9A7019997E98DF187043315CB45254EF4B42233
FF7033A588A7749EE7912CAC38693D9EFD2E011084B57CE52275841677D19051
DD27E9A6488AB07488D684992F37093D01F9049DCE73B83A89C8BE6B1EB1485A
158736FC5E3A6EDB7FC47F18DC85145932BBF6A5C4C13F1FEFCC8B9D4627CB7F
13F38FF499F754BC18087D4C48EE9655EBFF42914ABDAB3161F018A55422AA25
E985548DB7ACB44FFCD66ECFD7359BE446C30415C8A1F4EB2C99335D26A7CB9A
821B14D690FE87FF6A5170B4B5D9C203F6D679B25D1AC21629B640C28151E5E0
5221C9A5558A35CBA28CA560DBE1EDF020EE04618A6ABA6AC4CC3F3126983D7E
A0A15332434667F089B3882787AA1A8E41F42A787D55EB6E821A0BC9D23CFB5F
4764FD3FD20D9C4176D5ACFBF625A80BF2A047252358A77FF5A381578C0EA3C3
A7160200CF7F8E6BDFDAF45168EA926C193AEA970F45E2D8A9520D667D055117
150CCFBAD0EC853AF6A7BEC9E6BB2F366D1A1DD03690F6FE05B7DF4F412C7101
2E0632A7994EA697E797D9FD9983A7152A191B4166F30D4DE222C94438BAE99D
DDD43DEC61354347A0F402CB1E35C49975FFBE59217023943787C54A6138176A
DFD991BF0B7A57A67302CD790F5EFEFC8FE8B57EC66346839DF0B13D844A44C6
11078B420B33630BC53039750752AD3CC1A3A31530661F2DBC5C50C97DF06FC6
82C83EA5FF0D2BB80CB291CA91048469BC4A6714F056252A44663F18B1AF20B1
39CA086249649B53A33F51335C140C180CC48C0F9D5926F0CA97D0D8630DA335
F5AB4BE5B4F9B71156B365FAB3AFF04E8718D3CC1A7DAD437A2BA75753015297
A293C02937B0EE41B5D6F84330EE9F92F76660471ECBE9E1B82208B01E655C54
8DF7AE9D36CB7E06F9EC3635E0A8F513BC3B2EEC5082163E2804A6BACEA3820E
A50D2705600B8234666F514DB921697F9D9FF0B2BD415687124C8CA75A766CE3
1F8E0FB68CB9794B1F862B102690C8358EB8A8EF5FCAC1154498E0872FC01351
92132947AE93672CC2A28D4D08FEDCA5017C240AA332B334814484A9F2EE4658
6A82964DE25BF87EC90348CF590A0146EF5862182874433C98144F768535EC2D
D30B9892DE107E8BEEBBC4EF1A12393A13ABD8EF5E30FD86470B25639D65AD7D
1E08DDA1C52CCC851A59590D878D2D67761D7299F0B72D203A7C5FC10AFCAF62
167196E9A161412B509BBE293616A617595D8D821CD7FF4CB1DDFCD48D1863E0
FCB7C1D15977460EA23FCBD3D73E050F0978B9C171816540E61E68C28821E5B1
EBF553F6F438407D0701760E7495136FCBA04D1A0BDA7498E48110A3404392AF
C1444339547489D17D3FD0DE773DF2202FBD00592C2FF2A519D7B88222EBF0BF
9FA5022E946B6FEE93F87FC7A5DA6FBFF510B167E04900C7450DFC768623072F
9884ED4BEAC4C723068CB6BA866D6368A11878E11F38FF36E32F2D603D0263C7
6C7B6EC1BCAC7AAB4A780D034BF2A6255133A2700817EE1E2FDABBD4B1B9284D
485DE6D5E073D10ECCAAED533791B037CBF53C18F76B7999DEC2A17886B06A74
2F35799FD6E29043AE11930193D79B9B3EACAA13969666FDEEAB259254CC4305
A9FE81079C1EF28239C4F67124CA06DFB2728AA51E96114D71719C11875A49A9
9AEC0678BB188D37B7EF315FEAF1B7B910D788B7C0B0BEAD84A6F444C2905A4E
160AB79B9C0736AF3C9C2190A31E05ED32F136F8834F3F0FE9A9BEA23CE81ADA
52103F177CA545CFC056B9EEBAFED196631130D6D6688C8A0B32ED08E7F6CEB4
36743766E386580ACE192B166F4F41ED7A5668113EB472EC3A789EC0F1C60D17
ECBB139769F56B466BA7281D8EA05D609B74F743BE5FD984CC0594188DC445F0
783D71E6CE31CF042424FA0F5BB856547B82DC32825F6C50AE8EE3065FCCC38A
2919ED5923656F6B5725CD2E2CD6662C05D05599146A7039AC74088A197E398C
5DDF6D86C69641F23C0883DCC8CB50A4A1641DAE343F37D03D786505AAF7CA19
E630125AE03ABB958DC8888051E52B28B4310A9D1D51B0799A7646D488B020DB
0FBFDC7170399BEFE17FA1A80642E734317619DC5C6CDBF3CAD6FE6A201FDA73
ED52156C0724B7ECBCC9EB81ED937AF350E7168A7915CB45438F2DF64A939000
AB052D0AB123F2101A79C16898AC65C6A93C4C643F890D7C29B24908884689F4
438F542FFE78899CE46B900DCFD4895BB5C98BDEBEBE9E4105AAE163EA4F9107
6AD04165B58960F1AC1869DAF2B4B6EBB07A150D715293EFF6B9BD3E727A3A64
569699C1F22C79665829372181E21B5C77F7520D7891FA55D3030411B5ABF766
234B23B9DECD039476BD22EA0588728150E0A2C217C36F58CB15E6A12D4B60F1
CFA989929F29AE099FB0512FA7860F5ED9D06D51FB674BF09947B771F0F0E488
2F41A0B8C413AE98DAC79B40DA44E32842B62B2A466D150AB85F8A39874FFE20
72A703353A540FEE631AA3D4EB492E6C301BF2589783EA9AB08355F6EA75A405
C11B1375478DB03D70F9E692C2D4B4ED1204D0DD745F8723668C15315CCCF6EC
CD272B15F19F8A046624BE85A220C62929735CBA2D139859A5F8DCEC4BD0273C
D8C9118D87846D17E9C3E96C58DEB846AA6A811EA73964BB8EA4A0FFACE38A60
D0038F6DAAC43D9B0BE96B57B902A1F2AB6AFC3E798F3B2663D564461D5108A8
71347E5D71D4E6546813061D24AD69B4355C0D8CB3674CFBF8EA9DB943789A2B
C3165FCA696BF74E72B5749EBBA9639E040D0976CB49DBA0FFB2C83AC7DB6A26
088A228A867A6E1EF0DB462EE1DB7FD1E38281D1E8539C03B042E5240E927116
F8AEFE0521732E6884AAA99B9A395D484A7848BE50E57657B3746A754B6177DF
1B895515658E667080B7AF7EC82DC710A09D3332CEA72407B7A0D14B7687CE6A
6BB030727AF700CD61B0B1ABB6B2EB9F977F0DC1A090109733AD64E0B13BB35C
E373B5C24B3EB35E97C43DFA17B76D8E5E549A8C0E7230C16751E103D05AF8E8
6B2E02D43275902E28D19468E5BF42ED8903FFE59642F963E0EA0E8D0E798965
B896B7DA63716700FD203DAF0AB37A127746FCB4163606C38513559EA7463F97
E366308B8EA1C3F9C66AD32DFBD4E8C8A81359D93CC99CC83DB779E16D419506
69763106C9EA6F6EC752D4241ECE039FC65399A6C794D2BFDFC01B5A57966CB2
F964D5A6BF31B30F9D5EF73C32A46CF4237138BD515FF2C9B55CA92CF3D9A9F1
1070BE4519A8EB174221DFE445AAF25F04147FD271C1B9BACA60998B467A6F50
8CC2AAC4374ED2D4F6F489DCD61BB3E551F1429558636EC682BA0F98D8720FAE
E6EB6439FC966FCFE5196B506FE345CAE0526850A8606A7EC0E817EE83CF198D
7B7DB1674F3C6A89887F2C60A278543F8C919BA4A31D17514AD9F9A677B413EC
24C2AF7EFEF9B902496D88A1C702F212E5A178E37F4FFE316D582C7A94D9CE53
4485E5E2262093B59BD4F4419638A0C320169C67022718C03B89AAFF7D49756A
208FB77A6480E9769EADB4EE5D8268B20DC2EB1DA38A787ECF895540EA7D869F
C40552AE181A2ACD808BC6BCBA90B74ABAC8CCBC827819623A9D2AA21FAC8A7A
366E412839A1E6C85AAEE3F2FD6BBB719CE9B2D2F763D0E07C68A90895F61F88
70997216523198B2E05EFA7FFAA12B2568C87585E051E0226A403CC958FB8432
CCB66125A024771814F41C468D26B5A4CF3AD27E975A6D4B238A64FBD0FF4C55
4918A7DEA7A985D1C37ABD56EDF5FA016C420890DB6543BBD561F2B3C5908D7A
F215D939FFA899CEC6C06AE01F971C6600F6641D7DBCF49875B06B5FEC38BBF8
9CF50BC9132FBF06DBAD5E8B3BF5E4B062BA1B08B9B177F4A82C30E38419E746
DFE69A3DA08249BA7A0BA4C85D9392A2B20BB1F510B27F849D144B732D3015E0
8625255E611CDF5236E8EF683DEB9EE763D4198207889553876BF09A62BD8BCC
4CDCB7AE140A6CFCBDE1AB7983940A589D9AAF82C466390D66DE145263F96771
E2301735A2BB7384B96D84670B80AF69A3048DBF15A6C04EBB06AD323998CBB1
174A6D3D42FBAA7232CD65AEC173E8C768161E4AB6B327A178578F7488BB21A9
E9DD6417FBBDB27CD403B3B2866C796AD556082A834B624A28686C31B8F4BC96
016730721E9C5B7EB8F94820CC8CC65C5AE1ED9376371B87349E095A3DD11453
B1CB20707501F217DBC71DD7BE794A4790AF5A8BAD5D9DBEBB2889F289478F1F
676AD5050B7C4D64C0B6255FD2CFFF461F23EC4D9D47A8E0C83F2B719B2DE05B
A12E40F825BCD25661826444CBD955B40435E886DF4DECEC76322026A74D1053
6FDD1E900F11544E3B504856EE4B6EF6646029148A1799B7349186CDC274F6F6
B8D65436A559D26F47C9004321E17E2478A2C24921935302B696E84EA7370D0F
658FD241FE79888ADF83B983A84E40B917EC6890BE2CEFDC85E983CAAC4622FE
3AD086D69E9839B1ADBBA46D5EAEB7A738A418672B2857CCD528F1C66F09F459
17061EBD4C83EEFFB029C3CB2453E2FA2B81DFADD8E974CB7CFAD7871F51E52E
23DBEB774361872DFA2C65D99A38C4418DC663C9384FCD5173B32C4D962E6BD6
6B44A281723CD0BA1D7AD545BEA249408580D7A5BFFA2021E05D2627DE22877F
78821D52AB41688EB7E6B4D2A60B5321A36CB2903E3662EECEFD146C84A94A95
7DD9D881E5094FBC8D5C65FAA3CFC29B109BE2385246B6E9DA84B9BE11860C69
AF1707F13A18F68E71C8F979767770FF946C7C4BB69CA07B7C978F3C6D3B2EBC
F00D55F7CA154B07EFE94A3ABB53C7788DD90B6AE1AB630303F77A1697B6BE6A
B60356E3C9E03C4C772355AD4F0E1A7A1FE94DF99E5961147867A4E8A73123D1
6F8E8D19FA674EA2A111918245327825022F6E27368E570964C90541A4FF78ED
9C7F1BED3D482352EE713F9A898B651D7E972E2F7D43128BE38717C31BEB987A
F77A0AEC39EDD49AA59C0C2BF52C452F79B856A0CDD13C8168A26CB4C09B6F20
9B2212AFAEB688F27F996424237F98B827B03F33C1FE0DCF440C6E65915646EB
0520FFFABB84BCEBD6AB9AEAD9DB205CC35CC5254CD9FF571BBD073124321A93
C909C38ED9BFA8E19186DE81DA89DE6AD63E24712395BBD0CB4540F0B80DB9BE
959CE3BA5ADCBF48B9E596F92CD11F5FFEA23ABCD280710E94BEE8DFC9C4EC48
AF4DAF3E8D1343D5482A502C660653E12B56A9E6EE5F8D18F1A619D0F365E491
0BD67F0EAADAE56546EB02E9B158A400A02FBA8B164996B20368DF793BC46617
A318EC823A5D4E12F514AB94319189DE722C4AF76AFBC5585C31DA3EFD27EF7E
1BFB1B8342C32A4B8178BEB8940C458A63194A1D5DF0336EC7134B9FF950A4E4
BF4E8250B86F753DA5AC62D4234EE63C0FE9FB37A278A02B3D609253ABBDBB42
F2838DE24D050009521CDA1DD725869EF432736C21D1A1767553908E81BF82DB
D12702BF07E135C7FC5C2CD3295F0EAE7B9FA2A1C49E71916D6F25776E9D3C8C
08E3AA6BBCDBC42371036476ADB1BF9D7A5299666D5EC0FAD69E8F65FD2288E0
D8E55724EA3B963A4492672A3B3089D6F69379EF729742FA132C8AC420B637B2
AE972519751C717DAFFC762678954C73C42FB331DB503176AC90C16722930E12
7CF23D08D11140AE66D2007FE6F84470B1D64A4D375B2D42DBE361EE840B6EF6
23AD8E488D2677A0EDBF77A708B575C7003CEA2AACE5D308408E54A4C3E15174
63D97883B4CF601F6FB0032F31B6CBDCEFC637B282BBF5DA823AB69689DD77BB
66E7D491CACF5C2009E475FCD38F18F77A31D382ED872F4C33FA7A4F3D9850A6
FD66F2C8A0EA89D9B93A5A81E2653509FC603D3AB7CC8FCFD71E3B1F88434725
46B222880AA3E804A8B2EDA40BF3D8520D467902FFA0E2639A64150B7852D9C7
51F2E90E3E45D860EA8105580E6A3DC424A072AAF76AADE7BAE8CF0CDF39C1A1
EC70760E8D41A4B19E695AB1EC1526293961F1ACC23699F5D5065A7D9EAC4851
B172170B2BAFAAC6FB7FD8E7DED186C7F55FC02968A181DCC30E42BED3D0FD91
150B592058557DFE33D2E01A12C7A2A96BE68483556A06CC4B9458B74414033F
41C08474CF2C7FBF0C76C8A9A44C9B0455481C655EF2B6E9C8506B22BD5C2792
2A576CB7BABC36DBEED06541DE2CE90A9419DBC7A3E38E8974C6B88AA6CDB3B1
A72461A47E96FEDDF5BF777DE154B1FCA2CA6CC6B383F65613CEEFF45CB2EA6A
58B068936559914102AD4E5AC0ECE1688BBCADEC2E9CCB33EC09CB1D5F9DF5CF
038D4F7D3E964915B5FC81CFB301283206491694FA928CEFAAE0005D0C305CDE
7437EF735ACEBE409E63383EF6EEC715E91C88250F464E83BAB0B32768E80EBD
64092A555213CFE2A23AA8EFEFF316E346F5821BF7A22207DB60823ADBD5D401
CAEC16E495A3566775F3417C5A73ADA7116224DC761C36FF6B625D89ADB331CF
1AE9FA23D500CD3341C006AFA59CA0430F807D13C25EAC54CF8BC904F9B57A32
0264036678C1F07C1F10552D4419A8B9C3288D943DAD9A2791833C44D39485B1
1104710B300CDEBC974F88BE75DFDC7E9C7B2B775310F4272AC19C1CE1A2B621
265AC921CB937EB413C63CD77813E5EB0DE9553D95C27397744E4E2CC3A09316
8974C169CDF678F7C9B55C12FD923A42922794D6B6F9B61BE1696B71728D7CB9
F1F70EC7EBEE1D2C3A118209FFB9282027433255B674B8649BE91EEEDDFC5BC6
AC2F53869A546499EB9360843A0CAA95279731512C9800CF702EAEE48157BECE
BD1E0AF0765AFA4FA9F5A4063F5F2373272C25AB2BC83671646D763BD68E6B18
EFA34754C4EB69600EA2AE82D3DA6BC7656AAF26BE128E5C65009B30031F9968
6DC2FBF40704A1190B5887B1BF8AF2160AF7435AA6701CE98B7AF26A59DA0601
10865152FD312C2339F566E12D0783A7BEF609DC62EF6A72F518F8A58570B482
31304959280E33E64333935158625D35ED4477A638E677A2A7402EF6A7B0CC27
7DFDAB5C5BF98B164721D8C5C459AEAF1EF5F84B77B13D3FEC17A2521B484751
86F2166269A37A43D7B95CFD58FBA0643286EDCF58EC9B25AE40FC76EA995B12
328C9EDD8C479AC8C856673F2D5F0BF62B64A5FA797068AB8D324F89952CFC28
12E0240B19F6FB5EBD8F24699F232EB3C6FD3E769ACE751BF57B670F14040895
54AB2E27A515CE6EC720EB5A898BA95D5865E0133671E9ADF624E1066C5B7C3F
B03C8BB0F39A2CA67BA43FD68D957D965C98FEEB8819937B43FD3F597E1F3033
2EA2EDF197A6D04CA04FB66D60F4D91C04EBBD18C7A6EC50CE0C7C1C12E10DC0
8CD18806C1DF4239CA465836A4848A8B3E67BC25272087D1106B58BAAAFF5641
827219F24544F83FFE202A31A235CFC073F061E9DB78180BFF20B29778828DCC
C9F3927A24AAC3E429F45CD115141B932ADEC45EBB55B8C00778E301FE139D1A
7E156C50A6FCCFB7200C540287D85C407C0873701782CAEFEC61BCFFCD7C9DC1
888569259B720D5ECF8980A235D811FA7F84592E679F729DE2C07351A38BF142
911CFAE6CEC7CA10E69F746B0E4603EAA61E76167CA5BA40FCE00B8589C639A7
3639E83B8F4D18F4FECCCD275D66FC69F913EE0CF4B52848B73A5802AB5BE844
7045AF93358AFD2FF6750E6A35033CA6DFC1153038571A3694A2552EC378F4AF
913FC4BFCE72BB4DC2F9156F9CAF46C809D3742170C56EDB363E929515DB75D7
61518F444647437D400A8DB0E6B555EE5EA7AD4D458BDF3DE1588C0067F68028
0D51FE6A4B6EE265EC6371C4E72E1AF5E67CDFA32AD50EF50F874D2A7BD922AD
06885ED82603F34BA05B6731512200B995B60E7E9BD0A6F7CCDF74597C12F993
6605DADFDE29BE6059A4E883822EB234CC3507A62A2AFE75965FD0D13AF9ED1D
241E74F1D2590EFD5C745B774D87988236F67E16D3416A8A1FBBAF7C9025EB15
62468423F2BF6CDE1784506818060AD02A38BBA025067980736E6CAFA65C1A5F
F98F67951A75A35B2BC70E13CC0D0D0A7F59DAB1F20D320C660EB918C2816395
865C0EBEDA102F42DB6EEFD30D81203FD63AEBC05EF09C95BBB04366BF5FBD31
4185730E04F51967EF7E3BD11605CEBCF08FC47827D20BFA73BF195685788D30
D6B11A275D0C1E12BD6A3C49012610DA694A92FB7ED2B9FC42BB482532E9F0DF
AEF53C732EE5B32093860BC643B4EEF2C789195D7564AE153D8003A126B6E52C
6840365807969D7751807A646F93A2B64EA97F53B28B06930B974A0CDD161BEF
123E8A08AEE8F954B608FF630D62755F81BC20AF0910C18BCAE451D0E50F7BE4
118ECC1E4047308F7F96A0B80C25138CE2AEF7F7DF4CCAB2A85FB38FB2C1513A
2A4DFF9F76618738BC36E4F14FC195392FF81E56231C16063B99D7C5B0438504
6238C0A2FEF3EFC8621E53E7059317BCABDA88716E82D14C02D98DD859B9FE10
A574495CA29532C2C9B82F4326E5EBB7749589A55169D6C5EE5714245B97FE36
D13EA14B3AE7940BADE0D89128766072E48BEE12E093F73C05B536F3DE102AF8
DCAAA3DFD904A8A1A4040998919A2186622F1CA0672734C62E39882C3EA4C915
24F36531172D5237EF3ACF18F1F1DAF6291611821D8332BB44219982EA500809
DF817F78A37FAC420C7B3FCD3CD35745D7E4146686072D4D1CE19E46C61A081B
EF6714C642D09AE90F16F49451F3BD65E9C5092F3CAF645E0C5C4366417EB023
458CEECF42DF3D8932D2E3C0478AFC9E3DB8A59A3D6C4D5839C3EF4561BC04DC
D59ADC6D6FB6EBCC417DF0AE6C637E8C49D24FC0AE93A0C123C0DBC0706AC80A
A10AD850B1905A1762929BC7064D39ED4571CA05ED5CF27E41E172962D190015
722D9262B42CE7869C5F5A7CDC27444CD315745462F9D165DAA62EC2D49758AD
20D43D5CD821B227A40368158E8FA2C1225FF0F24CE93D79B79955E88A7776E7
40143BD917875BD4F1822BB6BC94E9C5F323A7899A1BA6A67D0600F31C9CACCE
A373731A23775EBD960957CB4B46944BEC6BE03C898C5F12F17BF26281933AE8
A53D7D94AA7B2089D897DCDD16F4A3A8D66A38BCA0E82AAC5DB3AC9272CCBF81
509A5C4F020EC37AE2049EA3D7D4E40E34351FCCD52451E4A66AA7BC4CF2A1DF
363920AE7C7CC103268AE9CAC095FFCD2FBCBAC7B556C5822207EAE836A6D825
A1DEEC917BC6FE271ED40597F94E68506F6DDA277921F661C00B56F28F02C9F7
7ABE35B2D232C666F7BBC411293222794C5EBD66B29DCECEA5396A278F478518
BEDEB0299AD75457D60E2C36D1BC7C6A023A8C14CE0CD8E122965EF8A694BE68
7B4BDF89BB55B56D14D95126261240598A1D7B34014881C5EBAC31E26DAB7260
BBE69715B14F343E0B4F66B6170F49AFBC11E92060E1F47F0B76081BC21C18CE
E0FA1DDAFB91C39EB10682F8DC836C8BA272930DEBA20D2BC99C4A3085FEB9B2
956C00BBA88E9EEAE3C6B746822214F4D6B47C12E493A476511820958EB70701
1DABF490C129033BB5E48CA490E763FB056BFDFC98C32E32612DBECF93023241
960B318B35232200BA03C723D21CE25BF8BACADB3E750A54722A4CC6464467F9
2D8B8F0847C92EEF02422616B1FB7127136AF44D2E71C3F4B3503D290F430C5D
D6E61F6E63A106B2BB95ECDD1F942B03EF6F070F830331F1B7C428145FB77556
209A872C70BA2DC9B66B11DDFF425EB3999445C5373C63F0B2C0CDBA1516B36D
A1A86A391B678916162DC1FEB0DFDDD00A1441C54010B92565FC5C21732F51E4
1D1B48FD1F0B4D488DA544A5E9A1950DB0409702131FE3BED6D3DE03D8028F8A
E3C44B2354F6525F1B294EE7C9B4A1DB359702D0B1FB291EE617B116FCFAE7FA
22E1409093C60B21EBB26222B84CD449887D5BA4FD3618A8777714065630C910
5A6AEA293E77C703E9E984CDC9FD2D73CB3A1A5976ABFF4FB400432656060002
F1B9F455C912BBCFC74CA90FA87654B7E05CEBB4C3F85EBEF3CFA977AB0A93C8
B2FA1F8FA0FF2EE428F12FD12BEDF5735A62C34630B5E585BCDAB9A54465ECBF
0060499A2DFAD9833AD19E67D228F107349A40F91A293679A775FD57CEE3C5F2
3E062DE390583394C836E6D473AC31713F774F1B8405B6F55074541997B7EFEC
607E8B2745A4150CDE24DAA73ACE80E5AD9E89C1A72472C1252CFDAF23E8CC09
E6869CEFA2F7BA730CD0E94B94E06B9D76A40E5EE3C231F4EAE3AE545725F76A
FFAAE5341A0F2FAFEE6D4AD2EA91B1D3B29176BB0F73E78BCD0A372AA46C9F82
9641442E23C1760B4593F452464167AFF9C13C931A585921F35FB8C7AFBD5720
B9AF631D5AA365142DB85B9032CF7FE3933ACF4279AA3AED2BEB8D3F600BF82D
38A9E64D75AE0685B9B88CED2BDC4D0BF114D4CC679E1BB8456531102AF329BE
43A298FD65B833E3643B576C3BFB8B6D6FD1F554AAD876FD71D3956CC202DD75
384BC4A0A3BF8531FAFACC90E785D38BC0985B1E43DE6BA4C5A793528FF0F307
B7EFBB39B0A3686065CCC1CC18FB6D5FD4A823DD6FBA770F78D42F4CB7A1ED41
A848EDF77020D539C6B97854973694B953C378D1077A36BF8F62EE83A8F8825B
9D8DC133DF3497EAEA986DA1B4627C7AE4ECED756798BF9E9B67A87499DD96BD
38C19A26A21C46FF21732EA1FFC55859867334B3352B9FBB99BE2F3660845D6B
3E26682C39D85D482EB9ED29C800323CC51FC65E1503183E0BFBC24CF21B5C0E
5D57DC66049CC35E9CC9D940356B33E8279D4E0D6511FE7365CC74FF8FE35F56
3ECF1FD6E77948BC6D9CA94C224D02EDD90ACAF5E15E2585EAB377CCA04999B5
BE39D678D2364DC9F7B14B39FBB99FB2F51978E2C411EFA138CDAA08A6DDD30A
0BB2F51FEC3518FCC871490CE333C48F9B2AE703D2A767E896547012806A302A
E7B0E3CFA4F8CFC7FBD4800EED1D810C36FE16FF1FE22A28AB26F6F473606AF9
DA01220315F96C939F6FDF82436BC69C28C7CA181758EF622A7CEEF2A8ACAF62
89A2844E8CC692DF2D3260D668EE45C8AB4DB0CF94FC4242976E1DC5322D5C2C
997F951189B1BA94764386A67C36842419B44B8C7984C8B8269241782D098FA2
EA9755ED95F235FCA26E9D7CD1F552D21ECF1F614C4178DB112F5D24DEC07EFC
D70BBE9228519DD38FEA314AC4E5169A8FBC295909511782FC537A99CE952267
FD85A57D7DC8A5CCC20A6D18DAA6658411EA90EBA5497D472DFDA93B89DCB882
DF4E0F9122414FFCA34DE2C7B36BB5F6301681DC453A7C7D4124F4DDA882EF71
091A55B72792E525EACE5DB354C216261B248BAFC570CC5DE8F6D1E7F98E52CB
0C093F0F63AAB68B7D0B2938E561C83E5A93636D934D5864B119A80FCF105565
381C468CA334621EFECAFD3DC7A3987B74D14E60E1AFFA0E857408FA74696DCB
1EA754B4EA952FE0864232698CAC2F117716578A1AFA712D24152DEC356BF6AE
F48779A5E895B337A67F974F3A92EEC527422A893F8A4B9E8538775250452525
F800F662794AC3269B8B8BC04F8F4B6A22974E1056905397EB5692466FD382EE
CCC8DAFCA6F8D30B1B95C4F63D14139DD9E0FA771705F10DCD702236394639C4
4131A7CF8C9BBBB892519EA9A87FFEAFEF01BB7AD06C39F764728CE12CB5346F
4783FAB7AB86F576B4D7935D1ED303011BBD8C32C8DCA78F2881874636FC27C6
A808371100D81901321F59717D09946D22BF5472B65627A376E87152393A7B0B
EA0484BFE326C937084C60E9361AB77450266DF5BC7BC41368E0DB8DA4BB6D42
2237967FD439359A252F32AFC51CFBB0F6B8DF682272A3A6CF870CFBE72F841F
F10414BAA3AF7D7D718C7ADA992B6FEA69D15E40B8847EBC30557A1EC80FB045
D4DC3279DE4824FB9B9C29D09072C96E2AE7F93B839C4D37378E038F0FAD60E2
B09BF3D167DA4E805909E7BF3F416BE692B4A6D3D93539818D7F613F2D181348
CE4D2623DBB0EC72E6FD6C67CAC958D1F21287BF90DE45BA3F62A5978C3AE955
3D952633041870EEA9A90283B3CCC0B1CA2F961D7E961955F90DAEB922E40DE1
CC1F51AAF04733D8CFAE473BF74A0FC2DDBBBBAECF744C7E985E3DC0CB1C1AB3
698C8EBFAE95285E1F2D03E68FD26000F95C64D52495B03C7BF69285EECE5BCB
6377FC2EFF28BA4BD5012ED5F42BAE8930E2BA9657BF0FFCF47DEA9542042E5C
4EF9DFFC852926AE208B88F35220D3A905176C32A508614C5555FD1619C00D65
AA8DA92BFCF5C92466925DADFAA411F4EBE2DBA0926B4229367F1EED7338FB4C
4498CF09FA230D78D52111A63D0191C6F6CB5452364C759BE67CF6BFB003FD5B
241A10E07E37AD76538402035D6ED155F303DA30A9735C9CC4E04CAE484845CC
FA2277C8904A4AAF1EE2D5A07F38E19862ADAAB3037908AF8168F1D7F4A0B9EB
D4951C7F4819D37483CE78E0E23EFF0224CDCCE0243D80380CE7A572A031651E
2EAED2ACDCA2E8D0E399296505F74C69C1F5EA0CE5E85FDF3536F431E0977F86
02F626EE63932052475F622E9004F7B22BD7C678364D7023EBD91F99D5F2588D
A1730F260533FE07F7A1165315B6969FF2EE69F98F0ED5648C08F69462B2180C
276FC9158EB1403B710CF25CDF363C30523873CA6C7A3999271310381BF6A77F
4443DAD6CFC4DBE4F29140C4ADE3CF35C345CFD7F3F6E94377830FD825A3A605
223B93FAB52D35E8CA5C1894CD4D0F0428B4C0640497F0985B6CD87D08B00BCF
2FAC9FFFA32431E1967FAD29745F43B1332C1D2465F2B4632604AC640A8C63B3
E3828941553FD413BB1DBA27B06FF8BDECCDA462B4A09004FA4F2F447CE62E5C
5D78357DD91C6ED40054C12278BD6057426728F9F48A76785D68EA72036E520E
9D98A8C3B91A1F5EF50DCCEF6E95F8AE48C9EAE41A9687CAC74D2D6E2AE68F9B
CB464742098804CAFBF0276732A87540826663C22E9DE5A20BC5B92035A2545B
8917703FA54E36F6A6BA7E237126FF831DD582ECDED28C8BA11F9E91A911C65A
CAB9C8C371D76A0C8E872F81BC0C7D172A4A7AE7A09E21E6AF962BCB51F6FC46
07A7FCC7AC28BC1B6E1041578353F16CAC7584A1B949810C4BDAF5C449D4F73A
E02899B6D6256EF98EE45DCF52174E9897DA0BA75D4F9FCAA15FE31F09164F5F
93D2AB921E6B2E8DEEBE3EE8AA5DA446A6DF211F68584A0D303D69FBE5DD1DBA
9C450E21952DE82C4D2842F920A5006C6EEEF7D86256C82063AB0D212ADB2CD3
38399A09C63860A6335B3C14D8FC9AE88CC50AF4D1F02DE59DDD64D5E70040EF
9C0FD8384CF03726D6F04995B3316F3F48FE67E605F80A2ABAF291D9733DE515
D5744682B9A3A4AFCF0307107C73314F8998318A5732FBD2403B9558178E518C
841ECD30919520DA8C690B610E62CBB851BD8777CF3D72DD388C8846E725EDE5
B5AFF320ECA7CC030C2AEC261F088BB27AC5AE3F4EA3CC55A4EF8AAD9D765806
0BD7D27E9B329EEE4CD0818BC0F4C314A1AC252CE1563E3989A553ED64EE3D56
E4D5E6098676B098CC08E3E8A0A1CEDC94A32BAF0F6FBD7F1E586EE4DE96939B
E189C7BD42B6A4E995388E45A7F8C7BB22B8CE62B4D62F2656DF4CD63C303521
25FEF81DD9C4C00C8B8B4B319D3BC75B1BD159700970136730A96C86009C4525
664401F47A7A77381D0129A05B86587EED9311A817F4C347AA0E91FAA93D53A1
194A079D835D61F2E0B5CDB4BB3784B3ADE6713BFD7B9E92A17E1186A0338497
690A23AD09C669AAF1F0A0803AF99E849E1DB0CB4517754FA3E5D30DBEB8CE17
8BBEC66E4507960F676889FDEDF9B8946F1EA9CF5B7D1B722CF852E07CC54537
EFFFD8B3A129EB5934683441F8F18D5A6A368B160D8D43C91EDBBABD0CA119C3
F9CC8DF10169DF43E54254578447FB77B5FD273B30AEDC7937C86E43505E058D
F84BA02ADC425041B1EB46F418AC1991DF15116341673299BB46FA12AFB90A02
DBA7E10D7D97E498E2263163EF9D4606A559DA48652E12AFD9DD76D2DF5FAAA0
C007C35DE0122CC673E30F8B98E697B15ACD6137B6903648890F50D37BA7C1D2
7156A7E564E4859F88244167CBBC6F9BE9D4A05F4CC08B87630B7D335B6EB7C2
57A05B9AB7FEE57EDF054F294F9E5562AB8984FCDAA5B942978E3E2A1E817ECC
01D08F2DB778AB327E0F84594C1B76AE6F3DF77C00334369A3E6BEDABEB1F655
1B8470DDAFB789785744D15FA438EC7E7AA1F0FF7B402021C11C053FEB40327D
E4C4C00CBB1C8065B771D190A3C86FECA64336C8E4637D2D91DAEA5DDC7BB067
6FC6695CB0C8ED9134DC1235C71B892F4905C4DF400A30C0BFF60219519F0C5C
8A52AFDA469711BC3F186DAB244EB31ADF0D2DD0C7F4B6DD6B8BAC2A088BEED9
F02A87DF0865B1B21D870477DAE3495CC8958368035FFAD8A484AE3862729FEB
4F8E6E456D50C563029807A11E7A2DCBD40F5324B06D2CB5C8CDD0EA6DE4A4CC
E0388C41FC0BBB275463975131077820F7ECEAB510D47FB96297E00EBB1DAC8F
6CB78682D875DD8EAB47C19A5C43806EFD3C36A74E53C5737434B9AAC95E7519
AD3A531D29684B9E03924602896AC2F5FF7B328487486007317753B27726B3AE
994FCA984F11010EDB8FE04CCF054EC53A3CD30D071BC9E8013628D6AC3C4594
74ABD284037797E2B1C9D05BD5305E497F8D5C666B841C4905CCAE301AA33831
8576C059E06CE8C658E9DC2ADF21D3F6153D4A7E70186BC64B1A9D5E5A9218EB
1B0D633F9317A3244A4D28B35E3ADCD38E914225A4AAA2FAFCCD9E38670D3FF1
64C9404B61E7650BB84E9C3C9AF1CCFA1FE74F8C3C40B6BAA8F247BAE2F12890
7F389427BC9768924AA99A2D1C3FE5B1D05F34337A9F2D4E505458BB8B79375E
5EE6B1CCDEC7355561E218AB2320535CB19257F3C056B9565D46CA30A6079120
1E6CB8FF6D2C14F2E22E5E4B77390DA138BB75AE6F8F920A9C9764A51905A318
D18AA35351A8F50552DB463DB0AE65CD22B5371B2C66E4CFCFBC5AAB0436CDC4
6AC74DD8AAD5909F13751105EBC403427EC3E6A6A390CA6C796C26A08649B416
7CD377741D132BDE32F664CF6BC7006CFFF3653C02B22FE74A3A2142B9D6D5C7
BAFB792DB00A3F73B687FE93F572057170072E85F2EB9E572E0346FD087A54C8
029DBAD51AA6EB4875195355C4CE09DD9ACA06CC9EA7FF536AC0D62257B44204
F2BC003C8036769A212620ED47F8BD79CC062309B57F127B8CE3A58E91A5C682
DC9018E61958826B5BA2858B44A786B6CC63224AD6BD288D479E8CF67125BB1F
90C583F51902AC369B6E07107A341CCFF43DFC70AA6B09D3E4F9D62BCDDF762B
EA954B87902BA9B18203E0235A9E6B8024A7683D9921D577A65FAE7A6D3BE950
633DD1340EC295B1F9FEDEAB4CBADEAF22C249663B6F66D7D0B87DDDDE644317
C46C730B9A136911E3727660B40C0DEA634BCB26809D329BE4299F1E80287864
21664EF84FB7B38063F173458E34A7B564C21CC6FF4BB52CD828E632594B2D5A
C062B8B19556D2CB3A7107C99F2B039CE6CF46585212DD8A12B2AC7C750E9410
1498437C389281D6BFA75C074179F984C53AB92B736E83C3B9A761D94A6B981C
AE1838E087125525675A8F22B8E7D190B3152BDEEC13FB0AD03B93F927394DF5
60E62A9F03C843AB226A7CAFBEF4F35F66682E02CE2DC5339A8CEBDCD5138124
6131D5123F422B9A4DC73D12DB2B9355C1243ABD5386C13EE79A0733B77D65FE
C333563A9821C285FDA4DB29B34C149A6E3CC63E9C800D73009A75D57891A840
AB23033EC750A9DAA204EBAAEF0B3B2FEC233B0EF8F2A2452AC72FCE5977BF64
D5E535BD39B985E2B740D2EE69654BDC30CF9C6FFDB65944DFC9337AA83DD6BD
14A0BA2FEC646472641D0EED8AAD5F9DCA5B8E06D13F71BC253968FF4D024834
B57683AFE01F941996A6C31A298E220E5D890456BEABA462EF7EAAEBAC59933F
E97C72FCBC174217A6EDCD87542F413E46B3C0A05AE2CFF006AACB6B93B3901A
FBC3B6D0DB77103A28C88F48BA8806CB752A3B14A4C4459E6656947C8C16BCE1
64B39929426C7C2219DF0A719416C6A20E36F0DA8C00E5C9AA109C474031AEBD
11D2E0F04318FA07BCA31A7E22E68B355E3D71442581362042C0A62749695CC3
C4C9C1431CFCE2101CE5E229CB3C24CFE1CFDFC4AE1136698767831FDBC23AFA
58F528AAC1C3474E1A8290ECF3CF62F08D489367D021F19A22EE47724BB4923E
4AD3536597406A0DE9245BAA6C05017DA62CD9ABC51723E62B9BA281CD4B7C51
942A9C4BEA22A027FC6B177D37F19176AB3C457A07CFBD0B385FDCF23BE27FB4
10E7E1F4FE3BE646D3206D5E4D389DE6913B821960C1A6879FCD61C24E194AC3
99032A7885C75AF411A47997F074670C8C874F72B9E888D295FA3608579C7BAA
C2930BFF89C6953A3A47D33F25F20EDC264312A0DF53881A7660D24A21DDDC76
B9CDE8662C8E1A2A85441CA56785A643DD839C8584C1D5DF9AEC5B3828F945E2
31D047BDBFCE66187CC67464C1319A49E2137D53163CFC49CFAB7B72675EE688
CE3CB1F4E2C50F910037B453E22DFCBBB489BF87C9A4B88D7A400315D1CD7F96
E23B4EEFFA7917521D6D0606C14999025253DBE1EC9A02F236DC470AE00CECDD
6E66AF8D8E45B28AD568D0EFCCAE224455C248347BC97EDBE3CE06FB59BD29C0
F2E6DC51EB90ECBB6F04E5F062C75D6A97DAB3E7A90739C7FC1CA9D45E4BC982
792848143EA5E27FC7537D949BDB89AD817A11B2A0F95CDF58D9EFF2FC69B429
8B1189DDF7224FF139657804719ACA01015F1611A899075A0FE699521E68411A
83D4383BD7D2A30F7361C13DB5BCA50FEFE02266
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFTT1200
%!FontType1-1.0: SFTT1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1200, tctt1200, latt1200, lbtt1200, lctt1200, rxtt1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-202 -360 1341 829}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA11E7AC15F01C3384F89075B25B2605
942C0A2CECA9A7B578D31EAB935BE7B9AB3ADC0F524C109CEDC6C957EC56766C
0FC50BFC16A9442F5E255F3B0A67EE59204698AB70A1A39761E9B16DD89BB0F3
B2DCDF661B96C1C95C934AB9466827D2E4AC2F341B8CC4A08AB82A5D1E25B865
E925740538369BD1FAFD3AF962D17D14899B1BAD67B780B2D06D6D6743CEACB9
A77A234354E7767050119B9EE47F033B8B3AD59BC17B84C3B929265ECEB12176
454594C17B4C8A9BE7CFDB06CAE1B189B7B72FA023F2F671095CA1679D71C627
40DDA7EE2E28EB5EC2F297B019B93073CE0219E736F88F03E11B8F8D61132ABA
E20CB0C148E47FB495C9FC70AFBF6D9260FEA67AC4FF14D9CE253D43CE471E4B
09C61209FCA852453561C54B179D77D8D7B4BEF2852FDE1CF7A3D5DA6081944E
735D7BB3ACECA094F6717571CC15B2FD29D40FE9AD1BCCE3208DB35EF1515BE3
D4F0CD696FE9B889069B62BD57252AFA4E675A9EBCDF695915446FBA1E0DA982
DE636E320753B3FC033138F766D844E965C1B266F165839DDFAE9127316602E2
0B8635508042F84EC62AC29AE1E6CB020009200B52F025E7D7EC7FE441F242EB
DFFD1341C8928EFE881A3D40E9E62FED03BD3F83346AD2B6C5AC99D5F2C775E7
F7067EA1BF99B552EB3D1EF83AFF1B0C1C58650FD2487C2178954BA58D991C4C
7CFAACF1A0E0F4DF7FA73A74C1813C2348D02916B225A6CF9BE1E9E7BF3D8D34
8873F6E51D7F7BF679ACC5B00BB56FE8532B2CD4138A774184F24718DDD67E0A
154F2D35A8053DEEA29458A13E8CEA3DCEC48548BB1CB4FFFC10A3D9F0DB24F1
F9D8A1DA540D8F47290E5A92A5002BEED80BB6931213C81C429004456D932C39
D6EAD9A623D5E1CAB2F1BF8D6EB6EEEA1134788A7679F344E0B88D80B8D78EEF
9EC6AAAB712B7BDD9CBF4684BEC046257CAC1E172C6888AD2B2C705183CC6EF2
A381AA4C08677E2DD20026CC8EF06577BFFDDD05F8D6E5F139055FB696F9BA93
1D2557FEDBCBF776018703D691491B08704C697974946962DDD4272CCDA13608
EFD1AC48808D0DC4DDF57981ADD8B88F023A188049AE0E61EB82E072DA5CC2D9
19ABB7F300C4EA3D625D735132BC55089A05E0F146977B58B669AEBD0AE160A6
453D3FA9B74CFE6F51B35AF9D264B7CFFD26B799B63AF43BEBB437E8E5843DA6
DD248539293103897076A6AA9E0F475C9BE97A2DA06700572785C5DC13939FFC
5263B750443043E98EB63F1631D4372EE9DBD87E624EBEFF3CE8EA56D72B5DB6
526E7D20DB22BE291F9BA0187CF78E246AFA80E783135E19ED39DF5B13CB8E97
F39B43F1B1AA03A9B5A93FF989115A0DBDF30DAD3228C8AF34B1D822F5734039
87B58B525647491E885469725CF356762F0170308DD309BFD81EF1FF564FC8E7
CBA25FB12948BF12F26C82B2DAC99069F162BFBC04C45A491D7AEB0B0E2C7C17
768554BD031B3C6B4DABDCE116723618BBD0D0406457A56AB135635519F76EE1
819C6998A31A9E626093C72EB9CC2F5DA0FE34D426CA23499B246FB327A72991
180F9B57D6819D2452D01F393D464FCEBF55E949291139D7416C049A4A61DF84
FCD8AB75EB70754F96C4AFDD54CFEFF5DDAB968F436BF64E3D45AD017A79638E
2360C202DC07EF8C00D4CD148236B55033A1115289A603AAB1A2DDB6BE67999E
A354882594A8738DA93A519D977E32CCDC0E9CB9AAE0C83797C6F0BB7CDB692A
B5733526BF5E815184A99FF881557200C80A7F4988023BA7950DE737725D8462
C5383B72DBE5829B25FD6950ED83A538251EE11869482C0DA1F26530A4CFA735
6588569124688D7A5C89C60EC5FBE63BEFFEC3ECBC8E13F77EE258154973C91A
06718000AE2831F9B1B8EEF3DF08B8792776E06815C039CAAD1A59C372423B42
6EFCACC561DE7A5FF4FB561FEC56863E893BF9401A2DA9C7659330AC48D9033E
A065C075876B6089B8FB12422B0DF8A4E2478189C79714C09925C4BE3E37C018
3425365B3E0D58649AC22991D32CB08E341A39172EBDC30B3A7A2DC59BD6510D
A3D9123EE74995ABFD9FFA8828C51F1913FF9530F09F82291D173F33CBD3E07F
A1D55F2578919EE799712FCE00B4B05FAB870AD331240D73C246E1376C11214C
B26E1A7E40BAD1BC57B7E5C3D80FD1CDEE64FC69D2AA662E20F4C6AFC1072A1A
22806C5684432DF7E0357C68BA95130DFB445383893ECA20F660AECFC174B5E4
19A57031115F832D6BDAB2A74B7DB07ADDE071D83201C75DFB142D13285E87CC
401FBD6A4CFCD5941E1ADF112E98F0AB2D166F24688329A67197208B143D124A
D0A3F91FE622FD7A989A30A8045CF0544EE7E172BD791BFA4F63C47980173A18
59C74326238AB63A27176E01E666192930CE10CF0679E2734071EC96B546D6D2
235AE11CF380F5908F71C64BF427B4DB733D87CEFE5B01C2BFDEBB08778F0097
DEE9BBE5079A089B53657D08318B70D386CEF706B6DF733A417209BE2E55EAFB
D3CB9016487ECCD3585CE0CD283391C768E5D536FCA1E1704B427217AD08584C
65DAC02096E15D7C3D781959DAB1F20D320C6DD7F480A7C9E7ECC8B3B01B9B88
C659B6930070482597F92C1E61C861F9E8D0EBB50C21D9F224F79B136344171C
48CF7FBD746E9553F419166351984A761286CECBE2A29CC5D822C902542159CD
55630DFA7F0650F94223D4EC9D5F50FD125C519B316B30095F1A12A726EC3F0A
A14FDFDAB007222B745D0B23C18060C4CB1839C7EC7736215CB144B249E1FCF4
A6659DD030C98BD07CD232DCF46AB32DC91F6758FDFD61111A87142D10A85947
25A426D002B3602546EA6208DAFEADE6308DA4954208D32EEA00FCF173033D88
5B728103FF7212B8EF53FD38639989DB792F78B7B6680DEA945FC4E9E1DCB2C2
AA2FD86B6607C97B6CF5355EA327F0CB185D0DDC55D5CE9EDBB49C20EA64AE53
3D0F9017E571E9F50F28674AC2328BA271A63DAD5009559AD249F0E784E17A08
991F068274CB0CFCAC525A242788C2C5D2025950BAC30EFF20CEE269F9BB3662
B4BE39F5EBC58B22D1C12672805142A615238EA4F783BAA3BD325FA762B5C477
083AC47640886D9551F2781CDE7D3E28BEA6D1DE94CCCBB0CDA6BD3339C57059
DC1F13253AAFD66EA16F95FDE80B8D207AE531E1BF18499DF8C812F33AD148A2
69D832ADAC241FB11DA950F2D8AB2A78AF7495280A63EDFBAC9B5BF5782FF485
48E3CB947F083768C7254FC019CBDB6A1BAE5DB0761E36DE6A5D622D0A07E880
1B6124757188E150E9A088340BAA063C6F181583DBD47B132EE384DDB3FF67F4
C95D35358ECF5D496E4A3591CD3DB99D69CFA12BFEDC2932DDBB65530229694A
84795BBAC9E2A61E58B3394A90526295892F8AB22463AD98EFC6A015BB3CDCF5
76A0689E9EA28EEA80B1C3511FC764C7448537E7372AE98879AE1353440528AA
547B5EAF4EBEA0BFA5AAF2221AD60D8B32C2E1D40383668B87AB42D9336C4CF8
18E860F99494554390A3D647BBE259BE4B02E0598B3AB259EEE0DA4ADD0FB146
12B3CC3FDA7A042D7E908C20637E41683FD5C85EAFFE33959A117F176C4A82C6
1AFFBA2DB537E7017F96372E53E83B44690EFD95A6A7536036A002B9839348E9
56BD6DEB67CE14832AE3CD667AB094E0782F3727C158E3B60B2B48F1EC9818FC
8308649152358584CA1858F6CB95856B01E870A8F6E1131905DBFC3E6E44726E
81B17CF9D97688055E856542551DBF3F1AC0969FA9F31F3D3747C30D82FBD4AA
98AA8A48DFC0AC8D23298237B2C6F72A6CE4E6A9D2F5E707CAF0176B4420D6F0
E2E7428A23D0890A30F09A4447F5698DAA02DF953C6EC97CBE8E9A274F2EC32F
C0AFC27CE90EE8C3B53967D740EDF40B557E9B10D0FF0CCEED920E53F232396F
976ACF8DB24571C466AF1F92A481D03361EDF51CFCEC31CB4CE13C26243CA486
208A279875C885CA303EB4FFF4726DAA41EF3CE5D6DEB35FB2C2B85B60A32DFA
7E4D73C5A839F9BBDCA90CBC58D064D17F41683FD5C85EAFFE33959A117F176C
4C64CAF77D9D5F9EB999D8FA38A1802EE174082C81E842C1851B665FE59E91D2
B4E6B3C1EA3EBF4226FE968C3672FFD06208B91B337E04196AC990715EE7F059
D2A80F178A4673A8C48D755A6B2434BCE500F78A26A65ED6801C3D94C7136269
EB3074E0D4D0EDA1E3D0E749563B310C3069E5C568E71583E54E1D4C97E8EEB2
064F509B634A40D2EB3DFC0FB13AD7DD6015882C948093629F5939AB22003D9E
FBDAF03D385EF294FE5110E8E2BEEED4178079C0587DAC3A4A3FC57905335113
9BF189B11FC9BC6593A5DCF37C6ECDF77C6A61013EA71CF8598CAC9106B668A2
DBAB7353F015D116805B15434A019CE1F6BA3E8DBB5EDBFF69B57A6554BD737E
E0C2190BAD524A2FD68F1A2CD474FB47BF2D71700B17E52CCD1DA3CBD13B129F
1A4DC586169605D50147DEB338D9366BC7267832883A0E37286C3251EF07FAC2
6C11F9C8A63947644BF695C4F6455A44D423EC88673A1ACC69E996737C23FC74
0605CCC91AEBEA89F1DEC272862A5536617781BBE5E456FADAA1582071AFD5F1
C57444753F21C2B884B10ED796EB4EA4FED108EC9C500F71738432F8320AA4EF
346E86A74FA8A5BC6F6731F970DFCEFD10D003E90D33727DAE54D2440F343080
BE57AF5E1A194F88BB05FCED2D6D07B7877B352D5C29DDEFAFC5893F5C7C20E6
75BF7899DD76280312AA0240DE26A652FD05E1BBFF6DFD0411727965C758FFD5
12179D1A7E1567C7F4020D71C1703934F2E3C13CA51FB2FDA2B2E47EAF9B93FA
EF148795B0E069466BD97ECC63B57F7C9F11374D2C37E9A6126C4F0E485E973B
AE108CD3F7829D96A6A50B90A2284E4873BF20CC77E7B52315CC8377B2EF7F98
0858066B50B5C0E8F6106A6DCD89B881AA5DD8D1A6B2C20D9B79C37F16FF316F
B5446A9665CE146E9732400EDAD7906328F7CBBF38C5C5B6E580B08F124A6142
E44186F82C0A23BD00720AFCF7D7AD660B63578B3BDD77FCA1F981467DCAE43C
484D000601419CC245028828C20F60B3FA0BB8724DE3FA77DE5FE2F9192C9B83
5D61F2F0AF654A1E6E628243365027DC38E3DD3B4D2964454AEDA4379B7755D9
9576B273DAE727633350F4C67089935B3235ACAFA943788329315BE273E5D347
0866D10060C588B80E800280E232C2C361531AF51C3108AE9FF520CAA600831D
A69A96E79B19EF02C15D0AB273EAE0E4C1613B03B2E36D4637085DB251503444
8653395327ABF26A42EACD991A06CF3642047B54B14FF019F15175E6B614E7E8
D90EDACEC748B7353B5D223DCDA69ABA635AFBAB5970E5FB996BBA9DA31E41B3
28CFFBCD37501D90BD44541694B2DBB0A4E923DBB843CAF36565A743289B5086
F392CDE3A0E93D890C264A6CBE7506F733CE4D6E1D466FA1708DAADA0BF43207
DE7DE70802B98B9C81A16CEE9067288902E4B2BD41B00B39ED96503E74051111
EA5F7A1A4B279907D64CFF454D061035DC55BFC76826BE1AC3AAE071B00D47C1
4F7DB79955E881A6C3EF2FABE1880D03F5B284F82395246F66E33C03CC24D05B
1E1C5A4746CD33CBF9A86CEC90A5A709064A095C37C09CBA9CECF116D943155B
5324D889AB7F011897CDE24DB93D8CADD372D1825A29430DE2049E7D73ECBF08
1EB27E29596A4AA7171F19FFB94E1711DCA3E9524B1697999211B1D974028F13
C5E5088E2275B61B51A1D28706B0A32D8AF3AB7A8D39A0783883A123BB462064
D0B78478BDE1715CDFD850880CE386F3BBE6ECEEB4E1430CCBAD943AA853B830
1259154A9F0C1927595983498663E94AA30411DB14F5613DDA0C4177374D5EFE
C8F31FE0116E502E847F9B9A415C76EE63372242D5516303032CCA7A8098F113
B87A7E6E2FBA6FEEE4CE7FF33F692E3EEBB35C324D0738E5E59AD58058728846
5E9D907DD096E59684AF0DA1CB099A6F89093D8D768A63E820260D5D65001128
69530E0FA6D94A42164FE5D6C797559384A597281788019A7CF6F4DB1D80F66A
13E86B691035DDD6A67DFE03960358E3A0A038FA23FBE79C1C3EE27959C7B5A3
3A846BF3641E4F34A2A35C990AB0C485C8FBCC63BCFE9091F7ABE0C01482F213
40FA5A1647F7F8911041C7CFF1D59BCCD4357C7643F95464397F4194D3FDB1BB
53B8636630F31E90628CF814636D68F5C33302E3DAAAE5494EA99271630B86BF
B0E4A139547489D17D3FD36AA376727F3D33DD13B9FDC1B6B67463B2BE4CB7F4
0C547C49A38970594176C4D1C7E6378525C023EBC75ABE184E2B3EB75F1BC7AC
5790610A4B74812BC536D0293C010507965DDEE968CEA544C8E2A398F99BBC5B
2FDACCEC1D12C63933C2972CF4B290AF5C6883E762DD2B77F041E52417B42639
F592812502A341EC5660888068E3818EEE8F77F7DE354C26F04D9BB0373B108D
4EA3AADE0BCA63E121E6B3035DB6E0A12CF4B2481D906A7B6D40B5C19BF95717
71DC8C76A8F7DB4FCF30C770953922F0110B890971A827254E1B06294C66DCC4
D12B83677F8866473E60C8DEB870A8B4FC6C2623660BE03D01FD06D20682F5EA
2ABBF35708D4232C678388FDAB68A267E547790220D291372C1B022CE8C2E5BA
F75CA04E7D99DB37880CE777F9EBBBC29C261AB684901C5C5A43ED712BF5309D
B300F1C6D81B2BA538782002AEB46B39C1F8941CA9BC0A19E8A3348F9E2975B7
1A79F70AD964D7123B09A01F73328E8572345FA9E6022C7C01FBB26859B0E657
92A4858B70BFADD6913C261A9054DC56953F4E340CA56514E6550245797ECFDB
EEB8A4E9981C52BA70AEF080929BC7064D39ED4445D44EE776821EFBF352F3C9
8E953BFCC85E99E60A6AB1D29314982AA5FF101DFF7DA1946E142A0E9EC74270
EF5D0C8ACE829FC257A72ABADBB16E911B3E602E392D96DAD2CAA2E78EC53B28
48E0AFB5D74BFF42EC331B6CF568C7D18D07413B3936712A6905A1DB10AB1586
18CFB2FC62B16BF9349B85C7DB738806F1146863A5DEDAA952BA4B4EFA5F5F88
A88047521334651DB422E2CF3B4A8E0F2F424CF33C0351FAC0D79F9DB3B46C97
8FC2E7933316B55FAFAB1D578004562F3474B82F37E1BDA01355E5CDD4567569
1D4B53D11486192AC67016F12CE3933E509CB65E92547012807A34F23C681657
96E839915549CECBDF7BDFC6FA4F7B74BEE20163D114689F534857643CC1D55D
22DF7FEF1314E0456B5B54D16ADCDE439E2D50DCBC621F11423001C8612FB393
AC7999BE4A23668FC5F19BCD68839750E4F49F2E536C2A90B81A19CFC180BCD8
40CADEF7D4BF4E4DDCC377E1798DF88646807A47ED6B99C6D964AD22124E69BD
1EB87F4FC16D1DED415E73BBA014EDEFCC0999D759E35BA59FE2DB93F3714A1D
468CCB6A6E64663C76B4E51ACCABDA4F979488DC6218E918453ADF92C0E4EB33
AADC9A30C85FFB9FE20FA7F817E771E3EF006895D575295B935B47869208440D
BC56EF5B5BFAE7EBD8BC0125E3465D4336539F14A74D0933D04B52183462F00A
BE52563BABFD012A0B89374380B9DBDE997DDC1F3D23F5CD60C70C77F886D302
BC98D9C57223FFFE24EB172AD76D8A58665DC05161182C67843EC0E92D44934D
5EE4F6B4E38B374B0AF681F94C358F064AF9DE5A5045523BE338DDC0AB494E74
2E4C249F029FE1662D82E38939CC1D3772CB99AB851675273B4EE7A504DCE39E
D1072EEC047CC23B8362C015FE9A0D6AB575A0172DB724600C77D42B16718508
AFC0B94E1711DCA3E9524A69C652DD4758093E8D0906B278A8099E2B710A54BC
A110E3A914752E4C9645755997FC86C5F3D297158E004EEA31CF85C30F4045B2
CAE6DDF0FF99F6D873B1D7FB781E8E45ADCEAA68AAFC75D4B2CFBD0FB4DE330F
87526670EC81A5E16C84B5354DAF3705C5D2F7C0A48BF0C1044ECA0ABEF3903D
E344528A81A31BDD56BF6D50F2A3C487FBAEBE157D34E4091830E3638E0B6BFC
8969DA9B9E56F7B8C6E56D4EF1D1C9E670014BCD3D095114E0044D29F1946C99
7C95508948DD92C3BE7F0E1AB19A3ADA29F4BA30E671584E33A8F9E13136D702
1D818A876F13387AB0DF4028DE4996C47C175CF9FBBF9DAFF8E43BFFEF6A5B09
3D614D905EA1F2C73A76F5AF80F3A95B9FE864C3012431411F730D1090BAF641
E2469EB036A248DFFBC68DFABE4B34A49B53F8D0D3CC0AB990B444882905689A
779CFCF066EFAE21CBB9CEC865DE13DDBC5C4C0BB1400EA5B2946E5680042413
9D5F107F77AFCE178C59D8C6F885EA2315896715B0D99569A25169F92404F6B1
4D7862CE051CC502677C79FFE8666043259B68E7435597D29E126914572F7F77
A71910A3F20E815DB60490B4081B61A898F69A34023F9EA8DF8BF3A5E3F07DF0
39E95FCB1F03EF632F4D54104FDDAAF375BE56AF47F84313759B9CDF46524CDE
AE55D0B63CD27317F3DE7CB8E28598E5C63FCADEECA7499132190CDCEB505AFB
301E0E382F837F4A4E29E2744B501200A6A00B19EED864F1B747B7199AA7DF85
DC6D404D9BBB1090E9EE6B3979D03BE96089B8106352A47FA3CBBF990B182986
A9353E96FADB7883595FDBB0FB3873C5C5AE70093518AD9000E3CE315A4FC56D
2B7FDBFFCDCD204C6A557A983C753D3B038780542A78C7156878591C85D37B45
201CFD510637DAB73CDFA0B9777BECA40A77C4C7513F8BEFED95F04E265B9B78
40134A7C2B73E88FA8DDC551BB615F14C511C5749483F0EFF5D6069BDB9E8843
39D885C6086899BBC7CE05C5489ECF13E311E51AB6DDBEDED1986EE87417EA1B
F25540F71DFAF05B5F899C63E3C45599A3E1B0FE8490E4C4D4E754761F60DBD9
2556F2111C9A3A6752E21A0F953BEF6C8E2ADD8103447074E8D819AF0770F2B2
400E1809A5FBD84954BDA9C62D85A30A2933D382705234465DC5DE34B0AAE5F8
E8E2625EEEE8D0D57B09EF8D136DBA30037BB388E1EF9F800D5F7DD51556FAE3
AE828500753B2E5302904D0CA4B0A5B42F5B12D4F1E69881A8BB7FF25E58ACD8
3FA76678F34B70C96FFF3783E5DF713167C0289D02C5E07216FF4635422015CC
FCD3BDDF6643B8E43D79E557D0228518CB12684C753D7F090C4C06B1E5580981
5A11F0EFAD3BED6E8C90156BBF29B2A6198980540063E2116EAD89724D8438D4
2A7BC1DF31797AD1277312BBC3799D4D9E12B21A3AEC738EBCC518A6BAB96EE0
F6EAEE5818FB07E86DAB7FA029F067A65A53DAEE4E1D4C97E8EEB2064F509B63
4A40D077608426C4EAB2298AC3AAAB4E1154350F5E260758A2DE86A7E5A86B8B
6249A125B591BAF7EE3B3F16601B068B6055C6764C671B2771A2D276F8A913F0
21D5731F0E3958F6AD99C610D5739BED2629572529A19B083790697E15BF3299
C4A78B86E482EC5ADC4DB1C7D7823C452E23782A35C98A57B5FAB0D6C2B3F30B
97B14ADBAC2318A002948806417FE127260337FD8603FDA805A84FA77AE6048C
A3F935E03DC37B2AEBFCD0C9173F4872FE5217CF628681F2B015C731EDFB4E38
C5B7AD58A64A753F7F42D0CE252B63783EAE57BEE40ADECDC0E36EF8806E036F
09A71C3B0F1B7CDE4084BFEF2D2F1DA1B47979624FF22346597E4B20FB3949E4
4D955A4E5E99C82900E8B591ABF37C75D26D3EEBE1B941FDE49FAE1826CE1209
DD13BB4A5851E34E56037638CFBD070BF388E89B4F551D77D08C3D1A6659AE08
003F416EFE2D87C067A1B0EF8889D27151E5C2AE9D179B251F5657B51B636BE5
3938736CF32569B4B75DB03F430FA400496A8E6697C5929DFF1F981EA8F95D56
E6796555F65674588FF8B3295B029A6C729A95578FE386BBD02546E882638667
081E296DAD1B83C8DBED5C15004029FE78A82ABFCC1B25B958567133639794F4
742BD8EFB6A8D5CDABA0F78067D00111B49F124EC86E998A1B8501DF9DF8297D
51B504D96B00A1F817359EC26FD7590198C78DD2D5EEEFA6DF697ADDA60AD254
989B4CCF836758C3ABE7A86423F31457241DBDA4A6F3EFFA193E205D5C5673E6
27FDF210B381E48DAD284B19F24E21F842FD0F3E1CF7A1CC4339E97EA1684275
778A369CE2ACF7911EF98C554E5BD4656A6FA42F30120983A3E9C558E131B17D
D5EBE155667B73CCC5BBCB47FFFC4D81334D762B22C96026E556E9F319E7737B
8908D28EB2D6CF6BBD0373598EECABABB7230BA71597EF3E3406848E12F2A958
565671E184F87B4EE44DC7545A087B650DE011F5D0EB243F926513AAA929D0CB
0C17E4D0C8675669A84A66320AA711F14EF304528719AF5F022D7A587922C742
4AAE0D1DFE36D3BF2828C1F79C796D49B64E85D301D215AD30EBEF83F727F046
BC007F82B1BF089BD28BE2305961546D06A41377D08C3D1A6659AE08003F416E
FE2A74E0C827A13CAC144B2BDD802F1E7C6586466F1414952348DA7AF58914F5
4313F10D4946CAE923D009D2B8B4F5A62024FE72ED6AFFCD71AB0EC6413ED46F
0C00CEFE0196DFCC10C58605E0FE5D0B4B587B2AA2F5479432F1298F5DB434B7
EC51128087D8117F483921B869BBDE0B47D8F23A620060C069A7EEC0AC031B29
9C36D800606CA851CD33401C47D5B2933ED4021E1A538463468469EB814EF265
6620CEFB1B7A7018E8150707CCAC611A80DB004C9942FE2DEA69DF82376F19CB
FE80AF523BC0CDE2AC6DC0C39FC5C5D234257FD3DC31B3320EDAD8CD3CB427E7
A53BC8A84ABCF74BC6C1DB8BD432AFA4278E8B0EDFC839F37092F56959022581
40BEB12DD6F44FBFE7B79405DEBCC5AB0E3C8B4A54CAA20BAB08D0563A282C8E
CF2E8BA0E0EA6B874908889C79457C0E9814001011611D883DBBF22EB53BC8EC
ABC3DE478E9123B2E1E9A31648A187FBFE762B85987A1FA8C8664F4280543BE5
E71FCE05A6CB83578CBDF57CB889915B31FAAD0D9482CF180EC81A77B6B1B969
1E7AB64BA9866D762351FCDBCBAAB3E2FDC05E64C08215013ED1B81BCCA9B322
3795692C0D0CECEF0F667E5B3AADAA06FAA787276343E1207E4025C3EF8A6999
FAC520ED99A44E683AA3563662C81A3E4A0EB5D0EB0AB86E72B8F384934CF425
32A1A111AE3B7C647628E8EE8C15F9F9F2243C0679345EFD56307165AEDF16E5
1800F8D76645E6A7C09AB7C7CD9922E87F68976EE24349248DBD3A97ECEB0B63
0D6AF9C1EFD4C13A0FC909EEAD380A6DC17B14ACF1D1AE22FBD52C65EEE3000B
A5716D4A41C22A22DAD744C94FDBFDE6619B3AF0FC7222EFDF315F5EC708BBCD
EAAED12881464ED35FD56DEBADA50D4A57392F802611B100238D082A56AC234B
DA14F53765437532126689DC86561EEC79D3CFD3B7FD4F9498685A3567246C5B
A745478E78F7476928752E29137A027937F12B78D4C35D3B49240F3AAE4A356F
9EB696AE4991B5DEEFFFF4D8B5B84C00FA915831646A79B08F3A9EEE29FB9BA2
20CFCE5ADA1E6494FFF9E4D785C265A26053EC38986EFA0A8768FA0ED545BC63
A10007A43635FCE07D0CBB2C5A1C9670B599A172E0551A37C55A715742BE8321
4BF3965AAF2A6314E5AEE5B0DEFA8D0F98E01A61BA30037BB388E1EF9F800D5F
7DD512CDC6C6AB3CE9F6F9DCF81BA8EA8CD328F26E983C2DA43E7AE95410C72D
297AA93C06039C975A1BA11F62CDDDA117C29BA94680C5C21763DD2AF6646AE3
A16A2A438887762466A5DDE1E2D6592BC3C82DFBAFB1E18F04476CEC405D7C9C
730C7B30695ADEFF8FDCF937CCB4665867E93D296CAAB4BF04555558FA1D1A9B
40E7C38B862A82A209E2449ABB79059DCCED73E95A1A1F8DF9E1C1ABD86E33F5
AABDF27F3C60E8AE3B287732A1A85DBEF7B30F957D0CA503843602DCE3AEE5D2
61A07F0B5E3DAF9CE29F5C562071361BA37E5862A9B1F1A1E4230C4A0A0099D5
151AB761168009FD6214A6BA9FE7F42F5F8E36A07C9DC5DF7A40EA5394485C96
847C628FB984A65408202616DE0247AFE827CB32508367A75C9F3926AC3CA722
A0143718DA1D0D570EA3415F4D0A55484431F2E228305185BA2DCF239E0ACEB4
E5E3C17FDFE7953CA2B39077E60BB472F3CAE03ABFD55EA1570F9C2E4BB6CD58
B85E9355B1CA091A485834097D008029BFB0B1255C71D033EB8C462851F5DBF6
C900FE5C74969A1FC9564487FE9FDEB8AD06FE15BF6D0D000FB33CB3E78896B2
62C6E2C058A4E9866A5B274B4DAEF92E3CB7AB82AE31CFD5E8082CD99E8D11A8
FA566BD9B0D7A6FED0C03EFB23D29931CD618D8723910BE458B43A3D1C2B93C3
D921E0347711F423BA87244A45B2817570B35494DF29F90F4451DC84DEFF1E8E
FF09BA0C8AD936B82867F4EF2718F3A219125BB233E8C6BD7DADF7458C3610C2
764980D6F0BEDAE378D9CBBDF56D12BA387D89E59FD35E45FFD0726F4407FFD8
77B04479401D545B7D6252F69D4C361B1A766262D2B6A0FEFA7D454CF0E9CC71
AB834E7BD5B71C4796DB798DD1FCEFA2667B487A9DF5CF6A37ECAC2AB6AA34AE
38B64991ECBE650E4D62DF8EC2E8F74E061C8482B0945241080B8423145A45E6
9345F45E585CAB4068CBE162681FDB01E5FE6537DFA58C52BA94D856254EEF8F
E43D13D2EE679C1C926F1F6CD64BD7597CE2760E17651195B28CC547809595DC
80BCB5C54357C63E1AA9CE8747794446DB0E27CB09136BDDF64DB541F6E27067
0F684AA7171F19FFB94E1711DCA3E9524CC61A73E4C47654CA0E2B98A8D2C6AC
693ABD038D737650D73C050BFABA8C25ECCF8020856CAB1BB06220DD9E53F92C
EEE279D01D078CE6B0F1F95D22838FF7E92558E57DE94323EDE799FBBE64A0BA
54899B8395C98A7AB1F1D576FE5878DBA009D2A3EB8961F57B4DEE6DE41EB59C
DF30087D62B042DAE69404CBCE93C8E10B4DB3F5470C355EDDA0AD094772FC13
A5EF696B1EDCAE38607FB61A9B9E36F1715E32A162F15593442E0EAFAF030715
A6133C7929BF0F08F586A85CEF2D900AD32F6B8CCB41538B3820AF578FFDB84F
4DDBC96AF82B275307AF550F3C88D876EB737B792AAED625AA5CDC3399DDDF93
400564D40960BFD7C12014D47A36371279F6125E01C6BBB5BD3124E283462DDB
1BDC458FA1408A02FBBA60C2A50F61F4C700B4A41C89710D3A8CF93BBE4E16D4
177B3DA9B2BCA8DD0FC40A837E17CA7A7AB68707BBF71BCE5FC594A3F3DD4BFB
CFA2CC9AF2EDC0CF1D646011097F049C6BD28C248A3D562180DC663B6844213A
610437CFC4AA0053E7E459B5181BE721A8FA2BB6F264877D1388B8AB25EA4A35
8EDD58776AC36B43F9BD9AB32BE62AB65C22D1B7875E8F942D62DBB87D936093
0725D9DF7597FC1E5387916423C4F4D60AAD87C60FA997B2DE46F5A17531B522
5FD9F3BBC2355EC8662A6949F5FFE81070E3E61C7C6EA75441A9EAC0E7614FA0
3D0269FE3B9085CC680B1C5F194764EECBA5F62A9C56C5260F3A0DEB415DB6D4
931D431434326F490A56D3638C9DB5F9E791E4FDDA5D757A13EFA20BF5CAD8E5
7397FEAA347814569A857F21811B7495C1BC9F6D39367D027E7948576563AD2F
51D2218D2839314769109C49542D5A1A3CE5CF1EC4CCF1346FEACD0CA9ABEED3
21A07D23CA421AFFACF719E5F6F66F12DA59625C437D48D2FB96852DD5275F40
5DAAC5369650A060D4D90BF47FCA91C71ECBB67F6DD163B1375C8E1DBB9FA3C2
571FCE16D3094F5C09CDD96369E90783AE6AD73D8CDF09FFD552100373D9AE90
3E6613562221FA90085DDE5AEC70A112B5E139EA3EE36FFF649F75309828CB55
0B241619ADDB1B2C0D8A3386EB1E26AAB74A79F1043C14F553F64AA7BC0B39E6
DC98C50D8AC0DB4A38933A4D0B8502A5231916AD49BA595940A15216368E1BF9
25589E933EB6F148BB7C3D61066CCC93A5888D817038A2AF0AC4F0C9F6813968
6D99FBBE987FD109BE5F98B4F5C3A42B12AADAD8B4810AD8308B4B5BF03944AA
5506DE6A2203A95C17F514B2F56EDF8E5E176D10E70B78FE610C8B4510354D2D
A8C65E12F25619EAC25338C96E24D8C4D4D627E14DDF8871910225969815E4D1
277BDABCC2BA12C4D5DE5025877A99C79002023F74C359FC48147760D4136590
0E7934F4B6615D5C324305036850E6F3C6CD88EE5CE7F6CADA6A6B7A9A16459E
72A2133914F71A8DB1F33664325016350DEBB93EFECACF0A6E5E3F80A88F10D8
DAA4932A0D76C7C99D07D16C3B6E86460E5266D5122D00D0E80AF5CBBC32D385
CF99B407DFA89DCC65387E745EEB8E97EA4FD7267BB074A28C09332192E1739E
4712263250F5DC4A4776D464A72D3548C5EA964E3161C99C251F4C61166C1564
EF88E75B7A436E23C5191E92C72F9D7930F7551505E2A3B7FF7C6CE0145B1712
3123018D1A9673A07E8C61CC15333BD0DB5AFB480E981738B97CB89D7A07C604
C930F24EAF362988A7A030D3B7C9D4BB8F738CE8E686759EA8023EBFF172C428
1B98F0FA313458E50D03C2024770A370B6D273CC7A6EDF37EE388D12D96C3925
BEC767398F60296513355280DFDAE3626D69771EA7238BBC09F3067A7D3D1197
C55BAD386A527044A7FC61E6AD28A4F4130405B134B804F296BA6D1482E9C3EA
23299F4157B453EE4D694987D9A8FFE4A1565BCC95717254377F7AEBCF09E563
862A98C64F8BFE14BB3328E14E69A92200FED87DDCDF044BA8612C7C6EB6DEE9
D130B99036D18F591159745BCDC2916ACFE714A4D748395D365C1A48A745A378
E3FE5BF5DD3E6428CE50380D93BB7D813CE8818625D959B8F612794B9E719988
9FD2AEDDA5AE923C5A217A7F9006BCF0EF4601DC0EDDAF6B8114AFB430AB8928
C1428BD35A79B6D613FFBE1251CB1012CA6539175D61CB96F5F93516F66286B4
D8CCD808C3CB9B92D2B267C164C0F7DEB01D457704F17C4A3FE2B2C2A889902B
5F8F122A26C36D7F403ADD5B2D4A4FDBD46280AEB8BF3208E83DED465C3D6893
377BCBC846355E9AE763B98D4A88FC16593B767E89B51F70ED56E189510DB575
69D1C9BCDC77CEAF40F8E60F6D53CAB8AE32659F4A9DD1F2C09E3A49797EC537
E26A7134EF0FC69C09FA3DBD3E34E2DB9A16B8174CE53F032C0C1FEC8AE98513
6855350D4E64494C5E8AFF8B993CC7C4541FF7DE06D3A9EE690057725918DBC5
EAA17E79A2B44E8EB4A00607866794E7E2F9A2B89179CDD618FC7214E15FE42B
8E217DE2197E5C92F3E17CC16BC15E3286B063B5AE98A4AFF556A66F06424463
7BBBBA6594469B724EB8D668310CBA86F8710A00232636239BFCE1A9B1A654CA
FCE39B301A78FCE233A82D9A5EC7BCF000640DE2D967AC483A55C252B4E79EEF
FDB7A028367380CDD611170967810D9657CAA08CC9F7E971ECBCFF662088172B
CF9191A056803F9D26AB7BCE976680A8FB7C501BC6755F68409D392B0317BF21
FA0DCAD82D3D2875B9D691F21F29C1EF9025C084E606AEE4B2295FB1BAB32BB3
D9CB6078A94FE775BEFF8070829B78837360339DB93147018CF40803C9F86F0A
39EC155775B186999BFC46FCBC8286C9DEF03CDB67F176A1B41A38A796B632AA
CD8F946DF99C0AD9E37D3D3C6C4CE00597EA5E291A762326ACFEA9111F02B5E4
A0C6F7FD4CD6F5A57D9379002DA1ED1DEC7852C62341D5A1054A181552CFE023
9C788889DBE2CB07275599971CFB1B21A18EF7B52D3575DA03DEDBC37A4A331B
E1A68FD418F77533B9929DB4D9251B86D622100BC4F14B992441257B03344CCE
EE4A46A2B4EB037C27AA81946B5741ED13ACD68EDB5A267CCD5E540440EA91FA
464F0B799F0EB54768E2BC40F003E922111188E90965EB0E986C6419E69BE238
029462811224C380D27A1D146C2B3C9FB77D578D68FEEBFC51C876E19CC64830
04AE42C27824F20D8DB2AECE415DABE1423804454EA84AABA1C368D56B6C848A
E39AC10333EAB6E57A7F66F9BA099FBB5E2DBD2E16E51AE4943F179C3194C143
07252E15A85730C36769D340683BEE4D623353913435353368D8126F0BC41C45
706E9BBC637266C882C0AAB376A5920B527A69198B56F5AD7ECACCDEC7CEF448
BFAF8AA179E6D77DA6D918EA5074851533544ED0385218DF0AB5250B8DC67219
5A3BA6CDAC437904457D26847769D6DAE7785A1BB20A82B1B1165D5607A35356
8A6B551BEAEEE90F03C877658B6071E12DA7C2C46F39240739CFE9792928C013
A3BF855D3B3144B1FAD607873BDBB88D68D27207F0B2EE7D271919B1677A8B26
505067072AF17CD27027A4A4D09626444D305523D33CA23B1DAE3A117EC4A62D
D9DB8278A0A91673D744B7477B447BEE44FE2FF591A28B7D32FE7662A04973AA
B29C8F0F1AD234E298958C7F0A0C8AC1369D79FB20200C8B457BDDB1DD28FD28
E057544A9698A70B52C5B91B2D3336AFFF4D2FBE2A358B725EB5B231552377E7
6C2D28B291777CB9A35A359215243180A0A35F97881B63AC4E78DAEAFCF51ACF
F391C8278075E21E1E1B5456250938D8BAE2F95E92C9FCD24019F889A7107E9A
B64947987EEB506EE0FAD158FCD53D79FFE77FA69D72BDB393DF89CB03F2FABE
65C0A53B8226C5CE066E09CEBB4DED573B6889852FA67912697883FFFF07B07D
DA99390F48B10EA4E2589426E3D64A2DA02D2FC57C9ED30C0353E93140270896
7EC7F18E90B2B938F7584DBC29C1F87A69E380AA81F51CE27DEF9D4B5AD6241D
50BF2E8505934C96296357D68306DD6017528B3E841737D9A991EB2424EFC6CF
0C3B8B1ED7AC1BC02483B1929B16E1A0789C7D75B404EA61472E0E80FDF8584C
5BA169154A0215E5335915D6F8E8576FBD2CE696B8F7E4C5F39807B5A7FD7151
D80BE818D61E6740F1523F30B480DDDB7CCBDADC93EB66B6D595DB32130C3D89
98016D82A64045A2585FF58D41D1603A9C8DE0907A8737B566F6B661885A88D8
8D620E99E25E47A2997A3C7A7CC3BE69C9A8D403AEF81BD048BE1DBDF7857C0A
6824B38A6327D3BDFA280E28B55B0A0D22B1CA72E9A3FEA9C9E884D0ED35A71F
00119286F9188217A98CDB5B02BBFCC356903E2328C95F102D45352EE410CE05
059505C8D1E6EA980A6ADB5FBD9FEFC0F4782E29288AB0A7F5324AE3CAB3BDDF
12362C5E81BF78DA7B21326D4EDCD2820D4F3891F262C0C5D6FAA838A9A1DB10
B50109FB5C753FDBA678026B3ABF41F9205329A89F8DC697A6ABC3D9D83711F1
F3CC94F47A0305AA8E5986E336373E7235D91846FECC89BFE80B6B407F8011C6
B17CEAFE630A725827AC88EA178A57BF4FA4B6BC65677D3C618177382DFF490C
10660EA39FA4C17F214AA3284D54006810186E788BFC549777397882A8DAA878
26991F69C32929867FECEA06E73290E29A0CE91F5BCEBB88BCB9BD04A2F19085
9F3DE0E1AA08BDA869DC79D8039DA68E8E537444E9A142362F351B459209A1AF
511A1996222BB476F49B350D5D69F94BC4125A4AE2D89D38270D63BE9EDEB465
CCAB604221737025987039EC1DFD970564A65743FB16A24400838472E0DCF3DB
602F93F2AD9F14E00604EA01BABD56EB9F8EDA3D910A44F15C37B7F24200B3C8
CF1A8F2E2F40DF97D528ADB4433F0A884CA1D634F32260C663899A2BED950E71
0EC2C42EE041CCBFF7EB2CAFAED1EB84CB3AD43DDE2AF5081AC9E9F69B87DF1F
864A21D7686F5595F35E6E7FAD20D7CFB95094664AD75A96C14F957F54ED02FD
02BD6E827C913780BDE4943B5FE2D318B5FA4218DE53A7FD5D79C29ADD754456
0967020316F3CAC5EDE3815067BB6238D6CC59FB6CDFE0884BE0C4725FD7AF77
6933E36F80090BB7696E9E68CDE45C32F06E3D9BDA918223757E139FE3B42024
EB475A8E668485BD06F06221C1F8E790E6BCCE840F1F0F037DDD441D3AF1EA2C
87DFD36894AC46E901FA1F6514265668EB5E8C6740E09773393CE620F330012F
989F670CEA6AFF3330B151C5B89DCA550B977D4F9CDEF5B43EE440207E66FC0E
11FD992A5CC2EB92229B74CCE1D5CBF2F19CC6C078D74B6319CED0D207C80CF8
078BE18F47386DA5CB8F74B0F8CC6425C6EF9D300CBAD5A21C3FE284FB598FE5
3D0758166C446E3875D4410C22B6B5399326CCADD059C0A3B8DBFC77BE04A451
6DD5636B8810EF78EAF84CD221BD31F681219626CDE12E18125BCDDBD51D3467
44A7600834D29C721A3FBF5D11FEFDC7759F63C59DF4690A71532F5EA941F3A5
11DF7E5F7B8FBF2427A298EC0E941233CB1264B8D0FC7705BEE690A34CA5B393
25259209D09EAC0C334D92B863343CBEB9BCADC17997831D98B64026A376C03C
179312D4FE74C69835A3191227C8F67755792123C880FC57C62A86A6D21872DD
9AE53236D4DD320B3EDD8FCDF7A81793140C6E7B4CEBF2B60B014CDA35ABE50F
78C5C2A846754BF1D262CFBAA1B77384B090A65DC30E01C8B94804AA8F3DD3F0
BE3D23688023B4B5B33BE92A0310DD612A2F76F3B8CB4A086A650AE3C637AB0F
48DCD3EBC7B86A43142E60EC7C240AA332B334877FDAC455FD33FB4E7F611069
5C665F456B5CDF17C8AF5BEDA5B22C02F0E15DFECF3C00A6DA4CDEA91FB471E5
CFCD69C6D0DE0E6FCB68C68B47951C233591DB5A1712ECDB7A71929F6D03D921
FBEDBE8A51C8E9877DF6087AEF9A8BBDE852A54D295AAFDD45888769EBB7C79C
354606F2E11E669AEED19BD22A6418E41DDBE4EEB35553E0A5CBACAAEE52FD34
19E327A0A05F823EAE349DDBEFFC14D250E72F02CC681A74B7190F94F2B5338F
B39F96546FCD5837A7DD6619E1CE79E47B2CE2BD82AECC3EAA92BF39ACE8A813
469AC5700A9FF4B0E2E51C1CDB163C3E59B2D166349E361C556183403D54493E
29CDBE7BEEE3007F807A9AC2FA24EE9944678A9B463A9F1057E233C21AB044B3
2D92BF326C93EB20026E9AAD05E86ED73AE197738A875E28E73D695F8C6BCF80
6723F69EA0AC1EE47F432E3414DF06BAC7BB3E8BB6645971E03BAAFCCCE6DDA2
84C297FEE1246ED0E1CAD3F9810AABA6921E161C6C6D4FC06E57BCEFF1A6880F
A2BC23D64EF7FEABD61EAD6A40C84B0EA6D999E43A95C8D33946558639A02D4E
F172A8AC6344833CBA343973FBB992201D60D20777BB35D23F0AC987F09AF3C0
558D9CAF55E46F84B2E3960DAB18D604C9E2D8DF5FB2BCC60DF226D68D5B171B
8A6863A70D07C10128868272F8D6706CCC054632A0D171A9B3E3D90FC8F92372
C3B9A5816A869417B483E218E0A33D637F18CE4FBAD1C6533BCF18F1F156C065
0D4A0B81934EC9D0993E654E72028390CE59D54CE09360EEBA4A94800D73007B
4F6060FC2937DD6C290E7E79A1F9E43D35B94FDCDED18D6B7EFC616A620331C5
B7284570E3532C2BFC6159B966786428120B80078E0C04B5F40225165975F75A
2981E131987345E522B942AB1A9C7C0F98456BEBFA2681CA35197032D0CD2EBD
A4AE171095332F840366BDF9D404B50B5985710E8159B28FDF963828796947DB
F8B4082229F8E6CD01C0798A612BE004F79DAD1BCB50F302A6E865F44580845F
0B7C5A9B2A8903B0D202AD890E700B9A05B3EE0D54BF1AFA48CCECC38970464F
63E2AAF90DD9770AE380B7F7E40C88CE49DBBCCB3622BECF010D494FA2042B93
9680912BE359B6C8301A7E20BBD0D266770520FE7063D5BB899D2611D50C6825
685DEA5BCA66304256FC3367109DF267E5724951E3A798A14FD3A1352BA4A931
725098C8238E7DC2D3E9AA577FE9448CCCC17BFFEBB66F78E2C5C90889D2D76A
351D159FCFC18662C3C131118F49ACD7F3A619C84151400530CA6FADB1B1D68B
4C103BA0A25E1FECDF6F8FDC12618628FC020607F2469418459D996A287751DF
CE542875A40DBA27D040EC76529B35179F414842F86F70304CC79C44C9C6E090
4E88FA7397D0227C6CA5DE14AF5B07216098CDA212B49D4C1F91FF7B29CDC48A
75707D4F15C2BD1CB082128480884ADDD838536979D44630F0A147D7033BCC40
63D04D6793ACC1CE2BF499DA82EBC588A756A598AF62C627F3887DA412DDEEC5
8A1C243F368E788B4C0AF672BAD63D84C9DF997D62692AFF160386B16F18F123
C92882539C29065C9CFCDC56BB5B407A91B8F6CEF4D0161D2C57F1C0A48BF0C1
044ECA0ABEF3903DE34F70A1C1AE87AD2494AFCC62C3D0E698D82A23F12394A2
4F81135C9D9063C0F4441BF41348AE03B50588E9EEC46E9AB8FA9A5FA8C4CF43
278CFC4D30DAFFBBE1AF1E95D49EB35114B3BA392999C0EB58677B103477AFDC
C941BE7F0A929D6CD4A522A47AD1FA014948A7E5079C9E4A07D6973812E50702
8DAC4C1C654982DFFC03952D66688C4E040CB0769776434FB4FF6876F3534D7B
9D09E7B95A00D723DC007BAF842D542E3E3F5ABFBD079E1FDEFDD73515FCECDB
A3319416429FFF3E6CD546298A3D5FC2F13915454B89904515C8518D80E84ABE
D150C8CD517FF7F9A9CC9B9E472B094AF4CA2CB3B6A43E7BB9C144AC8B1B4228
292A42226EACA9BA2B54FA8DF415CE6A8EC279E6FF8AA16B990B01F38C473D01
AE1E2A6B0A65479851EE78EBDCA152FFEE0D40A842EFA89E8407B8279A16E578
6CF498EB271C579226C677E959B2B87FE13DC290C53819DBDC2AF5B2718E481D
43B229C9DA33DF5B6BAF13F651982D90A468C040BFFB4C648A9DBDBB18E595C9
1842408C98BA6F9843D2BE6EB189AE2DDE6BC1131EC7C1162573F54297D7D01A
67DE29D455113F44E92CA8A503F3F3055B46D5B3F4C50BA806518738744D88FF
32B32DD4BC9491A7BA5AE34F43A85588862F7FA69A6CB34D2004D0D4F2F93797
E8170CDB9C6C6E21504A2EE22E18604DA767103BB172EDB0F4C743474905B1E7
DFD42DD2FDBCD0F6F84AF40F4585A15133B9E761430E636607C97B6CF5355EA3
27F0CB185D0C244D19533E11832582572DD50F5054879B2A8A98D16F60B7201B
996A7C66E0B2E15549E8BF51983015F064B1FFABD53A40501EFCF517A218623B
F9B17027FF7EA073A1804BC39E70D8F83F46CBD87600E8E775BB3F64E1E3CD70
0CBA1BE41D89E5835B0DD4B1C94682A7D6383A20310542C1039ED2627A494158
8675F1BB1A8E90C81D990013ACCB660AE953BF18BA66A98E49AE58B26B9DE055
CD5C7824C90A26342FDB0DD55434CC98A1E5A3EC3FE2B22593F7EDADA3A7DD72
A8A78762ADE6F2342367F748E68AF9FE2FF2BFFB7B18039707275C7B2DD301B6
47DA58E446AC7E72413CD776F6C050E13EA42095621EC411929384D4E401634B
21EBDB9E10B7F59AF3FDA288BA8A373C385FD72FDE47BAEA0E88E1EDB27CEFC5
07626F0B4DF1BEED52C2676122F9ADD82472F41110CB02E96DCBD88E86368214
79322A29DB6A06A994F506B2B4E1D23D65682DF00E20B2B90D7DF7ADCC2459D2
08A76D478714E973ECF6F6BD95E1578D2C3F5A607ECFA363CE18EBCD7373BD78
9A66AA9FBD54205B94223849181B9434799559BC14EE930B1A098F840FE70F38
8C4022EE41AD47EC1AD16C2F71003B475D1D217337C5B887C6A93C4C643F8904
3DD3A462C0E56996D697FDDAAD58CF3E964303FD8AC31404AE9936B4AAD61952
AC01855B2AEE0C19B7D84109778F73820F99C820BAAB0AACA2517D9AA7AF0B68
2067181F1AD72CDCE722264D2DD16793525C3596E738E107CE073EE8631AD0DF
0246CB9BDA7028F6714C5539935F961B3D0BBDAAE3FEA1F526EB006A10EDE754
128F8A53495FE8AE7BCCF2B40D04DE8B22235CEE364ED3537A0B1C85FF992895
773FE97BC699291604A9DC5F3E09294CB02100C7649003F84951D69DEC5FB487
C6F006800E18BDD964665D1CC1DCFA46411FE23EF60C87260D372A2E73559AD3
162CAD930627F2BC12AADDFD65D93BC9534EAAE7DD06ACAC9DFE1DD7E082785A
49E091187FDBA0A529FEA6AE4DA546AF637E04D9385AC208E2DED6C96B3458E2
210EA1EAAF3D42A56662058C3D006BB070F413E946598D2560E7D057944694E7
CB6098B0BD07C1A091A09441C4113D206195F8F769B5CD39E0E367E87D2BDC36
B47914ACE23BB321DA5F1B16033CFD859749B62FB278BB5FF7B2743DE290E1EE
48D80B4098121942C400E926376B91546CAE9B9B5ED9DD3A3B5A57D429C290EB
8537D9C2B60FE62416D0D3A21CFDC392BC7F0EA888CDE806E50A568A8D9E042B
7E607631CAAB9AD5C6995D1971CD1643AA482D0BC7E27378E9094675061A2EA6
3BA9D203AD2F5948EBFDAD99E84069E3BBB298F42A3387C36544F2E5A63B5D19
876C8E22DA1A78B9176B981848E7A9DC280B3C35B2299195CF3B2D50C784E002
10DCE05E387B12B0C12D985F4E5F9091D0103D07288B281F5BA03DADAE17F5CC
A7BB72495C0993BBB74B23BD1BB0BF1F722FBA42E5DF3D0FAA9AD62E02DF25B9
8EF3FC661275B66BB1841D4929FFA6D67DB288E99AD0A094883D4404F8D76645
E6A7C09AB7C7CD9922E873976C02CC601C2603D0E7712C21917894D4A83B08E9
52CA3ACD77D979AC4CFA726AE585436B446F1CCA55C9BFCF1FD7764794C6D3C3
80077D037EA8DC31714AB4CFAC640FC1A5A7BD2ED05D70CF896ED8F2F4A85CDB
1F20ED55A69F772B2CBCFCA7D66352341887512EAD979388D9C21A9338171688
28B28B09C8085AE23E6F3A0CE3767FB3E937D4307D20E675BF7899DD76280312
AA0240D6ADA9451BA806E6393849101E18BEC7A4791FE91D0EA02193F2C376D1
714720506ADB4B756901872F836797DDB8450C2484D2F3908FC22F6ACEE69164
FAF9754ADF5D3028D52C88237921F661CBB2CE96DCDA097E8D3B9FD5627D1EEA
5EB437399CC26C9FFCBEE2EADA0EE7FB44147531E5A25555EF5E65900B453675
8960585F7DF6027E97E534A48E0386A653BAF8D824F3C05627944F56F81F8750
CAF21BF2BE60E48FB8659DBD71120BD87357C00C3BE72D939F8EF3A1DD23A21C
7F5B75EA0B8DBE54EF20CE1A4F498B53AF9AF619A02E659CA508BFB7697284F9
DD05A61F9C9682AEB720D5FAAB07863F845C5349DEB2777F3BF85A625C94B45E
DA06B91DFD80E7462F9CD9D5731D47994008386AB7352BB55F3C4ED6D9285147
EADAE1553C1569C1C7F1C479252D945DC0F61D07B8772D7CD06A801B73566589
6F2218B4FF39D910EF056A6369EB9952F1EB36CD279B3232C6A3F65E2B097719
633B46BE617201E80DA44A633F7A55E84347B12080E8F012436E60BC5350C4CA
3AF0C9572739C09E49C16A3C63A1A8A2C7539C615307C68B2DC1E6A6FCC1F864
D2CC9700C096345E52A951CC4D09C4042D2B6A8AC1F804400B355B7121D2698A
831879DE9F0C17655E3864EA9EF6ECD96821E7DFBD1F17F74B7BD44630F0A147
D7033BCC4063D04D6975AA857B003046F55FA1585EE041F16B19C5B86B11F1E3
4583E8E102E8622B3B97CE961F8C4BC529B7C62F3F399B6C371950DCD739A2B3
9077E60BB472F3CAE03ABFD553846DF297082A90A2D14B53245AA757A203DD71
E01BDB33F07E16D63DEF4707F6B1083341B6CC9BB157D65DA15E9A5390AD550E
081F8C18CA39161E36F0735DBB56FE1FC27EB1BFDB64B9128DB45727AD637C4D
758BEA565DE2E2CEBA5F31DFA6E584333C38CBBECF8B818692657245795F4D2D
090457D59771E3F6579C8AF3B9312667BB0E61D84F870421A83D0334EC406698
55A59E666DB094B8AC69229638279CEA3FB1118FD1A28BD9D9F6A9AA02E86A0B
D3914F95BD5F6DA805A70C2A073491D7EF589C7E93D34E70B46E973601C5C677
E9E5613064018190825B54817C0B8E2742E42C132FA6E083BDDB9538E91B380A
4D7F21C194F7ED5D26699ECC2F58D41D6180AF94C6F9A6360E0959622E0184EB
3C47F32561DB51BFDC58A24D65FA61218E37C2769B3E663BF5DE8F0CDBD020B1
BEBD7A78ECF3801E5C2DC4766D765D30503EF69B5B490801FD5994B711302F74
89C694F5BDA0B74407B8F4FE841574B0D9BC00419C8FCB23FD1C8CEBED847386
2BD76E964D3E11D272778EAAD2605A34C55ACCDDD98278F22224E0AFC257358A
1A0972590B5990EBE5D709942712B24775804B2470F0647A3C41FD3733ECE2EE
313B7AE70C81C52A1E6D7F3FE6252DF979D74A4371EE98321437608A09A2A672
95F5384641388D5A8FED3CAA1D77C3E254485A06EB118283F7907A829EB9B319
6A552B9646DCC15DE303D52EBEC5FD7A685A8758438C69528D598C4ECC7D2F2B
08D6A70F5876EFD6DE6AA1CF11B216A5C27D6E687003F38EBD8995B586BC4EA5
44036375398FB6279B8947E54F672D8ACC72A4B70370C55BE1E083CF5051A1AF
582FD986BC2D90C571EEB46B217A5BBC9CD072EABAB7E2FBC4EE2A946B6FEE98
6FA6BDB446243B7969962F1238F17035281FF5EDEC9711F4E38BA3B3F1D52392
951B81CC79F4ABDD8F9842E239EC7047023F44E9B84BB557C31F5B77EDF124E0
357E5E66ED4BEAC4C723068439DCE697EB4EE9541A935EAA4240AC015567999D
3C9E66FBA19417F8DCE55956FA296F835C4E7B3DE356FFEC90CFAA907DAB2AA4
15527F3974CEB06CB3264EC6220EE0D13625F114C1FC8D05647561C1D5C7DDBB
A8703722743EA96690917CAB3F934C888584023ABAA86C6977AB0F3BAF8BFF26
4A3C98762EC9AE75AB220FE003DB19F322A363563FA9B6857738CA9C54F44F4C
5F8E12D8B25834F459D0EF18D8272A518D738038679F2F155E0319BB3BD4D3CA
8D2789A86A7F9542918984C20C3A8BDC58B12CEF858CDA9AFBA6B040DC8FEADD
3842227607F8F83B77DBF287036F394019EE90ABA712CCC0EE96C3AF40620DE6
4C662FB033DCA43DFE85D7033FEF71F4FA68D626A9929BF6B8A281A5FC826B1E
9ABC6283F05D24BF9F34237CF2D702CCC2A3B9A71C6832CD50BDD780DDDC5FED
C46D1395E393A8DBD856899AB0902F0F7BCF904D7D14563E6CB5761B9B052F29
5E595003B07C3220C34A0C0551FD1140AC7F4E46BFFDAD1988300EAC3064219D
4269A59CE24CC75327B2E2AFC54D6924451BA9414CB2D09DC7636FF5EA1F8849
3277BCDF7A550C77B855B913BC0041E765311809A098DF97A1E9977F09630EFE
3EDF6EA11EBFD274DDA3FCAE379FBADD0BBE7F753E51F4CB3B7A1EFC36CDCC02
8EF00888FB6B21B364A0BCA57DE8B90414D805A69F07ACAC4E54C5265C7FB36F
3086EC7FB393778700C60738496FB69C1F8EBE330E2DB55246B6C4BEC487CEBE
E93BB42BFA61E160E8657D03A3626D6331B0DF92C5C166ADC6FE819504CF8ABC
BFF9C8D0EC990E870E808D1DFFE83513DB5C23D3AE05BEFA77BF6B4ED5C2B95A
304C2950E90E84C0A3967D8DDA377956565E8EFC404EBBE29E4203D0C3EBBC3C
E5687EC01DA43E6140D8C39C78168BCFE359E8352A42811B6463598D8E0C675D
596C6FD3CA996EE76C9C3243247A5845C846C3691A53B2E30F081A82FE62AE06
FF96C0AEA7FE970E571E16BB219E116A74BC3AD502FBA1C6F5C0E967D383C9FD
BEC590EB6542AD6EC83CC42DC99E06B4BB1C6B76851C31C2E0C92CFF820CBC57
DA30F2D53367B1E6EBD9A7569EC47F205BE6E6C6384F4F0C01CAC17DC73091C4
2F7AC0FC4F6247C64975875527129BAC144B55EBBB7186A3E77D79E47029E40C
4B5B596817F2352F7C79B0675B8FC2A39D0794FAA2BA68EBD199663A3693F899
9E47D2C566D820C3592015458964FD416727119FCD532DE8C160B04369AF90C2
3D93A60D7418D0F1758078BF655B07C7159EC4C6641266B504F4133F43F76253
3F9AE1352681395650C8C00A83A10DAAB8ED7E3C911AFAF0AEB6AE1EE6D08F1E
6042DBCDBD1D8FDC0FB0C59F00214F972BC1D9511B1C96F53B2E8CFF475DD2BE
2AE834F0139932876A8FA7997B1344BBD5BF86326F013011F7709761EDF28AB4
EABF4E9F025EFB9B17F2D3ABC7619539E275C569901E1F10DF7F33A68B06CBDD
BB62B45E6362D91D9B7200D4D6AC1263C34BA800BF14F150A9461882B54AD63C
130BC1DECBA25DA4F87A4833091115D1DD42E3743CDE821E85FC933E648E4F1E
A9F37D1CB4C4300CC2820AAC1DFE9642499640CD858B1A4E9D79D71EED40985A
BD6D0A50131FF37D834FAA5E9049A32B4B69BE872F92B591DE93CAFECCE5DD15
A062C336C693A19F91898A1A9271B3AF379BFD0970F333CCE588705E1F37426A
DE8AC33508E8D176F9855A13CE21A6312D755926E9C6C9A4869AAA1F0D6E8E16
878F50F7F16E01FE3F4296DFF77444F752EA9759D337A84423568334ACAC61FF
21B0378705C512C0158E8E2BB0A7BC894B5D381CF175BF4A02A4E61C59B01A48
908324E78A58C383450F3CF968A871D0A7C53C15C4145C4F68D392DF1D684460
87081B488FBF053E88191707EC3DF25240C7D088091D228A25A1341801F97536
91F4823CF0E3D836A785083278FC7FD658F3153D2EB648C486E7426BE6F20F16
8D4CAB520B2E9299AF0DC995DB65F0E08A5C0793C26287A77C5B0FA1A0E3D460
24840992684E5EE17335B4D687E2F0AB31D4ABE6865733C4064D8B66422A776F
AFA7CACC8EBC0DE06B4A18AA51CBFE905CD48A0BE58FAA15015704F62C3D6584
6B723AEA8176134C53EFBE70D7B1F73E41AE2BF9BBF159090FBA65CE6E9AD08A
7F035020F54EEE1074718AD1FD1859110612CAC388A0C0014BBC6699FC416F12
985097A0915AD56CDE888D393CD254E7B0F0F7F02996F048A31C49000D69197F
2E6FF032704D3F43EE49D70EC8D2447A62FCFF5F6D8AF18CC0FDE314BC8E0DC9
6CE46594CDF0091B2399A929FD28B57508787BD1968C23DB9712C9143242A8F3
E97D7E701ADE487299AC4C0D7FF5DA27B164A6E7891315BBA6225040B8EEA065
E216B421FE7090ECE1ACD4BF4085BFC3FDB6040A19FB38556207D7AD773CCCBE
1A3D050A169C3C1072C81AEEA22780DE5E09DFEA525612A2AB3D9A37849E2C76
35AFCAA2E370B425ADF8DEDC880398C43503E7EBA6019C7D7199994E43ABAEC2
B4B9D92FD5B188C92D7F7756A9B2EB1E06743983DDDDB3E423D286C414E89C31
A0167D93B10C2F904BFA9E01E35C3F5CD2F7470E0CCFCE575F74F8702000AB03
E8C8B32205E51C0598C2FC1B557AAD2B3CF888F09D0F40A4179A61AD8A6BEC55
F4A683ED47A5946B07F3BAAF552856B0E460E8610B1FE94F320F96024C27E8B8
7D320D32ADC1F1499255C3817A3B0F0EA74B1F09DFB9EB86E852D130DEA9026B
F35852399D7840EF51575F902C084796E86705E3EA65645F7213976AEC2AEAC2
A11C2149FCE3D587C9B18A587AB0A93C9A3BDCC009AA0874374C37030024A911
B2A57E36BF69CAF4916281E6CB5D6BF66C89130424C89BD0A034352C6FFEE81E
E1BA33F836FBC41B7B9C53E67DE417DF1A0F587874D9515CB3C0F1B44A1151E2
CBFC130462F5C9F5CDBB941FD28400FACF1F3D544A715ED92A4AE54C9CBC3492
1FD978D547A0EB65921DF62EA1EC90C1DF5531307FA0CB514149BBE797030A3F
AA5ECA86A3BEBF3DDC5FBCFEC730CD7CC3053AE929E7696D31CD8CF3E5AB50C4
B23412A4C11ED768ED5DFBBCC9D3B7A0E3D1DB282862376F6BC9160EE2835617
21334934EE0A11E57F24E19E79E7F6B384E7322E7D4488AB58230E33278D4D34
1522293E51BDF56B73CBB8D9D3BA53873F7E4A94CDC4F12D5106EA512777BA49
E80D332113F62105C8EDA5214D31AE37B75DE2D0CFB8AA39A14DC478AB12D438
34E4F8826E2E93ABBCA913F42E342C601097A421DD9D6F4DC4A4E0C28AD17EFA
99363A7715AB9DF43CCDF5CA46C021D0A13A050BCFB9D581227790409178AE62
833C6F5AB14853F2FF4AE3376D3D64D6510F71C635E10E3F61D8DC3787E0913F
2B9A920ACA5811E2A4C6015FB66A051D8659A891FFCDE271B49B706965E71016
AFE4CD49A71C70404392F92208B7D8DDC394C92CE89FBD64F7A9370D8D6DC7E3
32F9B05D4FC0B4986A7843846E4D909B4BFB600F58C43EEBF6DE56E8E9467647
67F80A74A212A9D81D31B4A97DD3D6B5924FC540A290CDCD58E5516647AB2E2C
C448B46EF7E8EE232B1F2D551B141D9CCFC489CCB688049E79DD7FB440E1FE42
DE63EF782C0D49E5FABD33B78044F1B253CB484E59B5BF520B3744D1220E558A
F4C9729EC1672902C044289F38938FC2E7933316B55FAFAB1D578004557B8509
848C8AF58B7309BD4AB80818F6C1C2E6C9A8FA0A7599C2FD89203E6A0B323E6E
81B1BA9FEE33CA9DDBB6106307D092DCC56A228503C305EE13BDB74B3590EA53
5A4650B52AC7E12E008ABC2405B82BBA3213D2AAAE0E8842D68FEE3DB953B21E
E41BC19C7AD8647A17112CA9ABA7CC4B6859E4D8679F04375B9CFAB70A9ABBD3
EEED56AE70B54FD2F56C93D6EF906DC963E318276DFAA306A06F1707EBA920DB
F3606C19DB0DFE2937634DD0B9B61219994E5D5C034293B2FC8B9FADB88E8402
5FA692134C8749C189E625C7C8BAA7E140BCCDE6A49504D72A245FDFB7ACD825
56A0D4E648240D8FA3CAA3A59B527EBC6AA58F4F89ED1837EC63BA9DBDF93845
46CD1455E98A7696168BFA1AEB3CE417CF1626EF1C0D7D670EF8463D3D9EEE2C
C20E9E8548FA77BF9DFEE2E0E999C601D355E70BEA54A242EFB4E11FCC4D14CB
0A9E0E20274411A44682CD4D222D4CC01A749B8C6B85394A5ED827EEF0B2107D
86241C4B3AF113DF297AE0F532F49A93873CE97AE2F4DB60491597A5E9FFDDEB
A82336E53B00A20CE65889A17D7E6068500894304EEDA172A99BD9F4C71FE298
F179FFC6D76AB3416FB3FC681A7F85371B5A322EE64866E3F4A82788A4CAACFE
BE6D9F4A2ACA549BE5B7E1CC83BEF6255F73DD13B9E797567533E6AE76838892
39262AF07C3EC05104CE94A693DCD7FCA7EA73E1E82E284E3C3FC79640E4231F
44580FD4C9797B38B2D9191C0AEB17B047E96FAEE3EE3CAE110D4389E54995FE
6934DFEC4ACF83B9BB346F4D95CE15FF1B81D98FBD39B3306505EA4FE8687EF9
BBDB66342BCD0E9BD9000FF23382B2D4FD800DDBE73C97A69D051F78756BCE86
59EC531CD0372E051156392E5295F207726537E27C8560295C7DBF4D1EE1A4F7
E280B79C9BEA789884BA7CA4E06E62DF937E37F9117E9D903670DD6F53F4CADF
45B32EB9EA26AE7D89656F80B29C0E857C5A0B25881F7B855EB546DD22F16EEC
7FDDECB37A96994FF40B63FFEA6B7A3E2C930B87451DA8A1DF363920AE7C7EBF
E661E1DC8EDFA151D3333F282E4770738E28170A4C58BFC92A306FD011BD6768
2CA8B8E15F880C10B9FBA427A226E5404B71839F9A6636726E37A06055D65C20
55D563BDF6745315A046BE157308705CE9FDDD209B70104DD5706B6420B4AEF2
400A7411F1D9BF7699B1914D3A5488ED740BB8937D8773AD94B834074C22418B
420C8E97830C2C726A5298B05A57E2F762AC3DD19D367BC0ABB2D3658A1117CD
41937A0DAB171159950356877A42D5AEE9022DB16C6B310FBFE30A8E6202CF33
0146F527C20CD441B5A179CBBC900DEB535A10B6E3F945620EEAECEE9D362947
5DDF9CF1A646DAF4C24B7A15AC09A9DC0E3A328E1DCA16082699BCAC9CC36C88
585D746C0BD2F8664253B09D5549A47321A7479CE7299AE26141465DCB45D1E6
A996DED910B188D69C01881047466A036F14521F2F98C9FF245A9D5AE4A04B52
9CC5FF14D48BB5C8203FCC1E530623D16885A589F40824C0A0C3C9145BAD49EA
FE4E62F5A85DCEDAD27D565C26E2BA5409749BA37106D82ACB05ADBA7E50EBD7
5A24F9B1D835A7CC092AD9EA3F281849135FAB1F0EEF97C704C1DB36EF69F05D
BB14F32F1C3D39BA8D1243BF04609DD8D0D291D409BD639F1638F93051E9BB22
067A181BF14A363737337201932071393EDE14C441DDDDD78C926929B7004211
3C9B602A298AD642FAE6D06D2C9690AAAEEE584117FC828B3A0231E8C7819C16
F9818B9EF5C5033D4DD698D32036155553AAB657D60E2C36D1BC7ECAF60CB488
B284E37710A9A1AB429277B77BF572AD2ADFEE300FB82F765DCFB91E4FDCA39F
0C1E8DA54A7E6371EADDEB86747C9A892CB7754AD38DD3F7E980DEEFAA42C4A5
614E062877D5AA778BEABE5E0B22DDD75102D7BEB2D677E1C13B4E11BB7DB441
BBC9CEDC20F9662228D059906021FE90412F75F269B6B1980E98C364E3169C37
AA8E80DE40EBDC6D0CEE90868160BFE9CB455AF07A0582998EBABC0D7585A9E6
00941A03315D61B0C4A367B561339AE1EB189919E8C5336B0BD3E3B7C2081551
61B5EEA775E27E054821F0CF01D3A2B352DF1DDC4417F8B7C2226896D515C595
A962D99275B831A6B9328824AA73472EE37D9686A1CB8B3C6A727DBAD33B3154
FC69C7EB84E9764345EB435B98FB767CF32EB6BCD19DBBE5372C3E6A9854A7FA
E49775A17C36BE4DBD3DE66FD7F2B96ACFCB0D7B07C6765B85F87A6A97405BCB
3A9D871C89A59B4A0299620DB95151759ABAE4617B9DCF3DAD70166CBDE616AB
868D073545841862E93580DE45B4119BDD6B39E62BBA9152034293B2FC8B9FAD
B88E84025FA69210223A670D092B112F0E51F4D6A035B7F49D2852D5C155FF78
D7982EAB0BA65C597DD3DFF6C36240DA7694AED69F8621C034DAD9C196626E36
511CC98469DFD4ED362706DC46F7FABE779A64448022D5EB7A5527A212C90AF6
2BD1C5BA78FA92D59BC869EE885E16DA2E1FDB137A23492148D5B2489793DB9E
AD05AA870CF8F3DDC21F4C467F7FB83486FAB7E75099FDBF501D0744C8D8A150
44FD12CCB27B5D11133352E5E425B6F416A191DDBA8D9CFA81E0551B0A52BFD3
EC16DA2056D327DA01637CEEE4F21C7B6155224B10366A907C2216EE842B1C25
AE025015D3D52FCF54B6350F26774B50E0D241489BF4B30E1443F8A0E4538B03
CF18809AF4E710A0253444804882A2CF152B69493C7707A8415CDC89DB18B357
D13B421C52AD93634C3ABB826EAE9ABF10D117F9D3E0878EAF2A89297C38FF02
24CDDCC3983756CE0D57A8A5758FF30515A1C8919DA7FED3A6081AB505487C64
E0B1B9D76AC28A113EB472EC3A789EC75886DDB7B62582FAB7E034F52B5ABCBE
D93FB9206E729124FF3B4AEF260AA17A213402DB1AC457F58AFE1596883AA307
D2F736B3783FC8F4BA4CFBC3543C5351EB5F7F61CC55FF951AB9E91413D44296
2AF071D9D12ECA7A556A2C937429F5A23B66902C059DB408B7B0B0665A06BA7D
D962F04F67D22D03133D05A38BC20D7B16CC6B64AFB3D7A3533CF897C932FD30
B3D8D0A72C08D89F8EA6BE18E671C95A99D99262228B3892EA226DB15F0CDB6C
87A6D57B73A5748BFED0734B8337921F147E34C38EA95CADE6EFB0A718CB204D
4D372D68B5C88DA6A06BC686F47CCBB4F9E5A39F95A9E825F6038C6CCB0FCD92
FD5D20CE56AB946AF7132B64A2E54A8F84C92FC373B02284F9060C62A1D23327
71A58AEF87B2DC9D6E218112CD8531319810D51ED6693B0E9226FB6FCBEEC037
C666D7BEEDD30C1FC69D730B90E350CC343C314F2D88A53BDB45FD27EE809411
85B62F945375C37F18B46D7857FB335448C16C3980A7606825AAD986183816C2
92A77BC5C73D80091DB0139F0BE09DD41AE69B3F43335101076B32992F2AE8D2
4316193B3FB560154079062B988D00E75B77C314CEF869DCDAFC1180CFF50B9F
925CFAD14FBB263B714C6670D629944ECAE9830922DD657827565132AD5A115E
74EA0F772D5A839EFBF0D6F30B03374C39A57F67E98C98F508B2CE330A58E32C
BC99C029AF55FD9BF57518239B8B73717D05B9B601EC05BCA97C0CEE697CEF3A
BFE2085A1E826372B6708D8A7D84145450F4157B9C4672150D52799EBBA8A0C5
F72031AE9E91635D20E097C9E8E69995F2641388DFC5584C68768515AAD23F9F
4BFAF1EB2FEFE74ACD0326B72F415E4807374BEA92E9C08D03A491B5F736632B
3A087591A7257FB129A2D5C9C98F521E51081BB57470EC88314E3559766BA954
9E1C7181DC2B14AD3EA23F577A517FA20BCE4EE29F99DD680228DDE27A799D84
DAD88126BE83463F589D9927463F8D1244252FEF975BAD05FC470EED870103FF
8CEB675DE99AFAFABE26D02023B65CF45B41439A178478252ADC5397667077E2
1523602A4D7E8053E78E8B704286ED2F00E662F81E9BD6D70DF340B7785848A1
00F2258F0969AB786597A26623127C8D893EC221AEB6BAEBE8D21FA6B7CC80BE
EB22B709E7A109E4B1ECB2174B17F1577A195AB79991E29ECC7BFE2AC345EA2F
B5CC2D955B0FF63060EF3956C9CEA205FAC388ADFEC416DFA92F184A545CBD0B
AD370B4711647F7906279CA2509ADBD556E06E57DFF05522F10A1B9BC8B87928
FF9043F54CAA990BC704A9DA89523015BA3F27DAE46AB1DE83B7A039C8DDD822
C06A0CCD2146946B44C4548944D6B07BC9DAAFB54C5BDB7220B832CF965D5616
4A2E298406880724CE44B92FB4EC9774BA81427867883FFCA0C17C3319883054
CA4CAF4E1338B1B6E521D3C0F30AE2EBBB759866DE9029338086093ABDC8BDF7
C96B9CD5794EA293EE25ECA6F36FC603C80543E417EB970772A9F00F4840A4A5
09E04065395BA6ED1BE2D4C2D1126ADCE31C01794737DC850B2CE901ECA9B16E
589481C7650440DF9928070838CFA61BDB6892EB1137DCE8037D95822740D89B
ED11A48B4B98EE2E8BA29C0D76DA98CE6A58FCE5FCEF5224B4207C10CCC746E4
5301C75C2D47735FFBCBD16C331C48A52AA6394D628A2387595AC72946A14F1C
EFC3FB053DFF4A01C89D405F1C03FDB89BFD309112B635CDBEED32A1DAF1E4E8
0BB8ED4628D4D9CB832624B9A344A4695A89B2D4E50EFAD24D07A81F4B5F0816
100B4AB508FF67A7F91EB7CD7308E391328E38C1C39254149A03DFD9DE1AD3B9
E203C00224823ED3214CF80B77B449A432B597306220770EFAF4DBE2CD4B81B8
888F3D48D5BCE803B0A3044B7984857CD527C361DA5E559D080631CCD7E08627
78C757EE939053821117D92BFC5D8B1F2FA797EA5D017B17B58D17F8CAEEB380
B92BD75CE3D5B31F64C96994F33282B3536F70499C10C50A9701273E6665A538
71DBE253D317AE8085798E968C0F34B11AD84305FBA5266B08F1C16F9A56468A
427C7DE7891C83037966FFF298AB22FF4FE2082C8071A0036B7761760FDDC4D7
9649CE8A5D4CD9A6E7E246F38117A58925E5CC1B202D30D16787917D67DCE6DC
9399A1A0477E7F28B2E45AB8D9061F3AF285D37572110631A1C403D32761DEF8
C70D14AAAA7306C3B19EE249D904A6A11D7BDDB8EA899EA046604C7DE6AA602C
8239EBBC253D949A062F0A05E952581C0367386DC36459F3C7AD69EA6AF5C6EB
1978AE94D5774F9F071955D4C82AC60F30C788E128A77F22E404D22585C73EF5
105EA4D3F7F39B91683A7F1F7E77DDC642459A1A25BB3E6DD1B9EDE0F9B1D074
B8731A37D05F1BF96BCC88099E255285A328A6D7DAB1F8FCF9C2C02EE95F4C8C
2130A0C5D7551E611CABC44C40FE16D617CFA0B898160209D8D64A3975580E94
0FDBB3728F23B5B4E8CA97724489229A18DB2E7F7F574CE40439FF10AF81D1C8
BAD4E835221271EE586AA7E0D2C63EEBF78E79CBA340216733B1C8EEEA92290D
65E39F8BEC367E58B12A035857F8ECE96EEAD5AE926736A44A271DC4CD1213F2
7DF7F2C8648BCFD804C1EEDEDE4ED7550562C2637F876D17AA3EE795F3C4E0CD
510E2620A7454D0177905AE86A2D2D804A1F738F0F3052CFD6BF0DF7D431FF60
9E7AB3FA0B5EAAB19738E85950DAA33E96CBDE8EF2229702ABCEAE4B07F5D699
A14D7EBC7E79E344F0A60C98A85CF7BFAE3426D5DBC5DB75DD1DD72CDBB3E998
E147E5394338C4328F023DA9FD7CE54076353605ED2A0C363E5FD1A4411C557D
B706102557EEA3A1B671994BDAC2230C9FFDF0D4BABF588FEA482A18D05269C1
04BBE9A69F960516D09B1E0B81F3AA45E9AD557BFA3BA74B910857BA0CB1B810
107C4F744A269B4E4ED922F692974A0ECA44FF570F375BCFB67FF4D309EE9BA3
5BA73310E8D160A06FB0395EDD87B1E789ED46F2DB9E82C97E503290C4540395
05BD82F4F52B44392A5A11A65533D8E590ADBB15EEC68BAEFDF1401BBB9C6FD8
4C9CF22DA4F85ECC852EF2FC200553FDD9D35CE9D73D57C6946AEB888D2B0241
96060594BB7DA6F984F08CDE62B1A0D2C403EA643D0D1BAA3386D20BBF50F8C4
B054A2E825BC7D2D924DA494076EE01A4937C32F42AB361A7627E55D4A4B9884
8C27B0E913D38F5524C7A807D83556BAAFAD6560737D654DAE06FE900BA85239
50C49FA0A6DE8073A2DE64DFFBD57FC6C6CFF61F78D42CD6F2C57FA776623912
6979D61302BA87B4BCEB81920A2641E16092ACA7BCEE2B418D7BF1DC18B8F5D6
6F59EEB6F0F52E97DF30F4E12150E7ECCF154BD6604272E6FD16B0EF281B2AB5
2D1751A5BA31935F71931A17E7F43E70D41BC565779033F7D6E7ED7FFE203EE7
581E74C8541A8DA270E382CB88FB3EE5711201EDE02486C2F85AA9237F09CEF7
885CB171E3EA14FE751BE2DC97B9194E62775D600407605CE8D207BB5553E7E4
2009E7D3FAA4D1B7A61582D1D0EB47D810E57AC0BCD29981422D49383AE53461
9296247753ABA6CE063C5757C7150FF9F53BE68DF76046056BCEE6A7B3DDFA12
710C7BF9F61F7522D43FF6B78B02DB79F0691D1B2B716DC43BE46FF878B110C1
5640BEA5312DA6B5A45E7A3DB37E85B4CF5795A84F483629DEAE403E563D9D38
FD26C36AEC77BE01E7C3AE276B69F15A5D9F816E0B87D902FF9B14777F8EF33E
C34767C1CFF0CB9939CF4BD292FB2AC28E7B202C38C4D3FAC73DEE267351D662
91F5000A5C68DE4A293F61030535EFD300794BABC748DA34F04198765A8AEEBA
BBC2C36F7E876AC053C96DAECAF7BD8AE56EE986ED17FE4962946F02E7A5663B
2E4806DE062E20A99A6B8134D93995FE3FE7355F9467238D538812DBE1EBB1AB
40730E15A26E8975476223D03818C13D0168DC0B605AAEB3712A8DB6B55F202F
B9E982B14FD7E8960A92AF6247ACBD1964EF9DC0BE3B9BF707BE4B76D33C1C01
A2296DF0063AC2C9F7E381CE1F9670B4B1E0DBD278C544E24A9466BB32929B57
CA3B0623252B86C74E000ABDD0425A174139EE8534862CC0E2563C5AE5C11822
A7B62AEB78D9C6152BEAB95B2DD402961C000B86E7301422879676533FF90012
D631DE1BCC4670CC0C056B45BF82BECC86275DE0A641D39D95D22C5355C44DDF
2DA117AE800006223944507ADE59BED47F2D9E140DA073160351604A32191E03
8DABAD0DB5CE19C49ABEE1EDB5A2A31B34890B7F4875E0A362CC3A41A971B901
447B0F90F1AB1A9FDC895F29FC9BF634DAF0F9D40450CBB6D965947B4490B908
DBE9703BD6C4B9C85A83DFAF51FB497D47FBE9AEC90C7536D9F8932A5B1315AA
C3B18138B3A0988C839EED00BCC3966DB73E69BC47ABB038716B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
% License clarified 17 November 2006; pfb update 19 November 2006.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved. Utopia is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries. Used under license. The Utopia fonts are freely available; see http://tug.org/fonts/utopia.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C59B38A74E29B9E7D4BEF828A51B13E71DF2C
C78DC0518AD29137C8DC053AD6D86747DC82DFD3366CBFCD581044AE5B23B88A
25842ED0050BE19E7F538EDAF1128614873F52B8FE20E16DEF21E3D2FB51713F
DB39D6C3E8B60AC7B4A83F38D6C3283AA890E5C5D4462D0CDA1D49DEB5221D7D
759291FD43C594074033868359A9CB523210CF1A2479FCCC7401AC1BBBA29A0C
F8449C165FECC03856CB08DA710B6DE98A17CA615483CEDBDBD9C2F47D84B562
1745DBAEB9560610DAA89F9D6EE68F8DFD8D0E136CF2B9B44D86E9064DDBA73D
4AD2AECB1F576EE1254970C70643BAACDEE7682FACB396AF64E102AD05E9141A
2A2B04760E9C6C61639B9E43B6D719F2431580556CCDFEF253C0B613B9BCFAD5
ACE01883440C3C61D2BF098A3823E734AAC86926CEEBD235D1F3E05CA0A67A4F
22C2D72A793CE08FC5937B4D7FC5E77105598B3AB259EEE0DA4D7517CF10172A
9CF549FC86FE3C79A1FE96E5ECBD1897E78765DAB8AF93587203554CB8008AB9
1561F7B489D2FA6D444F54CAFFB3F32607B0397165B14A96E463419831E50ED8
52C7FD7AD1C180A15DF66BCBEFF9437D80C0D133CBD3D25CCDEB37EDC5EB7AE3
056796B5DCFA1D8E053EBD8F16D47D7DB5B76D891228F344E7BD6EED033C8096
25340DEA0324A9ACA7AC7A3F8A6AB960365CAA37BAACE5B78B259A06BD7EB2FE
CD07DFD572394B49D184DD233FCDEBB2918B95470DB2B2105085D1A8E08B4917
D4DC3E7ED37B25286FCBB1F8B2FD6A4B950D485F880314EC964BFCE136797BF6
A2592730C9AA45A68D436C41CFAB8C3F360BC188F311A107CC4B9D012D9FB773
CAD49843D26127C572FA90C64CB932323C4D302D38619D46DD42291FE4C18F63
35C9AA3D95BB4CA5D12440DA36BF7F264F9CD0A984184AF757886F3AEA4D5440
B88F8027C7FCD0FFAB183250BA953457E019E1F784C772FC0E92F4903CCF3745
C585115062B065C19B8D8F6C4E8DF0CE9E2D4D10F4DF40E6E7A6C024EA7BFACB
9700745AF3B8FDB294536FD027A1EC162CB45AF8954BCC9519DA3F3907F526A5
FD94C653A8B020A85B7209F2B1DD4F8F7243E2639526CBAA42B7D688E3A2DA62
797474023613535B7BAD9B7D603F14F884E46A9FBE724F18869698207C358C9A
77369E5A7AF7CB0ABE2E10D764440E4EAF0ABE5EBD545CCECC92327FE0080C2F
6E3F39704FD9828C28CEAD9F7D32759409068CE066973DBC2A54AAE89F2AA39E
48F3B09002EDC17DE7F6E2B26AC994783DEC7C9029469ABA16E5E09932ED878C
6ED51132D6BD87E9BD0F7EA14ADAC93671972B4ED1993DBF217EFCCD59E2F40D
F39D0144B18CB1196E9C99626373804024652107DDFB0BCB98240C85D7CFB97E
CCA68CCA7D77BA0144FC0D0E41B6ACFA75D7B248443231030F3D893C54D9BF8F
83F59D1920772BCDC438FD2CF29682F6F8F25BBE96B39E69D3BAD06B36932CDB
D435E5083115F0DC455AD6DD65C61FCACDD36E41D7766B4F2B294D00E3674229
B073613A0197B1EEE2B6580D1B2440A0CA3622559AEDA73AF51F3FF95AFA61C9
2A5202E7D8E0552825D721729FBAEFF1F88A320C8F34A8071801E7B5902A0FAE
734C49EB9D5F60501F3031493ECCCD9A0189F5AE25212A52D33A0E976BB15A5B
D7228B75F11492A9D95F1DF3216CA3A7EBF2A8D43DB93571DB1779E8B8B0754F
C6751E471A9E7B21212CC541906A6B7DCB9E3CB751B4D088DD9713E041A39615
8DA574111E7E1CEB3F73E44CF0C5E200EDE7E334E7376DB5D68759AF4963E1B4
AC6C73D1ADC8B4AFC0E006EF8C0BF6F123ADB1210EF2E920D1855F0C98E9288D
B82ED786ED9CD83DE07CB3B358809BDD54DC1B3C5FA9CF369EFE89D577E6A46C
3D53330C0F7C4D251CE638DEB440266A3ECAF2C418F078CFB241F95B456B0D48
E77CB0C8A936F6F3A1939607A442F1F792C85BEE116FC9A653D05B8E7C8BF797
B704C353ED2F873955CF7BDFA443CD7B472B455694C1E26A5E7BFF6FEED08176
FB098803284BC5525F2588322C8D509C1D1E32FAEB4938995222E14EC36741D1
6FCA29B42F8F4E9778589298010B3EB53178D8A516DC16E67D915592A9190160
DC4508D49C6C0970EAFE9A50211309EEA0620AF2F690DBA7E5C389D35E31A764
201DDD7E184C0129503F6D032605F58E1CE7EBDF87F2300DE6232558724CEB90
7155D7287F7069D4831BBDC00FC5B7B68E9B590BE5BC79D436B408968A0BFE85
88B90D434B06DC47BCCEC2F8B2D96E38343AFE7BAB27B3AF67E0D75E7A7DD24E
9A16C29CBA2C8DB064A6DA1D7E5B4AB3D74F9B3EBE23D76FA264EF7BCC80B134
80F7315AA1044BE897BCE332BABC1F60937E3166A82CDA6224A2584EC77DF35B
95058B49AE06C3F7BFFBFE3B8420408F55814ABCDB16E7EAA4D28DDB3D6B1027
DC1F0F5811D0665C9E31B9FEAE05516870692716C3AEB01EFBBB97B92ECDB303
7334FB7E3243E377068B5B1C2E1D39080C5E634F4EA1F932D90AD2994C79A2AE
0F66CD9BFF6A4CD12A6D5DE92439DE7BB6E99FC19D632083D35418E9E9DAC375
EE2D2E9CD546609AC1D250F7F904BA26767486769BF30BB16F7F70A2DEF1A3AD
8D31D5E06DBFF8FCBED9C3CA3A6CAC4C9A072F258456647C3240A6DEA7957727
B4D519B1F938CD88666EA23E30B3ADC31E86359365736ACF96F6678619040A10
7D9253025C6C7F4A6CC3EE8257A7A35A4B10EA0724F65053B696967DFD9167FE
6FAC2870C32F297A56F42A7F0029684D74D1AA03DFC8ACC88D258FBE46ACA5F8
4D84D0F61F2ACF936CBC48928E37EB374D341F246F25BABA49BA5A9A2831669C
3A8197C02C4AA3548CDD83062887A57378BC5CB9D192FF7B00CE0E38FA9E6A4A
795374AD07575B2A370CB1DBC3E3A1EC55BCDFD0B94B6F228B8887C0564EF5EE
DB2DA03713C13D8CEF3E5DEF603D68C3AAAB4E11543504B82796141175794FDA
A23A5322FE0EF38EA41831B58411E8C67969AFE951EE3664A72D3548C5EA9BB3
5E9052F544143077FE9C899116174EF8B94FD338B61E70AC1C641F740EC5307A
727E3C1682E8E36A70774B8513F427398B9E645173ED3AD972227C72BF48714E
1750F36A89F0400BC84BA06745AB4FB6025468E717610ADB9AE7757B11D941A9
2AC5763F61CF0E5F5BB87923D523CFF84F49FFED241A5FA0E9B46C16B14A018B
8109A42B37BDFF67A182804CD8A7187D26F913AAECD098655543E6B1F15FF93E
60BE555D77BFAF7245D8F075DFD03E73FC22F07641CD8C340AE786B24EFF373C
AF8AE438EB03BDD980BC40D55CA53CCB1757BE375BD283ADD44D779D7EF380FB
FB2699453037732F668965A371DCEEFEE6C4F3DFEC647D2D624D9688F62A0317
6C9925D9BF8DD9312AEF47D801DBC67DA725856958961EB276DDFF5495F23AB9
DC687ACAAA4511588A5FD2A14E8B481CC2256A192BA240D18EFD237CDA518052
5AA731D22BC58D9F29B5C0040209F6EDD77429E598B0FF0C04DFE7B9A29DF26B
7CF9AE67B665A09856B83C5FE942C17700CE95F21C4C2E45885C5CEFC485FA82
6CE410757853E1F92DD54F269A20EDAEE67A643F2BB11415BDC0851356A4FE39
8D4A72CBFD23D541BBBCC0994732285F751DAFEDC3D1F50A7DE0827C15EC5977
EECE5FEECE1E42FEFEDD920776126ECE152B71837BD1FB32F6A8C1095C81DC2C
46E353921778D84D1EBD53164D0D736597A60188229D7325DEB5AFF31D596EB9
6AA4F2DFF49E3A9A257B8244155F5D446F00A14C24DBE03BB7E25B8BF03C3F88
2DF23070BAA7DC6D10F150A9461325F612CF141353E9B1AF632B80C0623EB601
47B9CDC8E8762893BF85EED01AD965F749BCDEDE29FA6BDF7A0FF8FFA2AD100A
7AABBF9CE974837BD1FB32F6A8C1095C81DC2C46E353921778D97C9F161D84A7
67C865E244FB228BBDECA4F73DB77DD86707465B529E10D0CFB268304DC16EF1
A0236186C7C3CC239ECE722F990B9E8FD1467972BB11E9F30822D48D50D7CFA8
EF5AA2548D5A4285662526851E1E8DD9590584AEBBE7AB8209F7982AA5FF101D
FF7E541334FA5D7F868BBFE8B5F5379DBDBCC87A394A0AE5744E72C9D35A94B4
5300705B7859066794A2DA0E279AEFFBC204F6D91A65032FCA67318FABE14467
AA8F5A954DB458F4F905D1B866D26F646167706041D8E268A5DC9DE51D5A23E8
6A87086C7BFA19477F075FC57D16CAB6AD3636197BFA431548EEFDB3FD4C41CC
9F808566A39A5D15229FCDB226EC4130A9304BAEF70A23E38D7FA72E7395EB94
3886548B395913C4322D172F6C59CBC5CA7BC0D111482C5E1607ED163F50EDA7
5ED1EACAD6D59F821BE9EB51B14F2250018126944DC906AEAF297BF68DC85C76
FD0688C05778EA6E4A739C3AD2D7D57FC343BAB5CF6D6F498A8BAFF921815915
64AAAECBFCE6C970F7D4EA4DB170DA0C55A9A6899EC241E65619D94774689E83
E5729A48B8C3E760F5EC52A0D35885633181D694F8A1C563F00FB88D12C5D736
DFD7D8FACE51E835850E61E38DF7FF7989E2108B6FA2E25960467BAFD6F42DEA
265B95068488515614FFDFCA8A7F3C84F15F2BCD227BD254633BBD96D42058A0
82D1A8510B2EF00505D5B780C962D5D7BDE914D848E6052EC5B0312BB90A50CB
416646141CC8BF11D424D2AE0F971E94C01CB172C195AE429D7CC8C0EEF48029
A4AA0CC4A8F933F7D7D5C8EDED379900C5403ED09DE799BEE0095949F22EAB15
91DE9DF8FCF7427B81402079DF37787D29BE0706B3533DCA6D53423B25A641ED
D719D1BFB8391B8AF730878A978AB67A28ACBE1FD39631D1239719766CE44054
E62F752B3F34FA9FEB4DA35641BF3A81102D7B3C5C757A1F145523067A677981
F6E0CAD92C3E6895CB06F8F917B6E71E050E1BF51BF79F280FBD97B476F4064E
0DFFD4AF16BA3FBA00C7B6AF20C4B1604ACBCA219D2B58416123228A79F78905
C3051938A44E32E8E38364F3FCF22375719E962ACC3FECA932EA9D788239D1FD
41768B7158110E3D16054823EF5CCFA212655CF331D1DB6384862E6B822E6985
A0B00D04DE8B29179A3E97A3C2C68747915A3DE1F0E76AD75C1D24FD095BCE88
3EE43DB0D7310579F6F811CAB90CA3298E4FFB6582892DA8E03F79D0601F5C4D
A4DBC221C4F3EE314D0F099748019506EEC3CA1A14F6E14170B75738A5C8191E
DB134EE52F84F17A104AB3FC9AE91979C66ADC45E94ACC731777E1E6AFC2067D
DB0EF9C6DB56FDEF419014ECD34DCFE902E5E667E7971F2B0BF792814E2C9902
ADAE2DEA7108EA896F2F4A2CEA098EF6EAFC11A152F71DC4BAFE49216027B97C
022BE6620E3BE38E9D2C00B939B2698F66822B9245675ADF45AA5D5781375F74
F86A820F6DC0139C36299413DD9556FF41405AB4179BA79363327718877D597E
2C8E789C621BE1AB0FC22936292C2A22C8700D3BE794D87502CD2B94E0024C08
E8819D2F9C446A878C782BA6D48AEE80E17953AAC7FDD2303ACDC95984EB345E
B3D72595DA127541626E069F50985B2267B89730488219EFD5FBA63171D385F2
B6847C5C846C60672CEBF23C4F738EAD247D0D695109B45F460212C72A9FDD04
F9A0948299303CD0D839FC4BB2C6F8131839BAB5F27882399AB90AF028658E67
0543B03FC08294577710E1BF34F090C890687069F2A5BF84E6403C6770C838F6
79EE69B0A13ED2AE02B7CBC4DDA646B5175E5D7FAE81913E97EE2065A7C30E89
58BA3FAD6174B9910A2F9AFBC804CCE6999E7FA92765BC0E01F044C372E70836
D4C5461FEC830E70765BBABD269467D5A842C9B8078D60D76AEFDBE92E6B25D7
C8F689460D57FDC0F4A6562E181A77F5F142B39A0E8CE0F198CF3E41824B1622
CB1BA4BEF78AD52BADF187D6136DC7A27C5A51513DF56A762C1A267CF8E6CFFB
F267AD49B296616734020B63AA4D893D3A47CEDAA55FC6E9B5D5AB6A6510CF16
DA5A893102A1061DC4E75A39EFB4FBA928D5D432173D0E483CAB7EE7C3CDD734
A2F86A5C4110F79E03C8B7EAB6BB88A9B5ADFCA863B389F6021E45E6D60B1DE4
E43D831CD8DB815162B264EDD99AAED47B12F78EDBEE43181ACD10E6F4324CA6
91D16DA8472455910D5FED0DE9FC13F8F0DD64A134B3587975CC29FBB8D71040
ABA21FC0FF4EBBE6E27D270BA7372348A22551B525E31B3424D61F5D9CBC393A
4EB565BC0A760A0DD4BF118B9ADE35B8C6F67760B6C0BD62AE25DE20A046FF00
D80D3B926A3B18FC91F30DD3D20CBD00EFBC0119E6711BA6518933B9E695D418
97EFFB9F6D14FCAAF80E6021E31685BC162E2D3AA859552685785AF2BDCBD49F
4CA39FB2739E3D9C4903ACBCBF0029B8C7B6CF7D2EAABC3FF9A759EFD7B75F94
B5EAEB7988161FC614D69D0A686608E32EB06A575FEC5AD00CF7483ACC401640
5B0C8FBBF17B2355AD4F895436AD8E3499BD1FC5191C98C5ED4272ACC1A79128
841698D39D48EECF0C69036E9DD0E7276A14368F904FF4D13851BFDC58A24D65
F1239D03A4B5B480F71D794844779E0CD9476D3BBCB9EF119619BA7D071857DB
3A61D578D647070FC79D85C09103D1CE9EDBB49747347319770B94233D669F52
0C515ED8770C081E9CE62B783B6845113FFA623E46BBFF5D61914EA70B780C29
88095FF196379AAF8587ADA5608768BCDE5BAAFD767FC8DACC3FF6DDB82D637E
7E5B73E88D2CF947ABE611D0115887CB390BE16054ECEEF1C6ABEDC02676970C
A89DE41EB9F482ECA4DD5024787B2DCCC4E67B407B215410786F5F980817F3C3
78AFF302873228E12C1E1885C8B391FE883E5FCC3BE1E18A03B76911E36E12E0
2EFD4F0BF896E4F3DE0215EFAD17C64AA80F526680049798A7440207EF29694E
652DF5641E7637FB8820BAF6C95FA301B8B07F474AA91EC2B41BED5B24BC6E90
1ADCAE82C5414720A576A7898AEB35A76FA16620BEEF15BC0EC15C4D0EDEF902
401E3B012A81DE2CD195C2D6B668E8516DAEB417ECF3C798196F32A8D285C57F
83EF6400CDE23AD7CC4ABF16396A586610F633944D5267D9FFC192518FAEDACA
7B6CA86155156D9E8D7D4C4F791D4ADD9083A1AB5E70B13F64D24DDE0E0552FC
8C1E9BC73471F984A5CEC2CE2E72049D10010EBD3EB6E69DEF088DA01AE0829B
70903EB29EAC610AE890EBC1CC73351FB72DD33BED3ED3A0003AF55ADA524DCC
8E5F7C56E594279D88BBB9BA6E2C1D6FB5D76B4780C64CE32EEF8EEF424F5FEF
9F2B876A3017B73E9A8A6FB15CBE4DAFA563B6DAE0ED2B2B70E658F0F795DE91
4558A8D614265F4AD5686856C593B4C21386A3A943F346A307DE0569AD5D6C96
30FF61B790D748B3A914551FDA2963E44FFDBDA7433916DCCB713FC32C6C5F19
604543A0DDA1CF86899799B44253787E697D7858C28A24FC4080F0ACF4B35C3C
D35B421ED244C252F890ED4CCC8BF640F4B9A0E7B957545A73A67CE690B47DBE
93933FDEC3E7DAAB920B7ED91382DE1FEEAD50E9459ACF5B3BABFB46644763D5
993BDBF2EDA23A1A5AC0B1A39542D77E2EF04445F7B00E95964DF7ED570C080A
5B57E0EE002F61D2ED782D0ADF296508F88EBE300D242CCF24763190642F7BE6
1A8C3806E5FA7AAC8913396A78D9E770F6B053FD20BBF617830EB1B1F24D144B
25A4C3E8305ECFB83AE2AF651E08C11A91D31B272CD1DF9F8358CAD7246FF880
288BB67D76737657674DDE038A650524E507C5B9CCC4E09D832908751AC9FD86
5AC3208990DE4380A36982BFE8BA3ED97D5646B3ACC5187A02CEE4BB8620C5D5
D86E91B0003D652C33292FA8698C892FF919A8DA0A99C5226E83D3291DB2B343
DE60F5543289C70D9C0881282BA7C1BC0736551D86D25B0ED070497A23620FE7
C0F4CADB3E3F7F8A2010CB3BE42D856FE50D442BEBB8351D75B4E76D5106CCC9
CCE072C0C111D5A6986FAEFA7F265A517E9ADC890406AECDD9AEA0F06D102CFA
4BC7C7E434276096B4B471B92705101386CFE14EC34F612C41F3B2041ED4EEE5
91B1F791311EA7EED6A77ECEE3E0DB13B692BB53565D06787427048E9FB0FB8C
139E2299F132EAA27877F0E94F50AA6F7C534693892B3360A972D9C432D55A53
F944CBBB0E7BABF268B5FFB595AF1F5160354A0CB190633918F5A211FE1CE0B3
C7A89D0C99EDAD36FFC5109B2B38EF8C02CA13E28E0AB1E66069637070A50E6A
B94B406DC87742D132A2873ACDCF3DC1F263E992BC09D1B6E2F91CA42D36D3C1
FE622B18210AAA97E5121BBDDC1877EED1ADAA9536982431A94B2E3BACDCBB24
CA63C88C0A5180B4A7D80DA263BB68E809CF1AC5E9DBC5C59AF4F7970B76BE54
F28B4D5600B6E352C5F070067D9353997418C79B2659110941F5B92882436C69
99E8B15F72C86F3838A25785DD470CD072238A20196EA227B607549D874F9F31
E2C39B9FD34647EA90BC863605A571B9FA9FA7CEFD78C3F28F654B3E010F127E
30C09CDBA85CDB73CFFE6DA2AE7DC914251DBCEF5AA1841E9411C6C884A11AC9
EC5AFA0F3DC58B7725B489F527B328EA8481D061A1454568CE47A14A292AD449
F7F18C13247D13EBB1E1A34E6EACBB0D661BD0C0A846C7C4F1D2DCF66EC3D2BF
A33FDB90CB998C5168CABBE011703AEEFB20520E5BC6922011D16EF83AC6DCFB
6CE581E1A9773A3B92DAA87D6FCB73C2D23183B33116A4E8DFFCD185D3764968
F62975D1D4FF4124014696DB7C2CC896AC35DE8412A2B7392F3A400112EE887B
C39B281542E323A2A3181E906DCA9CD99F8C3ECD3C8E9DBC850A986F92965356
002E1AFAD0E7B4B0B0D8E0F981DD95A370228BDD712E86C30EA9C31D0C49E060
D989B4BBD8190E80B9F77C653046B4552EDA76D4B6E47CB8F2CAE11F3A66BBE5
90BD5C1698AF413D95EA0463B1F6C3E5BADFAB933067E1DB5A9BD41BEAFBCFDD
9C8B01B6B1E19224F72DBE3165BB329462BB742CF9959C4B8C3E34B413BBF07F
E34BDB4035A37CEA1AB3A39FAC9A433147E179224F93FD13D00C2EC67FAEDCE3
92FDD95412A61EC8E25B2DEB51EA2D868B905E535C30415D96FF0A3349812E45
617B839C14BB9D434502EF9F800D5F7DD514A0E2EFEAA2329C92130ECBCFF7F3
D799402124F1A2D20C19C4E02363C58722B4721E8CF323935FEB9123EB83331A
1D69E8BF529E739F656EB774DC6E5778238D0283D1FAF55AAAD361C7E233C09D
2BC4DD75B203A7820B0ACFCBC6B9CEEE17783D3BCD2AB7EF205B52EA8BFD930B
94121630F27C72B0855DF9E73D86729847DF88082996940550034613B2070697
19ECCC2067B9CD255583782E158F5D7850BEE753715DE0C28F61B1F738375524
2F3FC609338BD46CB0DD2148F33DF6F553F64AA7BC0B3EEC860DD2703BBC2F37
CFD0C4C526C2A9082B1AB14BA7FD052B5CD259B75F403B0327A5BCD11F631348
8C0D8B0463546B88A0E3EE99F74006A012B423635C61520F38A3171F19FFB276
424F50CB2AB40AE9F9B354D599D018A9683A3125015202C1C0BD615BDCBF3B58
1215E2C303DA63FD11310CB2B5A40E473C8A13323B0568D415676F375799C825
BD4B97B425EC884CFCACF71C5C9F886A4898AC8A89D3B77210B7F3E7C1A59F0B
6B872185E96C7541F53976C86DF31A11073D6791AF661D381C690AEB1CAD7976
910438B1D1AF3BAC771B229600F53AC189CA30B2C82693DECAB6E5C6C240D3CD
3CD927B2581AA05C3723F3607434F56F6D72AEF5A280CA37D45751E583B59A38
4E6B59D585A48B46296727C05B4968C2EBE4305F1ECE0CF6B8618496025960FC
27B8AFF7A224544A82B12B59E60744440CADCFB041A69B2440FD8BD64FA58D99
1CC251BE93DADCF70BC0C43B5D49E9B16143AEFB89D8B837357093C84A50BAA1
10F90A923EA03B79D3DC9E3A6D7D299E860EBF092F3A33CB35FB7DD6F315033E
0FA4D2A05DE277A2B68EEA3079DEF193801C8CE59ADBE75F942BD1B235F50497
8872D09D4AFBCBB2BF7DE3E8A909519B101F80C302A222FC43E9A3003C3D3E6F
F7A05EAE5B868518675F0227C679EC94C1A22C6C5792165DE23FB4195950B31A
F4398290642B271D3FAE1D5F0AF6972B94C2D9FABB1D268447DB51CDF3AA9012
17BEFB3AA568EFC6BDC84166E26851EFF324730522635B0AC59D34CDB59A512E
9CF8CA1ED2323525054A3840BFAC35487D47B6127BA66FA0E5B4D0C766579DAD
52D68798A629396707A94BB7CAC40F761A6BEFD891834F9F145F78A512A8AF00
C19FAB844F5DC709A9B2FC14E3B60B908C7EA410517B0D218C2C134858D32AF7
4D8A8811907B5BFFBB3FA17F24D862158898AF43B515B79BB7E16868A62B36E8
CFC932AF1F4AF71A1E878FFC3027F94A3CBBDBED95F86B97E1DB343CD6E7FE7B
A8B78BB1318F92C6F89947D155DC23CF2E78D333ECD64FCF30D14EAA9914FF56
F7618F88B96AC051786593FEAC1105B8BE04D971C72267615C89ADAE2FE1FE0C
DC22314EADC85FA3CF7A53BFE50B52E238F91CBF349CF0A323A9360A02C32455
1E44690B056412B5F41BAF1D6771658FA4F44A0E1FACDF21E5EFACFBAECD739C
9C425D3BE62C98DFB04BA23B7876B72A17DD1F106A1DCA833F5CE1EE3D8A6964
5B943EA756A8272346AE2C9BAF043530997B535D2962C509FB9D3F19B22B1B41
1B1492EA72EF98772513EE3CD986609ABE0AC47040324F03FA956368397A69E6
DA7BF32FD8BF469234CC3490D29583AC25DC580792B70AE878B9FD410F86A6D0
0963D2F0B2A939C424449F02B48F1A91DE1783778ADC209880483961FF78D7BA
A8CE7159D4FD258E9C572425EA6C0E7F38B995A95E9D65A133AFD690AEB35531
4E4E0A863F790FE3B488055BD87A59305D6B51FD3EDDA3D9F4C16E56A0303249
04D938E25C02E11621A5A623F81EE19692ED64FA81B043164DD2631967D66356
5DE0A9D3BB807F7AD8F4AD1F956CC3D93A78217AC7B7311C5EB5B3A839FC7767
739B2771CD5CEFB95C8DF0BF5256F4BD5493E80877DDE351E1120136A8124EC4
FF5B5A012DE8E09AC61BC2B7B737ED8F6D3B41CCB2B7DC11D6579DA198B04C8D
766749AFB2D3E936B57AE4428BA4CA637DD786E1166AB96118B053455709F3DD
FC7CE5BAB57010A2CE4ACD1D0A7FFC4E197340E29263F1DFF31F9D04CC443592
085CC2A9FEB595EBDC0FC5661720BD67BC1717040E698C7B0AA6415B9B10E1F3
B1D7AD7734C5BACFC750B9F6EA40982585D83828FEEF8391A04A7D571557032B
0CC94481303CD97CF96E063B16304AFB4241AD576C057CC83BE776D85B11804A
49A4B418E21A21DDD89AD3D959E396C85116A8219F52E22180C6DDF46A64BA12
7569397978A9308FC5D3ECEEA11C6DE0AD92E4D5C90DCD65682F8839CD790FAE
5FAFBEED3337EA19D1EB05243422505A748ACAD8016FBEFD8AB0C2BB86FF896D
BC4114FEDAF9444D935AC9C035E2B50ED8A3A0F4FC1D54DFBE127F50F558A96D
922F7A132ABB51B16CB47AA2D828F2C8562C85694CFBDD8D30D2E088EA3DB1D2
0C0508A0AAFD8B51FE215E8707A4822F3C035D9861B39719394EC4DE35D408FA
CBB79BB9DCDD81DA156B43BFCB043F6B27B4870208D84BE3B073793008C90E16
7EAAF80B560546EF545B39CE7B271C8EDEEB853A8B013892BC881441DB0C2D31
1E7B48EAF24CE73DCA638765C46EB137C564B81631BA1E8FA5B5B93BFB77649D
D78499586340FD4F5DA0E61A9212BDB101700D7A1444DD567248754553943CEF
BCE3B519FFA1FA5C8AF351C91195CE87576C4317246BAD6E8C7A2D804E63DBFD
9635B3C8A59112416DD16C34542ADF361720A73F230F9D7322790941548E284B
1CD29AD839A9F79508C1202566BC146CF1B644EA21FA01A594C1D2BD4E91CCC4
B5D0A21DD2BCDFA88ACE2D4C273F5204CCD208F3A1F90C1F4FF62BD7250B9B25
CD8D0A5B2A7C84A0BB70A6786CD5B1719C4203954565AF3D8379BB7312D34693
372BF2943E596B24E275CE8487D1B573580C41CDB8DF71E63CE9F932160419CE
5F62B6863D659F7B6392466A2279197F001EEFE0D2799DC82675A644E838FC2F
EAB9500301E639723CBF42F8111AA198D433DEB0CF2066EA8FF2FA9E9CDE7A32
70C9EAA5E047570C8E4526265F9F0EC8F36F60358D14954DBB469FF50122AAAC
AC14F6165D82111A62DCB62E4145DB59021EB5205E266D3F7770F580439BBBBC
1BA7DB7ABF711BB0F5A4EBCA4769E378CB011589F0703407DC1F346E09066141
79017903AB33E088083C7289932B9982C8D4C243D76451DCBE91AB6A3E6356F2
27B0493E7015851CA01449D0F3ED648403035D0C5BA42CE200CDCF863FD270AE
F26BC5813EA8EC83822B5AA390519DF59CCD03CD782BA21CC042E623436D217A
B43FE9404671122F21CCAE0FACA78A9D10522552916819AD247B1EC6571E5D27
5CEA5B78ED3A72F801202C4F2D75BDAF86C6E5B20A787BAC1ADF24ACBDA8B7CC
593F2DAAF476B904B885CFC9FBCDE4B5A5C986B1A19F389F426EC69B43165B04
FB0174DDC5C0A0FAB0BE2C23B21EFA106ECFBE72DA1460E935D3652F76630E3A
628412B1724431E965B8B44A0AF729DB91692758F1904C352CC62DF4EEB6EA15
237FD1153A3FF93A7CDBC0CBC3F1CC1744330138C663DF3A7815AF66BBD21F7B
4F4FE272F597A10CF5B536AA8FB4A96EAB940AAF06890B6E45F93BB9E35B25FD
A4A2DA1458804553F64BF243A177ACD0DD1A1FB8137F60CD38518C29C6510C17
348994BD8507ACCA3B8D194A06984252AC8EEB38022FF183875CFD79A570E4B8
B56D357B5D5E180DCF038B80E73ABD2A849F755AC702083521D30092D4A97828
3AC97B23C41BA1E76F891D8981605859490DBA572849EFC7E1008EB51FB177D8
A3BBF959830612817302A42AC48F021F27BA48C9171C5DDE1D4FFDA6D4B4C48A
F95BA5FAC8871E273FBC4394A4A3316B1105894211AE214AD72336975125477D
5BBD0ADD6217426C906997AE34F76B335B55FC69DF58C2A60BFD250CA8B9073F
4097311B9300B6FB468BC5CA2E6923CC446ABBF7E5CAFB77EAC2CA1B29B35E0D
70701A96939F10C0D913FB80CBA5EE7DF6362421D76BA156A2AB2BE0CABF45E8
AE5F5E52E85AD1D728B6E239241B684D92567546D84D325C9827A7B908B4E1CA
C387BD9B0A7D6077C79DDB380CF2EDCA3A6939BCEE9D7F6213F63E087186D562
AF1235D0CF1050277F28212C10BB6BD1163B379A31DF7BC5CB984AF16BFFAB7A
E8C17EEB194728DFE5456087ED66AC064A7BFC38454D70267C521841CFCE63C9
6079C804FF08DC7E533E08A36F4A03D50CA5A10325641249CF50FBDFB32327F7
3CFE40766E4B63544DC159CC7E49AC92AF584EB3B4318228201D1AF15D0E8CEC
C808BC2FFB458E866723A2E12E749E41AD8447FB970C7B5CC3FACF9566B8BBF1
2B569E642B6785826A1DD9AAD432E5B29F7FA814FAB8C67425927C76E8F2D938
751B990B5A84EF2C01F2E807CE8EFC686AD7F46C34CDF5E33B608819693A6A71
FA681AC0618F4CFD725385906F4744AA5190085135DBC055F651B5D3D6665066
BBB0E1916B128B665FD24D78CF472E9DB137BA23D91D990F292770A9A7C80A51
CDE34EED36D13743C70E23AACCF9FE5A8D3780C63F849C70F8B9B466CABD01B8
3A4666BA70DA1CD00A56EA4A699B7F27D21F35C5FB613EFCEB431D52396051F1
D9EA12FF18E898D17C05719A33BB3F187FE0FC818286ACC6083A6886C2EC3BD4
154D8571E96FA60BCBE6F34A950C0FE660F47CF109999E1169BDC4DE16A8ED45
37B53A867351780DB8F417AD2FA5F905A979C64567EF7B13506DA00A79F6F956
D6840166CAC6E9D00CDA084A3B8A845EA72C2A4E674CD8122DDAFDEAE4C44F4D
8A53557DD09806AE856A334C1EE1D9F63DC9BEC95AFF1232AE3A1924C86EDCD6
FFD95B8ABF6F513CC711F3B4BC5A441749FDDFCE4516A7A0E8DF69F5F49696FA
DA72A9507E8D627591BD88B9E1BFF08E26BC99D3FC9B11683F764288C41B5ADA
52013A54B3D56E6B8E8A41A845D46A262D28B489F527AB89322D15C040B2C1C0
FB39B1FBB0C64B0AD10F4D10232A01E210CC200C2F564A4278D998E8998AD28A
D0B30CFE943E51819615487C9215E99A42CD355E1C58CCB51AF1366AA9B4BC8E
8EA5FBC703BEEE0A2C58B29C48A1D21DF0AFBB3DFF9DF7C961DDA50A46167F67
6CC817A031E8D9B90828FAFB716E36CAB9BA03B8C7674F3C9EB9E5F80477BA72
2CDB7D552BD0E8C63183D270A9127806E998C44168BFB382D53490DE108B04DF
A5D66AFB3F3FB929A1673D57A4BAC6C3EFFE04DF3EA00C0D96B17ECD0D5DE4A7
E6A11F2D5A66F72EA44F4813FB14CB06939142FD6ECC5C4C833CE33F8F39D0D4
EF5E3C0F71F34F02BF248300004B77245FF7B1562D1282AB13078F14CED9DB50
828B71437A25601AE1463AAC7CEABD2171BEBE245D9C794D30927EFD7B2B89EF
9FCE7B7A1D174355FA519A6A45362E9A6DE203C6549896F895D4BC4A808B0019
48350F1CCEF5FBA9EB906E16A45E73AFBE9F8A2044A4547D77D3F92B1087FA1C
1B847FF6EAEB221BD0CD5DA18A64C669FB70DE916BC38197118EE4D0DFA336B2
92D9E9AFD7F9B467962B3F3F839DC5D4C3FDCD20151BAAAFF13994FB73B85DD9
017E9FD3745CB595BF12525A0A993B8C80EBA280D9EC559BAF2DCD72F7BC9C3E
F42D65B10113D9C67A9B263ABDD79078F2D6DC33D73032B3F3FFF96791E11B21
204A83884A3B0771E2193E6D40A4E913BA3CDF75ADE05FCE558498D07402CA93
2CB2663E0279015C185581D7ADCACFD7CEFD0579C1E8B9DA214D0DF0C6803BB2
03930B2704582E509F8236B24C031BBD272D7988901FF599B4A53317EFF4DEBD
B332F87FE15CE340FA3D26E08DEAC24BEA0BE3247AAE9973426D9E80A0D2CB56
66DD872AD47F80FB82A6B2A940A8A94B884B5DB921B8A78F3A4BD8046C628298
E37B9465D39BD2B9DC9EA41140D6BB02C9F9F53872F403725C9570834984567F
DCD92EC494830B3A43C693EB42799B75288D10921A28527CEA16C18A3055E67E
C43F8C7E59D19FBB12F30A86DA55F9810851AA0BD0A5F52954C61CFAAD87EDEB
083EC18FA311C46A0DB40AC5533BD74B2FE551AF41EF63FEF3AC5360B6EF66E8
6BC877176C65D8923B1DC51C0446251CDFFBFB5E64AE2B07095373D900C4E0BF
9FD17173F94FB2B07255ACA44301020E306041A7CF20251BE20C7C7C91948A86
70DC1BF6710EC5F2CF740BA65EB4CFFFE2D7BC3467DD4F9963913E13F57082BB
6ACD35FA0E064D914E29947BD909C1A8FE18117F354BE26D1A0598D7473564B8
3A5E6672A54721FB665490A9A3A819CCCC0B49287DA76AE5A9B5EC7B21289DF3
6736FD52BF659B57BFFF07F63F909118E521134911E60DD7E8CEC78322715F2B
75B775C351906D91649EECC8615213C9D8AE37E6D4F67A782E6B641267BE0500
F7DDE814682201105D2DFAFB98237D996B3B1E2B47E15C7F220DF22D412066CA
73272C2667CE1451D199BA29D32B796AACCE3AFCB35484963C216BB3E1A3FA2B
DA5E526C326DDAEB6B2A4CFD90AA4F04109881CEF7733D3B225E260A0E9241C8
9DE24C13C96845B4E07DD51294E614F48ED899865F89E3CC9AB1004A6B4146AF
D7A18EAB03B62D33A91DE6177304E1C23BE70B4FF71EBC3512DC117B0CB879AE
B66010A8825F4C2B307540E2F5B6E8FC3081E6441BC0AF989E5AAA094DA08F5B
1C7D8E719496B8DDE94BF4BAF81A4F95F348B7DE4BDA47D73581B0C88CDC8B10
D19FAB50E41F5D445A8350674B58587FEA45AEB845C8D95B67B873ED05531BA3
814B4947B461B6052363B076030A9F57DC11DDAC851E7DB3054E248EC9ADB14C
C40161A3B56300026D6EDEA2F7FB71A9706588FB3CB9AC060D75B4649D694B37
4EF91A8E10317156CFC11C9B5020899C0E4CA81D8B31D333D3C2A1644D548271
704A13665CC1BD898476D7AC74EC69FEA31D400B01FE29FBA10D4B3CE903BAB1
E423C2D455F850F1D7B5121BDFDC22EFC454CF0B61D13A81474AFB5F291DC570
7C22ED1F2118ACDEE2F2D8353381F47C59373ACDE3A4D6F6C672C9F07907F308
7C928AEB2D66DAE61EBD23302F23A6DD0D06B2C832D8273C8192182B488CA0BA
B3BE6CE7A8C9EDAFAAC3B7AAE9CCC8D77F0A5A2BF89AEE455A3B72AF89B32688
C3F82D9076003E185E2C34C0F170ED3797B1EFC2989652BEE3664A86F41E00DB
FB2E8E4674A757AE7FD7B26093E9E11DE52D38D6C3C65CE3F4CAF65155147E91
DAD63B019708A9AF9D3BDEC6F8B37DFD63E16FDC93DE0D134C95AA9E5B34872A
1577E34DCC38E02E3931A9FF1B9B3A50E56155B764054DAE766E29E7F0788715
512D8785066126F0BC3D0EB7F6E439119E88CB67ACE242E56D0B86270A8DD4A0
F67E2BEDF653ED0EF5C7A9C01B4BDDF6B9ED453F855130C52ED845B4ACD96E21
5D4DA576F128D35F14C7238E19FB828EA1025A5AFB1862A97BE0CA0C53DE75F9
32ACADAF5C6F885B2040A54EA6E74032820D1FE8D5D13ED3F39B520E5E8FA509
948424EC2689D3B12275C584CE6BE718569731F7B377A56CDA356E4FFF99
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (essai.dvi)
@start /Fa 139[51 1[51 2[51 51 51 3[51 1[51 1[51 51[51
49[{}9 99.6264 /CMTT12 rf /Fb 198[40 40 40 40 40 40 40
40 40 40 48[{ TeXBase1Encoding ReEncodeFont }10 76.3802
/Utopia-Regular rf /Fc 190[44 65[{ TeXBase1Encoding ReEncodeFont }1
68.7422 /Utopia-Regular rf /Fd 130[51 1[51 5[51 1[51
51 51 7[51 4[51 1[51 51 4[51 35[51 3[51 2[51 51 48[{
 T1Encoding ReEncodeFont }15 99.6264 /SFTT1200 rf /Fe
22[47 8[48 101[44 1[45 1[46 56 32 40 36 54 56 53 57 85
26 48 1[27 56 48 1[47 55 45 55 48 8[57 3[57 7[52 6[56
10[24 49 49 49 49 49 49 49 49 49 49 42 24 36 2[38 32
32 25 3[49 1[22 30[56 2[{ TeXBase1Encoding ReEncodeFont }49
91.6562 /Utopia-Regular rf /Ff 190[59 65[{
 TeXBase1Encoding ReEncodeFont }1 91.6562 /Utopia-Bold
rf /Fh 167[84 3[82 1[90 101 86 3[77 6[83 10[37 5[74 74
74 74 2[37 6[33 39[{ TeXBase1Encoding ReEncodeFont }14
131.985 /Utopia-Bold rf /Fi 53[66 113[67 1[68 83 66 59
72 1[69 81 78 97 62 75 1[41 85 77 63 66 82 73 1[68 65[{
 TeXBase1Encoding ReEncodeFont }21 105.588 /Utopia-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop gsave 1 TeXcolorgray clippath fill grestore
0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray -126 -481 a
SDict begin H.S end
 -126
-481 a -126 -481 a
SDict begin H.R end
 -126 -481 a -126 -481 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -126 -481
a Black 0 TeXcolorgray Black 0 TeXcolorgray -118 -189
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -118 -189 a -118 -189 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -118 -189 a -118 -189 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -118
-189 a -118 -189 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -118 -189 a -118 -189 a
SDict begin [/Count -0/Dest (section.0.1) cvn/Title (1 Quadrillage petits carreaux)
/OUT pdfmark end
 -118 -189
a -118 -189 a
SDict begin [/Count -0/Dest (section.0.2) cvn/Title (2 T\352tes d'animaux)
/OUT pdfmark end
 -118 -189 a -118 -189 a
SDict begin [/Count -0/Dest (section.0.3) cvn/Title (3 Rapporteurs)
/OUT pdfmark end
 -118 -189 a -118
-189 a
SDict begin [/Count -0/Dest (section.0.4) cvn/Title (4 Touches de calculatrice)
/OUT pdfmark end
 -118 -189 a -118 -189 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -118 -189 a -118 -189
a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -118 -189 a -118 -189 a
SDict begin H.S end
 -118 -189 a -118 -189 a
SDict begin 14.5 H.A end
 -118
-189 a -118 -189 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -118 -189 a 1919 -23 a

 1919 -23 a
1919 -23 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{0.01176 0.42744 0.81569 setrgbcolor}def

 save

 /pgffc{0.01176 0.42744 0.81569 setrgbcolor}def

 239.47311 19.8585 moveto

 -239.47311 19.8585 lineto

 -242.22429 19.8585 -244.4545 17.6283 -244.4545 14.87712 curveto

 -244.4545 -14.87712 lineto

 -244.4545 -17.6283 -242.22429 -19.8585 -239.47311 -19.8585 curveto

 239.47311 -19.8585 lineto

 242.22429 -19.8585 244.4545 -17.6283 244.4545 -14.87712 curveto

 244.4545 14.87712 lineto

 244.4545 17.6283 242.22429 19.8585 239.47311 19.8585 curveto

 closepath

 -244.4545 -19.8585 moveto

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -240.94797 -3.0964 ] concat

 pgfs



 0 setgray
 0 TeXcolorgray 0 TeXcolorgray 1 1 1 TeXcolorrgb
2784 -19 a Fh(E)8 b Fi(S)g(S)g(A)g(I)g(S)31 b Fh(L)3262
-47 y Ff(A)3309 -19 y Fh(T)3378 12 y(E)3451 -19 y(X)8
b(:)34 b Fi(FI)6 b(G)i(U)g(R)g(E)g(S)32 b(A)q(V)8 b(E)g(C)32
b Fh(P)8 b Fi(S)g(T)g(R)g(I)g(C)g(K)f(S)p 0 TeXcolorgray
1919 -23 a


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -118 415 a
SDict begin H.S end
 -118 415 a -118 415 a
SDict begin 17.39995 H.A end
 -118 415
a -118 415 a
SDict begin [/View [/XYZ H.V]/Dest (section.0.1) cvn /DEST pdfmark
end
 -118 415 a -348 587 a

 -348 587 a -348 587
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 15.53859 18.0409 moveto

 5.18063 18.0409 lineto

 2.42944 18.0409 0.19925 15.81068 0.19925 13.05951 curveto

 0.19925 5.18063 lineto

 0.19925 2.42944 2.42944 0.19925 5.18063 0.19925 curveto

 15.53859 0.19925 lineto

 18.28976 0.19925 20.51997 2.42944 20.51997 5.18063 curveto

 20.51997 13.05951 lineto

 20.51997 15.81068 18.28976 18.0409 15.53859 18.0409 curveto

 closepath

 0.19925 0.19925 moveto

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 3.70576 3.75739 ] concat

 pgfs



 0 setgray
 1 TeXcolorgray -348 587 a Fh(1.)p 0 TeXcolorgray -348
587 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 24.425 5.25514 ] concat

 pgfs



 0 setgray
 -344 587 a Fh(Q)e Fi(U)s(A)j(D)g(R)g(I)g(L)f(L)j(A)5
b(G)i(E)30 b(P)6 b(E)i(T)g(I)g(T)f(S)30 b(C)8 b(A)g(R)g(R)g(E)g(A)t(U)f
(X)-348 587 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -118 794 a Fe(La)25 b(macr)o(o)g(suiv)o(ante)f(\(ne)h
(n\351cessitant)f(pas)g(pstr)q(icks)15 b(!\))24 b(dessine)g(un)g(quadr)
q(illage)f(\340)i(petits)e(carr)n(eaux)i(de)f(lon-)-118
939 y(gueur)19 b(\(modi\002able\))g(17)h(cm)h(\(34)f(petits)f(carr)n
(eaux\).)-118 1083 y(E)o(xemple)g(d)n('utilisation)f(:)j
Fd(\\quadribis{10})p 0.5 TeXcolorgray -120 2320 4 1182
v -2 2320 V 116 2320 V 235 2320 V 353 2320 V 471 2320
V 589 2320 V 707 2320 V 825 2320 V 943 2320 V 1061 2320
V 1179 2320 V 1298 2320 V 1416 2320 V 1534 2320 V 1652
2320 V 1770 2320 V 1888 2320 V 2006 2320 V 2124 2320
V 2242 2320 V 2361 2320 V 2479 2320 V 2597 2320 V 2715
2320 V 2833 2320 V 2951 2320 V 3069 2320 V 3187 2320
V 3305 2320 V 3424 2320 V 3542 2320 V 3660 2320 V 3778
2320 V 3896 2320 V 4014 2320 V 4132 2320 V -118 2322
4252 4 v -118 2203 V -118 2085 V -118 1967 V -118 1849
V -118 1731 V -118 1613 V -118 1495 V -118 1376 V -118
1258 V -118 1140 V 0 TeXcolorgray -118 2514 a Fe(La)h(macr)o(o)g(suiv)o
(ante)e(dessine)i(un)f(quadr)q(illage)e(\340)j(petits)e(carr)n(eaux)h
(de)h(dimensions)e(hor)q(iz)o(ontalement)e(#)k(1)f(et)-118
2658 y(ver)q(ticalement)d(#)i(2.)-118 2803 y(E)o(xemple)f(d)n
('utilisation)f(:)j Fd(\\quadribis{8}{4})p 0.5 TeXcolorgray
-120 3331 4 473 v -2 3331 V 116 3331 V 235 3331 V 353
3331 V 471 3331 V 589 3331 V 707 3331 V 825 3331 V -118
3333 945 4 v -118 3214 V -118 3096 V -118 2978 V -118
2860 V 0 TeXcolorgray -118 3462 a
SDict begin H.S end
 -118 3462 a -118 3462
a
SDict begin 17.39995 H.A end
 -118 3462 a -118 3462 a
SDict begin [/View [/XYZ H.V]/Dest (section.0.2) cvn /DEST pdfmark
end
 -118 3462 a -348 3624 a

 -348
3624 a -348 3624 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 15.53859 18.0409 moveto

 5.18063 18.0409 lineto

 2.42944 18.0409 0.19925 15.81068 0.19925 13.05951 curveto

 0.19925 5.18063 lineto

 0.19925 2.42944 2.42944 0.19925 5.18063 0.19925 curveto

 15.53859 0.19925 lineto

 18.28976 0.19925 20.51997 2.42944 20.51997 5.18063 curveto

 20.51997 13.05951 lineto

 20.51997 15.81068 18.28976 18.0409 15.53859 18.0409 curveto

 closepath

 0.19925 0.19925 moveto

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 3.70576 3.75739 ] concat

 pgfs



 0 setgray
 1 TeXcolorgray -348 3624 a Fh(2.)p
0 TeXcolorgray -348 3624 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 24.425 3.40878 ] concat

 pgfs



 0 setgray
 -344 3624 a Fh(T)8 b Fi(\312)g(T)g(E)g(S)33
b(D)8 b Fh(')g Fi(A)g(N)g(I)g(M)g(A)s(U)f(X)-348 3624
y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -118 4817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 136.57104 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 136.57104 11.38092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 136.57104 22.76184 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 136.57104 34.14276 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 136.57104 45.52368 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 56.9046 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 136.57104 68.28552 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 136.57104 79.66644 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 136.57104 91.04736 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 136.57104 102.42828 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 136.57104 113.8092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 136.57104 125.19012 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 136.57104 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 0.0 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 11.38092 0.0 11.38092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 22.76184 0.0 22.76184   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 34.14276 0.0 34.14276   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 45.52368 0.0 45.52368   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 0.0 68.28552   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 79.66644 0.0 79.66644   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 0.0 91.04736   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 102.42828 0.0 102.42828 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 113.8092 0.0 113.8092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 125.19012 0.0 125.19012 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 0.0 136.57104 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 22.76184 2.84523 113.8092
11.38092 125.19012 22.76184 113.8092 34.14276 79.66644 22.76184 45.52368
34.14276 45.52368 79.66644 79.66644 113.8092 125.19012 102.42828 113.8092
91.04736 102.42828 91.04736 68.28552 79.66644 56.9046 45.52368 79.66644
34.14276 113.8092 45.52368 136.57104 34.14276 136.57104 11.38092 113.8092
0.0 11.38092 0.0 0.0 22.76184   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 91.04736 79.66644 91.04736
76.82121 88.20213    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 91.04736 106.69612 91.04736
102.42828 102.42828 102.42828   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial 0 TeXcolorgray
-118 5892 4016 2 v 1196 x Fe(L)-98 5997 y Fc(A)-67 6013
y Fe(T)-25 6035 y(E)20 6013 y(X)3661 b(1/)p 0 TeXcolorgray
3849 6013 a
SDict begin H.S end
 3849 6013 a 0 TeXcolorgray Fe(4)p 0 TeXcolorgray
3898 5951 a
SDict begin H.R end
 3898 5951 a 3898 6013 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (page.4) cvn H.B /ANN pdfmark end
 3898 6013 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop gsave 1 TeXcolorgray clippath fill grestore
0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray -8 -481 a
SDict begin H.S end
 -8
-481 a -8 -481 a
SDict begin H.R end
 -8 -481 a -8 -481 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -8 -481 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -118 945 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 136.57104 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 136.57104 11.38092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 136.57104 22.76184 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 136.57104 34.14276 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 136.57104 45.52368 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 56.9046 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 136.57104 68.28552 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 136.57104 79.66644 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 136.57104 91.04736 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 136.57104 102.42828 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 136.57104 113.8092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 136.57104 125.19012 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 136.57104 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 0.0 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 11.38092 0.0 11.38092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 22.76184 0.0 22.76184   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 34.14276 0.0 34.14276   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 45.52368 0.0 45.52368   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 0.0 68.28552   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 79.66644 0.0 79.66644   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 0.0 91.04736   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 102.42828 0.0 102.42828 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 113.8092 0.0 113.8092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 125.19012 0.0 125.19012 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 0.0 136.57104 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  [ 34.14276 34.14276 34.14276
91.04736 56.9046 113.8092 91.04736 113.8092 102.42828 102.42828 102.42828
79.66644 125.19012 79.66644 125.19012 68.28552 113.8092 56.9046 102.42828
56.9046 91.04736 45.52368 79.66644 45.52368 68.28552 34.14276 68.28552
22.76184 45.52368 22.76184   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 34.14276 68.28552 45.52368
56.9046 56.9046 56.9046 68.28552 45.52368 56.9046 34.14276 45.52368
34.14276 34.14276 45.52368   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 91.04736 91.04736 91.04736
79.66644 79.66644 79.66644   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 125.19012 68.28552 125.19012
79.66644 113.8092 79.66644   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 91.04736 56.9046 56.9046  
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 68.28552 68.28552 68.28552
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 56.9046 91.04736 56.9046
79.66644 68.28552    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 91.04736 79.66644 102.42828
91.04736 102.42828 91.04736 91.04736    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1286 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 136.57104 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 136.57104 11.38092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 136.57104 22.76184 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 136.57104 34.14276 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 136.57104 45.52368 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 56.9046 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 136.57104 68.28552 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 136.57104 79.66644 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 136.57104 91.04736 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 136.57104 102.42828 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 136.57104 113.8092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 136.57104 125.19012 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 136.57104 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 0.0 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 11.38092 0.0 11.38092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 22.76184 0.0 22.76184   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 34.14276 0.0 34.14276   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 45.52368 0.0 45.52368   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 0.0 68.28552   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 79.66644 0.0 79.66644   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 0.0 91.04736   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 102.42828 0.0 102.42828 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 113.8092 0.0 113.8092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 125.19012 0.0 125.19012 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 0.0 136.57104 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 56.9046 45.52368 22.76184
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 102.42828 11.38092 102.42828
0.0 91.04736 0.0 68.28552 11.38092 56.9046 56.9046 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 45.52368 113.8092 45.52368
102.42828 56.9046 113.8092 56.9046 102.42828 68.28552 113.8092 79.66644
113.8092 68.28552 102.42828 91.04736 102.42828 102.42828 91.04736 68.28552
91.04736 68.28552 79.66644 56.9046 91.04736 56.9046 79.66644 34.14276
102.42828   /Lineto /lineto load def 0  setlinejoin false NArray n
2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt {
CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1
def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def
x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha
y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11
sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos
mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known
{ ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.
 1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 56.9046 68.28552 45.52368
68.28552 34.14276 79.66644 22.76184 79.66644 34.14276 68.28552 22.76184
68.28552 11.38092 79.66644 22.76184 91.04736 34.14276 91.04736   /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0  setgray
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 34.14276 56.9046 22.76184
45.52368 22.76184 56.9046   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 45.52368 56.9046 45.52368
45.52368 34.14276 34.14276 34.14276 56.9046   /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 45.52368 56.9046 22.76184
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 91.04736 113.8092 68.28552
125.19012 68.28552 136.57104 56.9046 125.19012 45.52368 113.8092 45.52368
113.8092 34.14276 125.19012 34.14276 125.19012 45.52368 79.66644 45.52368
68.28552 56.9046    /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 125.19012 68.28552 136.57104
68.28552 136.57104 56.9046   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 91.04736 79.66644 91.04736
68.28552 102.42828 68.28552   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 68.28552 79.66644 68.28552
79.66644 79.66644 91.04736 79.66644    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 56.9046 79.66644 56.9046
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 45.52368 91.04736 56.9046
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   113.8092 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   125.19012 56.9046
1.70706   1. .setopacityalpha  SD  end
 
@endspecial 1287 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 136.57104 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 136.57104 11.38092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 136.57104 22.76184 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 136.57104 34.14276 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 136.57104 45.52368 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 56.9046 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 136.57104 68.28552 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 136.57104 79.66644 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 136.57104 91.04736 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 136.57104 102.42828 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 136.57104 113.8092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 136.57104 125.19012 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 136.57104 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 0.0 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 11.38092 0.0 11.38092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 22.76184 0.0 22.76184   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 34.14276 0.0 34.14276   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 45.52368 0.0 45.52368   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 0.0 68.28552   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 79.66644 0.0 79.66644   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 0.0 91.04736   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 102.42828 0.0 102.42828 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 113.8092 0.0 113.8092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 125.19012 0.0 125.19012 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 0.0 136.57104 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 22.76184 22.76184 45.52368
11.38092 56.9046 11.38092 68.28552 22.76184 102.42828 34.14276 79.66644
68.28552 79.66644 102.42828 113.8092 113.8092 113.8092 136.57104 91.04736
113.8092 79.66644 91.04736 79.66644 56.9046 45.52368 45.52368 45.52368
11.38092 11.38092 34.14276 11.38092    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 68.28552 45.52368 56.9046 22.76184
56.9046 34.14276 68.28552    /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 113.8092 91.04736
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 102.42828 113.8092 91.04736
113.8092 79.66644    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   113.8092 102.42828
2.84523   1. .setopacityalpha  SD  end
 
@endspecial 1287 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 136.57104 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 136.57104 11.38092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 136.57104 22.76184 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 136.57104 34.14276 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 136.57104 45.52368 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 56.9046 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 136.57104 68.28552 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 136.57104 79.66644 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 136.57104 91.04736 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 136.57104 102.42828 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 136.57104 113.8092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 136.57104 125.19012 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 136.57104 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 0.0 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 11.38092 0.0 11.38092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 22.76184 0.0 22.76184   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 34.14276 0.0 34.14276   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 45.52368 0.0 45.52368   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 0.0 68.28552   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 79.66644 0.0 79.66644   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 0.0 91.04736   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 102.42828 0.0 102.42828 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 113.8092 0.0 113.8092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 125.19012 0.0 125.19012 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 0.0 136.57104 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 0.0 79.66644 22.76184 113.8092
56.9046 113.8092 79.66644 102.42828 91.04736 102.42828 113.8092 113.8092
125.19012 113.8092 136.57104 91.04736 113.8092 45.52368 113.8092 22.76184
136.57104 22.76184 125.19012 34.14276 113.8092 34.14276 91.04736 22.76184
79.66644 22.76184 56.9046 56.9046 22.76184 56.9046 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 79.66644 102.42828 68.28552
102.42828 56.9046 79.66644 34.14276 79.66644 45.52368 68.28552 56.9046
56.9046 45.52368 56.9046 34.14276 34.14276 56.9046 34.14276 68.28552
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 68.28552 11.38092 68.28552
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 91.04736 68.28552
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 56.9046 91.04736 56.9046
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 56.9046 34.14276 56.9046 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 45.52368 79.66644 45.52368
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 45.52368 45.52368 45.52368
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 102.42828 56.9046 91.04736
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 91.04736 79.66644 102.42828
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 56.9046 68.28552 79.66644
68.28552 68.28552 56.9046   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 45.52368 79.66644 56.9046
91.04736 56.9046 79.66644   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 91.04736 91.04736 79.66644
79.66644 79.66644 91.04736   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 34.14276 102.42828 22.76184
113.8092 22.76184 102.42828 34.14276 91.04736   /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 34.14276 113.8092 22.76184
125.19012 22.76184 116.08534 34.14276 104.70442   /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 113.8092 113.8092 102.42828
102.42828 102.42828 91.04736 113.8092 102.42828   /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 113.8092 116.08534 113.8092
125.19012 102.42828 113.8092 102.42828 104.70442   /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   56.9046 56.9046 2.27614
  1. .setopacityalpha  SD  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   79.66644 56.9046 2.27614
  1. .setopacityalpha  SD  end
 
@endspecial
0 TeXcolorgray -118 5892 4016 2 v 1208 x Fe(L)-98 5997
y Fc(A)-67 6013 y Fe(T)-25 6035 y(E)20 6013 y(X)3661
b(2/)p 0 TeXcolorgray 3849 6013 a
SDict begin H.S end
 3849 6013 a 0 TeXcolorgray
Fe(4)p 0 TeXcolorgray 3898 5951 a
SDict begin H.R end
 3898 5951 a 3898 6013
a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (page.4) cvn H.B /ANN pdfmark end
 3898 6013 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop gsave 1 TeXcolorgray clippath fill grestore
0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray -126 -481 a
SDict begin H.S end

-126 -481 a -126 -481 a
SDict begin H.R end
 -126 -481 a -126 -481 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -126
-481 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -118
945 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 136.57104 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 136.57104 11.38092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 136.57104 22.76184 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 136.57104 34.14276 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 136.57104 45.52368 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 56.9046 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 136.57104 68.28552 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 136.57104 79.66644 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 136.57104 91.04736 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 136.57104 102.42828 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 136.57104 113.8092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 136.57104 125.19012 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 136.57104 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 0.0 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 11.38092 0.0 11.38092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 22.76184 0.0 22.76184   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 34.14276 0.0 34.14276   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 45.52368 0.0 45.52368   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 0.0 68.28552   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 79.66644 0.0 79.66644   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 0.0 91.04736   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 102.42828 0.0 102.42828 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 113.8092 0.0 113.8092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 125.19012 0.0 125.19012 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 0.0 136.57104 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 11.38092 11.38092 11.38092
45.52368 22.76184 34.14276 34.14276 34.14276 45.52368 22.76184 45.52368
11.38092 34.14276 0.0 22.76184 0.0   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 22.76184 68.28552 22.76184
102.42828 11.38092 91.04736 11.38092 56.9046   /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 79.66644 11.38092 79.66644
68.28552 91.04736 56.9046 91.04736 22.76184 102.42828 22.76184 102.42828
91.04736 68.28552 125.19012 79.66644 125.19012 113.8092 91.04736 113.8092
11.38092 102.42828 0.0 91.04736 0.0   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 56.9046 22.76184 68.28552
22.76184 68.28552 11.38092   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 45.52368 68.28552 22.76184
68.28552 34.14276 56.9046   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 34.14276 79.66644 45.52368
79.66644 45.52368 68.28552   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 56.9046 79.66644 68.28552
79.66644 68.28552 68.28552   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 79.66644 102.42828 91.04736
91.04736 91.04736 79.66644 79.66644 91.04736   /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 34.14276 34.14276 45.52368
22.76184 34.14276    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 68.28552 79.66644 56.9046
68.28552 45.52368 56.9046 34.14276 22.76184 34.14276    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 56.9046 34.14276 45.52368
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 22.76184 56.9046 11.38092
56.9046 0.0    /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 68.28552 45.52368 68.28552
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 91.04736 34.14276 91.04736
34.14276 68.28552    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 91.04736 56.9046 91.04736
56.9046 68.28552    /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 56.9046 11.38092 45.52368
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 91.04736 79.66644 68.28552
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 125.19012 45.52368 125.19012
22.76184 102.42828    /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5
2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   22.76184 45.52368
1.70706   1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   45.52368 45.52368
1.70706   1. .setopacityalpha  SD  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   56.9046 45.52368 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   22.76184 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   45.52368 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   56.9046 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial 1286 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 136.57104 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 136.57104 11.38092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 136.57104 22.76184 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 136.57104 34.14276 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 136.57104 45.52368 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 56.9046 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 136.57104 68.28552 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 136.57104 79.66644 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 91.04736 136.57104 91.04736 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 102.42828 136.57104 102.42828 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 136.57104 113.8092 0.0   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 125.19012 136.57104 125.19012 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 136.57104 0.0 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 0.0 0.0 0.0    /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 11.38092 0.0 11.38092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 22.76184 0.0 22.76184   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 34.14276 0.0 34.14276   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 45.52368 0.0 45.52368   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 56.9046 0.0 56.9046    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 68.28552 0.0 68.28552   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 79.66644 0.0 79.66644   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 91.04736 0.0 91.04736   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 102.42828 0.0 102.42828 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 113.8092 0.0 113.8092   
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 125.19012 0.0 125.19012 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 136.57104 136.57104 0.0 136.57104 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 102.42828 0.0 113.8092 22.76184
136.57104 68.28552 136.57104 79.66644 125.19012 56.9046 125.19012 45.52368
113.8092 79.66644 79.66644 136.57104 79.66644 102.42828 45.52368 102.42828
56.9046 91.04736 45.52368 91.04736 56.9046 79.66644 45.52368 56.9046
45.52368 45.52368 34.14276 34.14276 34.14276 34.14276 22.76184 22.76184
34.14276 22.76184 11.38092 11.38092 22.76184 11.38092 34.14276 0.0
22.76184    /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 136.57104 22.76184 102.42828
22.76184 91.04736 11.38092 79.66644    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 11.38092 34.14276 11.38092 45.52368
0.0 34.14276 0.0 56.9046    /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 34.14276 45.52368 34.14276 34.14276
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 68.28552 34.14276 68.28552
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 45.52368 45.52368 56.9046 45.52368
68.28552    /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.8092 56.9046 91.04736 56.9046 
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.9046 79.66644 45.52368 79.66644
45.52368 91.04736 56.9046 91.04736 45.52368 102.42828 34.14276 91.04736
   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 56.9046 91.04736 68.28552
79.66644 56.9046 79.66644   /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 56.9046 136.57104 68.28552
136.57104 79.66644 125.19012 56.9046 125.19012 45.52368 113.8092 34.14276
113.8092   /Lineto /lineto load def 0  setlinejoin false NArray n 2
eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0  setgray
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 136.57104 79.66644 125.19012
68.28552 113.8092 68.28552 113.8092 79.66644   /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   34.14276 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   56.9046 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   68.28552 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   68.28552 68.28552
1.70706   1. .setopacityalpha  SD  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   79.66644 56.9046 1.70706
  1. .setopacityalpha  SD  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   79.66644 68.28552
1.70706   1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   91.04736 68.28552
1.70706   1. .setopacityalpha  SD  end
 
@endspecial -118 2507 a
SDict begin H.S end
 -118
2507 a -118 2507 a
SDict begin 17.39995 H.A end
 -118 2507 a -118 2507 a
SDict begin [/View [/XYZ H.V]/Dest (section.0.3) cvn /DEST pdfmark
end
 -118 2507
a -348 2667 a

 -348 2667 a -348 2667 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 15.53859 18.0409 moveto

 5.18063 18.0409 lineto

 2.42944 18.0409 0.19925 15.81068 0.19925 13.05951 curveto

 0.19925 5.18063 lineto

 0.19925 2.42944 2.42944 0.19925 5.18063 0.19925 curveto

 15.53859 0.19925 lineto

 18.28976 0.19925 20.51997 2.42944 20.51997 5.18063 curveto

 20.51997 13.05951 lineto

 20.51997 15.81068 18.28976 18.0409 15.53859 18.0409 curveto

 closepath

 0.19925 0.19925 moveto

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 3.70576 3.75739 ] concat

 pgfs



 0 setgray
 1 TeXcolorgray
-348 2667 a Fh(3.)p 0 TeXcolorgray -348 2667 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 24.425 3.66699 ] concat

 pgfs



 0 setgray
 -344 2667
a Fh(R)8 b Fi(A)g(P)g(P)g(O)g(R)e(T)h(E)h(U)f(R)g(S)-348
2667 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 768 3610 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r 106.6978 def /c
57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def /angleB 180. 0.0
c mul 2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 0.0 106.6978 -32.00934 -106.6978
-32.00934 -106.6978 0.0    /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r 64.01868 def /c
57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def /angleB 180. 0.0
c mul 2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 64.01868 0.0 10.66977 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r 10.66977 def /c
57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def /angleB 180. 0.0
c mul 2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -10.66977 0.0 -64.01868 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 4.26816 0.0 -4.26816 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 4.26816 0.0 -4.26816    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 0.  tx@Dict begin PtoC end
96.02802 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 2.  tx@Dict begin PtoC end
96.02802 2.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 4.  tx@Dict begin PtoC end
96.02802 4.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 6.  tx@Dict begin PtoC end
96.02802 6.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 8.  tx@Dict begin PtoC end
96.02802 8.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 10.  tx@Dict begin PtoC end
96.02802 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 12.  tx@Dict begin PtoC end
96.02802 12.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 14.  tx@Dict begin PtoC end
96.02802 14.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 16.  tx@Dict begin PtoC end
96.02802 16.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 18.  tx@Dict begin PtoC end
96.02802 18.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 20.  tx@Dict begin PtoC end
96.02802 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 22.  tx@Dict begin PtoC end
96.02802 22.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 24.  tx@Dict begin PtoC end
96.02802 24.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 26.  tx@Dict begin PtoC end
96.02802 26.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 28.  tx@Dict begin PtoC end
96.02802 28.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 30.  tx@Dict begin PtoC end
96.02802 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 32.  tx@Dict begin PtoC end
96.02802 32.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 34.  tx@Dict begin PtoC end
96.02802 34.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 36.  tx@Dict begin PtoC end
96.02802 36.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 38.  tx@Dict begin PtoC end
96.02802 38.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 40.  tx@Dict begin PtoC end
96.02802 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 42.  tx@Dict begin PtoC end
96.02802 42.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 44.  tx@Dict begin PtoC end
96.02802 44.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 46.  tx@Dict begin PtoC end
96.02802 46.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 48.  tx@Dict begin PtoC end
96.02802 48.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 50.  tx@Dict begin PtoC end
96.02802 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 52.  tx@Dict begin PtoC end
96.02802 52.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 54.  tx@Dict begin PtoC end
96.02802 54.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 56.  tx@Dict begin PtoC end
96.02802 56.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 58.  tx@Dict begin PtoC end
96.02802 58.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 60.  tx@Dict begin PtoC end
96.02802 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 62.  tx@Dict begin PtoC end
96.02802 62.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 64.  tx@Dict begin PtoC end
96.02802 64.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 66.  tx@Dict begin PtoC end
96.02802 66.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 68.  tx@Dict begin PtoC end
96.02802 68.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 70.  tx@Dict begin PtoC end
96.02802 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 72.  tx@Dict begin PtoC end
96.02802 72.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 74.  tx@Dict begin PtoC end
96.02802 74.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 76.  tx@Dict begin PtoC end
96.02802 76.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 78.  tx@Dict begin PtoC end
96.02802 78.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 80.  tx@Dict begin PtoC end
96.02802 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 82.  tx@Dict begin PtoC end
96.02802 82.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 84.  tx@Dict begin PtoC end
96.02802 84.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 86.  tx@Dict begin PtoC end
96.02802 86.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 88.  tx@Dict begin PtoC end
96.02802 88.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 90.  tx@Dict begin PtoC end
96.02802 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 92.  tx@Dict begin PtoC end
96.02802 92.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 94.  tx@Dict begin PtoC end
96.02802 94.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 96.  tx@Dict begin PtoC end
96.02802 96.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 98.  tx@Dict begin PtoC end
96.02802 98.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 100.  tx@Dict begin PtoC end
96.02802 100.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 102.  tx@Dict begin PtoC end
96.02802 102.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 104.  tx@Dict begin PtoC end
96.02802 104.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 106.  tx@Dict begin PtoC end
96.02802 106.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 108.  tx@Dict begin PtoC end
96.02802 108.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 110.  tx@Dict begin PtoC end
96.02802 110.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 112.  tx@Dict begin PtoC end
96.02802 112.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 114.  tx@Dict begin PtoC end
96.02802 114.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 116.  tx@Dict begin PtoC end
96.02802 116.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 118.  tx@Dict begin PtoC end
96.02802 118.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 120.  tx@Dict begin PtoC end
96.02802 120.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 122.  tx@Dict begin PtoC end
96.02802 122.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 124.  tx@Dict begin PtoC end
96.02802 124.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 126.  tx@Dict begin PtoC end
96.02802 126.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 128.  tx@Dict begin PtoC end
96.02802 128.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 130.  tx@Dict begin PtoC end
96.02802 130.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 132.  tx@Dict begin PtoC end
96.02802 132.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 134.  tx@Dict begin PtoC end
96.02802 134.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 136.  tx@Dict begin PtoC end
96.02802 136.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 138.  tx@Dict begin PtoC end
96.02802 138.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 140.  tx@Dict begin PtoC end
96.02802 140.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 142.  tx@Dict begin PtoC end
96.02802 142.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 144.  tx@Dict begin PtoC end
96.02802 144.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 146.  tx@Dict begin PtoC end
96.02802 146.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 148.  tx@Dict begin PtoC end
96.02802 148.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 150.  tx@Dict begin PtoC end
96.02802 150.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 152.  tx@Dict begin PtoC end
96.02802 152.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 154.  tx@Dict begin PtoC end
96.02802 154.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 156.  tx@Dict begin PtoC end
96.02802 156.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 158.  tx@Dict begin PtoC end
96.02802 158.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 160.  tx@Dict begin PtoC end
96.02802 160.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 162.  tx@Dict begin PtoC end
96.02802 162.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 164.  tx@Dict begin PtoC end
96.02802 164.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 166.  tx@Dict begin PtoC end
96.02802 166.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 168.  tx@Dict begin PtoC end
96.02802 168.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 170.  tx@Dict begin PtoC end
96.02802 170.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 172.  tx@Dict begin PtoC end
96.02802 172.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 174.  tx@Dict begin PtoC end
96.02802 174.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 176.  tx@Dict begin PtoC end
96.02802 176.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 178.  tx@Dict begin PtoC end
96.02802 178.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 0.  tx@Dict begin PtoC end
90.69313 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 10.  tx@Dict begin PtoC end
90.69313 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 20.  tx@Dict begin PtoC end
90.69313 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 30.  tx@Dict begin PtoC end
90.69313 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 40.  tx@Dict begin PtoC end
90.69313 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 50.  tx@Dict begin PtoC end
90.69313 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 60.  tx@Dict begin PtoC end
90.69313 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 70.  tx@Dict begin PtoC end
90.69313 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 80.  tx@Dict begin PtoC end
90.69313 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 90.  tx@Dict begin PtoC end
90.69313 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 100.  tx@Dict begin PtoC end
90.69313 100.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 110.  tx@Dict begin PtoC end
90.69313 110.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 120.  tx@Dict begin PtoC end
90.69313 120.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 130.  tx@Dict begin PtoC end
90.69313 130.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 140.  tx@Dict begin PtoC end
90.69313 140.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 150.  tx@Dict begin PtoC end
90.69313 150.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 160.  tx@Dict begin PtoC end
90.69313 160.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 170.  tx@Dict begin PtoC end
90.69313 170.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.6978 180.  tx@Dict begin PtoC end
90.69313 180.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 768 3610 a 768 3610
a
tx@Dict begin { 73.62173 0.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  4.87999 6.15999 0.04999 0.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 748 3636 a Fb(0)768
3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 20.  def grestore  end
 768
3610 a 768 3610 a
tx@Dict begin { 73.62173 20.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 20.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727
3636 a Fb(20)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610
a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 40.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 40.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610
a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 40.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727 3636 a Fb(40)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768
3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 60.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 60.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768
3610 a 768 3610 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 60.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727 3636 a Fb(60)768 3610
y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 80.  def grestore  end
 768 3610
a 768 3610 a
tx@Dict begin { 73.62173 80.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 80.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727 3636
a Fb(80)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768
3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 100.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 100.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 100.  Uput UUput } PutCoor
PutBegin  end
 768
3610 a 707 3636 a Fb(100)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610
a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 120.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 120.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610
a 768 3610 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 120.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636 a Fb(120)768 3610 y
tx@Dict begin  PutEnd  end

768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 768 3610
a 768 3610 a
tx@Dict begin { 73.62173 140.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 140.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636
a Fb(140)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a
768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 160.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 160.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610
a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 160.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636 a Fb(160)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a
768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 180.  def grestore  end
 768 3610 a 768 3610
a
tx@Dict begin { 73.62173 180.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 180.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636 a Fb(180)768
3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 10.  def grestore  end
 768
3610 a 768 3610 a
tx@Dict begin { 73.62173 10.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 10.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727
3636 a Fb(10)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610
a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 30.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 30.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610
a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 30.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727 3636 a Fb(30)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768
3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 50.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 50.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768
3610 a 768 3610 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 50.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727 3636 a Fb(50)768 3610
y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 70.  def grestore  end
 768 3610
a 768 3610 a
tx@Dict begin { 73.62173 70.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 70.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 727 3636
a Fb(70)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768
3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 90.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 90.  Uput UUput } PutCoor
PutBegin  end
 768
3610 a 727 3636 a Fb(90)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610
a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 110.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 110.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610
a 768 3610 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 110.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636 a Fb(110)768 3610 y
tx@Dict begin  PutEnd  end

768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 130.  def grestore  end
 768 3610
a 768 3610 a
tx@Dict begin { 73.62173 130.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 130.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636
a Fb(130)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a
768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 150.  def grestore  end
 768 3610 a 768 3610 a
tx@Dict begin { 73.62173 150.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610
a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 150.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636 a Fb(150)768 3610 y
tx@Dict begin  PutEnd  end
 768 3610 a
768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  gsave STV CP T /ps@refangle 170.  def grestore  end
 768 3610 a 768 3610
a
tx@Dict begin { 73.62173 170.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 768 3610 a 768 3610 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 170.  Uput UUput } PutCoor
PutBegin  end
 768 3610 a 707 3636 a Fb(170)768
3610 y
tx@Dict begin  PutEnd  end
 768 3610 a 768 3610 a
tx@Dict begin  PutEnd  end
 768 3610 a -118 4070 a Fe
(************************)p 0 TeXcolorgray -118 5892
4016 2 v -118 6013 a(L)-98 5997 y Fc(A)-67 6013 y Fe(T)-25
6035 y(E)20 6013 y(X)3661 b(3/)p 0 TeXcolorgray 3849
6013 a
SDict begin H.S end
 3849 6013 a 0 TeXcolorgray Fe(4)p 0 TeXcolorgray
3898 5951 a
SDict begin H.R end
 3898 5951 a 3898 6013 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (page.4) cvn H.B /ANN pdfmark end
 3898 6013 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop gsave 1 TeXcolorgray clippath fill grestore
0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray -8 -481 a
SDict begin H.S end
 -8
-481 a -8 -481 a
SDict begin H.R end
 -8 -481 a -8 -481 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -8 -481 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1727 1509 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r 177.8297 def /c
57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def /angleB 180. 0.0
c mul 2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 0.0 177.8297 -35.56593 -177.8297
-35.56593 -177.8297 0.0    /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r 97.80634 def /c
57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def /angleB 180. 0.0
c mul 2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 97.80634 0.0 17.78296 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  0.0 0.0 /y ED /x ED /r 17.78296 def /c
57.2957 r Div def /angleA 0. 0.0 c mul 2 div add def /angleB 180. 0.0
c mul 2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -17.78296 0.0 -97.80634 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 7.11362 0.0 -7.11362 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 7.11362 0.0 -7.11362    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 0.  tx@Dict begin PtoC end
160.04672 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 10.  tx@Dict begin PtoC end
160.04672 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 20.  tx@Dict begin PtoC end
160.04672 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 30.  tx@Dict begin PtoC end
160.04672 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 40.  tx@Dict begin PtoC end
160.04672 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 50.  tx@Dict begin PtoC end
160.04672 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 60.  tx@Dict begin PtoC end
160.04672 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 70.  tx@Dict begin PtoC end
160.04672 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 80.  tx@Dict begin PtoC end
160.04672 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 90.  tx@Dict begin PtoC end
160.04672 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 100.  tx@Dict begin PtoC end
160.04672 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 110.  tx@Dict begin PtoC end
160.04672 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 120.  tx@Dict begin PtoC end
160.04672 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 130.  tx@Dict begin PtoC end
160.04672 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 140.  tx@Dict begin PtoC end
160.04672 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 150.  tx@Dict begin PtoC end
160.04672 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 160.  tx@Dict begin PtoC end
160.04672 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 170.  tx@Dict begin PtoC end
160.04672 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 180.  tx@Dict begin PtoC end
160.04672 180.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 1727
1509 a 1727 1509 a
tx@Dict begin { 136.92908 0.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  5.85599 7.392 0.05998 0.  Uput UUput } PutCoor
PutBegin  end
 1727 1509
a 1703 1539 a Fe(0)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 20.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 20.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727
1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 20.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(20)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 40.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 40.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 40.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(40)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 60.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 60.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 60.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(60)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 80.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 80.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 80.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(80)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 100.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 100.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 100.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(100)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 120.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 120.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 120.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(120)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 140.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 140.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(140)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 160.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 160.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 160.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(160)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 180.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 180.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 180.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(180)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 10.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 10.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 10.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(10)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 30.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 30.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 30.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(30)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 50.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 50.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 50.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(50)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 70.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 70.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 70.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(70)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 90.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 90.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(90)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 110.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 110.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 110.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(110)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 130.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 130.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 130.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(130)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 150.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 136.92908 150.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 150.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(150)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 170.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 136.92908 170.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 170.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(170)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 180.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 180.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  5.85599 7.392 0.05998 180.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1703 1539 a Fe(0)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 170.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 170.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 170.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(10)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 160.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 160.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 160.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(20)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 150.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 150.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 150.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(30)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 140.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 140.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(40)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 130.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 130.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 130.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(50)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 120.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 120.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 120.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(60)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 110.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 110.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 110.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(70)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 100.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 100.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 100.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(80)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 90.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 90.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1678 1539 a Fe(90)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 90.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  11.71198 7.392 0.05998 90.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1678 1539 a Fe(90)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 80.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 80.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 80.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(100)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 70.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 70.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 70.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(110)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 60.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 60.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 60.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(120)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 50.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 50.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 50.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(130)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 40.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 40.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 40.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(140)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 30.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 30.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 30.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(150)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 20.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 20.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 20.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(160)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  gsave STV CP T /ps@refangle 10.  def grestore  end
 1727 1509 a 1727 1509
a
tx@Dict begin { 113.81143 10.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 10.  Uput UUput } PutCoor
PutBegin  end
 1727 1509 a 1654 1539 a Fe(170)1727
1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a 1727 1509
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 1727 1509 a 1727 1509 a
tx@Dict begin { 113.81143 0.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 1727 1509 a 1727 1509 a
tx@Dict begin { 5.0  17.56796 7.392 0.05998 0.  Uput UUput } PutCoor
PutBegin  end
 1727
1509 a 1654 1539 a Fe(180)1727 1509 y
tx@Dict begin  PutEnd  end
 1727 1509 a 1727
1509 a
tx@Dict begin  PutEnd  end
 1727 1509 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 0.  tx@Dict begin PtoC end
97.80634 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 2.  tx@Dict begin PtoC end
97.80634 2.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 4.  tx@Dict begin PtoC end
97.80634 4.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 6.  tx@Dict begin PtoC end
97.80634 6.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 8.  tx@Dict begin PtoC end
97.80634 8.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 10.  tx@Dict begin PtoC end
97.80634 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 12.  tx@Dict begin PtoC end
97.80634 12.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 14.  tx@Dict begin PtoC end
97.80634 14.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 16.  tx@Dict begin PtoC end
97.80634 16.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 18.  tx@Dict begin PtoC end
97.80634 18.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 20.  tx@Dict begin PtoC end
97.80634 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 22.  tx@Dict begin PtoC end
97.80634 22.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 24.  tx@Dict begin PtoC end
97.80634 24.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 26.  tx@Dict begin PtoC end
97.80634 26.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 28.  tx@Dict begin PtoC end
97.80634 28.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 30.  tx@Dict begin PtoC end
97.80634 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 32.  tx@Dict begin PtoC end
97.80634 32.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 34.  tx@Dict begin PtoC end
97.80634 34.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 36.  tx@Dict begin PtoC end
97.80634 36.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 38.  tx@Dict begin PtoC end
97.80634 38.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 40.  tx@Dict begin PtoC end
97.80634 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 42.  tx@Dict begin PtoC end
97.80634 42.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 44.  tx@Dict begin PtoC end
97.80634 44.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 46.  tx@Dict begin PtoC end
97.80634 46.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 48.  tx@Dict begin PtoC end
97.80634 48.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 50.  tx@Dict begin PtoC end
97.80634 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 52.  tx@Dict begin PtoC end
97.80634 52.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 54.  tx@Dict begin PtoC end
97.80634 54.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 56.  tx@Dict begin PtoC end
97.80634 56.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 58.  tx@Dict begin PtoC end
97.80634 58.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 60.  tx@Dict begin PtoC end
97.80634 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 62.  tx@Dict begin PtoC end
97.80634 62.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 64.  tx@Dict begin PtoC end
97.80634 64.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 66.  tx@Dict begin PtoC end
97.80634 66.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 68.  tx@Dict begin PtoC end
97.80634 68.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 70.  tx@Dict begin PtoC end
97.80634 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 72.  tx@Dict begin PtoC end
97.80634 72.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 74.  tx@Dict begin PtoC end
97.80634 74.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 76.  tx@Dict begin PtoC end
97.80634 76.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 78.  tx@Dict begin PtoC end
97.80634 78.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 80.  tx@Dict begin PtoC end
97.80634 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 82.  tx@Dict begin PtoC end
97.80634 82.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 84.  tx@Dict begin PtoC end
97.80634 84.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 86.  tx@Dict begin PtoC end
97.80634 86.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 88.  tx@Dict begin PtoC end
97.80634 88.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 90.  tx@Dict begin PtoC end
97.80634 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 92.  tx@Dict begin PtoC end
97.80634 92.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 94.  tx@Dict begin PtoC end
97.80634 94.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 96.  tx@Dict begin PtoC end
97.80634 96.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 98.  tx@Dict begin PtoC end
97.80634 98.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 100.  tx@Dict begin PtoC
end 97.80634 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 102.  tx@Dict begin PtoC
end 97.80634 102.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 104.  tx@Dict begin PtoC
end 97.80634 104.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 106.  tx@Dict begin PtoC
end 97.80634 106.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 108.  tx@Dict begin PtoC
end 97.80634 108.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 110.  tx@Dict begin PtoC
end 97.80634 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 112.  tx@Dict begin PtoC
end 97.80634 112.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 114.  tx@Dict begin PtoC
end 97.80634 114.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 116.  tx@Dict begin PtoC
end 97.80634 116.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 118.  tx@Dict begin PtoC
end 97.80634 118.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 120.  tx@Dict begin PtoC
end 97.80634 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 122.  tx@Dict begin PtoC
end 97.80634 122.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 124.  tx@Dict begin PtoC
end 97.80634 124.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 126.  tx@Dict begin PtoC
end 97.80634 126.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 128.  tx@Dict begin PtoC
end 97.80634 128.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 130.  tx@Dict begin PtoC
end 97.80634 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 132.  tx@Dict begin PtoC
end 97.80634 132.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 134.  tx@Dict begin PtoC
end 97.80634 134.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 136.  tx@Dict begin PtoC
end 97.80634 136.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 138.  tx@Dict begin PtoC
end 97.80634 138.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 140.  tx@Dict begin PtoC
end 97.80634 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 142.  tx@Dict begin PtoC
end 97.80634 142.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 144.  tx@Dict begin PtoC
end 97.80634 144.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 146.  tx@Dict begin PtoC
end 97.80634 146.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 148.  tx@Dict begin PtoC
end 97.80634 148.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 150.  tx@Dict begin PtoC
end 97.80634 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 152.  tx@Dict begin PtoC
end 97.80634 152.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 154.  tx@Dict begin PtoC
end 97.80634 154.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 156.  tx@Dict begin PtoC
end 97.80634 156.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 158.  tx@Dict begin PtoC
end 97.80634 158.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 160.  tx@Dict begin PtoC
end 97.80634 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 162.  tx@Dict begin PtoC
end 97.80634 162.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 164.  tx@Dict begin PtoC
end 97.80634 164.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 166.  tx@Dict begin PtoC
end 97.80634 166.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 168.  tx@Dict begin PtoC
end 97.80634 168.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 170.  tx@Dict begin PtoC
end 97.80634 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 172.  tx@Dict begin PtoC
end 97.80634 172.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 174.  tx@Dict begin PtoC
end 97.80634 174.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 176.  tx@Dict begin PtoC
end 97.80634 176.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 178.  tx@Dict begin PtoC
end 97.80634 178.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 0.  tx@Dict begin PtoC end
97.80634 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 10.  tx@Dict begin PtoC end
97.80634 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 20.  tx@Dict begin PtoC end
97.80634 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 30.  tx@Dict begin PtoC end
97.80634 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 40.  tx@Dict begin PtoC end
97.80634 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 50.  tx@Dict begin PtoC end
97.80634 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 60.  tx@Dict begin PtoC end
97.80634 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 70.  tx@Dict begin PtoC end
97.80634 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 80.  tx@Dict begin PtoC end
97.80634 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 90.  tx@Dict begin PtoC end
97.80634 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 100.  tx@Dict begin PtoC end
97.80634 100.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 110.  tx@Dict begin PtoC end
97.80634 110.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 120.  tx@Dict begin PtoC end
97.80634 120.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 130.  tx@Dict begin PtoC end
97.80634 130.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 140.  tx@Dict begin PtoC end
97.80634 140.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 150.  tx@Dict begin PtoC end
97.80634 150.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 160.  tx@Dict begin PtoC end
97.80634 160.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 170.  tx@Dict begin PtoC end
97.80634 170.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 115.5893 180.  tx@Dict begin PtoC end
97.80634 180.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 0.  tx@Dict begin PtoC end
168.93822 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 1.  tx@Dict begin PtoC end
168.93822 1.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 2.  tx@Dict begin PtoC end
168.93822 2.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 3.  tx@Dict begin PtoC end
168.93822 3.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 4.  tx@Dict begin PtoC end
168.93822 4.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 5.  tx@Dict begin PtoC end
168.93822 5.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 6.  tx@Dict begin PtoC end
168.93822 6.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 7.  tx@Dict begin PtoC end
168.93822 7.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 8.  tx@Dict begin PtoC end
168.93822 8.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 9.  tx@Dict begin PtoC end
168.93822 9.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 10.  tx@Dict begin PtoC end
168.93822 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 11.  tx@Dict begin PtoC end
168.93822 11.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 12.  tx@Dict begin PtoC end
168.93822 12.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 13.  tx@Dict begin PtoC end
168.93822 13.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 14.  tx@Dict begin PtoC end
168.93822 14.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 15.  tx@Dict begin PtoC end
168.93822 15.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 16.  tx@Dict begin PtoC end
168.93822 16.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 17.  tx@Dict begin PtoC end
168.93822 17.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 18.  tx@Dict begin PtoC end
168.93822 18.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 19.  tx@Dict begin PtoC end
168.93822 19.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 20.  tx@Dict begin PtoC end
168.93822 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 21.  tx@Dict begin PtoC end
168.93822 21.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 22.  tx@Dict begin PtoC end
168.93822 22.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 23.  tx@Dict begin PtoC end
168.93822 23.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 24.  tx@Dict begin PtoC end
168.93822 24.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 25.  tx@Dict begin PtoC end
168.93822 25.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 26.  tx@Dict begin PtoC end
168.93822 26.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 27.  tx@Dict begin PtoC end
168.93822 27.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 28.  tx@Dict begin PtoC end
168.93822 28.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 29.  tx@Dict begin PtoC end
168.93822 29.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 30.  tx@Dict begin PtoC end
168.93822 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 31.  tx@Dict begin PtoC end
168.93822 31.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 32.  tx@Dict begin PtoC end
168.93822 32.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 33.  tx@Dict begin PtoC end
168.93822 33.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 34.  tx@Dict begin PtoC end
168.93822 34.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 35.  tx@Dict begin PtoC end
168.93822 35.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 36.  tx@Dict begin PtoC end
168.93822 36.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 37.  tx@Dict begin PtoC end
168.93822 37.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 38.  tx@Dict begin PtoC end
168.93822 38.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 39.  tx@Dict begin PtoC end
168.93822 39.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 40.  tx@Dict begin PtoC end
168.93822 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 41.  tx@Dict begin PtoC end
168.93822 41.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 42.  tx@Dict begin PtoC end
168.93822 42.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 43.  tx@Dict begin PtoC end
168.93822 43.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 44.  tx@Dict begin PtoC end
168.93822 44.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 45.  tx@Dict begin PtoC end
168.93822 45.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 46.  tx@Dict begin PtoC end
168.93822 46.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 47.  tx@Dict begin PtoC end
168.93822 47.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 48.  tx@Dict begin PtoC end
168.93822 48.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 49.  tx@Dict begin PtoC end
168.93822 49.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 50.  tx@Dict begin PtoC end
168.93822 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 51.  tx@Dict begin PtoC end
168.93822 51.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 52.  tx@Dict begin PtoC end
168.93822 52.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 53.  tx@Dict begin PtoC end
168.93822 53.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 54.  tx@Dict begin PtoC end
168.93822 54.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 55.  tx@Dict begin PtoC end
168.93822 55.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 56.  tx@Dict begin PtoC end
168.93822 56.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 57.  tx@Dict begin PtoC end
168.93822 57.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 58.  tx@Dict begin PtoC end
168.93822 58.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 59.  tx@Dict begin PtoC end
168.93822 59.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 60.  tx@Dict begin PtoC end
168.93822 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 61.  tx@Dict begin PtoC end
168.93822 61.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 62.  tx@Dict begin PtoC end
168.93822 62.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 63.  tx@Dict begin PtoC end
168.93822 63.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 64.  tx@Dict begin PtoC end
168.93822 64.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 65.  tx@Dict begin PtoC end
168.93822 65.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 66.  tx@Dict begin PtoC end
168.93822 66.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 67.  tx@Dict begin PtoC end
168.93822 67.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 68.  tx@Dict begin PtoC end
168.93822 68.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 69.  tx@Dict begin PtoC end
168.93822 69.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 70.  tx@Dict begin PtoC end
168.93822 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 71.  tx@Dict begin PtoC end
168.93822 71.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 72.  tx@Dict begin PtoC end
168.93822 72.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 73.  tx@Dict begin PtoC end
168.93822 73.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 74.  tx@Dict begin PtoC end
168.93822 74.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 75.  tx@Dict begin PtoC end
168.93822 75.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 76.  tx@Dict begin PtoC end
168.93822 76.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 77.  tx@Dict begin PtoC end
168.93822 77.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 78.  tx@Dict begin PtoC end
168.93822 78.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 79.  tx@Dict begin PtoC end
168.93822 79.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 80.  tx@Dict begin PtoC end
168.93822 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 81.  tx@Dict begin PtoC end
168.93822 81.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 82.  tx@Dict begin PtoC end
168.93822 82.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 83.  tx@Dict begin PtoC end
168.93822 83.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 84.  tx@Dict begin PtoC end
168.93822 84.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 85.  tx@Dict begin PtoC end
168.93822 85.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 86.  tx@Dict begin PtoC end
168.93822 86.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 87.  tx@Dict begin PtoC end
168.93822 87.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 88.  tx@Dict begin PtoC end
168.93822 88.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 89.  tx@Dict begin PtoC end
168.93822 89.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 90.  tx@Dict begin PtoC end
168.93822 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 91.  tx@Dict begin PtoC end
168.93822 91.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 92.  tx@Dict begin PtoC end
168.93822 92.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 93.  tx@Dict begin PtoC end
168.93822 93.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 94.  tx@Dict begin PtoC end
168.93822 94.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 95.  tx@Dict begin PtoC end
168.93822 95.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 96.  tx@Dict begin PtoC end
168.93822 96.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 97.  tx@Dict begin PtoC end
168.93822 97.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 98.  tx@Dict begin PtoC end
168.93822 98.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 99.  tx@Dict begin PtoC end
168.93822 99.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 100.  tx@Dict begin PtoC end
168.93822 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 101.  tx@Dict begin PtoC end
168.93822 101.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 102.  tx@Dict begin PtoC end
168.93822 102.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 103.  tx@Dict begin PtoC end
168.93822 103.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 104.  tx@Dict begin PtoC end
168.93822 104.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 105.  tx@Dict begin PtoC end
168.93822 105.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 106.  tx@Dict begin PtoC end
168.93822 106.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 107.  tx@Dict begin PtoC end
168.93822 107.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 108.  tx@Dict begin PtoC end
168.93822 108.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 109.  tx@Dict begin PtoC end
168.93822 109.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 110.  tx@Dict begin PtoC end
168.93822 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 111.  tx@Dict begin PtoC end
168.93822 111.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 112.  tx@Dict begin PtoC end
168.93822 112.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 113.  tx@Dict begin PtoC end
168.93822 113.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 114.  tx@Dict begin PtoC end
168.93822 114.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 115.  tx@Dict begin PtoC end
168.93822 115.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 116.  tx@Dict begin PtoC end
168.93822 116.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 117.  tx@Dict begin PtoC end
168.93822 117.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 118.  tx@Dict begin PtoC end
168.93822 118.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 119.  tx@Dict begin PtoC end
168.93822 119.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 120.  tx@Dict begin PtoC end
168.93822 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 121.  tx@Dict begin PtoC end
168.93822 121.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 122.  tx@Dict begin PtoC end
168.93822 122.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 123.  tx@Dict begin PtoC end
168.93822 123.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 124.  tx@Dict begin PtoC end
168.93822 124.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 125.  tx@Dict begin PtoC end
168.93822 125.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 126.  tx@Dict begin PtoC end
168.93822 126.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 127.  tx@Dict begin PtoC end
168.93822 127.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 128.  tx@Dict begin PtoC end
168.93822 128.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 129.  tx@Dict begin PtoC end
168.93822 129.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 130.  tx@Dict begin PtoC end
168.93822 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 131.  tx@Dict begin PtoC end
168.93822 131.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 132.  tx@Dict begin PtoC end
168.93822 132.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 133.  tx@Dict begin PtoC end
168.93822 133.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 134.  tx@Dict begin PtoC end
168.93822 134.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 135.  tx@Dict begin PtoC end
168.93822 135.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 136.  tx@Dict begin PtoC end
168.93822 136.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 137.  tx@Dict begin PtoC end
168.93822 137.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 138.  tx@Dict begin PtoC end
168.93822 138.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 139.  tx@Dict begin PtoC end
168.93822 139.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 140.  tx@Dict begin PtoC end
168.93822 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 141.  tx@Dict begin PtoC end
168.93822 141.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 142.  tx@Dict begin PtoC end
168.93822 142.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 143.  tx@Dict begin PtoC end
168.93822 143.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 144.  tx@Dict begin PtoC end
168.93822 144.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 145.  tx@Dict begin PtoC end
168.93822 145.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 146.  tx@Dict begin PtoC end
168.93822 146.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 147.  tx@Dict begin PtoC end
168.93822 147.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 148.  tx@Dict begin PtoC end
168.93822 148.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 149.  tx@Dict begin PtoC end
168.93822 149.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 150.  tx@Dict begin PtoC end
168.93822 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 151.  tx@Dict begin PtoC end
168.93822 151.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 152.  tx@Dict begin PtoC end
168.93822 152.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 153.  tx@Dict begin PtoC end
168.93822 153.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 154.  tx@Dict begin PtoC end
168.93822 154.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 155.  tx@Dict begin PtoC end
168.93822 155.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 156.  tx@Dict begin PtoC end
168.93822 156.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 157.  tx@Dict begin PtoC end
168.93822 157.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 158.  tx@Dict begin PtoC end
168.93822 158.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 159.  tx@Dict begin PtoC end
168.93822 159.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 160.  tx@Dict begin PtoC end
168.93822 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 161.  tx@Dict begin PtoC end
168.93822 161.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 162.  tx@Dict begin PtoC end
168.93822 162.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 163.  tx@Dict begin PtoC end
168.93822 163.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 164.  tx@Dict begin PtoC end
168.93822 164.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 165.  tx@Dict begin PtoC end
168.93822 165.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 166.  tx@Dict begin PtoC end
168.93822 166.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 167.  tx@Dict begin PtoC end
168.93822 167.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 168.  tx@Dict begin PtoC end
168.93822 168.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 169.  tx@Dict begin PtoC end
168.93822 169.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 170.  tx@Dict begin PtoC end
168.93822 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 171.  tx@Dict begin PtoC end
168.93822 171.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 172.  tx@Dict begin PtoC end
168.93822 172.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 173.  tx@Dict begin PtoC end
168.93822 173.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 174.  tx@Dict begin PtoC end
168.93822 174.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 175.  tx@Dict begin PtoC end
168.93822 175.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 176.  tx@Dict begin PtoC end
168.93822 176.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 177.  tx@Dict begin PtoC end
168.93822 177.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 178.  tx@Dict begin PtoC end
168.93822 178.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 179.  tx@Dict begin PtoC end
168.93822 179.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 0.  tx@Dict begin PtoC end
166.09341 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 5.  tx@Dict begin PtoC end
166.09341 5.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 10.  tx@Dict begin PtoC end
166.09341 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 15.  tx@Dict begin PtoC end
166.09341 15.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 20.  tx@Dict begin PtoC end
166.09341 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 25.  tx@Dict begin PtoC end
166.09341 25.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 30.  tx@Dict begin PtoC end
166.09341 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 35.  tx@Dict begin PtoC end
166.09341 35.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 40.  tx@Dict begin PtoC end
166.09341 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 45.  tx@Dict begin PtoC end
166.09341 45.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 50.  tx@Dict begin PtoC end
166.09341 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 55.  tx@Dict begin PtoC end
166.09341 55.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 60.  tx@Dict begin PtoC end
166.09341 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 65.  tx@Dict begin PtoC end
166.09341 65.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 70.  tx@Dict begin PtoC end
166.09341 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 75.  tx@Dict begin PtoC end
166.09341 75.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 80.  tx@Dict begin PtoC end
166.09341 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 85.  tx@Dict begin PtoC end
166.09341 85.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 90.  tx@Dict begin PtoC end
166.09341 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 95.  tx@Dict begin PtoC end
166.09341 95.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 100.  tx@Dict begin PtoC end
166.09341 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 105.  tx@Dict begin PtoC end
166.09341 105.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 110.  tx@Dict begin PtoC end
166.09341 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 115.  tx@Dict begin PtoC end
166.09341 115.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 120.  tx@Dict begin PtoC end
166.09341 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 125.  tx@Dict begin PtoC end
166.09341 125.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 130.  tx@Dict begin PtoC end
166.09341 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 135.  tx@Dict begin PtoC end
166.09341 135.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 140.  tx@Dict begin PtoC end
166.09341 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 145.  tx@Dict begin PtoC end
166.09341 145.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 150.  tx@Dict begin PtoC end
166.09341 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 155.  tx@Dict begin PtoC end
166.09341 155.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 160.  tx@Dict begin PtoC end
166.09341 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 165.  tx@Dict begin PtoC end
166.09341 165.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 170.  tx@Dict begin PtoC end
166.09341 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 177.8297 175.  tx@Dict begin PtoC end
166.09341 175.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 0.  tx@Dict begin PtoC end
97.80634 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 2.  tx@Dict begin PtoC end
97.80634 2.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 4.  tx@Dict begin PtoC end
97.80634 4.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 6.  tx@Dict begin PtoC end
97.80634 6.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 8.  tx@Dict begin PtoC end
97.80634 8.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 10.  tx@Dict begin PtoC end
97.80634 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 12.  tx@Dict begin PtoC end
97.80634 12.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 14.  tx@Dict begin PtoC end
97.80634 14.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 16.  tx@Dict begin PtoC end
97.80634 16.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 18.  tx@Dict begin PtoC end
97.80634 18.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 20.  tx@Dict begin PtoC end
97.80634 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 22.  tx@Dict begin PtoC end
97.80634 22.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 24.  tx@Dict begin PtoC end
97.80634 24.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 26.  tx@Dict begin PtoC end
97.80634 26.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 28.  tx@Dict begin PtoC end
97.80634 28.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 30.  tx@Dict begin PtoC end
97.80634 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 32.  tx@Dict begin PtoC end
97.80634 32.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 34.  tx@Dict begin PtoC end
97.80634 34.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 36.  tx@Dict begin PtoC end
97.80634 36.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 38.  tx@Dict begin PtoC end
97.80634 38.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 40.  tx@Dict begin PtoC end
97.80634 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 42.  tx@Dict begin PtoC end
97.80634 42.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 44.  tx@Dict begin PtoC end
97.80634 44.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 46.  tx@Dict begin PtoC end
97.80634 46.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 48.  tx@Dict begin PtoC end
97.80634 48.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 50.  tx@Dict begin PtoC end
97.80634 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 52.  tx@Dict begin PtoC end
97.80634 52.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 54.  tx@Dict begin PtoC end
97.80634 54.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 56.  tx@Dict begin PtoC end
97.80634 56.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 58.  tx@Dict begin PtoC end
97.80634 58.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 60.  tx@Dict begin PtoC end
97.80634 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 62.  tx@Dict begin PtoC end
97.80634 62.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 64.  tx@Dict begin PtoC end
97.80634 64.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 66.  tx@Dict begin PtoC end
97.80634 66.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 68.  tx@Dict begin PtoC end
97.80634 68.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 70.  tx@Dict begin PtoC end
97.80634 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 72.  tx@Dict begin PtoC end
97.80634 72.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 74.  tx@Dict begin PtoC end
97.80634 74.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 76.  tx@Dict begin PtoC end
97.80634 76.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 78.  tx@Dict begin PtoC end
97.80634 78.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 80.  tx@Dict begin PtoC end
97.80634 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 82.  tx@Dict begin PtoC end
97.80634 82.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 84.  tx@Dict begin PtoC end
97.80634 84.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 86.  tx@Dict begin PtoC end
97.80634 86.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 88.  tx@Dict begin PtoC end
97.80634 88.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 90.  tx@Dict begin PtoC end
97.80634 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 92.  tx@Dict begin PtoC end
97.80634 92.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 94.  tx@Dict begin PtoC end
97.80634 94.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 96.  tx@Dict begin PtoC end
97.80634 96.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 98.  tx@Dict begin PtoC end
97.80634 98.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 100.  tx@Dict begin PtoC
end 97.80634 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 102.  tx@Dict begin PtoC
end 97.80634 102.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 104.  tx@Dict begin PtoC
end 97.80634 104.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 106.  tx@Dict begin PtoC
end 97.80634 106.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 108.  tx@Dict begin PtoC
end 97.80634 108.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 110.  tx@Dict begin PtoC
end 97.80634 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 112.  tx@Dict begin PtoC
end 97.80634 112.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 114.  tx@Dict begin PtoC
end 97.80634 114.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 116.  tx@Dict begin PtoC
end 97.80634 116.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 118.  tx@Dict begin PtoC
end 97.80634 118.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 120.  tx@Dict begin PtoC
end 97.80634 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 122.  tx@Dict begin PtoC
end 97.80634 122.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 124.  tx@Dict begin PtoC
end 97.80634 124.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 126.  tx@Dict begin PtoC
end 97.80634 126.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 128.  tx@Dict begin PtoC
end 97.80634 128.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 130.  tx@Dict begin PtoC
end 97.80634 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 132.  tx@Dict begin PtoC
end 97.80634 132.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 134.  tx@Dict begin PtoC
end 97.80634 134.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 136.  tx@Dict begin PtoC
end 97.80634 136.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 138.  tx@Dict begin PtoC
end 97.80634 138.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 140.  tx@Dict begin PtoC
end 97.80634 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 142.  tx@Dict begin PtoC
end 97.80634 142.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 144.  tx@Dict begin PtoC
end 97.80634 144.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 146.  tx@Dict begin PtoC
end 97.80634 146.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 148.  tx@Dict begin PtoC
end 97.80634 148.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 150.  tx@Dict begin PtoC
end 97.80634 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 152.  tx@Dict begin PtoC
end 97.80634 152.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 154.  tx@Dict begin PtoC
end 97.80634 154.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 156.  tx@Dict begin PtoC
end 97.80634 156.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 158.  tx@Dict begin PtoC
end 97.80634 158.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 160.  tx@Dict begin PtoC
end 97.80634 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 162.  tx@Dict begin PtoC
end 97.80634 162.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 164.  tx@Dict begin PtoC
end 97.80634 164.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 166.  tx@Dict begin PtoC
end 97.80634 166.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 168.  tx@Dict begin PtoC
end 97.80634 168.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 170.  tx@Dict begin PtoC
end 97.80634 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 172.  tx@Dict begin PtoC
end 97.80634 172.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 174.  tx@Dict begin PtoC
end 97.80634 174.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 176.  tx@Dict begin PtoC
end 97.80634 176.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 106.69781 178.  tx@Dict begin PtoC
end 97.80634 178.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.2 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 1.  tx@Dict begin PtoC end
97.80634 1.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 3.  tx@Dict begin PtoC end
97.80634 3.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 5.  tx@Dict begin PtoC end
97.80634 5.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 7.  tx@Dict begin PtoC end
97.80634 7.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 9.  tx@Dict begin PtoC end
97.80634 9.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 11.  tx@Dict begin PtoC end
97.80634 11.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 13.  tx@Dict begin PtoC end
97.80634 13.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 15.  tx@Dict begin PtoC end
97.80634 15.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 17.  tx@Dict begin PtoC end
97.80634 17.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 19.  tx@Dict begin PtoC end
97.80634 19.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 21.  tx@Dict begin PtoC end
97.80634 21.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 23.  tx@Dict begin PtoC end
97.80634 23.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 25.  tx@Dict begin PtoC end
97.80634 25.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 27.  tx@Dict begin PtoC end
97.80634 27.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 29.  tx@Dict begin PtoC end
97.80634 29.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 31.  tx@Dict begin PtoC end
97.80634 31.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 33.  tx@Dict begin PtoC end
97.80634 33.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 35.  tx@Dict begin PtoC end
97.80634 35.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 37.  tx@Dict begin PtoC end
97.80634 37.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 39.  tx@Dict begin PtoC end
97.80634 39.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 41.  tx@Dict begin PtoC end
97.80634 41.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 43.  tx@Dict begin PtoC end
97.80634 43.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 45.  tx@Dict begin PtoC end
97.80634 45.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 47.  tx@Dict begin PtoC end
97.80634 47.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 49.  tx@Dict begin PtoC end
97.80634 49.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 51.  tx@Dict begin PtoC end
97.80634 51.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 53.  tx@Dict begin PtoC end
97.80634 53.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 55.  tx@Dict begin PtoC end
97.80634 55.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 57.  tx@Dict begin PtoC end
97.80634 57.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 59.  tx@Dict begin PtoC end
97.80634 59.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 61.  tx@Dict begin PtoC end
97.80634 61.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 63.  tx@Dict begin PtoC end
97.80634 63.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 65.  tx@Dict begin PtoC end
97.80634 65.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 67.  tx@Dict begin PtoC end
97.80634 67.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 69.  tx@Dict begin PtoC end
97.80634 69.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 71.  tx@Dict begin PtoC end
97.80634 71.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 73.  tx@Dict begin PtoC end
97.80634 73.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 75.  tx@Dict begin PtoC end
97.80634 75.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 77.  tx@Dict begin PtoC end
97.80634 77.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 79.  tx@Dict begin PtoC end
97.80634 79.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 81.  tx@Dict begin PtoC end
97.80634 81.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 83.  tx@Dict begin PtoC end
97.80634 83.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 85.  tx@Dict begin PtoC end
97.80634 85.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 87.  tx@Dict begin PtoC end
97.80634 87.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 89.  tx@Dict begin PtoC end
97.80634 89.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 91.  tx@Dict begin PtoC end
97.80634 91.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 93.  tx@Dict begin PtoC end
97.80634 93.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 95.  tx@Dict begin PtoC end
97.80634 95.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 97.  tx@Dict begin PtoC end
97.80634 97.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 99.  tx@Dict begin PtoC end
97.80634 99.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 101.  tx@Dict begin PtoC end
97.80634 101.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 103.  tx@Dict begin PtoC end
97.80634 103.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 105.  tx@Dict begin PtoC end
97.80634 105.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 107.  tx@Dict begin PtoC end
97.80634 107.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 109.  tx@Dict begin PtoC end
97.80634 109.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 111.  tx@Dict begin PtoC end
97.80634 111.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 113.  tx@Dict begin PtoC end
97.80634 113.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 115.  tx@Dict begin PtoC end
97.80634 115.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 117.  tx@Dict begin PtoC end
97.80634 117.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 119.  tx@Dict begin PtoC end
97.80634 119.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 121.  tx@Dict begin PtoC end
97.80634 121.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 123.  tx@Dict begin PtoC end
97.80634 123.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 125.  tx@Dict begin PtoC end
97.80634 125.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 127.  tx@Dict begin PtoC end
97.80634 127.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 129.  tx@Dict begin PtoC end
97.80634 129.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 131.  tx@Dict begin PtoC end
97.80634 131.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 133.  tx@Dict begin PtoC end
97.80634 133.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 135.  tx@Dict begin PtoC end
97.80634 135.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 137.  tx@Dict begin PtoC end
97.80634 137.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 139.  tx@Dict begin PtoC end
97.80634 139.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 141.  tx@Dict begin PtoC end
97.80634 141.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 143.  tx@Dict begin PtoC end
97.80634 143.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 145.  tx@Dict begin PtoC end
97.80634 145.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 147.  tx@Dict begin PtoC end
97.80634 147.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 149.  tx@Dict begin PtoC end
97.80634 149.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 151.  tx@Dict begin PtoC end
97.80634 151.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 153.  tx@Dict begin PtoC end
97.80634 153.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 155.  tx@Dict begin PtoC end
97.80634 155.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 157.  tx@Dict begin PtoC end
97.80634 157.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 159.  tx@Dict begin PtoC end
97.80634 159.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 161.  tx@Dict begin PtoC end
97.80634 161.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 163.  tx@Dict begin PtoC end
97.80634 163.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 165.  tx@Dict begin PtoC end
97.80634 165.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 167.  tx@Dict begin PtoC end
97.80634 167.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 169.  tx@Dict begin PtoC end
97.80634 169.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 171.  tx@Dict begin PtoC end
97.80634 171.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 173.  tx@Dict begin PtoC end
97.80634 173.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 175.  tx@Dict begin PtoC end
97.80634 175.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 177.  tx@Dict begin PtoC end
97.80634 177.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.1 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 103.141 179.  tx@Dict begin PtoC end
97.80634 179.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.1 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-118 1998 a Fe(************************)871 3046 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0.0 0.0 119.14612 0 CLW
mul sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0.0 0.0 71.48767 0 CLW mul
sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 83.40228 0.0 11.91461 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0.0 0.0 11.91461 0 CLW mul
sub 0 360 arc closepath  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -11.91461 0.0 -83.40228 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 4.76613 0.0 -4.76613 0.0    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 4.76613 0.0 -4.76613    /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 0.  tx@Dict begin PtoC end
107.2315 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 2.  tx@Dict begin PtoC end
107.2315 2.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 4.  tx@Dict begin PtoC end
107.2315 4.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 6.  tx@Dict begin PtoC end
107.2315 6.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 8.  tx@Dict begin PtoC end
107.2315 8.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 10.  tx@Dict begin PtoC end
107.2315 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 12.  tx@Dict begin PtoC end
107.2315 12.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 14.  tx@Dict begin PtoC end
107.2315 14.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 16.  tx@Dict begin PtoC end
107.2315 16.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 18.  tx@Dict begin PtoC end
107.2315 18.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 20.  tx@Dict begin PtoC end
107.2315 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 22.  tx@Dict begin PtoC end
107.2315 22.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 24.  tx@Dict begin PtoC end
107.2315 24.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 26.  tx@Dict begin PtoC end
107.2315 26.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 28.  tx@Dict begin PtoC end
107.2315 28.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 30.  tx@Dict begin PtoC end
107.2315 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 32.  tx@Dict begin PtoC end
107.2315 32.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 34.  tx@Dict begin PtoC end
107.2315 34.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 36.  tx@Dict begin PtoC end
107.2315 36.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 38.  tx@Dict begin PtoC end
107.2315 38.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 40.  tx@Dict begin PtoC end
107.2315 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 42.  tx@Dict begin PtoC end
107.2315 42.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 44.  tx@Dict begin PtoC end
107.2315 44.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 46.  tx@Dict begin PtoC end
107.2315 46.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 48.  tx@Dict begin PtoC end
107.2315 48.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 50.  tx@Dict begin PtoC end
107.2315 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 52.  tx@Dict begin PtoC end
107.2315 52.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 54.  tx@Dict begin PtoC end
107.2315 54.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 56.  tx@Dict begin PtoC end
107.2315 56.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 58.  tx@Dict begin PtoC end
107.2315 58.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 60.  tx@Dict begin PtoC end
107.2315 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 62.  tx@Dict begin PtoC end
107.2315 62.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 64.  tx@Dict begin PtoC end
107.2315 64.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 66.  tx@Dict begin PtoC end
107.2315 66.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 68.  tx@Dict begin PtoC end
107.2315 68.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 70.  tx@Dict begin PtoC end
107.2315 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 72.  tx@Dict begin PtoC end
107.2315 72.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 74.  tx@Dict begin PtoC end
107.2315 74.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 76.  tx@Dict begin PtoC end
107.2315 76.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 78.  tx@Dict begin PtoC end
107.2315 78.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 80.  tx@Dict begin PtoC end
107.2315 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 82.  tx@Dict begin PtoC end
107.2315 82.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 84.  tx@Dict begin PtoC end
107.2315 84.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 86.  tx@Dict begin PtoC end
107.2315 86.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 88.  tx@Dict begin PtoC end
107.2315 88.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 90.  tx@Dict begin PtoC end
107.2315 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 92.  tx@Dict begin PtoC end
107.2315 92.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 94.  tx@Dict begin PtoC end
107.2315 94.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 96.  tx@Dict begin PtoC end
107.2315 96.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 98.  tx@Dict begin PtoC end
107.2315 98.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 100.  tx@Dict begin PtoC
end 107.2315 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 102.  tx@Dict begin PtoC
end 107.2315 102.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 104.  tx@Dict begin PtoC
end 107.2315 104.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 106.  tx@Dict begin PtoC
end 107.2315 106.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 108.  tx@Dict begin PtoC
end 107.2315 108.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 110.  tx@Dict begin PtoC
end 107.2315 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 112.  tx@Dict begin PtoC
end 107.2315 112.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 114.  tx@Dict begin PtoC
end 107.2315 114.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 116.  tx@Dict begin PtoC
end 107.2315 116.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 118.  tx@Dict begin PtoC
end 107.2315 118.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 120.  tx@Dict begin PtoC
end 107.2315 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 122.  tx@Dict begin PtoC
end 107.2315 122.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 124.  tx@Dict begin PtoC
end 107.2315 124.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 126.  tx@Dict begin PtoC
end 107.2315 126.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 128.  tx@Dict begin PtoC
end 107.2315 128.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 130.  tx@Dict begin PtoC
end 107.2315 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 132.  tx@Dict begin PtoC
end 107.2315 132.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 134.  tx@Dict begin PtoC
end 107.2315 134.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 136.  tx@Dict begin PtoC
end 107.2315 136.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 138.  tx@Dict begin PtoC
end 107.2315 138.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 140.  tx@Dict begin PtoC
end 107.2315 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 142.  tx@Dict begin PtoC
end 107.2315 142.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 144.  tx@Dict begin PtoC
end 107.2315 144.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 146.  tx@Dict begin PtoC
end 107.2315 146.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 148.  tx@Dict begin PtoC
end 107.2315 148.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 150.  tx@Dict begin PtoC
end 107.2315 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 152.  tx@Dict begin PtoC
end 107.2315 152.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 154.  tx@Dict begin PtoC
end 107.2315 154.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 156.  tx@Dict begin PtoC
end 107.2315 156.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 158.  tx@Dict begin PtoC
end 107.2315 158.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 160.  tx@Dict begin PtoC
end 107.2315 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 162.  tx@Dict begin PtoC
end 107.2315 162.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 164.  tx@Dict begin PtoC
end 107.2315 164.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 166.  tx@Dict begin PtoC
end 107.2315 166.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 168.  tx@Dict begin PtoC
end 107.2315 168.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 170.  tx@Dict begin PtoC
end 107.2315 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 172.  tx@Dict begin PtoC
end 107.2315 172.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 174.  tx@Dict begin PtoC
end 107.2315 174.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 176.  tx@Dict begin PtoC
end 107.2315 176.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 178.  tx@Dict begin PtoC
end 107.2315 178.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 180.  tx@Dict begin PtoC
end 107.2315 180.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 182.  tx@Dict begin PtoC
end 107.2315 182.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 184.  tx@Dict begin PtoC
end 107.2315 184.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 186.  tx@Dict begin PtoC
end 107.2315 186.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 188.  tx@Dict begin PtoC
end 107.2315 188.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 190.  tx@Dict begin PtoC
end 107.2315 190.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 192.  tx@Dict begin PtoC
end 107.2315 192.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 194.  tx@Dict begin PtoC
end 107.2315 194.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 196.  tx@Dict begin PtoC
end 107.2315 196.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 198.  tx@Dict begin PtoC
end 107.2315 198.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 200.  tx@Dict begin PtoC
end 107.2315 200.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 202.  tx@Dict begin PtoC
end 107.2315 202.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 204.  tx@Dict begin PtoC
end 107.2315 204.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 206.  tx@Dict begin PtoC
end 107.2315 206.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 208.  tx@Dict begin PtoC
end 107.2315 208.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 210.  tx@Dict begin PtoC
end 107.2315 210.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 212.  tx@Dict begin PtoC
end 107.2315 212.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 214.  tx@Dict begin PtoC
end 107.2315 214.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 216.  tx@Dict begin PtoC
end 107.2315 216.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 218.  tx@Dict begin PtoC
end 107.2315 218.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 220.  tx@Dict begin PtoC
end 107.2315 220.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 222.  tx@Dict begin PtoC
end 107.2315 222.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 224.  tx@Dict begin PtoC
end 107.2315 224.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 226.  tx@Dict begin PtoC
end 107.2315 226.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 228.  tx@Dict begin PtoC
end 107.2315 228.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 230.  tx@Dict begin PtoC
end 107.2315 230.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 232.  tx@Dict begin PtoC
end 107.2315 232.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 234.  tx@Dict begin PtoC
end 107.2315 234.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 236.  tx@Dict begin PtoC
end 107.2315 236.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 238.  tx@Dict begin PtoC
end 107.2315 238.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 240.  tx@Dict begin PtoC
end 107.2315 240.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 242.  tx@Dict begin PtoC
end 107.2315 242.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 244.  tx@Dict begin PtoC
end 107.2315 244.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 246.  tx@Dict begin PtoC
end 107.2315 246.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 248.  tx@Dict begin PtoC
end 107.2315 248.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 250.  tx@Dict begin PtoC
end 107.2315 250.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 252.  tx@Dict begin PtoC
end 107.2315 252.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 254.  tx@Dict begin PtoC
end 107.2315 254.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 256.  tx@Dict begin PtoC
end 107.2315 256.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 258.  tx@Dict begin PtoC
end 107.2315 258.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 260.  tx@Dict begin PtoC
end 107.2315 260.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 262.  tx@Dict begin PtoC
end 107.2315 262.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 264.  tx@Dict begin PtoC
end 107.2315 264.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 266.  tx@Dict begin PtoC
end 107.2315 266.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 268.  tx@Dict begin PtoC
end 107.2315 268.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 270.  tx@Dict begin PtoC
end 107.2315 270.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 272.  tx@Dict begin PtoC
end 107.2315 272.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 274.  tx@Dict begin PtoC
end 107.2315 274.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 276.  tx@Dict begin PtoC
end 107.2315 276.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 278.  tx@Dict begin PtoC
end 107.2315 278.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 280.  tx@Dict begin PtoC
end 107.2315 280.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 282.  tx@Dict begin PtoC
end 107.2315 282.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 284.  tx@Dict begin PtoC
end 107.2315 284.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 286.  tx@Dict begin PtoC
end 107.2315 286.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 288.  tx@Dict begin PtoC
end 107.2315 288.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 290.  tx@Dict begin PtoC
end 107.2315 290.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 292.  tx@Dict begin PtoC
end 107.2315 292.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 294.  tx@Dict begin PtoC
end 107.2315 294.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 296.  tx@Dict begin PtoC
end 107.2315 296.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 298.  tx@Dict begin PtoC
end 107.2315 298.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 300.  tx@Dict begin PtoC
end 107.2315 300.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 302.  tx@Dict begin PtoC
end 107.2315 302.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 304.  tx@Dict begin PtoC
end 107.2315 304.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 306.  tx@Dict begin PtoC
end 107.2315 306.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 308.  tx@Dict begin PtoC
end 107.2315 308.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 310.  tx@Dict begin PtoC
end 107.2315 310.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 312.  tx@Dict begin PtoC
end 107.2315 312.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 314.  tx@Dict begin PtoC
end 107.2315 314.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 316.  tx@Dict begin PtoC
end 107.2315 316.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 318.  tx@Dict begin PtoC
end 107.2315 318.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 320.  tx@Dict begin PtoC
end 107.2315 320.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 322.  tx@Dict begin PtoC
end 107.2315 322.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 324.  tx@Dict begin PtoC
end 107.2315 324.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 326.  tx@Dict begin PtoC
end 107.2315 326.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 328.  tx@Dict begin PtoC
end 107.2315 328.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 330.  tx@Dict begin PtoC
end 107.2315 330.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 332.  tx@Dict begin PtoC
end 107.2315 332.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 334.  tx@Dict begin PtoC
end 107.2315 334.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 336.  tx@Dict begin PtoC
end 107.2315 336.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 338.  tx@Dict begin PtoC
end 107.2315 338.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 340.  tx@Dict begin PtoC
end 107.2315 340.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 342.  tx@Dict begin PtoC
end 107.2315 342.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 344.  tx@Dict begin PtoC
end 107.2315 344.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 346.  tx@Dict begin PtoC
end 107.2315 346.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 348.  tx@Dict begin PtoC
end 107.2315 348.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 350.  tx@Dict begin PtoC
end 107.2315 350.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 352.  tx@Dict begin PtoC
end 107.2315 352.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 354.  tx@Dict begin PtoC
end 107.2315 354.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 356.  tx@Dict begin PtoC
end 107.2315 356.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 358.  tx@Dict begin PtoC
end 107.2315 358.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 0.  tx@Dict begin PtoC end
101.2742 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 10.  tx@Dict begin PtoC end
101.2742 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 20.  tx@Dict begin PtoC end
101.2742 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 30.  tx@Dict begin PtoC end
101.2742 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 40.  tx@Dict begin PtoC end
101.2742 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 50.  tx@Dict begin PtoC end
101.2742 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 60.  tx@Dict begin PtoC end
101.2742 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 70.  tx@Dict begin PtoC end
101.2742 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 80.  tx@Dict begin PtoC end
101.2742 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 90.  tx@Dict begin PtoC end
101.2742 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 100.  tx@Dict begin PtoC
end 101.2742 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 110.  tx@Dict begin PtoC
end 101.2742 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 120.  tx@Dict begin PtoC
end 101.2742 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 130.  tx@Dict begin PtoC
end 101.2742 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 140.  tx@Dict begin PtoC
end 101.2742 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 150.  tx@Dict begin PtoC
end 101.2742 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 160.  tx@Dict begin PtoC
end 101.2742 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 170.  tx@Dict begin PtoC
end 101.2742 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 180.  tx@Dict begin PtoC
end 101.2742 180.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 190.  tx@Dict begin PtoC
end 101.2742 190.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 200.  tx@Dict begin PtoC
end 101.2742 200.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 210.  tx@Dict begin PtoC
end 101.2742 210.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 220.  tx@Dict begin PtoC
end 101.2742 220.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 230.  tx@Dict begin PtoC
end 101.2742 230.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 240.  tx@Dict begin PtoC
end 101.2742 240.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 250.  tx@Dict begin PtoC
end 101.2742 250.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 260.  tx@Dict begin PtoC
end 101.2742 260.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 270.  tx@Dict begin PtoC
end 101.2742 270.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 280.  tx@Dict begin PtoC
end 101.2742 280.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 290.  tx@Dict begin PtoC
end 101.2742 290.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 300.  tx@Dict begin PtoC
end 101.2742 300.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 310.  tx@Dict begin PtoC
end 101.2742 310.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 320.  tx@Dict begin PtoC
end 101.2742 320.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 330.  tx@Dict begin PtoC
end 101.2742 330.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 340.  tx@Dict begin PtoC
end 101.2742 340.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 350.  tx@Dict begin PtoC
end 101.2742 350.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 360.  tx@Dict begin PtoC
end 101.2742 360.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 0.  tx@Dict begin PtoC end
101.2742 0.  tx@Dict begin PtoC end    /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 10.  tx@Dict begin PtoC end
101.2742 10.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 20.  tx@Dict begin PtoC end
101.2742 20.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 30.  tx@Dict begin PtoC end
101.2742 30.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 40.  tx@Dict begin PtoC end
101.2742 40.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 50.  tx@Dict begin PtoC end
101.2742 50.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 60.  tx@Dict begin PtoC end
101.2742 60.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 70.  tx@Dict begin PtoC end
101.2742 70.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 80.  tx@Dict begin PtoC end
101.2742 80.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 90.  tx@Dict begin PtoC end
101.2742 90.  tx@Dict begin PtoC end    /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 100.  tx@Dict begin PtoC
end 101.2742 100.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 110.  tx@Dict begin PtoC
end 101.2742 110.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 120.  tx@Dict begin PtoC
end 101.2742 120.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 130.  tx@Dict begin PtoC
end 101.2742 130.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 140.  tx@Dict begin PtoC
end 101.2742 140.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 150.  tx@Dict begin PtoC
end 101.2742 150.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 160.  tx@Dict begin PtoC
end 101.2742 160.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 170.  tx@Dict begin PtoC
end 101.2742 170.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 119.14612 180.  tx@Dict begin PtoC
end 101.2742 180.  tx@Dict begin PtoC end    /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 0.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  4.87999 6.15999 0.04999 0.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 851
3071 a Fb(0)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046
a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 20.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 20.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046
a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 20.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 830 3071 a Fb(20)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 40.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 40.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871
3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 40.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 830 3071 a Fb(40)871 3046
y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 60.  def grestore  end
 871 3046
a 871 3046 a
tx@Dict begin { 82.2111 60.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 60.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 830 3071
a Fb(60)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871
3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 80.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 80.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 80.  Uput UUput } PutCoor
PutBegin  end
 871
3046 a 830 3071 a Fb(80)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046
a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 100.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 100.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046
a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 100.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810 3071 a Fb(100)871 3046 y
tx@Dict begin  PutEnd  end

871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 120.  def grestore  end
 871 3046
a 871 3046 a
tx@Dict begin { 82.2111 120.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 120.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810 3071
a Fb(120)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a
871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 140.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046
a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 140.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810 3071 a Fb(140)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a
871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 160.  def grestore  end
 871 3046 a 871 3046
a
tx@Dict begin { 82.2111 160.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 160.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810 3071 a Fb(160)871
3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 180.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 180.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 180.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810
3071 a Fb(180)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046
a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 10.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 10.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046
a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 10.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 830 3071 a Fb(10)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 30.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 30.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871
3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 30.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 830 3071 a Fb(30)871 3046
y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 50.  def grestore  end
 871 3046
a 871 3046 a
tx@Dict begin { 82.2111 50.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 50.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 830 3071
a Fb(50)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871
3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 70.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 70.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 70.  Uput UUput } PutCoor
PutBegin  end
 871
3046 a 830 3071 a Fb(70)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046
a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 90.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 90.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046
a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15999 0.04999 90.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 830 3071 a Fb(90)871 3046 y
tx@Dict begin  PutEnd  end
 871
3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 110.  def grestore  end
 871 3046 a 871
3046 a
tx@Dict begin { 82.2111 110.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 110.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810 3071 a Fb(110)871
3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 130.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 130.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 130.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810
3071 a Fb(130)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046
a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 150.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 150.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046
a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 150.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810 3071 a Fb(150)871 3046 y
tx@Dict begin  PutEnd  end
 871 3046 a
871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 170.  def grestore  end
 871 3046 a 871 3046
a
tx@Dict begin { 82.2111 170.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15999 0.04999 170.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 810 3071 a Fb(170)871
3046 y
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 350.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 350.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 350.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 912
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020 a Fb(10)993 3020 y
 currentpoint grestore moveto
 993 3020 a 871 3046
a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 340.  def grestore  end
 871 3046
a 871 3046 a
tx@Dict begin { 82.2111 340.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 340.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 912 3020
a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020 a Fb(20)993 3020 y
 currentpoint grestore moveto
 993 3020 a 871 3046 a
tx@Dict begin  PutEnd  end
 871
3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 330.  def grestore  end
 871 3046 a 871
3046 a
tx@Dict begin { 82.2111 330.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 330.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 912 3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912
3020 a Fb(30)993 3020 y
 currentpoint grestore moveto
 993 3020 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046
a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 320.  def grestore  end
 871 3046 a 871 3046
a
tx@Dict begin { 82.2111 320.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 320.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 912 3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020
a Fb(40)993 3020 y
 currentpoint grestore moveto
 993 3020 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 310.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 310.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871
3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 310.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 912 3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020 a Fb(50)993
3020 y
 currentpoint grestore moveto
 993 3020 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871
3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 300.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 300.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871
3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 300.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 912 3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020 a Fb(60)993 3020
y
 currentpoint grestore moveto
 993 3020 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046
a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 290.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 290.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046
a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 290.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 912 3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020 a Fb(70)993 3020 y
 currentpoint grestore moveto
 993
3020 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871
3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 280.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 280.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 280.  Uput UUput } PutCoor
PutBegin  end
 871
3046 a 912 3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020 a Fb(80)993 3020 y
 currentpoint grestore moveto
 993 3020
a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046
a
tx@Dict begin  gsave STV CP T /ps@refangle 270.  def grestore  end
 871 3046 a 871 3046 a
tx@Dict begin { 82.2111 270.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  9.75998 6.15997 0.05 270.  Uput UUput } PutCoor
PutBegin  end
 871 3046
a 912 3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 912 3020 a Fb(90)993 3020 y
 currentpoint grestore moveto
 993 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 260.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 260.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 260.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(100)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 250.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 250.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 250.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(110)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 240.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 240.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 240.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(120)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 230.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 230.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 230.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(130)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 220.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 220.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 220.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(140)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 210.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 210.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 210.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(150)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 200.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 200.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 200.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(160)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  gsave STV CP T /ps@refangle 190.  def grestore  end
 871
3046 a 871 3046 a
tx@Dict begin { 82.2111 190.  tx@Dict begin PtoC end } PutCoor PutBegin
 end
 871 3046 a 871 3046 a
tx@Dict begin { 5.0  14.63997 6.15997 0.05 190.  Uput UUput } PutCoor
PutBegin  end
 871 3046 a 932
3020 a
 gsave currentpoint currentpoint translate 180 neg rotate neg exch
neg exch translate
 932 3020 a Fb(170)1053 3020 y
 currentpoint grestore moveto
 1053 3020 a 871
3046 a
tx@Dict begin  PutEnd  end
 871 3046 a 871 3046 a
tx@Dict begin  PutEnd  end
 871 3046 a -118 4166 a
SDict begin H.S end
 -118
4166 a -118 4166 a
SDict begin 17.39995 H.A end
 -118 4166 a -118 4166 a
SDict begin [/View [/XYZ H.V]/Dest (section.0.4) cvn /DEST pdfmark
end
 -118 4166
a -348 4326 a

 -348 4326 a -348 4326 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 save

 /pgffc{0.13333 0.11766 0.11766 setrgbcolor}def

 15.53859 18.0409 moveto

 5.18063 18.0409 lineto

 2.42944 18.0409 0.19925 15.81068 0.19925 13.05951 curveto

 0.19925 5.18063 lineto

 0.19925 2.42944 2.42944 0.19925 5.18063 0.19925 curveto

 15.53859 0.19925 lineto

 18.28976 0.19925 20.51997 2.42944 20.51997 5.18063 curveto

 20.51997 13.05951 lineto

 20.51997 15.81068 18.28976 18.0409 15.53859 18.0409 curveto

 closepath

 0.19925 0.19925 moveto

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 3.70576 3.75739 ] concat

 pgfs



 0 setgray
 1 TeXcolorgray
-348 4326 a Fh(4.)p 0 TeXcolorgray -348 4326 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 24.425 3.66699 ] concat

 pgfs



 0 setgray
 -344 4326
a Fh(T)5 b Fi(O)j(U)g(C)g(H)g(E)g(S)31 b(D)8 b(E)34 b(C)8
b(A)g(L)f(C)h(U)g(L)j(A)q(T)c(R)g(I)g(C)g(E)-348 4326
y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -35 4466 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0.5 true -9.95863 -9.95863
9.95863 9.95863 0 Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -35
4466 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -35 4466 a -61 4497 a Fa(1)-35 4466 y
tx@Dict begin  PutEnd  end
 -35 4466
a 174 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0.5 true -9.95863 -9.95863
9.95863 9.95863 0 Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -35 4640
a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -35 4640 a -367 4661 a Fa(trigonom)p Fe(\351)p Fa(trie)-35
4640 y
tx@Dict begin  PutEnd  end
 -35 4640 a 0 TeXcolorgray -118 5892 4016 2 v -118
6013 a Fe(L)-98 5997 y Fc(A)-67 6013 y Fe(T)-25 6035
y(E)20 6013 y(X)3661 b(4/)p 0 TeXcolorgray 3849 6013
a
SDict begin H.S end
 3849 6013 a 0 TeXcolorgray Fe(4)p 0 TeXcolorgray 3898
5951 a
SDict begin H.R end
 3898 5951 a 3898 6013 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (page.4) cvn H.B /ANN pdfmark end
 3898 6013 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
